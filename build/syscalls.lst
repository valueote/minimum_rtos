ARM GAS  /tmp//ccl2ac2B.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/syscalls.c"
  18              		.global	__env
  19              		.section	.bss.__env,"aw",%nobits
  20              		.align	2
  23              	__env:
  24 0000 00000000 		.space	4
  25              		.global	environ
  26              		.section	.data.environ,"aw"
  27              		.align	2
  30              	environ:
  31 0000 00000000 		.word	__env
  32              		.section	.text.initialise_monitor_handles,"ax",%progbits
  33              		.align	1
  34              		.global	initialise_monitor_handles
  35              		.syntax unified
  36              		.thumb
  37              		.thumb_func
  39              	initialise_monitor_handles:
  40              	.LFB25:
   1:Core/Src/syscalls.c **** /**
   2:Core/Src/syscalls.c ****  ******************************************************************************
   3:Core/Src/syscalls.c ****  * @file      syscalls.c
   4:Core/Src/syscalls.c ****  * @author    Auto-generated by STM32CubeMX
   5:Core/Src/syscalls.c ****  * @brief     Minimal System calls file
   6:Core/Src/syscalls.c ****  *
   7:Core/Src/syscalls.c ****  *            For more information about which c-functions
   8:Core/Src/syscalls.c ****  *            need which of these lowlevel functions
   9:Core/Src/syscalls.c ****  *            please consult the Newlib libc-manual
  10:Core/Src/syscalls.c ****  ******************************************************************************
  11:Core/Src/syscalls.c ****  * @attention
  12:Core/Src/syscalls.c ****  *
  13:Core/Src/syscalls.c ****  * Copyright (c) 2020-2024 STMicroelectronics.
  14:Core/Src/syscalls.c ****  * All rights reserved.
  15:Core/Src/syscalls.c ****  *
  16:Core/Src/syscalls.c ****  * This software is licensed under terms that can be found in the LICENSE file
  17:Core/Src/syscalls.c ****  * in the root directory of this software component.
  18:Core/Src/syscalls.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  19:Core/Src/syscalls.c ****  *
  20:Core/Src/syscalls.c ****  ******************************************************************************
  21:Core/Src/syscalls.c ****  */
  22:Core/Src/syscalls.c **** 
ARM GAS  /tmp//ccl2ac2B.s 			page 2


  23:Core/Src/syscalls.c **** /* Includes */
  24:Core/Src/syscalls.c **** #include <sys/stat.h>
  25:Core/Src/syscalls.c **** #include <stdlib.h>
  26:Core/Src/syscalls.c **** #include <errno.h>
  27:Core/Src/syscalls.c **** #include <stdio.h>
  28:Core/Src/syscalls.c **** #include <signal.h>
  29:Core/Src/syscalls.c **** #include <time.h>
  30:Core/Src/syscalls.c **** #include <sys/time.h>
  31:Core/Src/syscalls.c **** #include <sys/times.h>
  32:Core/Src/syscalls.c **** 
  33:Core/Src/syscalls.c **** 
  34:Core/Src/syscalls.c **** /* Variables */
  35:Core/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  36:Core/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  37:Core/Src/syscalls.c **** 
  38:Core/Src/syscalls.c **** 
  39:Core/Src/syscalls.c **** char *__env[1] = { 0 };
  40:Core/Src/syscalls.c **** char **environ = __env;
  41:Core/Src/syscalls.c **** 
  42:Core/Src/syscalls.c **** 
  43:Core/Src/syscalls.c **** /* Functions */
  44:Core/Src/syscalls.c **** void initialise_monitor_handles()
  45:Core/Src/syscalls.c **** {
  41              		.loc 1 45 1
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 0
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45              		@ link register save eliminated.
  46 0000 80B4     		push	{r7}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 4
  49              		.cfi_offset 7, -4
  50 0002 00AF     		add	r7, sp, #0
  51              	.LCFI1:
  52              		.cfi_def_cfa_register 7
  46:Core/Src/syscalls.c **** }
  53              		.loc 1 46 1
  54 0004 00BF     		nop
  55 0006 BD46     		mov	sp, r7
  56              	.LCFI2:
  57              		.cfi_def_cfa_register 13
  58              		@ sp needed
  59 0008 80BC     		pop	{r7}
  60              	.LCFI3:
  61              		.cfi_restore 7
  62              		.cfi_def_cfa_offset 0
  63 000a 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE25:
  67              		.section	.text._getpid,"ax",%progbits
  68              		.align	1
  69              		.global	_getpid
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	_getpid:
  75              	.LFB26:
ARM GAS  /tmp//ccl2ac2B.s 			page 3


  47:Core/Src/syscalls.c **** 
  48:Core/Src/syscalls.c **** int _getpid(void)
  49:Core/Src/syscalls.c **** {
  76              		.loc 1 49 1
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81 0000 80B4     		push	{r7}
  82              	.LCFI4:
  83              		.cfi_def_cfa_offset 4
  84              		.cfi_offset 7, -4
  85 0002 00AF     		add	r7, sp, #0
  86              	.LCFI5:
  87              		.cfi_def_cfa_register 7
  50:Core/Src/syscalls.c ****   return 1;
  88              		.loc 1 50 10
  89 0004 0123     		movs	r3, #1
  51:Core/Src/syscalls.c **** }
  90              		.loc 1 51 1
  91 0006 1846     		mov	r0, r3
  92 0008 BD46     		mov	sp, r7
  93              	.LCFI6:
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 000a 80BC     		pop	{r7}
  97              	.LCFI7:
  98              		.cfi_restore 7
  99              		.cfi_def_cfa_offset 0
 100 000c 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE26:
 104              		.section	.text._kill,"ax",%progbits
 105              		.align	1
 106              		.global	_kill
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	_kill:
 112              	.LFB27:
  52:Core/Src/syscalls.c **** 
  53:Core/Src/syscalls.c **** int _kill(int pid, int sig)
  54:Core/Src/syscalls.c **** {
 113              		.loc 1 54 1
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              	.LCFI8:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 82B0     		sub	sp, sp, #8
 123              	.LCFI9:
 124              		.cfi_def_cfa_offset 16
 125 0004 00AF     		add	r7, sp, #0
 126              	.LCFI10:
ARM GAS  /tmp//ccl2ac2B.s 			page 4


 127              		.cfi_def_cfa_register 7
 128 0006 7860     		str	r0, [r7, #4]
 129 0008 3960     		str	r1, [r7]
  55:Core/Src/syscalls.c ****   (void)pid;
  56:Core/Src/syscalls.c ****   (void)sig;
  57:Core/Src/syscalls.c ****   errno = EINVAL;
 130              		.loc 1 57 3
 131 000a FFF7FEFF 		bl	__errno
 132 000e 0346     		mov	r3, r0
 133              		.loc 1 57 9 discriminator 1
 134 0010 1622     		movs	r2, #22
 135 0012 1A60     		str	r2, [r3]
  58:Core/Src/syscalls.c ****   return -1;
 136              		.loc 1 58 10
 137 0014 4FF0FF33 		mov	r3, #-1
  59:Core/Src/syscalls.c **** }
 138              		.loc 1 59 1
 139 0018 1846     		mov	r0, r3
 140 001a 0837     		adds	r7, r7, #8
 141              	.LCFI11:
 142              		.cfi_def_cfa_offset 8
 143 001c BD46     		mov	sp, r7
 144              	.LCFI12:
 145              		.cfi_def_cfa_register 13
 146              		@ sp needed
 147 001e 80BD     		pop	{r7, pc}
 148              		.cfi_endproc
 149              	.LFE27:
 151              		.section	.text._exit,"ax",%progbits
 152              		.align	1
 153              		.global	_exit
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 158              	_exit:
 159              	.LFB28:
  60:Core/Src/syscalls.c **** 
  61:Core/Src/syscalls.c **** void _exit (int status)
  62:Core/Src/syscalls.c **** {
 160              		.loc 1 62 1
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 8
 163              		@ frame_needed = 1, uses_anonymous_args = 0
 164 0000 80B5     		push	{r7, lr}
 165              	.LCFI13:
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 82B0     		sub	sp, sp, #8
 170              	.LCFI14:
 171              		.cfi_def_cfa_offset 16
 172 0004 00AF     		add	r7, sp, #0
 173              	.LCFI15:
 174              		.cfi_def_cfa_register 7
 175 0006 7860     		str	r0, [r7, #4]
  63:Core/Src/syscalls.c ****   _kill(status, -1);
 176              		.loc 1 63 3
ARM GAS  /tmp//ccl2ac2B.s 			page 5


 177 0008 4FF0FF31 		mov	r1, #-1
 178 000c 7868     		ldr	r0, [r7, #4]
 179 000e FFF7FEFF 		bl	_kill
 180              	.L7:
  64:Core/Src/syscalls.c ****   while (1) {}    /* Make sure we hang here */
 181              		.loc 1 64 9
 182 0012 00BF     		nop
 183 0014 FDE7     		b	.L7
 184              		.cfi_endproc
 185              	.LFE28:
 187              		.section	.text._read,"ax",%progbits
 188              		.align	1
 189              		.weak	_read
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	_read:
 195              	.LFB29:
  65:Core/Src/syscalls.c **** }
  66:Core/Src/syscalls.c **** 
  67:Core/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  68:Core/Src/syscalls.c **** {
 196              		.loc 1 68 1
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 24
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 80B5     		push	{r7, lr}
 201              	.LCFI16:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 86B0     		sub	sp, sp, #24
 206              	.LCFI17:
 207              		.cfi_def_cfa_offset 32
 208 0004 00AF     		add	r7, sp, #0
 209              	.LCFI18:
 210              		.cfi_def_cfa_register 7
 211 0006 F860     		str	r0, [r7, #12]
 212 0008 B960     		str	r1, [r7, #8]
 213 000a 7A60     		str	r2, [r7, #4]
  69:Core/Src/syscalls.c ****   (void)file;
  70:Core/Src/syscalls.c ****   int DataIdx;
  71:Core/Src/syscalls.c **** 
  72:Core/Src/syscalls.c ****   for (DataIdx = 0; DataIdx < len; DataIdx++)
 214              		.loc 1 72 16
 215 000c 0023     		movs	r3, #0
 216 000e 7B61     		str	r3, [r7, #20]
 217              		.loc 1 72 3
 218 0010 0AE0     		b	.L9
 219              	.L10:
  73:Core/Src/syscalls.c ****   {
  74:Core/Src/syscalls.c ****     *ptr++ = __io_getchar();
 220              		.loc 1 74 14
 221 0012 FFF7FEFF 		bl	__io_getchar
 222 0016 0146     		mov	r1, r0
 223              		.loc 1 74 9 discriminator 1
 224 0018 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp//ccl2ac2B.s 			page 6


 225 001a 5A1C     		adds	r2, r3, #1
 226 001c BA60     		str	r2, [r7, #8]
 227              		.loc 1 74 12 discriminator 1
 228 001e CAB2     		uxtb	r2, r1
 229 0020 1A70     		strb	r2, [r3]
  72:Core/Src/syscalls.c ****   {
 230              		.loc 1 72 43 discriminator 3
 231 0022 7B69     		ldr	r3, [r7, #20]
 232 0024 0133     		adds	r3, r3, #1
 233 0026 7B61     		str	r3, [r7, #20]
 234              	.L9:
  72:Core/Src/syscalls.c ****   {
 235              		.loc 1 72 29 discriminator 1
 236 0028 7A69     		ldr	r2, [r7, #20]
 237 002a 7B68     		ldr	r3, [r7, #4]
 238 002c 9A42     		cmp	r2, r3
 239 002e F0DB     		blt	.L10
  75:Core/Src/syscalls.c ****   }
  76:Core/Src/syscalls.c **** 
  77:Core/Src/syscalls.c ****   return len;
 240              		.loc 1 77 10
 241 0030 7B68     		ldr	r3, [r7, #4]
  78:Core/Src/syscalls.c **** }
 242              		.loc 1 78 1
 243 0032 1846     		mov	r0, r3
 244 0034 1837     		adds	r7, r7, #24
 245              	.LCFI19:
 246              		.cfi_def_cfa_offset 8
 247 0036 BD46     		mov	sp, r7
 248              	.LCFI20:
 249              		.cfi_def_cfa_register 13
 250              		@ sp needed
 251 0038 80BD     		pop	{r7, pc}
 252              		.cfi_endproc
 253              	.LFE29:
 255              		.section	.text._write,"ax",%progbits
 256              		.align	1
 257              		.weak	_write
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	_write:
 263              	.LFB30:
  79:Core/Src/syscalls.c **** 
  80:Core/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
  81:Core/Src/syscalls.c **** {
 264              		.loc 1 81 1
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 24
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI21:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 86B0     		sub	sp, sp, #24
 274              	.LCFI22:
ARM GAS  /tmp//ccl2ac2B.s 			page 7


 275              		.cfi_def_cfa_offset 32
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI23:
 278              		.cfi_def_cfa_register 7
 279 0006 F860     		str	r0, [r7, #12]
 280 0008 B960     		str	r1, [r7, #8]
 281 000a 7A60     		str	r2, [r7, #4]
  82:Core/Src/syscalls.c ****   (void)file;
  83:Core/Src/syscalls.c ****   int DataIdx;
  84:Core/Src/syscalls.c **** 
  85:Core/Src/syscalls.c ****   for (DataIdx = 0; DataIdx < len; DataIdx++)
 282              		.loc 1 85 16
 283 000c 0023     		movs	r3, #0
 284 000e 7B61     		str	r3, [r7, #20]
 285              		.loc 1 85 3
 286 0010 09E0     		b	.L13
 287              	.L14:
  86:Core/Src/syscalls.c ****   {
  87:Core/Src/syscalls.c ****     __io_putchar(*ptr++);
 288              		.loc 1 87 22
 289 0012 BB68     		ldr	r3, [r7, #8]
 290 0014 5A1C     		adds	r2, r3, #1
 291 0016 BA60     		str	r2, [r7, #8]
 292              		.loc 1 87 18
 293 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 294              		.loc 1 87 5
 295 001a 1846     		mov	r0, r3
 296 001c FFF7FEFF 		bl	__io_putchar
  85:Core/Src/syscalls.c ****   {
 297              		.loc 1 85 43 discriminator 3
 298 0020 7B69     		ldr	r3, [r7, #20]
 299 0022 0133     		adds	r3, r3, #1
 300 0024 7B61     		str	r3, [r7, #20]
 301              	.L13:
  85:Core/Src/syscalls.c ****   {
 302              		.loc 1 85 29 discriminator 1
 303 0026 7A69     		ldr	r2, [r7, #20]
 304 0028 7B68     		ldr	r3, [r7, #4]
 305 002a 9A42     		cmp	r2, r3
 306 002c F1DB     		blt	.L14
  88:Core/Src/syscalls.c ****   }
  89:Core/Src/syscalls.c ****   return len;
 307              		.loc 1 89 10
 308 002e 7B68     		ldr	r3, [r7, #4]
  90:Core/Src/syscalls.c **** }
 309              		.loc 1 90 1
 310 0030 1846     		mov	r0, r3
 311 0032 1837     		adds	r7, r7, #24
 312              	.LCFI24:
 313              		.cfi_def_cfa_offset 8
 314 0034 BD46     		mov	sp, r7
 315              	.LCFI25:
 316              		.cfi_def_cfa_register 13
 317              		@ sp needed
 318 0036 80BD     		pop	{r7, pc}
 319              		.cfi_endproc
 320              	.LFE30:
ARM GAS  /tmp//ccl2ac2B.s 			page 8


 322              		.section	.text._close,"ax",%progbits
 323              		.align	1
 324              		.global	_close
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	_close:
 330              	.LFB31:
  91:Core/Src/syscalls.c **** 
  92:Core/Src/syscalls.c **** int _close(int file)
  93:Core/Src/syscalls.c **** {
 331              		.loc 1 93 1
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 8
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 336 0000 80B4     		push	{r7}
 337              	.LCFI26:
 338              		.cfi_def_cfa_offset 4
 339              		.cfi_offset 7, -4
 340 0002 83B0     		sub	sp, sp, #12
 341              	.LCFI27:
 342              		.cfi_def_cfa_offset 16
 343 0004 00AF     		add	r7, sp, #0
 344              	.LCFI28:
 345              		.cfi_def_cfa_register 7
 346 0006 7860     		str	r0, [r7, #4]
  94:Core/Src/syscalls.c ****   (void)file;
  95:Core/Src/syscalls.c ****   return -1;
 347              		.loc 1 95 10
 348 0008 4FF0FF33 		mov	r3, #-1
  96:Core/Src/syscalls.c **** }
 349              		.loc 1 96 1
 350 000c 1846     		mov	r0, r3
 351 000e 0C37     		adds	r7, r7, #12
 352              	.LCFI29:
 353              		.cfi_def_cfa_offset 4
 354 0010 BD46     		mov	sp, r7
 355              	.LCFI30:
 356              		.cfi_def_cfa_register 13
 357              		@ sp needed
 358 0012 80BC     		pop	{r7}
 359              	.LCFI31:
 360              		.cfi_restore 7
 361              		.cfi_def_cfa_offset 0
 362 0014 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE31:
 366              		.section	.text._fstat,"ax",%progbits
 367              		.align	1
 368              		.global	_fstat
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 373              	_fstat:
 374              	.LFB32:
  97:Core/Src/syscalls.c **** 
ARM GAS  /tmp//ccl2ac2B.s 			page 9


  98:Core/Src/syscalls.c **** 
  99:Core/Src/syscalls.c **** int _fstat(int file, struct stat *st)
 100:Core/Src/syscalls.c **** {
 375              		.loc 1 100 1
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380 0000 80B4     		push	{r7}
 381              	.LCFI32:
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 7, -4
 384 0002 83B0     		sub	sp, sp, #12
 385              	.LCFI33:
 386              		.cfi_def_cfa_offset 16
 387 0004 00AF     		add	r7, sp, #0
 388              	.LCFI34:
 389              		.cfi_def_cfa_register 7
 390 0006 7860     		str	r0, [r7, #4]
 391 0008 3960     		str	r1, [r7]
 101:Core/Src/syscalls.c ****   (void)file;
 102:Core/Src/syscalls.c ****   st->st_mode = S_IFCHR;
 392              		.loc 1 102 15
 393 000a 3B68     		ldr	r3, [r7]
 394 000c 4FF40052 		mov	r2, #8192
 395 0010 5A60     		str	r2, [r3, #4]
 103:Core/Src/syscalls.c ****   return 0;
 396              		.loc 1 103 10
 397 0012 0023     		movs	r3, #0
 104:Core/Src/syscalls.c **** }
 398              		.loc 1 104 1
 399 0014 1846     		mov	r0, r3
 400 0016 0C37     		adds	r7, r7, #12
 401              	.LCFI35:
 402              		.cfi_def_cfa_offset 4
 403 0018 BD46     		mov	sp, r7
 404              	.LCFI36:
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 001a 80BC     		pop	{r7}
 408              	.LCFI37:
 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
 411 001c 7047     		bx	lr
 412              		.cfi_endproc
 413              	.LFE32:
 415              		.section	.text._isatty,"ax",%progbits
 416              		.align	1
 417              		.global	_isatty
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	_isatty:
 423              	.LFB33:
 105:Core/Src/syscalls.c **** 
 106:Core/Src/syscalls.c **** int _isatty(int file)
 107:Core/Src/syscalls.c **** {
ARM GAS  /tmp//ccl2ac2B.s 			page 10


 424              		.loc 1 107 1
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0000 80B4     		push	{r7}
 430              	.LCFI38:
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 83B0     		sub	sp, sp, #12
 434              	.LCFI39:
 435              		.cfi_def_cfa_offset 16
 436 0004 00AF     		add	r7, sp, #0
 437              	.LCFI40:
 438              		.cfi_def_cfa_register 7
 439 0006 7860     		str	r0, [r7, #4]
 108:Core/Src/syscalls.c ****   (void)file;
 109:Core/Src/syscalls.c ****   return 1;
 440              		.loc 1 109 10
 441 0008 0123     		movs	r3, #1
 110:Core/Src/syscalls.c **** }
 442              		.loc 1 110 1
 443 000a 1846     		mov	r0, r3
 444 000c 0C37     		adds	r7, r7, #12
 445              	.LCFI41:
 446              		.cfi_def_cfa_offset 4
 447 000e BD46     		mov	sp, r7
 448              	.LCFI42:
 449              		.cfi_def_cfa_register 13
 450              		@ sp needed
 451 0010 80BC     		pop	{r7}
 452              	.LCFI43:
 453              		.cfi_restore 7
 454              		.cfi_def_cfa_offset 0
 455 0012 7047     		bx	lr
 456              		.cfi_endproc
 457              	.LFE33:
 459              		.section	.text._lseek,"ax",%progbits
 460              		.align	1
 461              		.global	_lseek
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 466              	_lseek:
 467              	.LFB34:
 111:Core/Src/syscalls.c **** 
 112:Core/Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 113:Core/Src/syscalls.c **** {
 468              		.loc 1 113 1
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 16
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              	.LCFI44:
 475              		.cfi_def_cfa_offset 4
 476              		.cfi_offset 7, -4
ARM GAS  /tmp//ccl2ac2B.s 			page 11


 477 0002 85B0     		sub	sp, sp, #20
 478              	.LCFI45:
 479              		.cfi_def_cfa_offset 24
 480 0004 00AF     		add	r7, sp, #0
 481              	.LCFI46:
 482              		.cfi_def_cfa_register 7
 483 0006 F860     		str	r0, [r7, #12]
 484 0008 B960     		str	r1, [r7, #8]
 485 000a 7A60     		str	r2, [r7, #4]
 114:Core/Src/syscalls.c ****   (void)file;
 115:Core/Src/syscalls.c ****   (void)ptr;
 116:Core/Src/syscalls.c ****   (void)dir;
 117:Core/Src/syscalls.c ****   return 0;
 486              		.loc 1 117 10
 487 000c 0023     		movs	r3, #0
 118:Core/Src/syscalls.c **** }
 488              		.loc 1 118 1
 489 000e 1846     		mov	r0, r3
 490 0010 1437     		adds	r7, r7, #20
 491              	.LCFI47:
 492              		.cfi_def_cfa_offset 4
 493 0012 BD46     		mov	sp, r7
 494              	.LCFI48:
 495              		.cfi_def_cfa_register 13
 496              		@ sp needed
 497 0014 80BC     		pop	{r7}
 498              	.LCFI49:
 499              		.cfi_restore 7
 500              		.cfi_def_cfa_offset 0
 501 0016 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE34:
 505              		.section	.text._open,"ax",%progbits
 506              		.align	1
 507              		.global	_open
 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 512              	_open:
 513              	.LFB35:
 119:Core/Src/syscalls.c **** 
 120:Core/Src/syscalls.c **** int _open(char *path, int flags, ...)
 121:Core/Src/syscalls.c **** {
 514              		.loc 1 121 1
 515              		.cfi_startproc
 516              		@ args = 4, pretend = 12, frame = 8
 517              		@ frame_needed = 1, uses_anonymous_args = 1
 518              		@ link register save eliminated.
 519 0000 0EB4     		push	{r1, r2, r3}
 520              	.LCFI50:
 521              		.cfi_def_cfa_offset 12
 522              		.cfi_offset 1, -12
 523              		.cfi_offset 2, -8
 524              		.cfi_offset 3, -4
 525 0002 80B4     		push	{r7}
 526              	.LCFI51:
 527              		.cfi_def_cfa_offset 16
ARM GAS  /tmp//ccl2ac2B.s 			page 12


 528              		.cfi_offset 7, -16
 529 0004 82B0     		sub	sp, sp, #8
 530              	.LCFI52:
 531              		.cfi_def_cfa_offset 24
 532 0006 00AF     		add	r7, sp, #0
 533              	.LCFI53:
 534              		.cfi_def_cfa_register 7
 535 0008 7860     		str	r0, [r7, #4]
 122:Core/Src/syscalls.c ****   (void)path;
 123:Core/Src/syscalls.c ****   (void)flags;
 124:Core/Src/syscalls.c ****   /* Pretend like we always fail */
 125:Core/Src/syscalls.c ****   return -1;
 536              		.loc 1 125 10
 537 000a 4FF0FF33 		mov	r3, #-1
 126:Core/Src/syscalls.c **** }
 538              		.loc 1 126 1
 539 000e 1846     		mov	r0, r3
 540 0010 0837     		adds	r7, r7, #8
 541              	.LCFI54:
 542              		.cfi_def_cfa_offset 16
 543 0012 BD46     		mov	sp, r7
 544              	.LCFI55:
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 0014 80BC     		pop	{r7}
 548              	.LCFI56:
 549              		.cfi_restore 7
 550              		.cfi_def_cfa_offset 12
 551 0016 03B0     		add	sp, sp, #12
 552              	.LCFI57:
 553              		.cfi_restore 3
 554              		.cfi_restore 2
 555              		.cfi_restore 1
 556              		.cfi_def_cfa_offset 0
 557 0018 7047     		bx	lr
 558              		.cfi_endproc
 559              	.LFE35:
 561              		.section	.text._wait,"ax",%progbits
 562              		.align	1
 563              		.global	_wait
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 568              	_wait:
 569              	.LFB36:
 127:Core/Src/syscalls.c **** 
 128:Core/Src/syscalls.c **** int _wait(int *status)
 129:Core/Src/syscalls.c **** {
 570              		.loc 1 129 1
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 8
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574 0000 80B5     		push	{r7, lr}
 575              	.LCFI58:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 7, -8
 578              		.cfi_offset 14, -4
ARM GAS  /tmp//ccl2ac2B.s 			page 13


 579 0002 82B0     		sub	sp, sp, #8
 580              	.LCFI59:
 581              		.cfi_def_cfa_offset 16
 582 0004 00AF     		add	r7, sp, #0
 583              	.LCFI60:
 584              		.cfi_def_cfa_register 7
 585 0006 7860     		str	r0, [r7, #4]
 130:Core/Src/syscalls.c ****   (void)status;
 131:Core/Src/syscalls.c ****   errno = ECHILD;
 586              		.loc 1 131 3
 587 0008 FFF7FEFF 		bl	__errno
 588 000c 0346     		mov	r3, r0
 589              		.loc 1 131 9 discriminator 1
 590 000e 0A22     		movs	r2, #10
 591 0010 1A60     		str	r2, [r3]
 132:Core/Src/syscalls.c ****   return -1;
 592              		.loc 1 132 10
 593 0012 4FF0FF33 		mov	r3, #-1
 133:Core/Src/syscalls.c **** }
 594              		.loc 1 133 1
 595 0016 1846     		mov	r0, r3
 596 0018 0837     		adds	r7, r7, #8
 597              	.LCFI61:
 598              		.cfi_def_cfa_offset 8
 599 001a BD46     		mov	sp, r7
 600              	.LCFI62:
 601              		.cfi_def_cfa_register 13
 602              		@ sp needed
 603 001c 80BD     		pop	{r7, pc}
 604              		.cfi_endproc
 605              	.LFE36:
 607              		.section	.text._unlink,"ax",%progbits
 608              		.align	1
 609              		.global	_unlink
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	_unlink:
 615              	.LFB37:
 134:Core/Src/syscalls.c **** 
 135:Core/Src/syscalls.c **** int _unlink(char *name)
 136:Core/Src/syscalls.c **** {
 616              		.loc 1 136 1
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620 0000 80B5     		push	{r7, lr}
 621              	.LCFI63:
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 82B0     		sub	sp, sp, #8
 626              	.LCFI64:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI65:
 630              		.cfi_def_cfa_register 7
ARM GAS  /tmp//ccl2ac2B.s 			page 14


 631 0006 7860     		str	r0, [r7, #4]
 137:Core/Src/syscalls.c ****   (void)name;
 138:Core/Src/syscalls.c ****   errno = ENOENT;
 632              		.loc 1 138 3
 633 0008 FFF7FEFF 		bl	__errno
 634 000c 0346     		mov	r3, r0
 635              		.loc 1 138 9 discriminator 1
 636 000e 0222     		movs	r2, #2
 637 0010 1A60     		str	r2, [r3]
 139:Core/Src/syscalls.c ****   return -1;
 638              		.loc 1 139 10
 639 0012 4FF0FF33 		mov	r3, #-1
 140:Core/Src/syscalls.c **** }
 640              		.loc 1 140 1
 641 0016 1846     		mov	r0, r3
 642 0018 0837     		adds	r7, r7, #8
 643              	.LCFI66:
 644              		.cfi_def_cfa_offset 8
 645 001a BD46     		mov	sp, r7
 646              	.LCFI67:
 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 001c 80BD     		pop	{r7, pc}
 650              		.cfi_endproc
 651              	.LFE37:
 653              		.section	.text._times,"ax",%progbits
 654              		.align	1
 655              		.global	_times
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 660              	_times:
 661              	.LFB38:
 141:Core/Src/syscalls.c **** 
 142:Core/Src/syscalls.c **** int _times(struct tms *buf)
 143:Core/Src/syscalls.c **** {
 662              		.loc 1 143 1
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 8
 665              		@ frame_needed = 1, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667 0000 80B4     		push	{r7}
 668              	.LCFI68:
 669              		.cfi_def_cfa_offset 4
 670              		.cfi_offset 7, -4
 671 0002 83B0     		sub	sp, sp, #12
 672              	.LCFI69:
 673              		.cfi_def_cfa_offset 16
 674 0004 00AF     		add	r7, sp, #0
 675              	.LCFI70:
 676              		.cfi_def_cfa_register 7
 677 0006 7860     		str	r0, [r7, #4]
 144:Core/Src/syscalls.c ****   (void)buf;
 145:Core/Src/syscalls.c ****   return -1;
 678              		.loc 1 145 10
 679 0008 4FF0FF33 		mov	r3, #-1
 146:Core/Src/syscalls.c **** }
ARM GAS  /tmp//ccl2ac2B.s 			page 15


 680              		.loc 1 146 1
 681 000c 1846     		mov	r0, r3
 682 000e 0C37     		adds	r7, r7, #12
 683              	.LCFI71:
 684              		.cfi_def_cfa_offset 4
 685 0010 BD46     		mov	sp, r7
 686              	.LCFI72:
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 0012 80BC     		pop	{r7}
 690              	.LCFI73:
 691              		.cfi_restore 7
 692              		.cfi_def_cfa_offset 0
 693 0014 7047     		bx	lr
 694              		.cfi_endproc
 695              	.LFE38:
 697              		.section	.text._stat,"ax",%progbits
 698              		.align	1
 699              		.global	_stat
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 704              	_stat:
 705              	.LFB39:
 147:Core/Src/syscalls.c **** 
 148:Core/Src/syscalls.c **** int _stat(char *file, struct stat *st)
 149:Core/Src/syscalls.c **** {
 706              		.loc 1 149 1
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 8
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711 0000 80B4     		push	{r7}
 712              	.LCFI74:
 713              		.cfi_def_cfa_offset 4
 714              		.cfi_offset 7, -4
 715 0002 83B0     		sub	sp, sp, #12
 716              	.LCFI75:
 717              		.cfi_def_cfa_offset 16
 718 0004 00AF     		add	r7, sp, #0
 719              	.LCFI76:
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 722 0008 3960     		str	r1, [r7]
 150:Core/Src/syscalls.c ****   (void)file;
 151:Core/Src/syscalls.c ****   st->st_mode = S_IFCHR;
 723              		.loc 1 151 15
 724 000a 3B68     		ldr	r3, [r7]
 725 000c 4FF40052 		mov	r2, #8192
 726 0010 5A60     		str	r2, [r3, #4]
 152:Core/Src/syscalls.c ****   return 0;
 727              		.loc 1 152 10
 728 0012 0023     		movs	r3, #0
 153:Core/Src/syscalls.c **** }
 729              		.loc 1 153 1
 730 0014 1846     		mov	r0, r3
 731 0016 0C37     		adds	r7, r7, #12
ARM GAS  /tmp//ccl2ac2B.s 			page 16


 732              	.LCFI77:
 733              		.cfi_def_cfa_offset 4
 734 0018 BD46     		mov	sp, r7
 735              	.LCFI78:
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 001a 80BC     		pop	{r7}
 739              	.LCFI79:
 740              		.cfi_restore 7
 741              		.cfi_def_cfa_offset 0
 742 001c 7047     		bx	lr
 743              		.cfi_endproc
 744              	.LFE39:
 746              		.section	.text._link,"ax",%progbits
 747              		.align	1
 748              		.global	_link
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 753              	_link:
 754              	.LFB40:
 154:Core/Src/syscalls.c **** 
 155:Core/Src/syscalls.c **** int _link(char *old, char *new)
 156:Core/Src/syscalls.c **** {
 755              		.loc 1 156 1
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759 0000 80B5     		push	{r7, lr}
 760              	.LCFI80:
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 82B0     		sub	sp, sp, #8
 765              	.LCFI81:
 766              		.cfi_def_cfa_offset 16
 767 0004 00AF     		add	r7, sp, #0
 768              	.LCFI82:
 769              		.cfi_def_cfa_register 7
 770 0006 7860     		str	r0, [r7, #4]
 771 0008 3960     		str	r1, [r7]
 157:Core/Src/syscalls.c ****   (void)old;
 158:Core/Src/syscalls.c ****   (void)new;
 159:Core/Src/syscalls.c ****   errno = EMLINK;
 772              		.loc 1 159 3
 773 000a FFF7FEFF 		bl	__errno
 774 000e 0346     		mov	r3, r0
 775              		.loc 1 159 9 discriminator 1
 776 0010 1F22     		movs	r2, #31
 777 0012 1A60     		str	r2, [r3]
 160:Core/Src/syscalls.c ****   return -1;
 778              		.loc 1 160 10
 779 0014 4FF0FF33 		mov	r3, #-1
 161:Core/Src/syscalls.c **** }
 780              		.loc 1 161 1
 781 0018 1846     		mov	r0, r3
 782 001a 0837     		adds	r7, r7, #8
ARM GAS  /tmp//ccl2ac2B.s 			page 17


 783              	.LCFI83:
 784              		.cfi_def_cfa_offset 8
 785 001c BD46     		mov	sp, r7
 786              	.LCFI84:
 787              		.cfi_def_cfa_register 13
 788              		@ sp needed
 789 001e 80BD     		pop	{r7, pc}
 790              		.cfi_endproc
 791              	.LFE40:
 793              		.section	.text._fork,"ax",%progbits
 794              		.align	1
 795              		.global	_fork
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 800              	_fork:
 801              	.LFB41:
 162:Core/Src/syscalls.c **** 
 163:Core/Src/syscalls.c **** int _fork(void)
 164:Core/Src/syscalls.c **** {
 802              		.loc 1 164 1
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 80B5     		push	{r7, lr}
 807              	.LCFI85:
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 7, -8
 810              		.cfi_offset 14, -4
 811 0002 00AF     		add	r7, sp, #0
 812              	.LCFI86:
 813              		.cfi_def_cfa_register 7
 165:Core/Src/syscalls.c ****   errno = EAGAIN;
 814              		.loc 1 165 3
 815 0004 FFF7FEFF 		bl	__errno
 816 0008 0346     		mov	r3, r0
 817              		.loc 1 165 9 discriminator 1
 818 000a 0B22     		movs	r2, #11
 819 000c 1A60     		str	r2, [r3]
 166:Core/Src/syscalls.c ****   return -1;
 820              		.loc 1 166 10
 821 000e 4FF0FF33 		mov	r3, #-1
 167:Core/Src/syscalls.c **** }
 822              		.loc 1 167 1
 823 0012 1846     		mov	r0, r3
 824 0014 80BD     		pop	{r7, pc}
 825              		.cfi_endproc
 826              	.LFE41:
 828              		.section	.text._execve,"ax",%progbits
 829              		.align	1
 830              		.global	_execve
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 835              	_execve:
 836              	.LFB42:
 168:Core/Src/syscalls.c **** 
ARM GAS  /tmp//ccl2ac2B.s 			page 18


 169:Core/Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 170:Core/Src/syscalls.c **** {
 837              		.loc 1 170 1
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 16
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841 0000 80B5     		push	{r7, lr}
 842              	.LCFI87:
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 84B0     		sub	sp, sp, #16
 847              	.LCFI88:
 848              		.cfi_def_cfa_offset 24
 849 0004 00AF     		add	r7, sp, #0
 850              	.LCFI89:
 851              		.cfi_def_cfa_register 7
 852 0006 F860     		str	r0, [r7, #12]
 853 0008 B960     		str	r1, [r7, #8]
 854 000a 7A60     		str	r2, [r7, #4]
 171:Core/Src/syscalls.c ****   (void)name;
 172:Core/Src/syscalls.c ****   (void)argv;
 173:Core/Src/syscalls.c ****   (void)env;
 174:Core/Src/syscalls.c ****   errno = ENOMEM;
 855              		.loc 1 174 3
 856 000c FFF7FEFF 		bl	__errno
 857 0010 0346     		mov	r3, r0
 858              		.loc 1 174 9 discriminator 1
 859 0012 0C22     		movs	r2, #12
 860 0014 1A60     		str	r2, [r3]
 175:Core/Src/syscalls.c ****   return -1;
 861              		.loc 1 175 10
 862 0016 4FF0FF33 		mov	r3, #-1
 176:Core/Src/syscalls.c **** }
 863              		.loc 1 176 1
 864 001a 1846     		mov	r0, r3
 865 001c 1037     		adds	r7, r7, #16
 866              	.LCFI90:
 867              		.cfi_def_cfa_offset 8
 868 001e BD46     		mov	sp, r7
 869              	.LCFI91:
 870              		.cfi_def_cfa_register 13
 871              		@ sp needed
 872 0020 80BD     		pop	{r7, pc}
 873              		.cfi_endproc
 874              	.LFE42:
 876              		.weak	__io_putchar
 877              		.weak	__io_getchar
 878              		.text
 879              	.Letext0:
 880              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 881              		.file 3 "/usr/arm-none-eabi/include/sys/_types.h"
 882              		.file 4 "/usr/arm-none-eabi/include/sys/_timeval.h"
 883              		.file 5 "/usr/arm-none-eabi/include/sys/_timespec.h"
 884              		.file 6 "/usr/arm-none-eabi/include/sys/types.h"
 885              		.file 7 "/usr/arm-none-eabi/include/sys/stat.h"
 886              		.file 8 "/usr/arm-none-eabi/include/sys/times.h"
ARM GAS  /tmp//ccl2ac2B.s 			page 19


 887              		.file 9 "/usr/arm-none-eabi/include/sys/errno.h"
ARM GAS  /tmp//ccl2ac2B.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
    /tmp//ccl2ac2B.s:23     .bss.__env:00000000 __env
    /tmp//ccl2ac2B.s:20     .bss.__env:00000000 $d
    /tmp//ccl2ac2B.s:30     .data.environ:00000000 environ
    /tmp//ccl2ac2B.s:27     .data.environ:00000000 $d
    /tmp//ccl2ac2B.s:33     .text.initialise_monitor_handles:00000000 $t
    /tmp//ccl2ac2B.s:39     .text.initialise_monitor_handles:00000000 initialise_monitor_handles
    /tmp//ccl2ac2B.s:68     .text._getpid:00000000 $t
    /tmp//ccl2ac2B.s:74     .text._getpid:00000000 _getpid
    /tmp//ccl2ac2B.s:105    .text._kill:00000000 $t
    /tmp//ccl2ac2B.s:111    .text._kill:00000000 _kill
    /tmp//ccl2ac2B.s:152    .text._exit:00000000 $t
    /tmp//ccl2ac2B.s:158    .text._exit:00000000 _exit
    /tmp//ccl2ac2B.s:188    .text._read:00000000 $t
    /tmp//ccl2ac2B.s:194    .text._read:00000000 _read
    /tmp//ccl2ac2B.s:256    .text._write:00000000 $t
    /tmp//ccl2ac2B.s:262    .text._write:00000000 _write
    /tmp//ccl2ac2B.s:323    .text._close:00000000 $t
    /tmp//ccl2ac2B.s:329    .text._close:00000000 _close
    /tmp//ccl2ac2B.s:367    .text._fstat:00000000 $t
    /tmp//ccl2ac2B.s:373    .text._fstat:00000000 _fstat
    /tmp//ccl2ac2B.s:416    .text._isatty:00000000 $t
    /tmp//ccl2ac2B.s:422    .text._isatty:00000000 _isatty
    /tmp//ccl2ac2B.s:460    .text._lseek:00000000 $t
    /tmp//ccl2ac2B.s:466    .text._lseek:00000000 _lseek
    /tmp//ccl2ac2B.s:506    .text._open:00000000 $t
    /tmp//ccl2ac2B.s:512    .text._open:00000000 _open
    /tmp//ccl2ac2B.s:562    .text._wait:00000000 $t
    /tmp//ccl2ac2B.s:568    .text._wait:00000000 _wait
    /tmp//ccl2ac2B.s:608    .text._unlink:00000000 $t
    /tmp//ccl2ac2B.s:614    .text._unlink:00000000 _unlink
    /tmp//ccl2ac2B.s:654    .text._times:00000000 $t
    /tmp//ccl2ac2B.s:660    .text._times:00000000 _times
    /tmp//ccl2ac2B.s:698    .text._stat:00000000 $t
    /tmp//ccl2ac2B.s:704    .text._stat:00000000 _stat
    /tmp//ccl2ac2B.s:747    .text._link:00000000 $t
    /tmp//ccl2ac2B.s:753    .text._link:00000000 _link
    /tmp//ccl2ac2B.s:794    .text._fork:00000000 $t
    /tmp//ccl2ac2B.s:800    .text._fork:00000000 _fork
    /tmp//ccl2ac2B.s:829    .text._execve:00000000 $t
    /tmp//ccl2ac2B.s:835    .text._execve:00000000 _execve

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
