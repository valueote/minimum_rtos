ARM GAS  /tmp//ccJMd58S.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c"
  18              		.section	.text.HAL_TIM_Base_Init,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_TIM_Base_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_TIM_Base_Init:
  26              	.LFB65:
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @file    stm32f1xx_hal_tim.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief   TIM HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          functionalities of the Timer (TIM) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Time Base Initialization
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Time Base Start
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Time Base Start Interruption
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Time Base Start DMA
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM Initialization
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM Channel Configuration
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM  Start
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM  Start Interruption
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Output Compare/PWM Start DMA
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Initialization
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Channel Configuration
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Start
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Start Interruption
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Input Capture Start DMA
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM One Pulse Initialization
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM One Pulse Channel Configuration
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM One Pulse Start
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Encoder Interface Initialization
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Encoder Interface Start
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Encoder Interface Start Interruption
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM Encoder Interface Start DMA
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + Commutation Event configuration with Interruption and DMA
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM OCRef clear configuration
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *           + TIM External Clock configuration
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ******************************************************************************
ARM GAS  /tmp//ccJMd58S.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @attention
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * Copyright (c) 2016 STMicroelectronics.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * All rights reserved.
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * in the root directory of this software component.
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ******************************************************************************
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   @verbatim
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       ##### TIMER Generic features #####
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..] The Timer features include:
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (#) 16-bit up, down, up/down auto-reload counter.
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (#) 16-bit programmable prescaler allowing dividing (also on the fly) the
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            counter clock frequency either by any factor between 1 and 65536.
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (#) Up to 4 independent channels for:
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Input Capture
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Output Compare
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) PWM generation (Edge and Center-aligned Mode)
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) One-pulse mode output
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (#) Synchronization circuit to control the timer with external signals and to interconnect
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             several timers together.
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (#) Supports incremental encoder for positioning purposes
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             ##### How to use this driver #####
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     [..]
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****      (#) Initialize the TIM low level resources by implementing the following functions
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****          depending on the selected feature:
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_MspInit()
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Input Capture : HAL_TIM_IC_MspInit()
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_MspInit()
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_MspInit()
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_MspInit()
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_MspInit()
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****      (#) Initialize the TIM low level resources :
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         (##) Enable the TIM interface clock using __HAL_RCC_TIMx_CLK_ENABLE();
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         (##) TIM pins configuration
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             (+++) Enable the clock for the TIM GPIOs using the following function:
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             (+++) Configure these TIM pins in Alternate function mode using HAL_GPIO_Init();
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****      (#) The external Clock can be configured, if needed (the default clock is the
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****          internal clock from the APBx), using the following function:
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****          HAL_TIM_ConfigClockSource, the clock configuration should be done before
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****          any start function.
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****      (#) Configure the TIM in the desired functioning mode using one of the
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        Initialization function of this driver:
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_Base_Init: to use the Timer to generate a simple time base
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_OC_Init and HAL_TIM_OC_ConfigChannel: to use the Timer to generate an
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             Output Compare signal.
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_PWM_Init and HAL_TIM_PWM_ConfigChannel: to use the Timer to generate a
ARM GAS  /tmp//ccJMd58S.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             PWM signal.
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_IC_Init and HAL_TIM_IC_ConfigChannel: to use the Timer to measure an
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             external signal.
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_OnePulse_Init and HAL_TIM_OnePulse_ConfigChannel: to use the Timer
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             in One Pulse Mode.
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****        (++) HAL_TIM_Encoder_Init: to use the Timer Encoder Interface.
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****      (#) Activate the TIM peripheral using one of the start functions depending from the feature us
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_Start(), HAL_TIM_Base_Start_DMA(), HAL_TIM_Base_Start_IT()
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Input Capture :  HAL_TIM_IC_Start(), HAL_TIM_IC_Start_DMA(), HAL_TIM_IC_Start_IT()
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_Start(), HAL_TIM_OC_Start_DMA(), HAL_TIM_OC_Start_IT()
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_Start(), HAL_TIM_PWM_Start_DMA(), HAL_TIM_PWM_Start_IT
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_Start(), HAL_TIM_OnePulse_Start_IT()
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_Start(), HAL_TIM_Encoder_Start_DMA(), HAL_TIM
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****      (#) The DMA Burst is managed with the two following functions:
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****          HAL_TIM_DMABurst_WriteStart()
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****          HAL_TIM_DMABurst_ReadStart()
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     *** Callback registration ***
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   =============================================
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   The compilation define  USE_HAL_TIM_REGISTER_CALLBACKS when set to 1
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   allows the user to configure dynamically the driver callbacks.
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   Use Function HAL_TIM_RegisterCallback() to register a callback.
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_RegisterCallback() takes as parameters the HAL peripheral handle,
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   the Callback ID and a pointer to the user callback function.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   Use function HAL_TIM_UnRegisterCallback() to reset a callback to the default
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   weak function.
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_UnRegisterCallback takes as parameters the HAL peripheral handle,
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   and the Callback ID.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   These functions allow to register/unregister following callbacks:
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Base_MspInitCallback              : TIM Base Msp Init Callback.
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Base_MspDeInitCallback            : TIM Base Msp DeInit Callback.
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) IC_MspInitCallback                : TIM IC Msp Init Callback.
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) IC_MspDeInitCallback              : TIM IC Msp DeInit Callback.
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) OC_MspInitCallback                : TIM OC Msp Init Callback.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) OC_MspDeInitCallback              : TIM OC Msp DeInit Callback.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) PWM_MspInitCallback               : TIM PWM Msp Init Callback.
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) PWM_MspDeInitCallback             : TIM PWM Msp DeInit Callback.
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) OnePulse_MspInitCallback          : TIM One Pulse Msp Init Callback.
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) OnePulse_MspDeInitCallback        : TIM One Pulse Msp DeInit Callback.
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Encoder_MspInitCallback           : TIM Encoder Msp Init Callback.
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Encoder_MspDeInitCallback         : TIM Encoder Msp DeInit Callback.
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) HallSensor_MspInitCallback        : TIM Hall Sensor Msp Init Callback.
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) HallSensor_MspDeInitCallback      : TIM Hall Sensor Msp DeInit Callback.
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) PeriodElapsedCallback             : TIM Period Elapsed Callback.
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) PeriodElapsedHalfCpltCallback     : TIM Period Elapsed half complete Callback.
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) TriggerCallback                   : TIM Trigger Callback.
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) TriggerHalfCpltCallback           : TIM Trigger half complete Callback.
ARM GAS  /tmp//ccJMd58S.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) IC_CaptureCallback                : TIM Input Capture Callback.
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) IC_CaptureHalfCpltCallback        : TIM Input Capture half complete Callback.
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) OC_DelayElapsedCallback           : TIM Output Compare Delay Elapsed Callback.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) PWM_PulseFinishedCallback         : TIM PWM Pulse Finished Callback.
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) PWM_PulseFinishedHalfCpltCallback : TIM PWM Pulse Finished half complete Callback.
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) ErrorCallback                     : TIM Error Callback.
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) CommutationCallback               : TIM Commutation Callback.
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) CommutationHalfCpltCallback       : TIM Commutation half complete Callback.
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) BreakCallback                     : TIM Break Callback.
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** By default, after the Init and when the state is HAL_TIM_STATE_RESET
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** all interrupt callbacks are set to the corresponding weak functions:
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   examples HAL_TIM_TriggerCallback(), HAL_TIM_ErrorCallback().
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   Exception done for MspInit and MspDeInit functions that are reset to the legacy weak
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   functionalities in the Init / DeInit only when these callbacks are null
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   (not registered beforehand). If not, MspInit or MspDeInit are not null, the Init / DeInit
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     keep and use the user MspInit / MspDeInit callbacks(registered beforehand)
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     Callbacks can be registered / unregistered in HAL_TIM_STATE_READY state only.
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     Exception done MspInit / MspDeInit that can be registered / unregistered
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     in HAL_TIM_STATE_READY or HAL_TIM_STATE_RESET state,
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     thus registered(user) MspInit / DeInit callbacks can be used during the Init / DeInit.
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   In that case first register the MspInit/MspDeInit user callbacks
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       using HAL_TIM_RegisterCallback() before calling DeInit or Init function.
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       When The compilation define USE_HAL_TIM_REGISTER_CALLBACKS is set to 0 or
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       not defined, the callback registration feature is not available and all callbacks
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       are set to the corresponding weak functions.
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   @endverbatim
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ******************************************************************************
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /* Includes ------------------------------------------------------------------*/
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #include "stm32f1xx_hal.h"
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @addtogroup STM32F1xx_HAL_Driver
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM TIM
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief TIM HAL module driver
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #ifdef HAL_TIM_MODULE_ENABLED
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /* Private typedef -----------------------------------------------------------*/
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /* Private define ------------------------------------------------------------*/
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /* Private macros ------------------------------------------------------------*/
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /* Private variables ---------------------------------------------------------*/
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp//ccJMd58S.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @addtogroup TIM_Private_Functions
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config);
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config);
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config);
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter);
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter);
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter);
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource);
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma);
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMAPeriodElapsedHalfCplt(DMA_HandleTypeDef *hdma);
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMADelayPulseCplt(DMA_HandleTypeDef *hdma);
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma);
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMATriggerHalfCplt(DMA_HandleTypeDef *hdma);
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static HAL_StatusTypeDef TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                                   const TIM_SlaveConfigTypeDef *sSlaveConfig);
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /* Exported functions --------------------------------------------------------*/
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions TIM Exported Functions
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group1 TIM Time Base functions
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief    Time Base functions
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****               ##### Time Base functions #####
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM base.
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM base.
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the Time Base.
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the Time Base.
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the Time Base and enable interrupt.
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the Time Base and disable interrupt.
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the Time Base and enable DMA transfer.
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the Time Base and disable DMA transfer.
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Time base Unit according to the specified
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initialize the associated handle.
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
ARM GAS  /tmp//ccJMd58S.s 			page 6


 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
  27              		.loc 1 267 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
  43              		.loc 1 269 6
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
  47              		.loc 1 271 12
  48 000e 0123     		movs	r3, #1
  49 0010 41E0     		b	.L3
  50              	.L2:
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim->Init.Period));
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
  51              		.loc 1 281 11
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 93F83D30 		ldrb	r3, [r3, #61]
  54 0018 DBB2     		uxtb	r3, r3
  55              		.loc 1 281 6
  56 001a 002B     		cmp	r3, #0
  57 001c 06D1     		bne	.L4
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
  58              		.loc 1 284 16
  59 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 7


  60 0020 0022     		movs	r2, #0
  61 0022 83F83C20 		strb	r2, [r3, #60]
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (htim->Base_MspInitCallback == NULL)
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Base_MspInitCallback = HAL_TIM_Base_MspInit;
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Base_MspInitCallback(htim);
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     HAL_TIM_Base_MspInit(htim);
  62              		.loc 1 298 5
  63 0026 7868     		ldr	r0, [r7, #4]
  64 0028 FFF7FEFF 		bl	HAL_TIM_Base_MspInit
  65              	.L4:
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
  66              		.loc 1 303 15
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 0222     		movs	r2, #2
  69 0030 83F83D20 		strb	r2, [r3, #61]
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Time Base configuration */
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
  70              		.loc 1 306 3
  71 0034 7B68     		ldr	r3, [r7, #4]
  72 0036 1A68     		ldr	r2, [r3]
  73              		.loc 1 306 38
  74 0038 7B68     		ldr	r3, [r7, #4]
  75 003a 0433     		adds	r3, r3, #4
  76              		.loc 1 306 3
  77 003c 1946     		mov	r1, r3
  78 003e 1046     		mov	r0, r2
  79 0040 FFF7FEFF 		bl	TIM_Base_SetConfig
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
  80              		.loc 1 309 23
  81 0044 7B68     		ldr	r3, [r7, #4]
  82 0046 0122     		movs	r2, #1
  83 0048 83F84620 		strb	r2, [r3, #70]
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM channels state */
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
  84              		.loc 1 312 3
  85 004c 7B68     		ldr	r3, [r7, #4]
  86 004e 0122     		movs	r2, #1
  87 0050 83F83E20 		strb	r2, [r3, #62]
  88 0054 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 8


  89 0056 0122     		movs	r2, #1
  90 0058 83F83F20 		strb	r2, [r3, #63]
  91 005c 7B68     		ldr	r3, [r7, #4]
  92 005e 0122     		movs	r2, #1
  93 0060 83F84020 		strb	r2, [r3, #64]
  94 0064 7B68     		ldr	r3, [r7, #4]
  95 0066 0122     		movs	r2, #1
  96 0068 83F84120 		strb	r2, [r3, #65]
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
  97              		.loc 1 313 3
  98 006c 7B68     		ldr	r3, [r7, #4]
  99 006e 0122     		movs	r2, #1
 100 0070 83F84220 		strb	r2, [r3, #66]
 101 0074 7B68     		ldr	r3, [r7, #4]
 102 0076 0122     		movs	r2, #1
 103 0078 83F84320 		strb	r2, [r3, #67]
 104 007c 7B68     		ldr	r3, [r7, #4]
 105 007e 0122     		movs	r2, #1
 106 0080 83F84420 		strb	r2, [r3, #68]
 107 0084 7B68     		ldr	r3, [r7, #4]
 108 0086 0122     		movs	r2, #1
 109 0088 83F84520 		strb	r2, [r3, #69]
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 110              		.loc 1 316 15
 111 008c 7B68     		ldr	r3, [r7, #4]
 112 008e 0122     		movs	r2, #1
 113 0090 83F83D20 		strb	r2, [r3, #61]
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 114              		.loc 1 318 10
 115 0094 0023     		movs	r3, #0
 116              	.L3:
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 117              		.loc 1 319 1
 118 0096 1846     		mov	r0, r3
 119 0098 0837     		adds	r7, r7, #8
 120              	.LCFI3:
 121              		.cfi_def_cfa_offset 8
 122 009a BD46     		mov	sp, r7
 123              	.LCFI4:
 124              		.cfi_def_cfa_register 13
 125              		@ sp needed
 126 009c 80BD     		pop	{r7, pc}
 127              		.cfi_endproc
 128              	.LFE65:
 130              		.section	.text.HAL_TIM_Base_DeInit,"ax",%progbits
 131              		.align	1
 132              		.global	HAL_TIM_Base_DeInit
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 137              	HAL_TIM_Base_DeInit:
 138              	.LFB66:
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
ARM GAS  /tmp//ccJMd58S.s 			page 9


 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM Base peripheral
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_DeInit(TIM_HandleTypeDef *htim)
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 139              		.loc 1 327 1
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 8
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 80B5     		push	{r7, lr}
 144              	.LCFI5:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 82B0     		sub	sp, sp, #8
 149              	.LCFI6:
 150              		.cfi_def_cfa_offset 16
 151 0004 00AF     		add	r7, sp, #0
 152              	.LCFI7:
 153              		.cfi_def_cfa_register 7
 154 0006 7860     		str	r0, [r7, #4]
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 155              		.loc 1 331 15
 156 0008 7B68     		ldr	r3, [r7, #4]
 157 000a 0222     		movs	r2, #2
 158 000c 83F83D20 		strb	r2, [r3, #61]
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 159              		.loc 1 334 3
 160 0010 7B68     		ldr	r3, [r7, #4]
 161 0012 1B68     		ldr	r3, [r3]
 162 0014 1A6A     		ldr	r2, [r3, #32]
 163 0016 41F21113 		movw	r3, #4369
 164 001a 1340     		ands	r3, r3, r2
 165 001c 002B     		cmp	r3, #0
 166 001e 0FD1     		bne	.L6
 167              		.loc 1 334 3 is_stmt 0 discriminator 1
 168 0020 7B68     		ldr	r3, [r7, #4]
 169 0022 1B68     		ldr	r3, [r3]
 170 0024 1A6A     		ldr	r2, [r3, #32]
 171 0026 40F24443 		movw	r3, #1092
 172 002a 1340     		ands	r3, r3, r2
 173 002c 002B     		cmp	r3, #0
 174 002e 07D1     		bne	.L6
 175              		.loc 1 334 3 discriminator 2
 176 0030 7B68     		ldr	r3, [r7, #4]
 177 0032 1B68     		ldr	r3, [r3]
 178 0034 1A68     		ldr	r2, [r3]
 179 0036 7B68     		ldr	r3, [r7, #4]
 180 0038 1B68     		ldr	r3, [r3]
 181 003a 22F00102 		bic	r2, r2, #1
 182 003e 1A60     		str	r2, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 10


 183              	.L6:
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->Base_MspDeInitCallback == NULL)
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Base_MspDeInitCallback = HAL_TIM_Base_MspDeInit;
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Base_MspDeInitCallback(htim);
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_Base_MspDeInit(htim);
 184              		.loc 1 345 3 is_stmt 1
 185 0040 7868     		ldr	r0, [r7, #4]
 186 0042 FFF7FEFF 		bl	HAL_TIM_Base_MspDeInit
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the DMA burst operation state */
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
 187              		.loc 1 349 23
 188 0046 7B68     		ldr	r3, [r7, #4]
 189 0048 0022     		movs	r2, #0
 190 004a 83F84620 		strb	r2, [r3, #70]
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the TIM channels state */
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 191              		.loc 1 352 3
 192 004e 7B68     		ldr	r3, [r7, #4]
 193 0050 0022     		movs	r2, #0
 194 0052 83F83E20 		strb	r2, [r3, #62]
 195 0056 7B68     		ldr	r3, [r7, #4]
 196 0058 0022     		movs	r2, #0
 197 005a 83F83F20 		strb	r2, [r3, #63]
 198 005e 7B68     		ldr	r3, [r7, #4]
 199 0060 0022     		movs	r2, #0
 200 0062 83F84020 		strb	r2, [r3, #64]
 201 0066 7B68     		ldr	r3, [r7, #4]
 202 0068 0022     		movs	r2, #0
 203 006a 83F84120 		strb	r2, [r3, #65]
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 204              		.loc 1 353 3
 205 006e 7B68     		ldr	r3, [r7, #4]
 206 0070 0022     		movs	r2, #0
 207 0072 83F84220 		strb	r2, [r3, #66]
 208 0076 7B68     		ldr	r3, [r7, #4]
 209 0078 0022     		movs	r2, #0
 210 007a 83F84320 		strb	r2, [r3, #67]
 211 007e 7B68     		ldr	r3, [r7, #4]
 212 0080 0022     		movs	r2, #0
 213 0082 83F84420 		strb	r2, [r3, #68]
 214 0086 7B68     		ldr	r3, [r7, #4]
 215 0088 0022     		movs	r2, #0
 216 008a 83F84520 		strb	r2, [r3, #69]
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 217              		.loc 1 356 15
ARM GAS  /tmp//ccJMd58S.s 			page 11


 218 008e 7B68     		ldr	r3, [r7, #4]
 219 0090 0022     		movs	r2, #0
 220 0092 83F83D20 		strb	r2, [r3, #61]
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Release Lock */
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 221              		.loc 1 359 3
 222 0096 7B68     		ldr	r3, [r7, #4]
 223 0098 0022     		movs	r2, #0
 224 009a 83F83C20 		strb	r2, [r3, #60]
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 225              		.loc 1 361 10
 226 009e 0023     		movs	r3, #0
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 227              		.loc 1 362 1
 228 00a0 1846     		mov	r0, r3
 229 00a2 0837     		adds	r7, r7, #8
 230              	.LCFI8:
 231              		.cfi_def_cfa_offset 8
 232 00a4 BD46     		mov	sp, r7
 233              	.LCFI9:
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 00a6 80BD     		pop	{r7, pc}
 237              		.cfi_endproc
 238              	.LFE66:
 240              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 241              		.align	1
 242              		.weak	HAL_TIM_Base_MspInit
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 247              	HAL_TIM_Base_MspInit:
 248              	.LFB67:
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Base MSP.
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 249              		.loc 1 370 1
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0000 80B4     		push	{r7}
 255              	.LCFI10:
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0002 83B0     		sub	sp, sp, #12
 259              	.LCFI11:
 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              	.LCFI12:
ARM GAS  /tmp//ccJMd58S.s 			page 12


 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_Base_MspInit could be implemented in the user file
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 265              		.loc 1 377 1
 266 0008 00BF     		nop
 267 000a 0C37     		adds	r7, r7, #12
 268              	.LCFI13:
 269              		.cfi_def_cfa_offset 4
 270 000c BD46     		mov	sp, r7
 271              	.LCFI14:
 272              		.cfi_def_cfa_register 13
 273              		@ sp needed
 274 000e 80BC     		pop	{r7}
 275              	.LCFI15:
 276              		.cfi_restore 7
 277              		.cfi_def_cfa_offset 0
 278 0010 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE67:
 282              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 283              		.align	1
 284              		.weak	HAL_TIM_Base_MspDeInit
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	HAL_TIM_Base_MspDeInit:
 290              	.LFB68:
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM Base MSP.
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef *htim)
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 291              		.loc 1 385 1
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 8
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 296 0000 80B4     		push	{r7}
 297              	.LCFI16:
 298              		.cfi_def_cfa_offset 4
 299              		.cfi_offset 7, -4
 300 0002 83B0     		sub	sp, sp, #12
 301              	.LCFI17:
 302              		.cfi_def_cfa_offset 16
 303 0004 00AF     		add	r7, sp, #0
 304              	.LCFI18:
 305              		.cfi_def_cfa_register 7
 306 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 13


 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_Base_MspDeInit could be implemented in the user file
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 307              		.loc 1 392 1
 308 0008 00BF     		nop
 309 000a 0C37     		adds	r7, r7, #12
 310              	.LCFI19:
 311              		.cfi_def_cfa_offset 4
 312 000c BD46     		mov	sp, r7
 313              	.LCFI20:
 314              		.cfi_def_cfa_register 13
 315              		@ sp needed
 316 000e 80BC     		pop	{r7}
 317              	.LCFI21:
 318              		.cfi_restore 7
 319              		.cfi_def_cfa_offset 0
 320 0010 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE68:
 324              		.section	.text.HAL_TIM_Base_Start,"ax",%progbits
 325              		.align	1
 326              		.global	HAL_TIM_Base_Start
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	HAL_TIM_Base_Start:
 332              	.LFB69:
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Base generation.
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 333              		.loc 1 401 1
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 16
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 80B4     		push	{r7}
 339              	.LCFI22:
 340              		.cfi_def_cfa_offset 4
 341              		.cfi_offset 7, -4
 342 0002 85B0     		sub	sp, sp, #20
 343              	.LCFI23:
 344              		.cfi_def_cfa_offset 24
 345 0004 00AF     		add	r7, sp, #0
 346              	.LCFI24:
 347              		.cfi_def_cfa_register 7
 348 0006 7860     		str	r0, [r7, #4]
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
ARM GAS  /tmp//ccJMd58S.s 			page 14


 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM state */
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State != HAL_TIM_STATE_READY)
 349              		.loc 1 408 11
 350 0008 7B68     		ldr	r3, [r7, #4]
 351 000a 93F83D30 		ldrb	r3, [r3, #61]
 352 000e DBB2     		uxtb	r3, r3
 353              		.loc 1 408 6
 354 0010 012B     		cmp	r3, #1
 355 0012 01D0     		beq	.L11
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 356              		.loc 1 410 12
 357 0014 0123     		movs	r3, #1
 358 0016 3CE0     		b	.L12
 359              	.L11:
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 360              		.loc 1 414 15
 361 0018 7B68     		ldr	r3, [r7, #4]
 362 001a 0222     		movs	r2, #2
 363 001c 83F83D20 		strb	r2, [r3, #61]
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 364              		.loc 1 417 7
 365 0020 7B68     		ldr	r3, [r7, #4]
 366 0022 1B68     		ldr	r3, [r3]
 367              		.loc 1 417 6
 368 0024 1D4A     		ldr	r2, .L17
 369 0026 9342     		cmp	r3, r2
 370 0028 18D0     		beq	.L13
 371              		.loc 1 417 7 discriminator 1
 372 002a 7B68     		ldr	r3, [r7, #4]
 373 002c 1B68     		ldr	r3, [r3]
 374 002e 1C4A     		ldr	r2, .L17+4
 375 0030 9342     		cmp	r3, r2
 376 0032 13D0     		beq	.L13
 377              		.loc 1 417 7 is_stmt 0 discriminator 2
 378 0034 7B68     		ldr	r3, [r7, #4]
 379 0036 1B68     		ldr	r3, [r3]
 380 0038 B3F1804F 		cmp	r3, #1073741824
 381 003c 0ED0     		beq	.L13
 382              		.loc 1 417 7 discriminator 3
 383 003e 7B68     		ldr	r3, [r7, #4]
 384 0040 1B68     		ldr	r3, [r3]
 385 0042 184A     		ldr	r2, .L17+8
 386 0044 9342     		cmp	r3, r2
 387 0046 09D0     		beq	.L13
 388              		.loc 1 417 7 discriminator 4
 389 0048 7B68     		ldr	r3, [r7, #4]
 390 004a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 15


 391 004c 164A     		ldr	r2, .L17+12
 392 004e 9342     		cmp	r3, r2
 393 0050 04D0     		beq	.L13
 394              		.loc 1 417 7 discriminator 5
 395 0052 7B68     		ldr	r3, [r7, #4]
 396 0054 1B68     		ldr	r3, [r3]
 397 0056 154A     		ldr	r2, .L17+16
 398 0058 9342     		cmp	r3, r2
 399 005a 11D1     		bne	.L14
 400              	.L13:
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 401              		.loc 1 419 19 is_stmt 1
 402 005c 7B68     		ldr	r3, [r7, #4]
 403 005e 1B68     		ldr	r3, [r3]
 404              		.loc 1 419 29
 405 0060 9B68     		ldr	r3, [r3, #8]
 406              		.loc 1 419 13
 407 0062 03F00703 		and	r3, r3, #7
 408 0066 FB60     		str	r3, [r7, #12]
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 409              		.loc 1 420 8
 410 0068 FB68     		ldr	r3, [r7, #12]
 411 006a 062B     		cmp	r3, #6
 412 006c 10D0     		beq	.L16
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 413              		.loc 1 422 7
 414 006e 7B68     		ldr	r3, [r7, #4]
 415 0070 1B68     		ldr	r3, [r3]
 416 0072 1A68     		ldr	r2, [r3]
 417 0074 7B68     		ldr	r3, [r7, #4]
 418 0076 1B68     		ldr	r3, [r3]
 419 0078 42F00102 		orr	r2, r2, #1
 420 007c 1A60     		str	r2, [r3]
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 421              		.loc 1 420 8
 422 007e 07E0     		b	.L16
 423              	.L14:
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 424              		.loc 1 427 5
 425 0080 7B68     		ldr	r3, [r7, #4]
 426 0082 1B68     		ldr	r3, [r3]
 427 0084 1A68     		ldr	r2, [r3]
 428 0086 7B68     		ldr	r3, [r7, #4]
 429 0088 1B68     		ldr	r3, [r3]
 430 008a 42F00102 		orr	r2, r2, #1
 431 008e 1A60     		str	r2, [r3]
 432              	.L16:
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
ARM GAS  /tmp//ccJMd58S.s 			page 16


 433              		.loc 1 431 10
 434 0090 0023     		movs	r3, #0
 435              	.L12:
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 436              		.loc 1 432 1
 437 0092 1846     		mov	r0, r3
 438 0094 1437     		adds	r7, r7, #20
 439              	.LCFI25:
 440              		.cfi_def_cfa_offset 4
 441 0096 BD46     		mov	sp, r7
 442              	.LCFI26:
 443              		.cfi_def_cfa_register 13
 444              		@ sp needed
 445 0098 80BC     		pop	{r7}
 446              	.LCFI27:
 447              		.cfi_restore 7
 448              		.cfi_def_cfa_offset 0
 449 009a 7047     		bx	lr
 450              	.L18:
 451              		.align	2
 452              	.L17:
 453 009c 002C0140 		.word	1073818624
 454 00a0 00340140 		.word	1073820672
 455 00a4 00040040 		.word	1073742848
 456 00a8 00080040 		.word	1073743872
 457 00ac 000C0040 		.word	1073744896
 458              		.cfi_endproc
 459              	.LFE69:
 461              		.section	.text.HAL_TIM_Base_Stop,"ax",%progbits
 462              		.align	1
 463              		.global	HAL_TIM_Base_Stop
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 468              	HAL_TIM_Base_Stop:
 469              	.LFB70:
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Base generation.
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop(TIM_HandleTypeDef *htim)
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 470              		.loc 1 440 1
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 8
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475 0000 80B4     		push	{r7}
 476              	.LCFI28:
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0002 83B0     		sub	sp, sp, #12
 480              	.LCFI29:
 481              		.cfi_def_cfa_offset 16
 482 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp//ccJMd58S.s 			page 17


 483              	.LCFI30:
 484              		.cfi_def_cfa_register 7
 485 0006 7860     		str	r0, [r7, #4]
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 486              		.loc 1 445 3
 487 0008 7B68     		ldr	r3, [r7, #4]
 488 000a 1B68     		ldr	r3, [r3]
 489 000c 1A6A     		ldr	r2, [r3, #32]
 490 000e 41F21113 		movw	r3, #4369
 491 0012 1340     		ands	r3, r3, r2
 492 0014 002B     		cmp	r3, #0
 493 0016 0FD1     		bne	.L20
 494              		.loc 1 445 3 is_stmt 0 discriminator 1
 495 0018 7B68     		ldr	r3, [r7, #4]
 496 001a 1B68     		ldr	r3, [r3]
 497 001c 1A6A     		ldr	r2, [r3, #32]
 498 001e 40F24443 		movw	r3, #1092
 499 0022 1340     		ands	r3, r3, r2
 500 0024 002B     		cmp	r3, #0
 501 0026 07D1     		bne	.L20
 502              		.loc 1 445 3 discriminator 2
 503 0028 7B68     		ldr	r3, [r7, #4]
 504 002a 1B68     		ldr	r3, [r3]
 505 002c 1A68     		ldr	r2, [r3]
 506 002e 7B68     		ldr	r3, [r7, #4]
 507 0030 1B68     		ldr	r3, [r3]
 508 0032 22F00102 		bic	r2, r2, #1
 509 0036 1A60     		str	r2, [r3]
 510              	.L20:
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 511              		.loc 1 448 15 is_stmt 1
 512 0038 7B68     		ldr	r3, [r7, #4]
 513 003a 0122     		movs	r2, #1
 514 003c 83F83D20 		strb	r2, [r3, #61]
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 515              		.loc 1 451 10
 516 0040 0023     		movs	r3, #0
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 517              		.loc 1 452 1
 518 0042 1846     		mov	r0, r3
 519 0044 0C37     		adds	r7, r7, #12
 520              	.LCFI31:
 521              		.cfi_def_cfa_offset 4
 522 0046 BD46     		mov	sp, r7
 523              	.LCFI32:
 524              		.cfi_def_cfa_register 13
 525              		@ sp needed
 526 0048 80BC     		pop	{r7}
 527              	.LCFI33:
ARM GAS  /tmp//ccJMd58S.s 			page 18


 528              		.cfi_restore 7
 529              		.cfi_def_cfa_offset 0
 530 004a 7047     		bx	lr
 531              		.cfi_endproc
 532              	.LFE70:
 534              		.section	.text.HAL_TIM_Base_Start_IT,"ax",%progbits
 535              		.align	1
 536              		.global	HAL_TIM_Base_Start_IT
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 541              	HAL_TIM_Base_Start_IT:
 542              	.LFB71:
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in interrupt mode.
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 543              		.loc 1 460 1
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 16
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              	.LCFI34:
 550              		.cfi_def_cfa_offset 4
 551              		.cfi_offset 7, -4
 552 0002 85B0     		sub	sp, sp, #20
 553              	.LCFI35:
 554              		.cfi_def_cfa_offset 24
 555 0004 00AF     		add	r7, sp, #0
 556              	.LCFI36:
 557              		.cfi_def_cfa_register 7
 558 0006 7860     		str	r0, [r7, #4]
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM state */
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State != HAL_TIM_STATE_READY)
 559              		.loc 1 467 11
 560 0008 7B68     		ldr	r3, [r7, #4]
 561 000a 93F83D30 		ldrb	r3, [r3, #61]
 562 000e DBB2     		uxtb	r3, r3
 563              		.loc 1 467 6
 564 0010 012B     		cmp	r3, #1
 565 0012 01D0     		beq	.L23
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 566              		.loc 1 469 12
 567 0014 0123     		movs	r3, #1
 568 0016 44E0     		b	.L24
 569              	.L23:
ARM GAS  /tmp//ccJMd58S.s 			page 19


 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 570              		.loc 1 473 15
 571 0018 7B68     		ldr	r3, [r7, #4]
 572 001a 0222     		movs	r2, #2
 573 001c 83F83D20 		strb	r2, [r3, #61]
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the TIM Update interrupt */
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 574              		.loc 1 476 3
 575 0020 7B68     		ldr	r3, [r7, #4]
 576 0022 1B68     		ldr	r3, [r3]
 577 0024 DA68     		ldr	r2, [r3, #12]
 578 0026 7B68     		ldr	r3, [r7, #4]
 579 0028 1B68     		ldr	r3, [r3]
 580 002a 42F00102 		orr	r2, r2, #1
 581 002e DA60     		str	r2, [r3, #12]
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 582              		.loc 1 479 7
 583 0030 7B68     		ldr	r3, [r7, #4]
 584 0032 1B68     		ldr	r3, [r3]
 585              		.loc 1 479 6
 586 0034 1D4A     		ldr	r2, .L29
 587 0036 9342     		cmp	r3, r2
 588 0038 18D0     		beq	.L25
 589              		.loc 1 479 7 discriminator 1
 590 003a 7B68     		ldr	r3, [r7, #4]
 591 003c 1B68     		ldr	r3, [r3]
 592 003e 1C4A     		ldr	r2, .L29+4
 593 0040 9342     		cmp	r3, r2
 594 0042 13D0     		beq	.L25
 595              		.loc 1 479 7 is_stmt 0 discriminator 2
 596 0044 7B68     		ldr	r3, [r7, #4]
 597 0046 1B68     		ldr	r3, [r3]
 598 0048 B3F1804F 		cmp	r3, #1073741824
 599 004c 0ED0     		beq	.L25
 600              		.loc 1 479 7 discriminator 3
 601 004e 7B68     		ldr	r3, [r7, #4]
 602 0050 1B68     		ldr	r3, [r3]
 603 0052 184A     		ldr	r2, .L29+8
 604 0054 9342     		cmp	r3, r2
 605 0056 09D0     		beq	.L25
 606              		.loc 1 479 7 discriminator 4
 607 0058 7B68     		ldr	r3, [r7, #4]
 608 005a 1B68     		ldr	r3, [r3]
 609 005c 164A     		ldr	r2, .L29+12
 610 005e 9342     		cmp	r3, r2
 611 0060 04D0     		beq	.L25
 612              		.loc 1 479 7 discriminator 5
 613 0062 7B68     		ldr	r3, [r7, #4]
 614 0064 1B68     		ldr	r3, [r3]
 615 0066 154A     		ldr	r2, .L29+16
 616 0068 9342     		cmp	r3, r2
ARM GAS  /tmp//ccJMd58S.s 			page 20


 617 006a 11D1     		bne	.L26
 618              	.L25:
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 619              		.loc 1 481 19 is_stmt 1
 620 006c 7B68     		ldr	r3, [r7, #4]
 621 006e 1B68     		ldr	r3, [r3]
 622              		.loc 1 481 29
 623 0070 9B68     		ldr	r3, [r3, #8]
 624              		.loc 1 481 13
 625 0072 03F00703 		and	r3, r3, #7
 626 0076 FB60     		str	r3, [r7, #12]
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 627              		.loc 1 482 8
 628 0078 FB68     		ldr	r3, [r7, #12]
 629 007a 062B     		cmp	r3, #6
 630 007c 10D0     		beq	.L28
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 631              		.loc 1 484 7
 632 007e 7B68     		ldr	r3, [r7, #4]
 633 0080 1B68     		ldr	r3, [r3]
 634 0082 1A68     		ldr	r2, [r3]
 635 0084 7B68     		ldr	r3, [r7, #4]
 636 0086 1B68     		ldr	r3, [r3]
 637 0088 42F00102 		orr	r2, r2, #1
 638 008c 1A60     		str	r2, [r3]
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 639              		.loc 1 482 8
 640 008e 07E0     		b	.L28
 641              	.L26:
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 642              		.loc 1 489 5
 643 0090 7B68     		ldr	r3, [r7, #4]
 644 0092 1B68     		ldr	r3, [r3]
 645 0094 1A68     		ldr	r2, [r3]
 646 0096 7B68     		ldr	r3, [r7, #4]
 647 0098 1B68     		ldr	r3, [r3]
 648 009a 42F00102 		orr	r2, r2, #1
 649 009e 1A60     		str	r2, [r3]
 650              	.L28:
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 651              		.loc 1 493 10
 652 00a0 0023     		movs	r3, #0
 653              	.L24:
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 654              		.loc 1 494 1
 655 00a2 1846     		mov	r0, r3
 656 00a4 1437     		adds	r7, r7, #20
 657              	.LCFI37:
ARM GAS  /tmp//ccJMd58S.s 			page 21


 658              		.cfi_def_cfa_offset 4
 659 00a6 BD46     		mov	sp, r7
 660              	.LCFI38:
 661              		.cfi_def_cfa_register 13
 662              		@ sp needed
 663 00a8 80BC     		pop	{r7}
 664              	.LCFI39:
 665              		.cfi_restore 7
 666              		.cfi_def_cfa_offset 0
 667 00aa 7047     		bx	lr
 668              	.L30:
 669              		.align	2
 670              	.L29:
 671 00ac 002C0140 		.word	1073818624
 672 00b0 00340140 		.word	1073820672
 673 00b4 00040040 		.word	1073742848
 674 00b8 00080040 		.word	1073743872
 675 00bc 000C0040 		.word	1073744896
 676              		.cfi_endproc
 677              	.LFE71:
 679              		.section	.text.HAL_TIM_Base_Stop_IT,"ax",%progbits
 680              		.align	1
 681              		.global	HAL_TIM_Base_Stop_IT
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 686              	HAL_TIM_Base_Stop_IT:
 687              	.LFB72:
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in interrupt mode.
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_IT(TIM_HandleTypeDef *htim)
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 688              		.loc 1 502 1
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 8
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693 0000 80B4     		push	{r7}
 694              	.LCFI40:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 7, -4
 697 0002 83B0     		sub	sp, sp, #12
 698              	.LCFI41:
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              	.LCFI42:
 702              		.cfi_def_cfa_register 7
 703 0006 7860     		str	r0, [r7, #4]
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Update interrupt */
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
ARM GAS  /tmp//ccJMd58S.s 			page 22


 704              		.loc 1 507 3
 705 0008 7B68     		ldr	r3, [r7, #4]
 706 000a 1B68     		ldr	r3, [r3]
 707 000c DA68     		ldr	r2, [r3, #12]
 708 000e 7B68     		ldr	r3, [r7, #4]
 709 0010 1B68     		ldr	r3, [r3]
 710 0012 22F00102 		bic	r2, r2, #1
 711 0016 DA60     		str	r2, [r3, #12]
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 712              		.loc 1 510 3
 713 0018 7B68     		ldr	r3, [r7, #4]
 714 001a 1B68     		ldr	r3, [r3]
 715 001c 1A6A     		ldr	r2, [r3, #32]
 716 001e 41F21113 		movw	r3, #4369
 717 0022 1340     		ands	r3, r3, r2
 718 0024 002B     		cmp	r3, #0
 719 0026 0FD1     		bne	.L32
 720              		.loc 1 510 3 is_stmt 0 discriminator 1
 721 0028 7B68     		ldr	r3, [r7, #4]
 722 002a 1B68     		ldr	r3, [r3]
 723 002c 1A6A     		ldr	r2, [r3, #32]
 724 002e 40F24443 		movw	r3, #1092
 725 0032 1340     		ands	r3, r3, r2
 726 0034 002B     		cmp	r3, #0
 727 0036 07D1     		bne	.L32
 728              		.loc 1 510 3 discriminator 2
 729 0038 7B68     		ldr	r3, [r7, #4]
 730 003a 1B68     		ldr	r3, [r3]
 731 003c 1A68     		ldr	r2, [r3]
 732 003e 7B68     		ldr	r3, [r7, #4]
 733 0040 1B68     		ldr	r3, [r3]
 734 0042 22F00102 		bic	r2, r2, #1
 735 0046 1A60     		str	r2, [r3]
 736              	.L32:
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 737              		.loc 1 513 15 is_stmt 1
 738 0048 7B68     		ldr	r3, [r7, #4]
 739 004a 0122     		movs	r2, #1
 740 004c 83F83D20 		strb	r2, [r3, #61]
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 741              		.loc 1 516 10
 742 0050 0023     		movs	r3, #0
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 743              		.loc 1 517 1
 744 0052 1846     		mov	r0, r3
 745 0054 0C37     		adds	r7, r7, #12
 746              	.LCFI43:
 747              		.cfi_def_cfa_offset 4
 748 0056 BD46     		mov	sp, r7
 749              	.LCFI44:
 750              		.cfi_def_cfa_register 13
ARM GAS  /tmp//ccJMd58S.s 			page 23


 751              		@ sp needed
 752 0058 80BC     		pop	{r7}
 753              	.LCFI45:
 754              		.cfi_restore 7
 755              		.cfi_def_cfa_offset 0
 756 005a 7047     		bx	lr
 757              		.cfi_endproc
 758              	.LFE72:
 760              		.section	.text.HAL_TIM_Base_Start_DMA,"ax",%progbits
 761              		.align	1
 762              		.global	HAL_TIM_Base_Start_DMA
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	HAL_TIM_Base_Start_DMA:
 768              	.LFB73:
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in DMA mode.
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  pData The source Buffer address.
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from memory to peripheral.
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_DMA(TIM_HandleTypeDef *htim, const uint32_t *pData, uint16_t L
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 769              		.loc 1 527 1
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 24
 772              		@ frame_needed = 1, uses_anonymous_args = 0
 773 0000 80B5     		push	{r7, lr}
 774              	.LCFI46:
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 86B0     		sub	sp, sp, #24
 779              	.LCFI47:
 780              		.cfi_def_cfa_offset 32
 781 0004 00AF     		add	r7, sp, #0
 782              	.LCFI48:
 783              		.cfi_def_cfa_register 7
 784 0006 F860     		str	r0, [r7, #12]
 785 0008 B960     		str	r1, [r7, #8]
 786 000a 1346     		mov	r3, r2
 787 000c FB80     		strh	r3, [r7, #6]	@ movhi
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance));
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_BUSY)
 788              		.loc 1 534 11
 789 000e FB68     		ldr	r3, [r7, #12]
 790 0010 93F83D30 		ldrb	r3, [r3, #61]
 791 0014 DBB2     		uxtb	r3, r3
 792              		.loc 1 534 6
ARM GAS  /tmp//ccJMd58S.s 			page 24


 793 0016 022B     		cmp	r3, #2
 794 0018 01D1     		bne	.L35
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
 795              		.loc 1 536 12
 796 001a 0223     		movs	r3, #2
 797 001c 70E0     		b	.L36
 798              	.L35:
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_READY)
 799              		.loc 1 538 16
 800 001e FB68     		ldr	r3, [r7, #12]
 801 0020 93F83D30 		ldrb	r3, [r3, #61]
 802 0024 DBB2     		uxtb	r3, r3
 803              		.loc 1 538 11
 804 0026 012B     		cmp	r3, #1
 805 0028 25D1     		bne	.L37
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((pData == NULL) || (Length == 0U))
 806              		.loc 1 540 8
 807 002a BB68     		ldr	r3, [r7, #8]
 808 002c 002B     		cmp	r3, #0
 809 002e 02D0     		beq	.L38
 810              		.loc 1 540 25 discriminator 1
 811 0030 FB88     		ldrh	r3, [r7, #6]
 812 0032 002B     		cmp	r3, #0
 813 0034 01D1     		bne	.L39
 814              	.L38:
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 815              		.loc 1 542 14
 816 0036 0123     		movs	r3, #1
 817 0038 62E0     		b	.L36
 818              	.L39:
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 819              		.loc 1 546 19
 820 003a FB68     		ldr	r3, [r7, #12]
 821 003c 0222     		movs	r2, #2
 822 003e 83F83D20 		strb	r2, [r3, #61]
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the DMA Period elapsed callbacks */
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 823              		.loc 1 555 13
 824 0042 FB68     		ldr	r3, [r7, #12]
 825 0044 1B6A     		ldr	r3, [r3, #32]
 826              		.loc 1 555 51
 827 0046 304A     		ldr	r2, .L47
 828 0048 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp//ccJMd58S.s 			page 25


 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 829              		.loc 1 556 13
 830 004a FB68     		ldr	r3, [r7, #12]
 831 004c 1B6A     		ldr	r3, [r3, #32]
 832              		.loc 1 556 55
 833 004e 2F4A     		ldr	r2, .L47+4
 834 0050 DA62     		str	r2, [r3, #44]
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the DMA error callback */
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 835              		.loc 1 559 13
 836 0052 FB68     		ldr	r3, [r7, #12]
 837 0054 1B6A     		ldr	r3, [r3, #32]
 838              		.loc 1 559 52
 839 0056 2E4A     		ldr	r2, .L47+8
 840 0058 1A63     		str	r2, [r3, #48]
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the DMA channel */
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)pData, (uint32_t)&htim->Instance->A
 841              		.loc 1 562 7
 842 005a FB68     		ldr	r3, [r7, #12]
 843 005c 186A     		ldr	r0, [r3, #32]
 844 005e B968     		ldr	r1, [r7, #8]
 845              		.loc 1 562 87
 846 0060 FB68     		ldr	r3, [r7, #12]
 847 0062 1B68     		ldr	r3, [r3]
 848              		.loc 1 562 82
 849 0064 2C33     		adds	r3, r3, #44
 850              		.loc 1 562 7
 851 0066 1A46     		mov	r2, r3
 852 0068 FB88     		ldrh	r3, [r7, #6]
 853 006a FFF7FEFF 		bl	HAL_DMA_Start_IT
 854 006e 0346     		mov	r3, r0
 855              		.loc 1 562 6 discriminator 1
 856 0070 002B     		cmp	r3, #0
 857 0072 04D0     		beq	.L41
 858 0074 01E0     		b	.L46
 859              	.L37:
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 860              		.loc 1 551 12
 861 0076 0123     		movs	r3, #1
 862 0078 42E0     		b	.L36
 863              	.L46:
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                        Length) != HAL_OK)
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Return error status */
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 864              		.loc 1 566 12
 865 007a 0123     		movs	r3, #1
 866 007c 40E0     		b	.L36
 867              	.L41:
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the TIM Update DMA request */
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_UPDATE);
 868              		.loc 1 570 3
 869 007e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 26


 870 0080 1B68     		ldr	r3, [r3]
 871 0082 DA68     		ldr	r2, [r3, #12]
 872 0084 FB68     		ldr	r3, [r7, #12]
 873 0086 1B68     		ldr	r3, [r3]
 874 0088 42F48072 		orr	r2, r2, #256
 875 008c DA60     		str	r2, [r3, #12]
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 876              		.loc 1 573 7
 877 008e FB68     		ldr	r3, [r7, #12]
 878 0090 1B68     		ldr	r3, [r3]
 879              		.loc 1 573 6
 880 0092 204A     		ldr	r2, .L47+12
 881 0094 9342     		cmp	r3, r2
 882 0096 18D0     		beq	.L42
 883              		.loc 1 573 7 discriminator 1
 884 0098 FB68     		ldr	r3, [r7, #12]
 885 009a 1B68     		ldr	r3, [r3]
 886 009c 1E4A     		ldr	r2, .L47+16
 887 009e 9342     		cmp	r3, r2
 888 00a0 13D0     		beq	.L42
 889              		.loc 1 573 7 is_stmt 0 discriminator 2
 890 00a2 FB68     		ldr	r3, [r7, #12]
 891 00a4 1B68     		ldr	r3, [r3]
 892 00a6 B3F1804F 		cmp	r3, #1073741824
 893 00aa 0ED0     		beq	.L42
 894              		.loc 1 573 7 discriminator 3
 895 00ac FB68     		ldr	r3, [r7, #12]
 896 00ae 1B68     		ldr	r3, [r3]
 897 00b0 1A4A     		ldr	r2, .L47+20
 898 00b2 9342     		cmp	r3, r2
 899 00b4 09D0     		beq	.L42
 900              		.loc 1 573 7 discriminator 4
 901 00b6 FB68     		ldr	r3, [r7, #12]
 902 00b8 1B68     		ldr	r3, [r3]
 903 00ba 194A     		ldr	r2, .L47+24
 904 00bc 9342     		cmp	r3, r2
 905 00be 04D0     		beq	.L42
 906              		.loc 1 573 7 discriminator 5
 907 00c0 FB68     		ldr	r3, [r7, #12]
 908 00c2 1B68     		ldr	r3, [r3]
 909 00c4 174A     		ldr	r2, .L47+28
 910 00c6 9342     		cmp	r3, r2
 911 00c8 11D1     		bne	.L43
 912              	.L42:
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 913              		.loc 1 575 19 is_stmt 1
 914 00ca FB68     		ldr	r3, [r7, #12]
 915 00cc 1B68     		ldr	r3, [r3]
 916              		.loc 1 575 29
 917 00ce 9B68     		ldr	r3, [r3, #8]
 918              		.loc 1 575 13
 919 00d0 03F00703 		and	r3, r3, #7
 920 00d4 7B61     		str	r3, [r7, #20]
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
ARM GAS  /tmp//ccJMd58S.s 			page 27


 921              		.loc 1 576 8
 922 00d6 7B69     		ldr	r3, [r7, #20]
 923 00d8 062B     		cmp	r3, #6
 924 00da 10D0     		beq	.L45
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 925              		.loc 1 578 7
 926 00dc FB68     		ldr	r3, [r7, #12]
 927 00de 1B68     		ldr	r3, [r3]
 928 00e0 1A68     		ldr	r2, [r3]
 929 00e2 FB68     		ldr	r3, [r7, #12]
 930 00e4 1B68     		ldr	r3, [r3]
 931 00e6 42F00102 		orr	r2, r2, #1
 932 00ea 1A60     		str	r2, [r3]
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 933              		.loc 1 576 8
 934 00ec 07E0     		b	.L45
 935              	.L43:
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 936              		.loc 1 583 5
 937 00ee FB68     		ldr	r3, [r7, #12]
 938 00f0 1B68     		ldr	r3, [r3]
 939 00f2 1A68     		ldr	r2, [r3]
 940 00f4 FB68     		ldr	r3, [r7, #12]
 941 00f6 1B68     		ldr	r3, [r3]
 942 00f8 42F00102 		orr	r2, r2, #1
 943 00fc 1A60     		str	r2, [r3]
 944              	.L45:
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 945              		.loc 1 587 10
 946 00fe 0023     		movs	r3, #0
 947              	.L36:
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 948              		.loc 1 588 1
 949 0100 1846     		mov	r0, r3
 950 0102 1837     		adds	r7, r7, #24
 951              	.LCFI49:
 952              		.cfi_def_cfa_offset 8
 953 0104 BD46     		mov	sp, r7
 954              	.LCFI50:
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 0106 80BD     		pop	{r7, pc}
 958              	.L48:
 959              		.align	2
 960              	.L47:
 961 0108 00000000 		.word	TIM_DMAPeriodElapsedCplt
 962 010c 00000000 		.word	TIM_DMAPeriodElapsedHalfCplt
 963 0110 00000000 		.word	TIM_DMAError
 964 0114 002C0140 		.word	1073818624
ARM GAS  /tmp//ccJMd58S.s 			page 28


 965 0118 00340140 		.word	1073820672
 966 011c 00040040 		.word	1073742848
 967 0120 00080040 		.word	1073743872
 968 0124 000C0040 		.word	1073744896
 969              		.cfi_endproc
 970              	.LFE73:
 972              		.section	.text.HAL_TIM_Base_Stop_DMA,"ax",%progbits
 973              		.align	1
 974              		.global	HAL_TIM_Base_Stop_DMA
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 979              	HAL_TIM_Base_Stop_DMA:
 980              	.LFB74:
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in DMA mode.
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_DMA(TIM_HandleTypeDef *htim)
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 981              		.loc 1 596 1
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 8
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985 0000 80B5     		push	{r7, lr}
 986              	.LCFI51:
 987              		.cfi_def_cfa_offset 8
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 0002 82B0     		sub	sp, sp, #8
 991              	.LCFI52:
 992              		.cfi_def_cfa_offset 16
 993 0004 00AF     		add	r7, sp, #0
 994              	.LCFI53:
 995              		.cfi_def_cfa_register 7
 996 0006 7860     		str	r0, [r7, #4]
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance));
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Update DMA request */
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_UPDATE);
 997              		.loc 1 601 3
 998 0008 7B68     		ldr	r3, [r7, #4]
 999 000a 1B68     		ldr	r3, [r3]
 1000 000c DA68     		ldr	r2, [r3, #12]
 1001 000e 7B68     		ldr	r3, [r7, #4]
 1002 0010 1B68     		ldr	r3, [r3]
 1003 0012 22F48072 		bic	r2, r2, #256
 1004 0016 DA60     		str	r2, [r3, #12]
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_UPDATE]);
 1005              		.loc 1 603 9
 1006 0018 7B68     		ldr	r3, [r7, #4]
 1007 001a 1B6A     		ldr	r3, [r3, #32]
 1008 001c 1846     		mov	r0, r3
ARM GAS  /tmp//ccJMd58S.s 			page 29


 1009 001e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1010              		.loc 1 606 3
 1011 0022 7B68     		ldr	r3, [r7, #4]
 1012 0024 1B68     		ldr	r3, [r3]
 1013 0026 1A6A     		ldr	r2, [r3, #32]
 1014 0028 41F21113 		movw	r3, #4369
 1015 002c 1340     		ands	r3, r3, r2
 1016 002e 002B     		cmp	r3, #0
 1017 0030 0FD1     		bne	.L50
 1018              		.loc 1 606 3 is_stmt 0 discriminator 1
 1019 0032 7B68     		ldr	r3, [r7, #4]
 1020 0034 1B68     		ldr	r3, [r3]
 1021 0036 1A6A     		ldr	r2, [r3, #32]
 1022 0038 40F24443 		movw	r3, #1092
 1023 003c 1340     		ands	r3, r3, r2
 1024 003e 002B     		cmp	r3, #0
 1025 0040 07D1     		bne	.L50
 1026              		.loc 1 606 3 discriminator 2
 1027 0042 7B68     		ldr	r3, [r7, #4]
 1028 0044 1B68     		ldr	r3, [r3]
 1029 0046 1A68     		ldr	r2, [r3]
 1030 0048 7B68     		ldr	r3, [r7, #4]
 1031 004a 1B68     		ldr	r3, [r3]
 1032 004c 22F00102 		bic	r2, r2, #1
 1033 0050 1A60     		str	r2, [r3]
 1034              	.L50:
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 1035              		.loc 1 609 15 is_stmt 1
 1036 0052 7B68     		ldr	r3, [r7, #4]
 1037 0054 0122     		movs	r2, #1
 1038 0056 83F83D20 		strb	r2, [r3, #61]
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 1039              		.loc 1 612 10
 1040 005a 0023     		movs	r3, #0
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 1041              		.loc 1 613 1
 1042 005c 1846     		mov	r0, r3
 1043 005e 0837     		adds	r7, r7, #8
 1044              	.LCFI54:
 1045              		.cfi_def_cfa_offset 8
 1046 0060 BD46     		mov	sp, r7
 1047              	.LCFI55:
 1048              		.cfi_def_cfa_register 13
 1049              		@ sp needed
 1050 0062 80BD     		pop	{r7, pc}
 1051              		.cfi_endproc
 1052              	.LFE74:
 1054              		.section	.text.HAL_TIM_OC_Init,"ax",%progbits
 1055              		.align	1
 1056              		.global	HAL_TIM_OC_Init
ARM GAS  /tmp//ccJMd58S.s 			page 30


 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1061              	HAL_TIM_OC_Init:
 1062              	.LFB75:
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group2 TIM Output Compare functions
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Output Compare functions
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                   ##### TIM Output Compare functions #####
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM Output Compare.
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM Output Compare.
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Output Compare.
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Output Compare.
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Output Compare and enable interrupt.
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Output Compare and disable interrupt.
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Output Compare and enable DMA transfer.
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Output Compare and disable DMA transfer.
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare according to the specified
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_OC_DeInit() before HAL_TIM_OC_Init()
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Init(TIM_HandleTypeDef *htim)
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 1063              		.loc 1 651 1
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067 0000 80B5     		push	{r7, lr}
 1068              	.LCFI56:
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 82B0     		sub	sp, sp, #8
 1073              	.LCFI57:
 1074              		.cfi_def_cfa_offset 16
 1075 0004 00AF     		add	r7, sp, #0
 1076              	.LCFI58:
ARM GAS  /tmp//ccJMd58S.s 			page 31


 1077              		.cfi_def_cfa_register 7
 1078 0006 7860     		str	r0, [r7, #4]
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
 1079              		.loc 1 653 6
 1080 0008 7B68     		ldr	r3, [r7, #4]
 1081 000a 002B     		cmp	r3, #0
 1082 000c 01D1     		bne	.L53
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 1083              		.loc 1 655 12
 1084 000e 0123     		movs	r3, #1
 1085 0010 41E0     		b	.L54
 1086              	.L53:
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim->Init.Period));
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
 1087              		.loc 1 665 11
 1088 0012 7B68     		ldr	r3, [r7, #4]
 1089 0014 93F83D30 		ldrb	r3, [r3, #61]
 1090 0018 DBB2     		uxtb	r3, r3
 1091              		.loc 1 665 6
 1092 001a 002B     		cmp	r3, #0
 1093 001c 06D1     		bne	.L55
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 1094              		.loc 1 668 16
 1095 001e 7B68     		ldr	r3, [r7, #4]
 1096 0020 0022     		movs	r2, #0
 1097 0022 83F83C20 		strb	r2, [r3, #60]
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (htim->OC_MspInitCallback == NULL)
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->OC_MspInitCallback = HAL_TIM_OC_MspInit;
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->OC_MspInitCallback(htim);
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     HAL_TIM_OC_MspInit(htim);
 1098              		.loc 1 682 5
 1099 0026 7868     		ldr	r0, [r7, #4]
 1100 0028 FFF7FEFF 		bl	HAL_TIM_OC_MspInit
 1101              	.L55:
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
ARM GAS  /tmp//ccJMd58S.s 			page 32


 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 1102              		.loc 1 687 15
 1103 002c 7B68     		ldr	r3, [r7, #4]
 1104 002e 0222     		movs	r2, #2
 1105 0030 83F83D20 		strb	r2, [r3, #61]
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Init the base time for the Output Compare */
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 1106              		.loc 1 690 3
 1107 0034 7B68     		ldr	r3, [r7, #4]
 1108 0036 1A68     		ldr	r2, [r3]
 1109              		.loc 1 690 39
 1110 0038 7B68     		ldr	r3, [r7, #4]
 1111 003a 0433     		adds	r3, r3, #4
 1112              		.loc 1 690 3
 1113 003c 1946     		mov	r1, r3
 1114 003e 1046     		mov	r0, r2
 1115 0040 FFF7FEFF 		bl	TIM_Base_SetConfig
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 1116              		.loc 1 693 23
 1117 0044 7B68     		ldr	r3, [r7, #4]
 1118 0046 0122     		movs	r2, #1
 1119 0048 83F84620 		strb	r2, [r3, #70]
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM channels state */
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 1120              		.loc 1 696 3
 1121 004c 7B68     		ldr	r3, [r7, #4]
 1122 004e 0122     		movs	r2, #1
 1123 0050 83F83E20 		strb	r2, [r3, #62]
 1124 0054 7B68     		ldr	r3, [r7, #4]
 1125 0056 0122     		movs	r2, #1
 1126 0058 83F83F20 		strb	r2, [r3, #63]
 1127 005c 7B68     		ldr	r3, [r7, #4]
 1128 005e 0122     		movs	r2, #1
 1129 0060 83F84020 		strb	r2, [r3, #64]
 1130 0064 7B68     		ldr	r3, [r7, #4]
 1131 0066 0122     		movs	r2, #1
 1132 0068 83F84120 		strb	r2, [r3, #65]
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 1133              		.loc 1 697 3
 1134 006c 7B68     		ldr	r3, [r7, #4]
 1135 006e 0122     		movs	r2, #1
 1136 0070 83F84220 		strb	r2, [r3, #66]
 1137 0074 7B68     		ldr	r3, [r7, #4]
 1138 0076 0122     		movs	r2, #1
 1139 0078 83F84320 		strb	r2, [r3, #67]
 1140 007c 7B68     		ldr	r3, [r7, #4]
 1141 007e 0122     		movs	r2, #1
 1142 0080 83F84420 		strb	r2, [r3, #68]
 1143 0084 7B68     		ldr	r3, [r7, #4]
 1144 0086 0122     		movs	r2, #1
ARM GAS  /tmp//ccJMd58S.s 			page 33


 1145 0088 83F84520 		strb	r2, [r3, #69]
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 1146              		.loc 1 700 15
 1147 008c 7B68     		ldr	r3, [r7, #4]
 1148 008e 0122     		movs	r2, #1
 1149 0090 83F83D20 		strb	r2, [r3, #61]
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 1150              		.loc 1 702 10
 1151 0094 0023     		movs	r3, #0
 1152              	.L54:
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 1153              		.loc 1 703 1
 1154 0096 1846     		mov	r0, r3
 1155 0098 0837     		adds	r7, r7, #8
 1156              	.LCFI59:
 1157              		.cfi_def_cfa_offset 8
 1158 009a BD46     		mov	sp, r7
 1159              	.LCFI60:
 1160              		.cfi_def_cfa_register 13
 1161              		@ sp needed
 1162 009c 80BD     		pop	{r7, pc}
 1163              		.cfi_endproc
 1164              	.LFE75:
 1166              		.section	.text.HAL_TIM_OC_DeInit,"ax",%progbits
 1167              		.align	1
 1168              		.global	HAL_TIM_OC_DeInit
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1173              	HAL_TIM_OC_DeInit:
 1174              	.LFB76:
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_DeInit(TIM_HandleTypeDef *htim)
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 1175              		.loc 1 711 1
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 8
 1178              		@ frame_needed = 1, uses_anonymous_args = 0
 1179 0000 80B5     		push	{r7, lr}
 1180              	.LCFI61:
 1181              		.cfi_def_cfa_offset 8
 1182              		.cfi_offset 7, -8
 1183              		.cfi_offset 14, -4
 1184 0002 82B0     		sub	sp, sp, #8
 1185              	.LCFI62:
 1186              		.cfi_def_cfa_offset 16
 1187 0004 00AF     		add	r7, sp, #0
 1188              	.LCFI63:
 1189              		.cfi_def_cfa_register 7
ARM GAS  /tmp//ccJMd58S.s 			page 34


 1190 0006 7860     		str	r0, [r7, #4]
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 1191              		.loc 1 715 15
 1192 0008 7B68     		ldr	r3, [r7, #4]
 1193 000a 0222     		movs	r2, #2
 1194 000c 83F83D20 		strb	r2, [r3, #61]
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1195              		.loc 1 718 3
 1196 0010 7B68     		ldr	r3, [r7, #4]
 1197 0012 1B68     		ldr	r3, [r3]
 1198 0014 1A6A     		ldr	r2, [r3, #32]
 1199 0016 41F21113 		movw	r3, #4369
 1200 001a 1340     		ands	r3, r3, r2
 1201 001c 002B     		cmp	r3, #0
 1202 001e 0FD1     		bne	.L57
 1203              		.loc 1 718 3 is_stmt 0 discriminator 1
 1204 0020 7B68     		ldr	r3, [r7, #4]
 1205 0022 1B68     		ldr	r3, [r3]
 1206 0024 1A6A     		ldr	r2, [r3, #32]
 1207 0026 40F24443 		movw	r3, #1092
 1208 002a 1340     		ands	r3, r3, r2
 1209 002c 002B     		cmp	r3, #0
 1210 002e 07D1     		bne	.L57
 1211              		.loc 1 718 3 discriminator 2
 1212 0030 7B68     		ldr	r3, [r7, #4]
 1213 0032 1B68     		ldr	r3, [r3]
 1214 0034 1A68     		ldr	r2, [r3]
 1215 0036 7B68     		ldr	r3, [r7, #4]
 1216 0038 1B68     		ldr	r3, [r3]
 1217 003a 22F00102 		bic	r2, r2, #1
 1218 003e 1A60     		str	r2, [r3]
 1219              	.L57:
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->OC_MspDeInitCallback == NULL)
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->OC_MspDeInitCallback = HAL_TIM_OC_MspDeInit;
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->OC_MspDeInitCallback(htim);
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_OC_MspDeInit(htim);
 1220              		.loc 1 729 3 is_stmt 1
 1221 0040 7868     		ldr	r0, [r7, #4]
 1222 0042 FFF7FEFF 		bl	HAL_TIM_OC_MspDeInit
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the DMA burst operation state */
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
 1223              		.loc 1 733 23
 1224 0046 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 35


 1225 0048 0022     		movs	r2, #0
 1226 004a 83F84620 		strb	r2, [r3, #70]
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the TIM channels state */
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 1227              		.loc 1 736 3
 1228 004e 7B68     		ldr	r3, [r7, #4]
 1229 0050 0022     		movs	r2, #0
 1230 0052 83F83E20 		strb	r2, [r3, #62]
 1231 0056 7B68     		ldr	r3, [r7, #4]
 1232 0058 0022     		movs	r2, #0
 1233 005a 83F83F20 		strb	r2, [r3, #63]
 1234 005e 7B68     		ldr	r3, [r7, #4]
 1235 0060 0022     		movs	r2, #0
 1236 0062 83F84020 		strb	r2, [r3, #64]
 1237 0066 7B68     		ldr	r3, [r7, #4]
 1238 0068 0022     		movs	r2, #0
 1239 006a 83F84120 		strb	r2, [r3, #65]
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 1240              		.loc 1 737 3
 1241 006e 7B68     		ldr	r3, [r7, #4]
 1242 0070 0022     		movs	r2, #0
 1243 0072 83F84220 		strb	r2, [r3, #66]
 1244 0076 7B68     		ldr	r3, [r7, #4]
 1245 0078 0022     		movs	r2, #0
 1246 007a 83F84320 		strb	r2, [r3, #67]
 1247 007e 7B68     		ldr	r3, [r7, #4]
 1248 0080 0022     		movs	r2, #0
 1249 0082 83F84420 		strb	r2, [r3, #68]
 1250 0086 7B68     		ldr	r3, [r7, #4]
 1251 0088 0022     		movs	r2, #0
 1252 008a 83F84520 		strb	r2, [r3, #69]
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 1253              		.loc 1 740 15
 1254 008e 7B68     		ldr	r3, [r7, #4]
 1255 0090 0022     		movs	r2, #0
 1256 0092 83F83D20 		strb	r2, [r3, #61]
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Release Lock */
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 1257              		.loc 1 743 3
 1258 0096 7B68     		ldr	r3, [r7, #4]
 1259 0098 0022     		movs	r2, #0
 1260 009a 83F83C20 		strb	r2, [r3, #60]
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 1261              		.loc 1 745 10
 1262 009e 0023     		movs	r3, #0
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 1263              		.loc 1 746 1
 1264 00a0 1846     		mov	r0, r3
 1265 00a2 0837     		adds	r7, r7, #8
 1266              	.LCFI64:
 1267              		.cfi_def_cfa_offset 8
 1268 00a4 BD46     		mov	sp, r7
ARM GAS  /tmp//ccJMd58S.s 			page 36


 1269              	.LCFI65:
 1270              		.cfi_def_cfa_register 13
 1271              		@ sp needed
 1272 00a6 80BD     		pop	{r7, pc}
 1273              		.cfi_endproc
 1274              	.LFE76:
 1276              		.section	.text.HAL_TIM_OC_MspInit,"ax",%progbits
 1277              		.align	1
 1278              		.weak	HAL_TIM_OC_MspInit
 1279              		.syntax unified
 1280              		.thumb
 1281              		.thumb_func
 1283              	HAL_TIM_OC_MspInit:
 1284              	.LFB77:
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare MSP.
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OC_MspInit(TIM_HandleTypeDef *htim)
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 1285              		.loc 1 754 1
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 8
 1288              		@ frame_needed = 1, uses_anonymous_args = 0
 1289              		@ link register save eliminated.
 1290 0000 80B4     		push	{r7}
 1291              	.LCFI66:
 1292              		.cfi_def_cfa_offset 4
 1293              		.cfi_offset 7, -4
 1294 0002 83B0     		sub	sp, sp, #12
 1295              	.LCFI67:
 1296              		.cfi_def_cfa_offset 16
 1297 0004 00AF     		add	r7, sp, #0
 1298              	.LCFI68:
 1299              		.cfi_def_cfa_register 7
 1300 0006 7860     		str	r0, [r7, #4]
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OC_MspInit could be implemented in the user file
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 1301              		.loc 1 761 1
 1302 0008 00BF     		nop
 1303 000a 0C37     		adds	r7, r7, #12
 1304              	.LCFI69:
 1305              		.cfi_def_cfa_offset 4
 1306 000c BD46     		mov	sp, r7
 1307              	.LCFI70:
 1308              		.cfi_def_cfa_register 13
 1309              		@ sp needed
 1310 000e 80BC     		pop	{r7}
 1311              	.LCFI71:
 1312              		.cfi_restore 7
ARM GAS  /tmp//ccJMd58S.s 			page 37


 1313              		.cfi_def_cfa_offset 0
 1314 0010 7047     		bx	lr
 1315              		.cfi_endproc
 1316              	.LFE77:
 1318              		.section	.text.HAL_TIM_OC_MspDeInit,"ax",%progbits
 1319              		.align	1
 1320              		.weak	HAL_TIM_OC_MspDeInit
 1321              		.syntax unified
 1322              		.thumb
 1323              		.thumb_func
 1325              	HAL_TIM_OC_MspDeInit:
 1326              	.LFB78:
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM Output Compare MSP.
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OC_MspDeInit(TIM_HandleTypeDef *htim)
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 1327              		.loc 1 769 1
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 8
 1330              		@ frame_needed = 1, uses_anonymous_args = 0
 1331              		@ link register save eliminated.
 1332 0000 80B4     		push	{r7}
 1333              	.LCFI72:
 1334              		.cfi_def_cfa_offset 4
 1335              		.cfi_offset 7, -4
 1336 0002 83B0     		sub	sp, sp, #12
 1337              	.LCFI73:
 1338              		.cfi_def_cfa_offset 16
 1339 0004 00AF     		add	r7, sp, #0
 1340              	.LCFI74:
 1341              		.cfi_def_cfa_register 7
 1342 0006 7860     		str	r0, [r7, #4]
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OC_MspDeInit could be implemented in the user file
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 1343              		.loc 1 776 1
 1344 0008 00BF     		nop
 1345 000a 0C37     		adds	r7, r7, #12
 1346              	.LCFI75:
 1347              		.cfi_def_cfa_offset 4
 1348 000c BD46     		mov	sp, r7
 1349              	.LCFI76:
 1350              		.cfi_def_cfa_register 13
 1351              		@ sp needed
 1352 000e 80BC     		pop	{r7}
 1353              	.LCFI77:
 1354              		.cfi_restore 7
 1355              		.cfi_def_cfa_offset 0
 1356 0010 7047     		bx	lr
ARM GAS  /tmp//ccJMd58S.s 			page 38


 1357              		.cfi_endproc
 1358              	.LFE78:
 1360              		.section	.text.HAL_TIM_OC_Start,"ax",%progbits
 1361              		.align	1
 1362              		.global	HAL_TIM_OC_Start
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1367              	HAL_TIM_OC_Start:
 1368              	.LFB79:
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation.
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 1369              		.loc 1 790 1
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 16
 1372              		@ frame_needed = 1, uses_anonymous_args = 0
 1373 0000 80B5     		push	{r7, lr}
 1374              	.LCFI78:
 1375              		.cfi_def_cfa_offset 8
 1376              		.cfi_offset 7, -8
 1377              		.cfi_offset 14, -4
 1378 0002 84B0     		sub	sp, sp, #16
 1379              	.LCFI79:
 1380              		.cfi_def_cfa_offset 24
 1381 0004 00AF     		add	r7, sp, #0
 1382              	.LCFI80:
 1383              		.cfi_def_cfa_register 7
 1384 0006 7860     		str	r0, [r7, #4]
 1385 0008 3960     		str	r1, [r7]
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM channel state */
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 1386              		.loc 1 797 44
 1387 000a 3B68     		ldr	r3, [r7]
 1388 000c 002B     		cmp	r3, #0
 1389 000e 09D1     		bne	.L62
 1390              		.loc 1 797 7 discriminator 1
 1391 0010 7B68     		ldr	r3, [r7, #4]
 1392 0012 93F83E30 		ldrb	r3, [r3, #62]
 1393 0016 DBB2     		uxtb	r3, r3
 1394              		.loc 1 797 44 discriminator 1
ARM GAS  /tmp//ccJMd58S.s 			page 39


 1395 0018 012B     		cmp	r3, #1
 1396 001a 14BF     		ite	ne
 1397 001c 0123     		movne	r3, #1
 1398 001e 0023     		moveq	r3, #0
 1399 0020 DBB2     		uxtb	r3, r3
 1400 0022 22E0     		b	.L63
 1401              	.L62:
 1402              		.loc 1 797 44 is_stmt 0 discriminator 2
 1403 0024 3B68     		ldr	r3, [r7]
 1404 0026 042B     		cmp	r3, #4
 1405 0028 09D1     		bne	.L64
 1406              		.loc 1 797 7 is_stmt 1 discriminator 4
 1407 002a 7B68     		ldr	r3, [r7, #4]
 1408 002c 93F83F30 		ldrb	r3, [r3, #63]
 1409 0030 DBB2     		uxtb	r3, r3
 1410              		.loc 1 797 44 discriminator 4
 1411 0032 012B     		cmp	r3, #1
 1412 0034 14BF     		ite	ne
 1413 0036 0123     		movne	r3, #1
 1414 0038 0023     		moveq	r3, #0
 1415 003a DBB2     		uxtb	r3, r3
 1416 003c 15E0     		b	.L63
 1417              	.L64:
 1418              		.loc 1 797 44 is_stmt 0 discriminator 5
 1419 003e 3B68     		ldr	r3, [r7]
 1420 0040 082B     		cmp	r3, #8
 1421 0042 09D1     		bne	.L66
 1422              		.loc 1 797 7 is_stmt 1 discriminator 7
 1423 0044 7B68     		ldr	r3, [r7, #4]
 1424 0046 93F84030 		ldrb	r3, [r3, #64]
 1425 004a DBB2     		uxtb	r3, r3
 1426              		.loc 1 797 44 discriminator 7
 1427 004c 012B     		cmp	r3, #1
 1428 004e 14BF     		ite	ne
 1429 0050 0123     		movne	r3, #1
 1430 0052 0023     		moveq	r3, #0
 1431 0054 DBB2     		uxtb	r3, r3
 1432 0056 08E0     		b	.L63
 1433              	.L66:
 1434              		.loc 1 797 7 discriminator 8
 1435 0058 7B68     		ldr	r3, [r7, #4]
 1436 005a 93F84130 		ldrb	r3, [r3, #65]
 1437 005e DBB2     		uxtb	r3, r3
 1438              		.loc 1 797 44 discriminator 8
 1439 0060 012B     		cmp	r3, #1
 1440 0062 14BF     		ite	ne
 1441 0064 0123     		movne	r3, #1
 1442 0066 0023     		moveq	r3, #0
 1443 0068 DBB2     		uxtb	r3, r3
 1444              	.L63:
 1445              		.loc 1 797 6 discriminator 12
 1446 006a 002B     		cmp	r3, #0
 1447 006c 01D0     		beq	.L68
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 1448              		.loc 1 799 12
 1449 006e 0123     		movs	r3, #1
ARM GAS  /tmp//ccJMd58S.s 			page 40


 1450 0070 72E0     		b	.L69
 1451              	.L68:
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 1452              		.loc 1 803 3
 1453 0072 3B68     		ldr	r3, [r7]
 1454 0074 002B     		cmp	r3, #0
 1455 0076 04D1     		bne	.L70
 1456              		.loc 1 803 3 is_stmt 0 discriminator 1
 1457 0078 7B68     		ldr	r3, [r7, #4]
 1458 007a 0222     		movs	r2, #2
 1459 007c 83F83E20 		strb	r2, [r3, #62]
 1460 0080 13E0     		b	.L71
 1461              	.L70:
 1462              		.loc 1 803 3 discriminator 2
 1463 0082 3B68     		ldr	r3, [r7]
 1464 0084 042B     		cmp	r3, #4
 1465 0086 04D1     		bne	.L72
 1466              		.loc 1 803 3 discriminator 3
 1467 0088 7B68     		ldr	r3, [r7, #4]
 1468 008a 0222     		movs	r2, #2
 1469 008c 83F83F20 		strb	r2, [r3, #63]
 1470 0090 0BE0     		b	.L71
 1471              	.L72:
 1472              		.loc 1 803 3 discriminator 4
 1473 0092 3B68     		ldr	r3, [r7]
 1474 0094 082B     		cmp	r3, #8
 1475 0096 04D1     		bne	.L74
 1476              		.loc 1 803 3 discriminator 6
 1477 0098 7B68     		ldr	r3, [r7, #4]
 1478 009a 0222     		movs	r2, #2
 1479 009c 83F84020 		strb	r2, [r3, #64]
 1480 00a0 03E0     		b	.L71
 1481              	.L74:
 1482              		.loc 1 803 3 discriminator 7
 1483 00a2 7B68     		ldr	r3, [r7, #4]
 1484 00a4 0222     		movs	r2, #2
 1485 00a6 83F84120 		strb	r2, [r3, #65]
 1486              	.L71:
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Output compare channel */
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 1487              		.loc 1 806 3 is_stmt 1
 1488 00aa 7B68     		ldr	r3, [r7, #4]
 1489 00ac 1B68     		ldr	r3, [r3]
 1490 00ae 0122     		movs	r2, #1
 1491 00b0 3968     		ldr	r1, [r7]
 1492 00b2 1846     		mov	r0, r3
 1493 00b4 FFF7FEFF 		bl	TIM_CCxChannelCmd
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 1494              		.loc 1 808 7
 1495 00b8 7B68     		ldr	r3, [r7, #4]
 1496 00ba 1B68     		ldr	r3, [r3]
 1497 00bc 284A     		ldr	r2, .L84
ARM GAS  /tmp//ccJMd58S.s 			page 41


 1498 00be 9342     		cmp	r3, r2
 1499 00c0 04D0     		beq	.L76
 1500              		.loc 1 808 7 is_stmt 0 discriminator 2
 1501 00c2 7B68     		ldr	r3, [r7, #4]
 1502 00c4 1B68     		ldr	r3, [r3]
 1503 00c6 274A     		ldr	r2, .L84+4
 1504 00c8 9342     		cmp	r3, r2
 1505 00ca 01D1     		bne	.L77
 1506              	.L76:
 1507              		.loc 1 808 7 discriminator 3
 1508 00cc 0123     		movs	r3, #1
 1509              		.loc 1 808 7
 1510 00ce 00E0     		b	.L78
 1511              	.L77:
 1512              		.loc 1 808 7 discriminator 4
 1513 00d0 0023     		movs	r3, #0
 1514              	.L78:
 1515              		.loc 1 808 6 is_stmt 1 discriminator 6
 1516 00d2 002B     		cmp	r3, #0
 1517 00d4 07D0     		beq	.L79
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 1518              		.loc 1 811 5
 1519 00d6 7B68     		ldr	r3, [r7, #4]
 1520 00d8 1B68     		ldr	r3, [r3]
 1521 00da 5A6C     		ldr	r2, [r3, #68]
 1522 00dc 7B68     		ldr	r3, [r7, #4]
 1523 00de 1B68     		ldr	r3, [r3]
 1524 00e0 42F40042 		orr	r2, r2, #32768
 1525 00e4 5A64     		str	r2, [r3, #68]
 1526              	.L79:
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 1527              		.loc 1 815 7
 1528 00e6 7B68     		ldr	r3, [r7, #4]
 1529 00e8 1B68     		ldr	r3, [r3]
 1530              		.loc 1 815 6
 1531 00ea 1D4A     		ldr	r2, .L84
 1532 00ec 9342     		cmp	r3, r2
 1533 00ee 18D0     		beq	.L80
 1534              		.loc 1 815 7 discriminator 1
 1535 00f0 7B68     		ldr	r3, [r7, #4]
 1536 00f2 1B68     		ldr	r3, [r3]
 1537 00f4 1B4A     		ldr	r2, .L84+4
 1538 00f6 9342     		cmp	r3, r2
 1539 00f8 13D0     		beq	.L80
 1540              		.loc 1 815 7 is_stmt 0 discriminator 2
 1541 00fa 7B68     		ldr	r3, [r7, #4]
 1542 00fc 1B68     		ldr	r3, [r3]
 1543 00fe B3F1804F 		cmp	r3, #1073741824
 1544 0102 0ED0     		beq	.L80
 1545              		.loc 1 815 7 discriminator 3
 1546 0104 7B68     		ldr	r3, [r7, #4]
 1547 0106 1B68     		ldr	r3, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 42


 1548 0108 174A     		ldr	r2, .L84+8
 1549 010a 9342     		cmp	r3, r2
 1550 010c 09D0     		beq	.L80
 1551              		.loc 1 815 7 discriminator 4
 1552 010e 7B68     		ldr	r3, [r7, #4]
 1553 0110 1B68     		ldr	r3, [r3]
 1554 0112 164A     		ldr	r2, .L84+12
 1555 0114 9342     		cmp	r3, r2
 1556 0116 04D0     		beq	.L80
 1557              		.loc 1 815 7 discriminator 5
 1558 0118 7B68     		ldr	r3, [r7, #4]
 1559 011a 1B68     		ldr	r3, [r3]
 1560 011c 144A     		ldr	r2, .L84+16
 1561 011e 9342     		cmp	r3, r2
 1562 0120 11D1     		bne	.L81
 1563              	.L80:
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 1564              		.loc 1 817 19 is_stmt 1
 1565 0122 7B68     		ldr	r3, [r7, #4]
 1566 0124 1B68     		ldr	r3, [r3]
 1567              		.loc 1 817 29
 1568 0126 9B68     		ldr	r3, [r3, #8]
 1569              		.loc 1 817 13
 1570 0128 03F00703 		and	r3, r3, #7
 1571 012c FB60     		str	r3, [r7, #12]
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1572              		.loc 1 818 8
 1573 012e FB68     		ldr	r3, [r7, #12]
 1574 0130 062B     		cmp	r3, #6
 1575 0132 10D0     		beq	.L83
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 1576              		.loc 1 820 7
 1577 0134 7B68     		ldr	r3, [r7, #4]
 1578 0136 1B68     		ldr	r3, [r3]
 1579 0138 1A68     		ldr	r2, [r3]
 1580 013a 7B68     		ldr	r3, [r7, #4]
 1581 013c 1B68     		ldr	r3, [r3]
 1582 013e 42F00102 		orr	r2, r2, #1
 1583 0142 1A60     		str	r2, [r3]
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 1584              		.loc 1 818 8
 1585 0144 07E0     		b	.L83
 1586              	.L81:
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 1587              		.loc 1 825 5
 1588 0146 7B68     		ldr	r3, [r7, #4]
 1589 0148 1B68     		ldr	r3, [r3]
 1590 014a 1A68     		ldr	r2, [r3]
 1591 014c 7B68     		ldr	r3, [r7, #4]
 1592 014e 1B68     		ldr	r3, [r3]
 1593 0150 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp//ccJMd58S.s 			page 43


 1594 0154 1A60     		str	r2, [r3]
 1595              	.L83:
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 1596              		.loc 1 829 10
 1597 0156 0023     		movs	r3, #0
 1598              	.L69:
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 1599              		.loc 1 830 1
 1600 0158 1846     		mov	r0, r3
 1601 015a 1037     		adds	r7, r7, #16
 1602              	.LCFI81:
 1603              		.cfi_def_cfa_offset 8
 1604 015c BD46     		mov	sp, r7
 1605              	.LCFI82:
 1606              		.cfi_def_cfa_register 13
 1607              		@ sp needed
 1608 015e 80BD     		pop	{r7, pc}
 1609              	.L85:
 1610              		.align	2
 1611              	.L84:
 1612 0160 002C0140 		.word	1073818624
 1613 0164 00340140 		.word	1073820672
 1614 0168 00040040 		.word	1073742848
 1615 016c 00080040 		.word	1073743872
 1616 0170 000C0040 		.word	1073744896
 1617              		.cfi_endproc
 1618              	.LFE79:
 1620              		.section	.text.HAL_TIM_OC_Stop,"ax",%progbits
 1621              		.align	1
 1622              		.global	HAL_TIM_OC_Stop
 1623              		.syntax unified
 1624              		.thumb
 1625              		.thumb_func
 1627              	HAL_TIM_OC_Stop:
 1628              	.LFB80:
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation.
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be disabled
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 1629              		.loc 1 844 1
 1630              		.cfi_startproc
 1631              		@ args = 0, pretend = 0, frame = 8
 1632              		@ frame_needed = 1, uses_anonymous_args = 0
 1633 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp//ccJMd58S.s 			page 44


 1634              	.LCFI83:
 1635              		.cfi_def_cfa_offset 8
 1636              		.cfi_offset 7, -8
 1637              		.cfi_offset 14, -4
 1638 0002 82B0     		sub	sp, sp, #8
 1639              	.LCFI84:
 1640              		.cfi_def_cfa_offset 16
 1641 0004 00AF     		add	r7, sp, #0
 1642              	.LCFI85:
 1643              		.cfi_def_cfa_register 7
 1644 0006 7860     		str	r0, [r7, #4]
 1645 0008 3960     		str	r1, [r7]
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Output compare channel */
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 1646              		.loc 1 849 3
 1647 000a 7B68     		ldr	r3, [r7, #4]
 1648 000c 1B68     		ldr	r3, [r3]
 1649 000e 0022     		movs	r2, #0
 1650 0010 3968     		ldr	r1, [r7]
 1651 0012 1846     		mov	r0, r3
 1652 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 1653              		.loc 1 851 7
 1654 0018 7B68     		ldr	r3, [r7, #4]
 1655 001a 1B68     		ldr	r3, [r3]
 1656 001c 2E4A     		ldr	r2, .L99
 1657 001e 9342     		cmp	r3, r2
 1658 0020 04D0     		beq	.L87
 1659              		.loc 1 851 7 is_stmt 0 discriminator 2
 1660 0022 7B68     		ldr	r3, [r7, #4]
 1661 0024 1B68     		ldr	r3, [r3]
 1662 0026 2D4A     		ldr	r2, .L99+4
 1663 0028 9342     		cmp	r3, r2
 1664 002a 01D1     		bne	.L88
 1665              	.L87:
 1666              		.loc 1 851 7 discriminator 3
 1667 002c 0123     		movs	r3, #1
 1668              		.loc 1 851 7
 1669 002e 00E0     		b	.L89
 1670              	.L88:
 1671              		.loc 1 851 7 discriminator 4
 1672 0030 0023     		movs	r3, #0
 1673              	.L89:
 1674              		.loc 1 851 6 is_stmt 1 discriminator 6
 1675 0032 002B     		cmp	r3, #0
 1676 0034 17D0     		beq	.L90
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 1677              		.loc 1 854 5
 1678 0036 7B68     		ldr	r3, [r7, #4]
 1679 0038 1B68     		ldr	r3, [r3]
 1680 003a 1A6A     		ldr	r2, [r3, #32]
ARM GAS  /tmp//ccJMd58S.s 			page 45


 1681 003c 41F21113 		movw	r3, #4369
 1682 0040 1340     		ands	r3, r3, r2
 1683 0042 002B     		cmp	r3, #0
 1684 0044 0FD1     		bne	.L90
 1685              		.loc 1 854 5 is_stmt 0 discriminator 1
 1686 0046 7B68     		ldr	r3, [r7, #4]
 1687 0048 1B68     		ldr	r3, [r3]
 1688 004a 1A6A     		ldr	r2, [r3, #32]
 1689 004c 40F24443 		movw	r3, #1092
 1690 0050 1340     		ands	r3, r3, r2
 1691 0052 002B     		cmp	r3, #0
 1692 0054 07D1     		bne	.L90
 1693              		.loc 1 854 5 discriminator 2
 1694 0056 7B68     		ldr	r3, [r7, #4]
 1695 0058 1B68     		ldr	r3, [r3]
 1696 005a 5A6C     		ldr	r2, [r3, #68]
 1697 005c 7B68     		ldr	r3, [r7, #4]
 1698 005e 1B68     		ldr	r3, [r3]
 1699 0060 22F40042 		bic	r2, r2, #32768
 1700 0064 5A64     		str	r2, [r3, #68]
 1701              	.L90:
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1702              		.loc 1 858 3 is_stmt 1
 1703 0066 7B68     		ldr	r3, [r7, #4]
 1704 0068 1B68     		ldr	r3, [r3]
 1705 006a 1A6A     		ldr	r2, [r3, #32]
 1706 006c 41F21113 		movw	r3, #4369
 1707 0070 1340     		ands	r3, r3, r2
 1708 0072 002B     		cmp	r3, #0
 1709 0074 0FD1     		bne	.L91
 1710              		.loc 1 858 3 is_stmt 0 discriminator 1
 1711 0076 7B68     		ldr	r3, [r7, #4]
 1712 0078 1B68     		ldr	r3, [r3]
 1713 007a 1A6A     		ldr	r2, [r3, #32]
 1714 007c 40F24443 		movw	r3, #1092
 1715 0080 1340     		ands	r3, r3, r2
 1716 0082 002B     		cmp	r3, #0
 1717 0084 07D1     		bne	.L91
 1718              		.loc 1 858 3 discriminator 2
 1719 0086 7B68     		ldr	r3, [r7, #4]
 1720 0088 1B68     		ldr	r3, [r3]
 1721 008a 1A68     		ldr	r2, [r3]
 1722 008c 7B68     		ldr	r3, [r7, #4]
 1723 008e 1B68     		ldr	r3, [r3]
 1724 0090 22F00102 		bic	r2, r2, #1
 1725 0094 1A60     		str	r2, [r3]
 1726              	.L91:
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 1727              		.loc 1 861 3 is_stmt 1
 1728 0096 3B68     		ldr	r3, [r7]
 1729 0098 002B     		cmp	r3, #0
 1730 009a 04D1     		bne	.L92
ARM GAS  /tmp//ccJMd58S.s 			page 46


 1731              		.loc 1 861 3 is_stmt 0 discriminator 1
 1732 009c 7B68     		ldr	r3, [r7, #4]
 1733 009e 0122     		movs	r2, #1
 1734 00a0 83F83E20 		strb	r2, [r3, #62]
 1735 00a4 13E0     		b	.L93
 1736              	.L92:
 1737              		.loc 1 861 3 discriminator 2
 1738 00a6 3B68     		ldr	r3, [r7]
 1739 00a8 042B     		cmp	r3, #4
 1740 00aa 04D1     		bne	.L94
 1741              		.loc 1 861 3 discriminator 3
 1742 00ac 7B68     		ldr	r3, [r7, #4]
 1743 00ae 0122     		movs	r2, #1
 1744 00b0 83F83F20 		strb	r2, [r3, #63]
 1745 00b4 0BE0     		b	.L93
 1746              	.L94:
 1747              		.loc 1 861 3 discriminator 4
 1748 00b6 3B68     		ldr	r3, [r7]
 1749 00b8 082B     		cmp	r3, #8
 1750 00ba 04D1     		bne	.L96
 1751              		.loc 1 861 3 discriminator 6
 1752 00bc 7B68     		ldr	r3, [r7, #4]
 1753 00be 0122     		movs	r2, #1
 1754 00c0 83F84020 		strb	r2, [r3, #64]
 1755 00c4 03E0     		b	.L93
 1756              	.L96:
 1757              		.loc 1 861 3 discriminator 7
 1758 00c6 7B68     		ldr	r3, [r7, #4]
 1759 00c8 0122     		movs	r2, #1
 1760 00ca 83F84120 		strb	r2, [r3, #65]
 1761              	.L93:
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 1762              		.loc 1 864 10 is_stmt 1
 1763 00ce 0023     		movs	r3, #0
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 1764              		.loc 1 865 1
 1765 00d0 1846     		mov	r0, r3
 1766 00d2 0837     		adds	r7, r7, #8
 1767              	.LCFI86:
 1768              		.cfi_def_cfa_offset 8
 1769 00d4 BD46     		mov	sp, r7
 1770              	.LCFI87:
 1771              		.cfi_def_cfa_register 13
 1772              		@ sp needed
 1773 00d6 80BD     		pop	{r7, pc}
 1774              	.L100:
 1775              		.align	2
 1776              	.L99:
 1777 00d8 002C0140 		.word	1073818624
 1778 00dc 00340140 		.word	1073820672
 1779              		.cfi_endproc
 1780              	.LFE80:
 1782              		.section	.text.HAL_TIM_OC_Start_IT,"ax",%progbits
 1783              		.align	1
 1784              		.global	HAL_TIM_OC_Start_IT
ARM GAS  /tmp//ccJMd58S.s 			page 47


 1785              		.syntax unified
 1786              		.thumb
 1787              		.thumb_func
 1789              	HAL_TIM_OC_Start_IT:
 1790              	.LFB81:
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in interrupt mode.
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 1791              		.loc 1 879 1
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 16
 1794              		@ frame_needed = 1, uses_anonymous_args = 0
 1795 0000 80B5     		push	{r7, lr}
 1796              	.LCFI88:
 1797              		.cfi_def_cfa_offset 8
 1798              		.cfi_offset 7, -8
 1799              		.cfi_offset 14, -4
 1800 0002 84B0     		sub	sp, sp, #16
 1801              	.LCFI89:
 1802              		.cfi_def_cfa_offset 24
 1803 0004 00AF     		add	r7, sp, #0
 1804              	.LCFI90:
 1805              		.cfi_def_cfa_register 7
 1806 0006 7860     		str	r0, [r7, #4]
 1807 0008 3960     		str	r1, [r7]
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 1808              		.loc 1 880 21
 1809 000a 0023     		movs	r3, #0
 1810 000c FB73     		strb	r3, [r7, #15]
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM channel state */
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 1811              		.loc 1 887 44
 1812 000e 3B68     		ldr	r3, [r7]
 1813 0010 002B     		cmp	r3, #0
 1814 0012 09D1     		bne	.L102
 1815              		.loc 1 887 7 discriminator 1
 1816 0014 7B68     		ldr	r3, [r7, #4]
 1817 0016 93F83E30 		ldrb	r3, [r3, #62]
 1818 001a DBB2     		uxtb	r3, r3
 1819              		.loc 1 887 44 discriminator 1
 1820 001c 012B     		cmp	r3, #1
ARM GAS  /tmp//ccJMd58S.s 			page 48


 1821 001e 14BF     		ite	ne
 1822 0020 0123     		movne	r3, #1
 1823 0022 0023     		moveq	r3, #0
 1824 0024 DBB2     		uxtb	r3, r3
 1825 0026 22E0     		b	.L103
 1826              	.L102:
 1827              		.loc 1 887 44 is_stmt 0 discriminator 2
 1828 0028 3B68     		ldr	r3, [r7]
 1829 002a 042B     		cmp	r3, #4
 1830 002c 09D1     		bne	.L104
 1831              		.loc 1 887 7 is_stmt 1 discriminator 4
 1832 002e 7B68     		ldr	r3, [r7, #4]
 1833 0030 93F83F30 		ldrb	r3, [r3, #63]
 1834 0034 DBB2     		uxtb	r3, r3
 1835              		.loc 1 887 44 discriminator 4
 1836 0036 012B     		cmp	r3, #1
 1837 0038 14BF     		ite	ne
 1838 003a 0123     		movne	r3, #1
 1839 003c 0023     		moveq	r3, #0
 1840 003e DBB2     		uxtb	r3, r3
 1841 0040 15E0     		b	.L103
 1842              	.L104:
 1843              		.loc 1 887 44 is_stmt 0 discriminator 5
 1844 0042 3B68     		ldr	r3, [r7]
 1845 0044 082B     		cmp	r3, #8
 1846 0046 09D1     		bne	.L106
 1847              		.loc 1 887 7 is_stmt 1 discriminator 7
 1848 0048 7B68     		ldr	r3, [r7, #4]
 1849 004a 93F84030 		ldrb	r3, [r3, #64]
 1850 004e DBB2     		uxtb	r3, r3
 1851              		.loc 1 887 44 discriminator 7
 1852 0050 012B     		cmp	r3, #1
 1853 0052 14BF     		ite	ne
 1854 0054 0123     		movne	r3, #1
 1855 0056 0023     		moveq	r3, #0
 1856 0058 DBB2     		uxtb	r3, r3
 1857 005a 08E0     		b	.L103
 1858              	.L106:
 1859              		.loc 1 887 7 discriminator 8
 1860 005c 7B68     		ldr	r3, [r7, #4]
 1861 005e 93F84130 		ldrb	r3, [r3, #65]
 1862 0062 DBB2     		uxtb	r3, r3
 1863              		.loc 1 887 44 discriminator 8
 1864 0064 012B     		cmp	r3, #1
 1865 0066 14BF     		ite	ne
 1866 0068 0123     		movne	r3, #1
 1867 006a 0023     		moveq	r3, #0
 1868 006c DBB2     		uxtb	r3, r3
 1869              	.L103:
 1870              		.loc 1 887 6 discriminator 12
 1871 006e 002B     		cmp	r3, #0
 1872 0070 01D0     		beq	.L108
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 1873              		.loc 1 889 12
 1874 0072 0123     		movs	r3, #1
 1875 0074 BDE0     		b	.L109
ARM GAS  /tmp//ccJMd58S.s 			page 49


 1876              	.L108:
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 1877              		.loc 1 893 3
 1878 0076 3B68     		ldr	r3, [r7]
 1879 0078 002B     		cmp	r3, #0
 1880 007a 04D1     		bne	.L110
 1881              		.loc 1 893 3 is_stmt 0 discriminator 1
 1882 007c 7B68     		ldr	r3, [r7, #4]
 1883 007e 0222     		movs	r2, #2
 1884 0080 83F83E20 		strb	r2, [r3, #62]
 1885 0084 13E0     		b	.L111
 1886              	.L110:
 1887              		.loc 1 893 3 discriminator 2
 1888 0086 3B68     		ldr	r3, [r7]
 1889 0088 042B     		cmp	r3, #4
 1890 008a 04D1     		bne	.L112
 1891              		.loc 1 893 3 discriminator 3
 1892 008c 7B68     		ldr	r3, [r7, #4]
 1893 008e 0222     		movs	r2, #2
 1894 0090 83F83F20 		strb	r2, [r3, #63]
 1895 0094 0BE0     		b	.L111
 1896              	.L112:
 1897              		.loc 1 893 3 discriminator 4
 1898 0096 3B68     		ldr	r3, [r7]
 1899 0098 082B     		cmp	r3, #8
 1900 009a 04D1     		bne	.L114
 1901              		.loc 1 893 3 discriminator 6
 1902 009c 7B68     		ldr	r3, [r7, #4]
 1903 009e 0222     		movs	r2, #2
 1904 00a0 83F84020 		strb	r2, [r3, #64]
 1905 00a4 03E0     		b	.L111
 1906              	.L114:
 1907              		.loc 1 893 3 discriminator 7
 1908 00a6 7B68     		ldr	r3, [r7, #4]
 1909 00a8 0222     		movs	r2, #2
 1910 00aa 83F84120 		strb	r2, [r3, #65]
 1911              	.L111:
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 1912              		.loc 1 895 3 is_stmt 1
 1913 00ae 3B68     		ldr	r3, [r7]
 1914 00b0 0C2B     		cmp	r3, #12
 1915 00b2 41D8     		bhi	.L116
 1916 00b4 01A2     		adr	r2, .L118
 1917 00b6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1918 00ba 00BF     		.p2align 2
 1919              	.L118:
 1920 00bc F1000000 		.word	.L121+1
 1921 00c0 39010000 		.word	.L116+1
 1922 00c4 39010000 		.word	.L116+1
 1923 00c8 39010000 		.word	.L116+1
 1924 00cc 03010000 		.word	.L120+1
 1925 00d0 39010000 		.word	.L116+1
 1926 00d4 39010000 		.word	.L116+1
ARM GAS  /tmp//ccJMd58S.s 			page 50


 1927 00d8 39010000 		.word	.L116+1
 1928 00dc 15010000 		.word	.L119+1
 1929 00e0 39010000 		.word	.L116+1
 1930 00e4 39010000 		.word	.L116+1
 1931 00e8 39010000 		.word	.L116+1
 1932 00ec 27010000 		.word	.L117+1
 1933              		.p2align 1
 1934              	.L121:
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 1935              		.loc 1 900 7
 1936 00f0 7B68     		ldr	r3, [r7, #4]
 1937 00f2 1B68     		ldr	r3, [r3]
 1938 00f4 DA68     		ldr	r2, [r3, #12]
 1939 00f6 7B68     		ldr	r3, [r7, #4]
 1940 00f8 1B68     		ldr	r3, [r3]
 1941 00fa 42F00202 		orr	r2, r2, #2
 1942 00fe DA60     		str	r2, [r3, #12]
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 1943              		.loc 1 901 7
 1944 0100 1DE0     		b	.L122
 1945              	.L120:
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 1946              		.loc 1 907 7
 1947 0102 7B68     		ldr	r3, [r7, #4]
 1948 0104 1B68     		ldr	r3, [r3]
 1949 0106 DA68     		ldr	r2, [r3, #12]
 1950 0108 7B68     		ldr	r3, [r7, #4]
 1951 010a 1B68     		ldr	r3, [r3]
 1952 010c 42F00402 		orr	r2, r2, #4
 1953 0110 DA60     		str	r2, [r3, #12]
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 1954              		.loc 1 908 7
 1955 0112 14E0     		b	.L122
 1956              	.L119:
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 1957              		.loc 1 914 7
 1958 0114 7B68     		ldr	r3, [r7, #4]
 1959 0116 1B68     		ldr	r3, [r3]
 1960 0118 DA68     		ldr	r2, [r3, #12]
 1961 011a 7B68     		ldr	r3, [r7, #4]
 1962 011c 1B68     		ldr	r3, [r3]
 1963 011e 42F00802 		orr	r2, r2, #8
 1964 0122 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 51


 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 1965              		.loc 1 915 7
 1966 0124 0BE0     		b	.L122
 1967              	.L117:
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 1968              		.loc 1 921 7
 1969 0126 7B68     		ldr	r3, [r7, #4]
 1970 0128 1B68     		ldr	r3, [r3]
 1971 012a DA68     		ldr	r2, [r3, #12]
 1972 012c 7B68     		ldr	r3, [r7, #4]
 1973 012e 1B68     		ldr	r3, [r3]
 1974 0130 42F01002 		orr	r2, r2, #16
 1975 0134 DA60     		str	r2, [r3, #12]
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 1976              		.loc 1 922 7
 1977 0136 02E0     		b	.L122
 1978              	.L116:
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 1979              		.loc 1 926 14
 1980 0138 0123     		movs	r3, #1
 1981 013a FB73     		strb	r3, [r7, #15]
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 1982              		.loc 1 927 7
 1983 013c 00BF     		nop
 1984              	.L122:
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 1985              		.loc 1 930 6
 1986 013e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1987 0140 002B     		cmp	r3, #0
 1988 0142 55D1     		bne	.L123
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Output compare channel */
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 1989              		.loc 1 933 5
 1990 0144 7B68     		ldr	r3, [r7, #4]
 1991 0146 1B68     		ldr	r3, [r3]
 1992 0148 0122     		movs	r2, #1
 1993 014a 3968     		ldr	r1, [r7]
 1994 014c 1846     		mov	r0, r3
 1995 014e FFF7FEFF 		bl	TIM_CCxChannelCmd
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 1996              		.loc 1 935 9
 1997 0152 7B68     		ldr	r3, [r7, #4]
 1998 0154 1B68     		ldr	r3, [r3]
 1999 0156 294A     		ldr	r2, .L131
 2000 0158 9342     		cmp	r3, r2
ARM GAS  /tmp//ccJMd58S.s 			page 52


 2001 015a 04D0     		beq	.L124
 2002              		.loc 1 935 9 is_stmt 0 discriminator 2
 2003 015c 7B68     		ldr	r3, [r7, #4]
 2004 015e 1B68     		ldr	r3, [r3]
 2005 0160 274A     		ldr	r2, .L131+4
 2006 0162 9342     		cmp	r3, r2
 2007 0164 01D1     		bne	.L125
 2008              	.L124:
 2009              		.loc 1 935 9 discriminator 3
 2010 0166 0123     		movs	r3, #1
 2011              		.loc 1 935 9
 2012 0168 00E0     		b	.L126
 2013              	.L125:
 2014              		.loc 1 935 9 discriminator 4
 2015 016a 0023     		movs	r3, #0
 2016              	.L126:
 2017              		.loc 1 935 8 is_stmt 1 discriminator 6
 2018 016c 002B     		cmp	r3, #0
 2019 016e 07D0     		beq	.L127
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the main output */
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_MOE_ENABLE(htim);
 2020              		.loc 1 938 7
 2021 0170 7B68     		ldr	r3, [r7, #4]
 2022 0172 1B68     		ldr	r3, [r3]
 2023 0174 5A6C     		ldr	r2, [r3, #68]
 2024 0176 7B68     		ldr	r3, [r7, #4]
 2025 0178 1B68     		ldr	r3, [r3]
 2026 017a 42F40042 		orr	r2, r2, #32768
 2027 017e 5A64     		str	r2, [r3, #68]
 2028              	.L127:
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 2029              		.loc 1 942 9
 2030 0180 7B68     		ldr	r3, [r7, #4]
 2031 0182 1B68     		ldr	r3, [r3]
 2032              		.loc 1 942 8
 2033 0184 1D4A     		ldr	r2, .L131
 2034 0186 9342     		cmp	r3, r2
 2035 0188 18D0     		beq	.L128
 2036              		.loc 1 942 9 discriminator 1
 2037 018a 7B68     		ldr	r3, [r7, #4]
 2038 018c 1B68     		ldr	r3, [r3]
 2039 018e 1C4A     		ldr	r2, .L131+4
 2040 0190 9342     		cmp	r3, r2
 2041 0192 13D0     		beq	.L128
 2042              		.loc 1 942 9 is_stmt 0 discriminator 2
 2043 0194 7B68     		ldr	r3, [r7, #4]
 2044 0196 1B68     		ldr	r3, [r3]
 2045 0198 B3F1804F 		cmp	r3, #1073741824
 2046 019c 0ED0     		beq	.L128
 2047              		.loc 1 942 9 discriminator 3
 2048 019e 7B68     		ldr	r3, [r7, #4]
 2049 01a0 1B68     		ldr	r3, [r3]
 2050 01a2 184A     		ldr	r2, .L131+8
ARM GAS  /tmp//ccJMd58S.s 			page 53


 2051 01a4 9342     		cmp	r3, r2
 2052 01a6 09D0     		beq	.L128
 2053              		.loc 1 942 9 discriminator 4
 2054 01a8 7B68     		ldr	r3, [r7, #4]
 2055 01aa 1B68     		ldr	r3, [r3]
 2056 01ac 164A     		ldr	r2, .L131+12
 2057 01ae 9342     		cmp	r3, r2
 2058 01b0 04D0     		beq	.L128
 2059              		.loc 1 942 9 discriminator 5
 2060 01b2 7B68     		ldr	r3, [r7, #4]
 2061 01b4 1B68     		ldr	r3, [r3]
 2062 01b6 154A     		ldr	r2, .L131+16
 2063 01b8 9342     		cmp	r3, r2
 2064 01ba 11D1     		bne	.L129
 2065              	.L128:
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 2066              		.loc 1 944 21 is_stmt 1
 2067 01bc 7B68     		ldr	r3, [r7, #4]
 2068 01be 1B68     		ldr	r3, [r3]
 2069              		.loc 1 944 31
 2070 01c0 9B68     		ldr	r3, [r3, #8]
 2071              		.loc 1 944 15
 2072 01c2 03F00703 		and	r3, r3, #7
 2073 01c6 BB60     		str	r3, [r7, #8]
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 2074              		.loc 1 945 10
 2075 01c8 BB68     		ldr	r3, [r7, #8]
 2076 01ca 062B     		cmp	r3, #6
 2077 01cc 10D0     		beq	.L123
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
 2078              		.loc 1 947 9
 2079 01ce 7B68     		ldr	r3, [r7, #4]
 2080 01d0 1B68     		ldr	r3, [r3]
 2081 01d2 1A68     		ldr	r2, [r3]
 2082 01d4 7B68     		ldr	r3, [r7, #4]
 2083 01d6 1B68     		ldr	r3, [r3]
 2084 01d8 42F00102 		orr	r2, r2, #1
 2085 01dc 1A60     		str	r2, [r3]
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 2086              		.loc 1 945 10
 2087 01de 07E0     		b	.L123
 2088              	.L129:
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 2089              		.loc 1 952 7
 2090 01e0 7B68     		ldr	r3, [r7, #4]
 2091 01e2 1B68     		ldr	r3, [r3]
 2092 01e4 1A68     		ldr	r2, [r3]
 2093 01e6 7B68     		ldr	r3, [r7, #4]
 2094 01e8 1B68     		ldr	r3, [r3]
 2095 01ea 42F00102 		orr	r2, r2, #1
 2096 01ee 1A60     		str	r2, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 54


 2097              	.L123:
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 2098              		.loc 1 957 10
 2099 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2100              	.L109:
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 2101              		.loc 1 958 1
 2102 01f2 1846     		mov	r0, r3
 2103 01f4 1037     		adds	r7, r7, #16
 2104              	.LCFI91:
 2105              		.cfi_def_cfa_offset 8
 2106 01f6 BD46     		mov	sp, r7
 2107              	.LCFI92:
 2108              		.cfi_def_cfa_register 13
 2109              		@ sp needed
 2110 01f8 80BD     		pop	{r7, pc}
 2111              	.L132:
 2112 01fa 00BF     		.align	2
 2113              	.L131:
 2114 01fc 002C0140 		.word	1073818624
 2115 0200 00340140 		.word	1073820672
 2116 0204 00040040 		.word	1073742848
 2117 0208 00080040 		.word	1073743872
 2118 020c 000C0040 		.word	1073744896
 2119              		.cfi_endproc
 2120              	.LFE81:
 2122              		.section	.text.HAL_TIM_OC_Stop_IT,"ax",%progbits
 2123              		.align	1
 2124              		.global	HAL_TIM_OC_Stop_IT
 2125              		.syntax unified
 2126              		.thumb
 2127              		.thumb_func
 2129              	HAL_TIM_OC_Stop_IT:
 2130              	.LFB82:
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in interrupt mode.
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be disabled
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 2131              		.loc 1 972 1
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 16
 2134              		@ frame_needed = 1, uses_anonymous_args = 0
 2135 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp//ccJMd58S.s 			page 55


 2136              	.LCFI93:
 2137              		.cfi_def_cfa_offset 8
 2138              		.cfi_offset 7, -8
 2139              		.cfi_offset 14, -4
 2140 0002 84B0     		sub	sp, sp, #16
 2141              	.LCFI94:
 2142              		.cfi_def_cfa_offset 24
 2143 0004 00AF     		add	r7, sp, #0
 2144              	.LCFI95:
 2145              		.cfi_def_cfa_register 7
 2146 0006 7860     		str	r0, [r7, #4]
 2147 0008 3960     		str	r1, [r7]
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 2148              		.loc 1 973 21
 2149 000a 0023     		movs	r3, #0
 2150 000c FB73     		strb	r3, [r7, #15]
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 2151              		.loc 1 978 3
 2152 000e 3B68     		ldr	r3, [r7]
 2153 0010 0C2B     		cmp	r3, #12
 2154 0012 41D8     		bhi	.L134
 2155 0014 01A2     		adr	r2, .L136
 2156 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2157 001a 00BF     		.p2align 2
 2158              	.L136:
 2159 001c 51000000 		.word	.L139+1
 2160 0020 99000000 		.word	.L134+1
 2161 0024 99000000 		.word	.L134+1
 2162 0028 99000000 		.word	.L134+1
 2163 002c 63000000 		.word	.L138+1
 2164 0030 99000000 		.word	.L134+1
 2165 0034 99000000 		.word	.L134+1
 2166 0038 99000000 		.word	.L134+1
 2167 003c 75000000 		.word	.L137+1
 2168 0040 99000000 		.word	.L134+1
 2169 0044 99000000 		.word	.L134+1
 2170 0048 99000000 		.word	.L134+1
 2171 004c 87000000 		.word	.L135+1
 2172              		.p2align 1
 2173              	.L139:
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 2174              		.loc 1 983 7
 2175 0050 7B68     		ldr	r3, [r7, #4]
 2176 0052 1B68     		ldr	r3, [r3]
 2177 0054 DA68     		ldr	r2, [r3, #12]
 2178 0056 7B68     		ldr	r3, [r7, #4]
 2179 0058 1B68     		ldr	r3, [r3]
 2180 005a 22F00202 		bic	r2, r2, #2
 2181 005e DA60     		str	r2, [r3, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 56


 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2182              		.loc 1 984 7
 2183 0060 1DE0     		b	.L140
 2184              	.L138:
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 2185              		.loc 1 990 7
 2186 0062 7B68     		ldr	r3, [r7, #4]
 2187 0064 1B68     		ldr	r3, [r3]
 2188 0066 DA68     		ldr	r2, [r3, #12]
 2189 0068 7B68     		ldr	r3, [r7, #4]
 2190 006a 1B68     		ldr	r3, [r3]
 2191 006c 22F00402 		bic	r2, r2, #4
 2192 0070 DA60     		str	r2, [r3, #12]
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2193              		.loc 1 991 7
 2194 0072 14E0     		b	.L140
 2195              	.L137:
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 2196              		.loc 1 997 7
 2197 0074 7B68     		ldr	r3, [r7, #4]
 2198 0076 1B68     		ldr	r3, [r3]
 2199 0078 DA68     		ldr	r2, [r3, #12]
 2200 007a 7B68     		ldr	r3, [r7, #4]
 2201 007c 1B68     		ldr	r3, [r3]
 2202 007e 22F00802 		bic	r2, r2, #8
 2203 0082 DA60     		str	r2, [r3, #12]
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2204              		.loc 1 998 7
 2205 0084 0BE0     		b	.L140
 2206              	.L135:
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 2207              		.loc 1 1004 7
 2208 0086 7B68     		ldr	r3, [r7, #4]
 2209 0088 1B68     		ldr	r3, [r3]
 2210 008a DA68     		ldr	r2, [r3, #12]
 2211 008c 7B68     		ldr	r3, [r7, #4]
 2212 008e 1B68     		ldr	r3, [r3]
 2213 0090 22F01002 		bic	r2, r2, #16
 2214 0094 DA60     		str	r2, [r3, #12]
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2215              		.loc 1 1005 7
 2216 0096 02E0     		b	.L140
ARM GAS  /tmp//ccJMd58S.s 			page 57


 2217              	.L134:
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 2218              		.loc 1 1009 14
 2219 0098 0123     		movs	r3, #1
 2220 009a FB73     		strb	r3, [r7, #15]
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2221              		.loc 1 1010 7
 2222 009c 00BF     		nop
 2223              	.L140:
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 2224              		.loc 1 1013 6
 2225 009e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2226 00a0 002B     		cmp	r3, #0
 2227 00a2 61D1     		bne	.L141
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Output compare channel */
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 2228              		.loc 1 1016 5
 2229 00a4 7B68     		ldr	r3, [r7, #4]
 2230 00a6 1B68     		ldr	r3, [r3]
 2231 00a8 0022     		movs	r2, #0
 2232 00aa 3968     		ldr	r1, [r7]
 2233 00ac 1846     		mov	r0, r3
 2234 00ae FFF7FEFF 		bl	TIM_CCxChannelCmd
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 2235              		.loc 1 1018 9
 2236 00b2 7B68     		ldr	r3, [r7, #4]
 2237 00b4 1B68     		ldr	r3, [r3]
 2238 00b6 2F4A     		ldr	r2, .L153
 2239 00b8 9342     		cmp	r3, r2
 2240 00ba 04D0     		beq	.L142
 2241              		.loc 1 1018 9 is_stmt 0 discriminator 2
 2242 00bc 7B68     		ldr	r3, [r7, #4]
 2243 00be 1B68     		ldr	r3, [r3]
 2244 00c0 2D4A     		ldr	r2, .L153+4
 2245 00c2 9342     		cmp	r3, r2
 2246 00c4 01D1     		bne	.L143
 2247              	.L142:
 2248              		.loc 1 1018 9 discriminator 3
 2249 00c6 0123     		movs	r3, #1
 2250              		.loc 1 1018 9
 2251 00c8 00E0     		b	.L144
 2252              	.L143:
 2253              		.loc 1 1018 9 discriminator 4
 2254 00ca 0023     		movs	r3, #0
 2255              	.L144:
 2256              		.loc 1 1018 8 is_stmt 1 discriminator 6
 2257 00cc 002B     		cmp	r3, #0
 2258 00ce 17D0     		beq	.L145
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the Main Output */
ARM GAS  /tmp//ccJMd58S.s 			page 58


1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_MOE_DISABLE(htim);
 2259              		.loc 1 1021 7
 2260 00d0 7B68     		ldr	r3, [r7, #4]
 2261 00d2 1B68     		ldr	r3, [r3]
 2262 00d4 1A6A     		ldr	r2, [r3, #32]
 2263 00d6 41F21113 		movw	r3, #4369
 2264 00da 1340     		ands	r3, r3, r2
 2265 00dc 002B     		cmp	r3, #0
 2266 00de 0FD1     		bne	.L145
 2267              		.loc 1 1021 7 is_stmt 0 discriminator 1
 2268 00e0 7B68     		ldr	r3, [r7, #4]
 2269 00e2 1B68     		ldr	r3, [r3]
 2270 00e4 1A6A     		ldr	r2, [r3, #32]
 2271 00e6 40F24443 		movw	r3, #1092
 2272 00ea 1340     		ands	r3, r3, r2
 2273 00ec 002B     		cmp	r3, #0
 2274 00ee 07D1     		bne	.L145
 2275              		.loc 1 1021 7 discriminator 2
 2276 00f0 7B68     		ldr	r3, [r7, #4]
 2277 00f2 1B68     		ldr	r3, [r3]
 2278 00f4 5A6C     		ldr	r2, [r3, #68]
 2279 00f6 7B68     		ldr	r3, [r7, #4]
 2280 00f8 1B68     		ldr	r3, [r3]
 2281 00fa 22F40042 		bic	r2, r2, #32768
 2282 00fe 5A64     		str	r2, [r3, #68]
 2283              	.L145:
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Peripheral */
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
 2284              		.loc 1 1025 5 is_stmt 1
 2285 0100 7B68     		ldr	r3, [r7, #4]
 2286 0102 1B68     		ldr	r3, [r3]
 2287 0104 1A6A     		ldr	r2, [r3, #32]
 2288 0106 41F21113 		movw	r3, #4369
 2289 010a 1340     		ands	r3, r3, r2
 2290 010c 002B     		cmp	r3, #0
 2291 010e 0FD1     		bne	.L146
 2292              		.loc 1 1025 5 is_stmt 0 discriminator 1
 2293 0110 7B68     		ldr	r3, [r7, #4]
 2294 0112 1B68     		ldr	r3, [r3]
 2295 0114 1A6A     		ldr	r2, [r3, #32]
 2296 0116 40F24443 		movw	r3, #1092
 2297 011a 1340     		ands	r3, r3, r2
 2298 011c 002B     		cmp	r3, #0
 2299 011e 07D1     		bne	.L146
 2300              		.loc 1 1025 5 discriminator 2
 2301 0120 7B68     		ldr	r3, [r7, #4]
 2302 0122 1B68     		ldr	r3, [r3]
 2303 0124 1A68     		ldr	r2, [r3]
 2304 0126 7B68     		ldr	r3, [r7, #4]
 2305 0128 1B68     		ldr	r3, [r3]
 2306 012a 22F00102 		bic	r2, r2, #1
 2307 012e 1A60     		str	r2, [r3]
 2308              	.L146:
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the TIM channel state */
ARM GAS  /tmp//ccJMd58S.s 			page 59


1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 2309              		.loc 1 1028 5 is_stmt 1
 2310 0130 3B68     		ldr	r3, [r7]
 2311 0132 002B     		cmp	r3, #0
 2312 0134 04D1     		bne	.L147
 2313              		.loc 1 1028 5 is_stmt 0 discriminator 1
 2314 0136 7B68     		ldr	r3, [r7, #4]
 2315 0138 0122     		movs	r2, #1
 2316 013a 83F83E20 		strb	r2, [r3, #62]
 2317 013e 13E0     		b	.L141
 2318              	.L147:
 2319              		.loc 1 1028 5 discriminator 2
 2320 0140 3B68     		ldr	r3, [r7]
 2321 0142 042B     		cmp	r3, #4
 2322 0144 04D1     		bne	.L148
 2323              		.loc 1 1028 5 discriminator 3
 2324 0146 7B68     		ldr	r3, [r7, #4]
 2325 0148 0122     		movs	r2, #1
 2326 014a 83F83F20 		strb	r2, [r3, #63]
 2327 014e 0BE0     		b	.L141
 2328              	.L148:
 2329              		.loc 1 1028 5 discriminator 4
 2330 0150 3B68     		ldr	r3, [r7]
 2331 0152 082B     		cmp	r3, #8
 2332 0154 04D1     		bne	.L150
 2333              		.loc 1 1028 5 discriminator 6
 2334 0156 7B68     		ldr	r3, [r7, #4]
 2335 0158 0122     		movs	r2, #1
 2336 015a 83F84020 		strb	r2, [r3, #64]
 2337 015e 03E0     		b	.L141
 2338              	.L150:
 2339              		.loc 1 1028 5 discriminator 7
 2340 0160 7B68     		ldr	r3, [r7, #4]
 2341 0162 0122     		movs	r2, #1
 2342 0164 83F84120 		strb	r2, [r3, #65]
 2343              	.L141:
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 2344              		.loc 1 1032 10 is_stmt 1
 2345 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 2346              		.loc 1 1033 1
 2347 016a 1846     		mov	r0, r3
 2348 016c 1037     		adds	r7, r7, #16
 2349              	.LCFI96:
 2350              		.cfi_def_cfa_offset 8
 2351 016e BD46     		mov	sp, r7
 2352              	.LCFI97:
 2353              		.cfi_def_cfa_register 13
 2354              		@ sp needed
 2355 0170 80BD     		pop	{r7, pc}
 2356              	.L154:
 2357 0172 00BF     		.align	2
 2358              	.L153:
 2359 0174 002C0140 		.word	1073818624
ARM GAS  /tmp//ccJMd58S.s 			page 60


 2360 0178 00340140 		.word	1073820672
 2361              		.cfi_endproc
 2362              	.LFE82:
 2364              		.section	.text.HAL_TIM_OC_Start_DMA,"ax",%progbits
 2365              		.align	1
 2366              		.global	HAL_TIM_OC_Start_DMA
 2367              		.syntax unified
 2368              		.thumb
 2369              		.thumb_func
 2371              	HAL_TIM_OC_Start_DMA:
 2372              	.LFB83:
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in DMA mode.
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  pData The source Buffer address.
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from memory to TIM peripheral
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, const uint32_t *p
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                        uint16_t Length)
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 2373              		.loc 1 1050 1
 2374              		.cfi_startproc
 2375              		@ args = 0, pretend = 0, frame = 24
 2376              		@ frame_needed = 1, uses_anonymous_args = 0
 2377 0000 80B5     		push	{r7, lr}
 2378              	.LCFI98:
 2379              		.cfi_def_cfa_offset 8
 2380              		.cfi_offset 7, -8
 2381              		.cfi_offset 14, -4
 2382 0002 86B0     		sub	sp, sp, #24
 2383              	.LCFI99:
 2384              		.cfi_def_cfa_offset 32
 2385 0004 00AF     		add	r7, sp, #0
 2386              	.LCFI100:
 2387              		.cfi_def_cfa_register 7
 2388 0006 F860     		str	r0, [r7, #12]
 2389 0008 B960     		str	r1, [r7, #8]
 2390 000a 7A60     		str	r2, [r7, #4]
 2391 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 2392              		.loc 1 1051 21
 2393 000e 0023     		movs	r3, #0
 2394 0010 FB75     		strb	r3, [r7, #23]
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
ARM GAS  /tmp//ccJMd58S.s 			page 61


1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_BUSY)
 2395              		.loc 1 1058 44
 2396 0012 BB68     		ldr	r3, [r7, #8]
 2397 0014 002B     		cmp	r3, #0
 2398 0016 09D1     		bne	.L156
 2399              		.loc 1 1058 7 discriminator 1
 2400 0018 FB68     		ldr	r3, [r7, #12]
 2401 001a 93F83E30 		ldrb	r3, [r3, #62]
 2402 001e DBB2     		uxtb	r3, r3
 2403              		.loc 1 1058 44 discriminator 1
 2404 0020 022B     		cmp	r3, #2
 2405 0022 0CBF     		ite	eq
 2406 0024 0123     		moveq	r3, #1
 2407 0026 0023     		movne	r3, #0
 2408 0028 DBB2     		uxtb	r3, r3
 2409 002a 22E0     		b	.L157
 2410              	.L156:
 2411              		.loc 1 1058 44 is_stmt 0 discriminator 2
 2412 002c BB68     		ldr	r3, [r7, #8]
 2413 002e 042B     		cmp	r3, #4
 2414 0030 09D1     		bne	.L158
 2415              		.loc 1 1058 7 is_stmt 1 discriminator 4
 2416 0032 FB68     		ldr	r3, [r7, #12]
 2417 0034 93F83F30 		ldrb	r3, [r3, #63]
 2418 0038 DBB2     		uxtb	r3, r3
 2419              		.loc 1 1058 44 discriminator 4
 2420 003a 022B     		cmp	r3, #2
 2421 003c 0CBF     		ite	eq
 2422 003e 0123     		moveq	r3, #1
 2423 0040 0023     		movne	r3, #0
 2424 0042 DBB2     		uxtb	r3, r3
 2425 0044 15E0     		b	.L157
 2426              	.L158:
 2427              		.loc 1 1058 44 is_stmt 0 discriminator 5
 2428 0046 BB68     		ldr	r3, [r7, #8]
 2429 0048 082B     		cmp	r3, #8
 2430 004a 09D1     		bne	.L160
 2431              		.loc 1 1058 7 is_stmt 1 discriminator 7
 2432 004c FB68     		ldr	r3, [r7, #12]
 2433 004e 93F84030 		ldrb	r3, [r3, #64]
 2434 0052 DBB2     		uxtb	r3, r3
 2435              		.loc 1 1058 44 discriminator 7
 2436 0054 022B     		cmp	r3, #2
 2437 0056 0CBF     		ite	eq
 2438 0058 0123     		moveq	r3, #1
 2439 005a 0023     		movne	r3, #0
 2440 005c DBB2     		uxtb	r3, r3
 2441 005e 08E0     		b	.L157
 2442              	.L160:
 2443              		.loc 1 1058 7 discriminator 8
 2444 0060 FB68     		ldr	r3, [r7, #12]
 2445 0062 93F84130 		ldrb	r3, [r3, #65]
 2446 0066 DBB2     		uxtb	r3, r3
 2447              		.loc 1 1058 44 discriminator 8
 2448 0068 022B     		cmp	r3, #2
 2449 006a 0CBF     		ite	eq
 2450 006c 0123     		moveq	r3, #1
ARM GAS  /tmp//ccJMd58S.s 			page 62


 2451 006e 0023     		movne	r3, #0
 2452 0070 DBB2     		uxtb	r3, r3
 2453              	.L157:
 2454              		.loc 1 1058 6 discriminator 12
 2455 0072 002B     		cmp	r3, #0
 2456 0074 01D0     		beq	.L162
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
 2457              		.loc 1 1060 12
 2458 0076 0223     		movs	r3, #2
 2459 0078 67E1     		b	.L163
 2460              	.L162:
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_READY)
 2461              		.loc 1 1062 49
 2462 007a BB68     		ldr	r3, [r7, #8]
 2463 007c 002B     		cmp	r3, #0
 2464 007e 09D1     		bne	.L164
 2465              		.loc 1 1062 12 discriminator 1
 2466 0080 FB68     		ldr	r3, [r7, #12]
 2467 0082 93F83E30 		ldrb	r3, [r3, #62]
 2468 0086 DBB2     		uxtb	r3, r3
 2469              		.loc 1 1062 49 discriminator 1
 2470 0088 012B     		cmp	r3, #1
 2471 008a 0CBF     		ite	eq
 2472 008c 0123     		moveq	r3, #1
 2473 008e 0023     		movne	r3, #0
 2474 0090 DBB2     		uxtb	r3, r3
 2475 0092 22E0     		b	.L165
 2476              	.L164:
 2477              		.loc 1 1062 49 is_stmt 0 discriminator 2
 2478 0094 BB68     		ldr	r3, [r7, #8]
 2479 0096 042B     		cmp	r3, #4
 2480 0098 09D1     		bne	.L166
 2481              		.loc 1 1062 12 is_stmt 1 discriminator 4
 2482 009a FB68     		ldr	r3, [r7, #12]
 2483 009c 93F83F30 		ldrb	r3, [r3, #63]
 2484 00a0 DBB2     		uxtb	r3, r3
 2485              		.loc 1 1062 49 discriminator 4
 2486 00a2 012B     		cmp	r3, #1
 2487 00a4 0CBF     		ite	eq
 2488 00a6 0123     		moveq	r3, #1
 2489 00a8 0023     		movne	r3, #0
 2490 00aa DBB2     		uxtb	r3, r3
 2491 00ac 15E0     		b	.L165
 2492              	.L166:
 2493              		.loc 1 1062 49 is_stmt 0 discriminator 5
 2494 00ae BB68     		ldr	r3, [r7, #8]
 2495 00b0 082B     		cmp	r3, #8
 2496 00b2 09D1     		bne	.L168
 2497              		.loc 1 1062 12 is_stmt 1 discriminator 7
 2498 00b4 FB68     		ldr	r3, [r7, #12]
 2499 00b6 93F84030 		ldrb	r3, [r3, #64]
 2500 00ba DBB2     		uxtb	r3, r3
 2501              		.loc 1 1062 49 discriminator 7
 2502 00bc 012B     		cmp	r3, #1
 2503 00be 0CBF     		ite	eq
ARM GAS  /tmp//ccJMd58S.s 			page 63


 2504 00c0 0123     		moveq	r3, #1
 2505 00c2 0023     		movne	r3, #0
 2506 00c4 DBB2     		uxtb	r3, r3
 2507 00c6 08E0     		b	.L165
 2508              	.L168:
 2509              		.loc 1 1062 12 discriminator 8
 2510 00c8 FB68     		ldr	r3, [r7, #12]
 2511 00ca 93F84130 		ldrb	r3, [r3, #65]
 2512 00ce DBB2     		uxtb	r3, r3
 2513              		.loc 1 1062 49 discriminator 8
 2514 00d0 012B     		cmp	r3, #1
 2515 00d2 0CBF     		ite	eq
 2516 00d4 0123     		moveq	r3, #1
 2517 00d6 0023     		movne	r3, #0
 2518 00d8 DBB2     		uxtb	r3, r3
 2519              	.L165:
 2520              		.loc 1 1062 11 discriminator 12
 2521 00da 002B     		cmp	r3, #0
 2522 00dc 24D0     		beq	.L170
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((pData == NULL) || (Length == 0U))
 2523              		.loc 1 1064 8
 2524 00de 7B68     		ldr	r3, [r7, #4]
 2525 00e0 002B     		cmp	r3, #0
 2526 00e2 02D0     		beq	.L171
 2527              		.loc 1 1064 25 discriminator 1
 2528 00e4 7B88     		ldrh	r3, [r7, #2]
 2529 00e6 002B     		cmp	r3, #0
 2530 00e8 01D1     		bne	.L172
 2531              	.L171:
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 2532              		.loc 1 1066 14
 2533 00ea 0123     		movs	r3, #1
 2534 00ec 2DE1     		b	.L163
 2535              	.L172:
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 2536              		.loc 1 1070 7
 2537 00ee BB68     		ldr	r3, [r7, #8]
 2538 00f0 002B     		cmp	r3, #0
 2539 00f2 04D1     		bne	.L173
 2540              		.loc 1 1070 7 is_stmt 0 discriminator 1
 2541 00f4 FB68     		ldr	r3, [r7, #12]
 2542 00f6 0222     		movs	r2, #2
 2543 00f8 83F83E20 		strb	r2, [r3, #62]
 2544 00fc 16E0     		b	.L174
 2545              	.L173:
 2546              		.loc 1 1070 7 discriminator 2
 2547 00fe BB68     		ldr	r3, [r7, #8]
 2548 0100 042B     		cmp	r3, #4
 2549 0102 04D1     		bne	.L175
 2550              		.loc 1 1070 7 discriminator 3
 2551 0104 FB68     		ldr	r3, [r7, #12]
 2552 0106 0222     		movs	r2, #2
ARM GAS  /tmp//ccJMd58S.s 			page 64


 2553 0108 83F83F20 		strb	r2, [r3, #63]
 2554              		.loc 1 1070 7 discriminator 10
 2555 010c 0EE0     		b	.L174
 2556              	.L175:
 2557              		.loc 1 1070 7 discriminator 4
 2558 010e BB68     		ldr	r3, [r7, #8]
 2559 0110 082B     		cmp	r3, #8
 2560 0112 04D1     		bne	.L177
 2561              		.loc 1 1070 7 discriminator 6
 2562 0114 FB68     		ldr	r3, [r7, #12]
 2563 0116 0222     		movs	r2, #2
 2564 0118 83F84020 		strb	r2, [r3, #64]
 2565              		.loc 1 1070 7 discriminator 10
 2566 011c 06E0     		b	.L174
 2567              	.L177:
 2568              		.loc 1 1070 7 discriminator 7
 2569 011e FB68     		ldr	r3, [r7, #12]
 2570 0120 0222     		movs	r2, #2
 2571 0122 83F84120 		strb	r2, [r3, #65]
 2572 0126 01E0     		b	.L174
 2573              	.L170:
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 2574              		.loc 1 1075 12 is_stmt 1
 2575 0128 0123     		movs	r3, #1
 2576 012a 0EE1     		b	.L163
 2577              	.L174:
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 2578              		.loc 1 1078 3
 2579 012c BB68     		ldr	r3, [r7, #8]
 2580 012e 0C2B     		cmp	r3, #12
 2581 0130 00F2AE80 		bhi	.L179
 2582 0134 01A2     		adr	r2, .L181
 2583 0136 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2584 013a 00BF     		.p2align 2
 2585              	.L181:
 2586 013c 71010000 		.word	.L184+1
 2587 0140 91020000 		.word	.L179+1
 2588 0144 91020000 		.word	.L179+1
 2589 0148 91020000 		.word	.L179+1
 2590 014c B9010000 		.word	.L183+1
 2591 0150 91020000 		.word	.L179+1
 2592 0154 91020000 		.word	.L179+1
 2593 0158 91020000 		.word	.L179+1
 2594 015c 01020000 		.word	.L182+1
 2595 0160 91020000 		.word	.L179+1
 2596 0164 91020000 		.word	.L179+1
 2597 0168 91020000 		.word	.L179+1
 2598 016c 49020000 		.word	.L180+1
 2599              		.p2align 1
 2600              	.L184:
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
ARM GAS  /tmp//ccJMd58S.s 			page 65


1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 2601              		.loc 1 1083 17
 2602 0170 FB68     		ldr	r3, [r7, #12]
 2603 0172 5B6A     		ldr	r3, [r3, #36]
 2604              		.loc 1 1083 52
 2605 0174 774A     		ldr	r2, .L198
 2606 0176 9A62     		str	r2, [r3, #40]
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 2607              		.loc 1 1084 17
 2608 0178 FB68     		ldr	r3, [r7, #12]
 2609 017a 5B6A     		ldr	r3, [r3, #36]
 2610              		.loc 1 1084 56
 2611 017c 764A     		ldr	r2, .L198+4
 2612 017e DA62     		str	r2, [r3, #44]
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 2613              		.loc 1 1087 17
 2614 0180 FB68     		ldr	r3, [r7, #12]
 2615 0182 5B6A     		ldr	r3, [r3, #36]
 2616              		.loc 1 1087 53
 2617 0184 754A     		ldr	r2, .L198+8
 2618 0186 1A63     		str	r2, [r3, #48]
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->
 2619              		.loc 1 1090 11
 2620 0188 FB68     		ldr	r3, [r7, #12]
 2621 018a 586A     		ldr	r0, [r3, #36]
 2622 018c 7968     		ldr	r1, [r7, #4]
 2623              		.loc 1 1090 88
 2624 018e FB68     		ldr	r3, [r7, #12]
 2625 0190 1B68     		ldr	r3, [r3]
 2626              		.loc 1 1090 83
 2627 0192 3433     		adds	r3, r3, #52
 2628              		.loc 1 1090 11
 2629 0194 1A46     		mov	r2, r3
 2630 0196 7B88     		ldrh	r3, [r7, #2]
 2631 0198 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2632 019c 0346     		mov	r3, r0
 2633              		.loc 1 1090 10 discriminator 1
 2634 019e 002B     		cmp	r3, #0
 2635 01a0 01D0     		beq	.L185
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 2636              		.loc 1 1094 16
 2637 01a2 0123     		movs	r3, #1
 2638 01a4 D1E0     		b	.L163
 2639              	.L185:
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
ARM GAS  /tmp//ccJMd58S.s 			page 66


1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 2640              		.loc 1 1098 7
 2641 01a6 FB68     		ldr	r3, [r7, #12]
 2642 01a8 1B68     		ldr	r3, [r3]
 2643 01aa DA68     		ldr	r2, [r3, #12]
 2644 01ac FB68     		ldr	r3, [r7, #12]
 2645 01ae 1B68     		ldr	r3, [r3]
 2646 01b0 42F40072 		orr	r2, r2, #512
 2647 01b4 DA60     		str	r2, [r3, #12]
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2648              		.loc 1 1099 7
 2649 01b6 6EE0     		b	.L186
 2650              	.L183:
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 2651              		.loc 1 1105 17
 2652 01b8 FB68     		ldr	r3, [r7, #12]
 2653 01ba 9B6A     		ldr	r3, [r3, #40]
 2654              		.loc 1 1105 52
 2655 01bc 654A     		ldr	r2, .L198
 2656 01be 9A62     		str	r2, [r3, #40]
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 2657              		.loc 1 1106 17
 2658 01c0 FB68     		ldr	r3, [r7, #12]
 2659 01c2 9B6A     		ldr	r3, [r3, #40]
 2660              		.loc 1 1106 56
 2661 01c4 644A     		ldr	r2, .L198+4
 2662 01c6 DA62     		str	r2, [r3, #44]
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 2663              		.loc 1 1109 17
 2664 01c8 FB68     		ldr	r3, [r7, #12]
 2665 01ca 9B6A     		ldr	r3, [r3, #40]
 2666              		.loc 1 1109 53
 2667 01cc 634A     		ldr	r2, .L198+8
 2668 01ce 1A63     		str	r2, [r3, #48]
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->
 2669              		.loc 1 1112 11
 2670 01d0 FB68     		ldr	r3, [r7, #12]
 2671 01d2 986A     		ldr	r0, [r3, #40]
 2672 01d4 7968     		ldr	r1, [r7, #4]
 2673              		.loc 1 1112 88
 2674 01d6 FB68     		ldr	r3, [r7, #12]
 2675 01d8 1B68     		ldr	r3, [r3]
 2676              		.loc 1 1112 83
 2677 01da 3833     		adds	r3, r3, #56
 2678              		.loc 1 1112 11
 2679 01dc 1A46     		mov	r2, r3
 2680 01de 7B88     		ldrh	r3, [r7, #2]
 2681 01e0 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  /tmp//ccJMd58S.s 			page 67


 2682 01e4 0346     		mov	r3, r0
 2683              		.loc 1 1112 10 discriminator 1
 2684 01e6 002B     		cmp	r3, #0
 2685 01e8 01D0     		beq	.L187
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 2686              		.loc 1 1116 16
 2687 01ea 0123     		movs	r3, #1
 2688 01ec ADE0     		b	.L163
 2689              	.L187:
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 2690              		.loc 1 1120 7
 2691 01ee FB68     		ldr	r3, [r7, #12]
 2692 01f0 1B68     		ldr	r3, [r3]
 2693 01f2 DA68     		ldr	r2, [r3, #12]
 2694 01f4 FB68     		ldr	r3, [r7, #12]
 2695 01f6 1B68     		ldr	r3, [r3]
 2696 01f8 42F48062 		orr	r2, r2, #1024
 2697 01fc DA60     		str	r2, [r3, #12]
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2698              		.loc 1 1121 7
 2699 01fe 4AE0     		b	.L186
 2700              	.L182:
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 2701              		.loc 1 1127 17
 2702 0200 FB68     		ldr	r3, [r7, #12]
 2703 0202 DB6A     		ldr	r3, [r3, #44]
 2704              		.loc 1 1127 52
 2705 0204 534A     		ldr	r2, .L198
 2706 0206 9A62     		str	r2, [r3, #40]
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 2707              		.loc 1 1128 17
 2708 0208 FB68     		ldr	r3, [r7, #12]
 2709 020a DB6A     		ldr	r3, [r3, #44]
 2710              		.loc 1 1128 56
 2711 020c 524A     		ldr	r2, .L198+4
 2712 020e DA62     		str	r2, [r3, #44]
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 2713              		.loc 1 1131 17
 2714 0210 FB68     		ldr	r3, [r7, #12]
 2715 0212 DB6A     		ldr	r3, [r3, #44]
 2716              		.loc 1 1131 53
 2717 0214 514A     		ldr	r2, .L198+8
 2718 0216 1A63     		str	r2, [r3, #48]
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 68


1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->
 2719              		.loc 1 1134 11
 2720 0218 FB68     		ldr	r3, [r7, #12]
 2721 021a D86A     		ldr	r0, [r3, #44]
 2722 021c 7968     		ldr	r1, [r7, #4]
 2723              		.loc 1 1134 88
 2724 021e FB68     		ldr	r3, [r7, #12]
 2725 0220 1B68     		ldr	r3, [r3]
 2726              		.loc 1 1134 83
 2727 0222 3C33     		adds	r3, r3, #60
 2728              		.loc 1 1134 11
 2729 0224 1A46     		mov	r2, r3
 2730 0226 7B88     		ldrh	r3, [r7, #2]
 2731 0228 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2732 022c 0346     		mov	r3, r0
 2733              		.loc 1 1134 10 discriminator 1
 2734 022e 002B     		cmp	r3, #0
 2735 0230 01D0     		beq	.L188
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 2736              		.loc 1 1138 16
 2737 0232 0123     		movs	r3, #1
 2738 0234 89E0     		b	.L163
 2739              	.L188:
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 DMA request */
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 2740              		.loc 1 1141 7
 2741 0236 FB68     		ldr	r3, [r7, #12]
 2742 0238 1B68     		ldr	r3, [r3]
 2743 023a DA68     		ldr	r2, [r3, #12]
 2744 023c FB68     		ldr	r3, [r7, #12]
 2745 023e 1B68     		ldr	r3, [r3]
 2746 0240 42F40062 		orr	r2, r2, #2048
 2747 0244 DA60     		str	r2, [r3, #12]
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2748              		.loc 1 1142 7
 2749 0246 26E0     		b	.L186
 2750              	.L180:
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 2751              		.loc 1 1148 17
 2752 0248 FB68     		ldr	r3, [r7, #12]
 2753 024a 1B6B     		ldr	r3, [r3, #48]
 2754              		.loc 1 1148 52
 2755 024c 414A     		ldr	r2, .L198
 2756 024e 9A62     		str	r2, [r3, #40]
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 2757              		.loc 1 1149 17
 2758 0250 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 69


 2759 0252 1B6B     		ldr	r3, [r3, #48]
 2760              		.loc 1 1149 56
 2761 0254 404A     		ldr	r2, .L198+4
 2762 0256 DA62     		str	r2, [r3, #44]
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 2763              		.loc 1 1152 17
 2764 0258 FB68     		ldr	r3, [r7, #12]
 2765 025a 1B6B     		ldr	r3, [r3, #48]
 2766              		.loc 1 1152 53
 2767 025c 3F4A     		ldr	r2, .L198+8
 2768 025e 1A63     		str	r2, [r3, #48]
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->
 2769              		.loc 1 1155 11
 2770 0260 FB68     		ldr	r3, [r7, #12]
 2771 0262 186B     		ldr	r0, [r3, #48]
 2772 0264 7968     		ldr	r1, [r7, #4]
 2773              		.loc 1 1155 88
 2774 0266 FB68     		ldr	r3, [r7, #12]
 2775 0268 1B68     		ldr	r3, [r3]
 2776              		.loc 1 1155 83
 2777 026a 4033     		adds	r3, r3, #64
 2778              		.loc 1 1155 11
 2779 026c 1A46     		mov	r2, r3
 2780 026e 7B88     		ldrh	r3, [r7, #2]
 2781 0270 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2782 0274 0346     		mov	r3, r0
 2783              		.loc 1 1155 10 discriminator 1
 2784 0276 002B     		cmp	r3, #0
 2785 0278 01D0     		beq	.L189
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 2786              		.loc 1 1159 16
 2787 027a 0123     		movs	r3, #1
 2788 027c 65E0     		b	.L163
 2789              	.L189:
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 2790              		.loc 1 1162 7
 2791 027e FB68     		ldr	r3, [r7, #12]
 2792 0280 1B68     		ldr	r3, [r3]
 2793 0282 DA68     		ldr	r2, [r3, #12]
 2794 0284 FB68     		ldr	r3, [r7, #12]
 2795 0286 1B68     		ldr	r3, [r3]
 2796 0288 42F48052 		orr	r2, r2, #4096
 2797 028c DA60     		str	r2, [r3, #12]
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2798              		.loc 1 1163 7
 2799 028e 02E0     		b	.L186
 2800              	.L179:
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
ARM GAS  /tmp//ccJMd58S.s 			page 70


1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 2801              		.loc 1 1167 14
 2802 0290 0123     		movs	r3, #1
 2803 0292 FB75     		strb	r3, [r7, #23]
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 2804              		.loc 1 1168 7
 2805 0294 00BF     		nop
 2806              	.L186:
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 2807              		.loc 1 1171 6
 2808 0296 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2809 0298 002B     		cmp	r3, #0
 2810 029a 55D1     		bne	.L190
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Output compare channel */
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 2811              		.loc 1 1174 5
 2812 029c FB68     		ldr	r3, [r7, #12]
 2813 029e 1B68     		ldr	r3, [r3]
 2814 02a0 0122     		movs	r2, #1
 2815 02a2 B968     		ldr	r1, [r7, #8]
 2816 02a4 1846     		mov	r0, r3
 2817 02a6 FFF7FEFF 		bl	TIM_CCxChannelCmd
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 2818              		.loc 1 1176 9
 2819 02aa FB68     		ldr	r3, [r7, #12]
 2820 02ac 1B68     		ldr	r3, [r3]
 2821 02ae 2C4A     		ldr	r2, .L198+12
 2822 02b0 9342     		cmp	r3, r2
 2823 02b2 04D0     		beq	.L191
 2824              		.loc 1 1176 9 is_stmt 0 discriminator 2
 2825 02b4 FB68     		ldr	r3, [r7, #12]
 2826 02b6 1B68     		ldr	r3, [r3]
 2827 02b8 2A4A     		ldr	r2, .L198+16
 2828 02ba 9342     		cmp	r3, r2
 2829 02bc 01D1     		bne	.L192
 2830              	.L191:
 2831              		.loc 1 1176 9 discriminator 3
 2832 02be 0123     		movs	r3, #1
 2833              		.loc 1 1176 9
 2834 02c0 00E0     		b	.L193
 2835              	.L192:
 2836              		.loc 1 1176 9 discriminator 4
 2837 02c2 0023     		movs	r3, #0
 2838              	.L193:
 2839              		.loc 1 1176 8 is_stmt 1 discriminator 6
 2840 02c4 002B     		cmp	r3, #0
 2841 02c6 07D0     		beq	.L194
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the main output */
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_MOE_ENABLE(htim);
 2842              		.loc 1 1179 7
ARM GAS  /tmp//ccJMd58S.s 			page 71


 2843 02c8 FB68     		ldr	r3, [r7, #12]
 2844 02ca 1B68     		ldr	r3, [r3]
 2845 02cc 5A6C     		ldr	r2, [r3, #68]
 2846 02ce FB68     		ldr	r3, [r7, #12]
 2847 02d0 1B68     		ldr	r3, [r3]
 2848 02d2 42F40042 		orr	r2, r2, #32768
 2849 02d6 5A64     		str	r2, [r3, #68]
 2850              	.L194:
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 2851              		.loc 1 1183 9
 2852 02d8 FB68     		ldr	r3, [r7, #12]
 2853 02da 1B68     		ldr	r3, [r3]
 2854              		.loc 1 1183 8
 2855 02dc 204A     		ldr	r2, .L198+12
 2856 02de 9342     		cmp	r3, r2
 2857 02e0 18D0     		beq	.L195
 2858              		.loc 1 1183 9 discriminator 1
 2859 02e2 FB68     		ldr	r3, [r7, #12]
 2860 02e4 1B68     		ldr	r3, [r3]
 2861 02e6 1F4A     		ldr	r2, .L198+16
 2862 02e8 9342     		cmp	r3, r2
 2863 02ea 13D0     		beq	.L195
 2864              		.loc 1 1183 9 is_stmt 0 discriminator 2
 2865 02ec FB68     		ldr	r3, [r7, #12]
 2866 02ee 1B68     		ldr	r3, [r3]
 2867 02f0 B3F1804F 		cmp	r3, #1073741824
 2868 02f4 0ED0     		beq	.L195
 2869              		.loc 1 1183 9 discriminator 3
 2870 02f6 FB68     		ldr	r3, [r7, #12]
 2871 02f8 1B68     		ldr	r3, [r3]
 2872 02fa 1B4A     		ldr	r2, .L198+20
 2873 02fc 9342     		cmp	r3, r2
 2874 02fe 09D0     		beq	.L195
 2875              		.loc 1 1183 9 discriminator 4
 2876 0300 FB68     		ldr	r3, [r7, #12]
 2877 0302 1B68     		ldr	r3, [r3]
 2878 0304 194A     		ldr	r2, .L198+24
 2879 0306 9342     		cmp	r3, r2
 2880 0308 04D0     		beq	.L195
 2881              		.loc 1 1183 9 discriminator 5
 2882 030a FB68     		ldr	r3, [r7, #12]
 2883 030c 1B68     		ldr	r3, [r3]
 2884 030e 184A     		ldr	r2, .L198+28
 2885 0310 9342     		cmp	r3, r2
 2886 0312 11D1     		bne	.L196
 2887              	.L195:
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 2888              		.loc 1 1185 21 is_stmt 1
 2889 0314 FB68     		ldr	r3, [r7, #12]
 2890 0316 1B68     		ldr	r3, [r3]
 2891              		.loc 1 1185 31
 2892 0318 9B68     		ldr	r3, [r3, #8]
 2893              		.loc 1 1185 15
ARM GAS  /tmp//ccJMd58S.s 			page 72


 2894 031a 03F00703 		and	r3, r3, #7
 2895 031e 3B61     		str	r3, [r7, #16]
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 2896              		.loc 1 1186 10
 2897 0320 3B69     		ldr	r3, [r7, #16]
 2898 0322 062B     		cmp	r3, #6
 2899 0324 10D0     		beq	.L190
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
 2900              		.loc 1 1188 9
 2901 0326 FB68     		ldr	r3, [r7, #12]
 2902 0328 1B68     		ldr	r3, [r3]
 2903 032a 1A68     		ldr	r2, [r3]
 2904 032c FB68     		ldr	r3, [r7, #12]
 2905 032e 1B68     		ldr	r3, [r3]
 2906 0330 42F00102 		orr	r2, r2, #1
 2907 0334 1A60     		str	r2, [r3]
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 2908              		.loc 1 1186 10
 2909 0336 07E0     		b	.L190
 2910              	.L196:
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 2911              		.loc 1 1193 7
 2912 0338 FB68     		ldr	r3, [r7, #12]
 2913 033a 1B68     		ldr	r3, [r3]
 2914 033c 1A68     		ldr	r2, [r3]
 2915 033e FB68     		ldr	r3, [r7, #12]
 2916 0340 1B68     		ldr	r3, [r3]
 2917 0342 42F00102 		orr	r2, r2, #1
 2918 0346 1A60     		str	r2, [r3]
 2919              	.L190:
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 2920              		.loc 1 1198 10
 2921 0348 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2922              	.L163:
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 2923              		.loc 1 1199 1
 2924 034a 1846     		mov	r0, r3
 2925 034c 1837     		adds	r7, r7, #24
 2926              	.LCFI101:
 2927              		.cfi_def_cfa_offset 8
 2928 034e BD46     		mov	sp, r7
 2929              	.LCFI102:
 2930              		.cfi_def_cfa_register 13
 2931              		@ sp needed
 2932 0350 80BD     		pop	{r7, pc}
 2933              	.L199:
 2934 0352 00BF     		.align	2
 2935              	.L198:
ARM GAS  /tmp//ccJMd58S.s 			page 73


 2936 0354 00000000 		.word	TIM_DMADelayPulseCplt
 2937 0358 00000000 		.word	TIM_DMADelayPulseHalfCplt
 2938 035c 00000000 		.word	TIM_DMAError
 2939 0360 002C0140 		.word	1073818624
 2940 0364 00340140 		.word	1073820672
 2941 0368 00040040 		.word	1073742848
 2942 036c 00080040 		.word	1073743872
 2943 0370 000C0040 		.word	1073744896
 2944              		.cfi_endproc
 2945              	.LFE83:
 2947              		.section	.text.HAL_TIM_OC_Stop_DMA,"ax",%progbits
 2948              		.align	1
 2949              		.global	HAL_TIM_OC_Stop_DMA
 2950              		.syntax unified
 2951              		.thumb
 2952              		.thumb_func
 2954              	HAL_TIM_OC_Stop_DMA:
 2955              	.LFB84:
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in DMA mode.
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be disabled
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 2956              		.loc 1 1213 1
 2957              		.cfi_startproc
 2958              		@ args = 0, pretend = 0, frame = 16
 2959              		@ frame_needed = 1, uses_anonymous_args = 0
 2960 0000 80B5     		push	{r7, lr}
 2961              	.LCFI103:
 2962              		.cfi_def_cfa_offset 8
 2963              		.cfi_offset 7, -8
 2964              		.cfi_offset 14, -4
 2965 0002 84B0     		sub	sp, sp, #16
 2966              	.LCFI104:
 2967              		.cfi_def_cfa_offset 24
 2968 0004 00AF     		add	r7, sp, #0
 2969              	.LCFI105:
 2970              		.cfi_def_cfa_register 7
 2971 0006 7860     		str	r0, [r7, #4]
 2972 0008 3960     		str	r1, [r7]
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 2973              		.loc 1 1214 21
 2974 000a 0023     		movs	r3, #0
 2975 000c FB73     		strb	r3, [r7, #15]
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 74


1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 2976              		.loc 1 1219 3
 2977 000e 3B68     		ldr	r3, [r7]
 2978 0010 0C2B     		cmp	r3, #12
 2979 0012 55D8     		bhi	.L201
 2980 0014 01A2     		adr	r2, .L203
 2981 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2982 001a 00BF     		.p2align 2
 2983              	.L203:
 2984 001c 51000000 		.word	.L206+1
 2985 0020 C1000000 		.word	.L201+1
 2986 0024 C1000000 		.word	.L201+1
 2987 0028 C1000000 		.word	.L201+1
 2988 002c 6D000000 		.word	.L205+1
 2989 0030 C1000000 		.word	.L201+1
 2990 0034 C1000000 		.word	.L201+1
 2991 0038 C1000000 		.word	.L201+1
 2992 003c 89000000 		.word	.L204+1
 2993 0040 C1000000 		.word	.L201+1
 2994 0044 C1000000 		.word	.L201+1
 2995 0048 C1000000 		.word	.L201+1
 2996 004c A5000000 		.word	.L202+1
 2997              		.p2align 1
 2998              	.L206:
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 2999              		.loc 1 1224 7
 3000 0050 7B68     		ldr	r3, [r7, #4]
 3001 0052 1B68     		ldr	r3, [r3]
 3002 0054 DA68     		ldr	r2, [r3, #12]
 3003 0056 7B68     		ldr	r3, [r7, #4]
 3004 0058 1B68     		ldr	r3, [r3]
 3005 005a 22F40072 		bic	r2, r2, #512
 3006 005e DA60     		str	r2, [r3, #12]
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 3007              		.loc 1 1225 13
 3008 0060 7B68     		ldr	r3, [r7, #4]
 3009 0062 5B6A     		ldr	r3, [r3, #36]
 3010 0064 1846     		mov	r0, r3
 3011 0066 FFF7FEFF 		bl	HAL_DMA_Abort_IT
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 3012              		.loc 1 1226 7
 3013 006a 2CE0     		b	.L207
 3014              	.L205:
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 3015              		.loc 1 1232 7
 3016 006c 7B68     		ldr	r3, [r7, #4]
 3017 006e 1B68     		ldr	r3, [r3]
 3018 0070 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 75


 3019 0072 7B68     		ldr	r3, [r7, #4]
 3020 0074 1B68     		ldr	r3, [r3]
 3021 0076 22F48062 		bic	r2, r2, #1024
 3022 007a DA60     		str	r2, [r3, #12]
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 3023              		.loc 1 1233 13
 3024 007c 7B68     		ldr	r3, [r7, #4]
 3025 007e 9B6A     		ldr	r3, [r3, #40]
 3026 0080 1846     		mov	r0, r3
 3027 0082 FFF7FEFF 		bl	HAL_DMA_Abort_IT
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 3028              		.loc 1 1234 7
 3029 0086 1EE0     		b	.L207
 3030              	.L204:
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 3031              		.loc 1 1240 7
 3032 0088 7B68     		ldr	r3, [r7, #4]
 3033 008a 1B68     		ldr	r3, [r3]
 3034 008c DA68     		ldr	r2, [r3, #12]
 3035 008e 7B68     		ldr	r3, [r7, #4]
 3036 0090 1B68     		ldr	r3, [r3]
 3037 0092 22F40062 		bic	r2, r2, #2048
 3038 0096 DA60     		str	r2, [r3, #12]
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 3039              		.loc 1 1241 13
 3040 0098 7B68     		ldr	r3, [r7, #4]
 3041 009a DB6A     		ldr	r3, [r3, #44]
 3042 009c 1846     		mov	r0, r3
 3043 009e FFF7FEFF 		bl	HAL_DMA_Abort_IT
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 3044              		.loc 1 1242 7
 3045 00a2 10E0     		b	.L207
 3046              	.L202:
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 3047              		.loc 1 1248 7
 3048 00a4 7B68     		ldr	r3, [r7, #4]
 3049 00a6 1B68     		ldr	r3, [r3]
 3050 00a8 DA68     		ldr	r2, [r3, #12]
 3051 00aa 7B68     		ldr	r3, [r7, #4]
 3052 00ac 1B68     		ldr	r3, [r3]
 3053 00ae 22F48052 		bic	r2, r2, #4096
 3054 00b2 DA60     		str	r2, [r3, #12]
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 3055              		.loc 1 1249 13
 3056 00b4 7B68     		ldr	r3, [r7, #4]
 3057 00b6 1B6B     		ldr	r3, [r3, #48]
 3058 00b8 1846     		mov	r0, r3
ARM GAS  /tmp//ccJMd58S.s 			page 76


 3059 00ba FFF7FEFF 		bl	HAL_DMA_Abort_IT
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 3060              		.loc 1 1250 7
 3061 00be 02E0     		b	.L207
 3062              	.L201:
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 3063              		.loc 1 1254 14
 3064 00c0 0123     		movs	r3, #1
 3065 00c2 FB73     		strb	r3, [r7, #15]
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 3066              		.loc 1 1255 7
 3067 00c4 00BF     		nop
 3068              	.L207:
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 3069              		.loc 1 1258 6
 3070 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3071 00c8 002B     		cmp	r3, #0
 3072 00ca 61D1     		bne	.L208
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Output compare channel */
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 3073              		.loc 1 1261 5
 3074 00cc 7B68     		ldr	r3, [r7, #4]
 3075 00ce 1B68     		ldr	r3, [r3]
 3076 00d0 0022     		movs	r2, #0
 3077 00d2 3968     		ldr	r1, [r7]
 3078 00d4 1846     		mov	r0, r3
 3079 00d6 FFF7FEFF 		bl	TIM_CCxChannelCmd
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 3080              		.loc 1 1263 9
 3081 00da 7B68     		ldr	r3, [r7, #4]
 3082 00dc 1B68     		ldr	r3, [r3]
 3083 00de 2F4A     		ldr	r2, .L220
 3084 00e0 9342     		cmp	r3, r2
 3085 00e2 04D0     		beq	.L209
 3086              		.loc 1 1263 9 is_stmt 0 discriminator 2
 3087 00e4 7B68     		ldr	r3, [r7, #4]
 3088 00e6 1B68     		ldr	r3, [r3]
 3089 00e8 2D4A     		ldr	r2, .L220+4
 3090 00ea 9342     		cmp	r3, r2
 3091 00ec 01D1     		bne	.L210
 3092              	.L209:
 3093              		.loc 1 1263 9 discriminator 3
 3094 00ee 0123     		movs	r3, #1
 3095              		.loc 1 1263 9
 3096 00f0 00E0     		b	.L211
 3097              	.L210:
 3098              		.loc 1 1263 9 discriminator 4
 3099 00f2 0023     		movs	r3, #0
 3100              	.L211:
 3101              		.loc 1 1263 8 is_stmt 1 discriminator 6
ARM GAS  /tmp//ccJMd58S.s 			page 77


 3102 00f4 002B     		cmp	r3, #0
 3103 00f6 17D0     		beq	.L212
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the Main Output */
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_MOE_DISABLE(htim);
 3104              		.loc 1 1266 7
 3105 00f8 7B68     		ldr	r3, [r7, #4]
 3106 00fa 1B68     		ldr	r3, [r3]
 3107 00fc 1A6A     		ldr	r2, [r3, #32]
 3108 00fe 41F21113 		movw	r3, #4369
 3109 0102 1340     		ands	r3, r3, r2
 3110 0104 002B     		cmp	r3, #0
 3111 0106 0FD1     		bne	.L212
 3112              		.loc 1 1266 7 is_stmt 0 discriminator 1
 3113 0108 7B68     		ldr	r3, [r7, #4]
 3114 010a 1B68     		ldr	r3, [r3]
 3115 010c 1A6A     		ldr	r2, [r3, #32]
 3116 010e 40F24443 		movw	r3, #1092
 3117 0112 1340     		ands	r3, r3, r2
 3118 0114 002B     		cmp	r3, #0
 3119 0116 07D1     		bne	.L212
 3120              		.loc 1 1266 7 discriminator 2
 3121 0118 7B68     		ldr	r3, [r7, #4]
 3122 011a 1B68     		ldr	r3, [r3]
 3123 011c 5A6C     		ldr	r2, [r3, #68]
 3124 011e 7B68     		ldr	r3, [r7, #4]
 3125 0120 1B68     		ldr	r3, [r3]
 3126 0122 22F40042 		bic	r2, r2, #32768
 3127 0126 5A64     		str	r2, [r3, #68]
 3128              	.L212:
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Peripheral */
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
 3129              		.loc 1 1270 5 is_stmt 1
 3130 0128 7B68     		ldr	r3, [r7, #4]
 3131 012a 1B68     		ldr	r3, [r3]
 3132 012c 1A6A     		ldr	r2, [r3, #32]
 3133 012e 41F21113 		movw	r3, #4369
 3134 0132 1340     		ands	r3, r3, r2
 3135 0134 002B     		cmp	r3, #0
 3136 0136 0FD1     		bne	.L213
 3137              		.loc 1 1270 5 is_stmt 0 discriminator 1
 3138 0138 7B68     		ldr	r3, [r7, #4]
 3139 013a 1B68     		ldr	r3, [r3]
 3140 013c 1A6A     		ldr	r2, [r3, #32]
 3141 013e 40F24443 		movw	r3, #1092
 3142 0142 1340     		ands	r3, r3, r2
 3143 0144 002B     		cmp	r3, #0
 3144 0146 07D1     		bne	.L213
 3145              		.loc 1 1270 5 discriminator 2
 3146 0148 7B68     		ldr	r3, [r7, #4]
 3147 014a 1B68     		ldr	r3, [r3]
 3148 014c 1A68     		ldr	r2, [r3]
 3149 014e 7B68     		ldr	r3, [r7, #4]
 3150 0150 1B68     		ldr	r3, [r3]
 3151 0152 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp//ccJMd58S.s 			page 78


 3152 0156 1A60     		str	r2, [r3]
 3153              	.L213:
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the TIM channel state */
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 3154              		.loc 1 1273 5 is_stmt 1
 3155 0158 3B68     		ldr	r3, [r7]
 3156 015a 002B     		cmp	r3, #0
 3157 015c 04D1     		bne	.L214
 3158              		.loc 1 1273 5 is_stmt 0 discriminator 1
 3159 015e 7B68     		ldr	r3, [r7, #4]
 3160 0160 0122     		movs	r2, #1
 3161 0162 83F83E20 		strb	r2, [r3, #62]
 3162 0166 13E0     		b	.L208
 3163              	.L214:
 3164              		.loc 1 1273 5 discriminator 2
 3165 0168 3B68     		ldr	r3, [r7]
 3166 016a 042B     		cmp	r3, #4
 3167 016c 04D1     		bne	.L215
 3168              		.loc 1 1273 5 discriminator 3
 3169 016e 7B68     		ldr	r3, [r7, #4]
 3170 0170 0122     		movs	r2, #1
 3171 0172 83F83F20 		strb	r2, [r3, #63]
 3172 0176 0BE0     		b	.L208
 3173              	.L215:
 3174              		.loc 1 1273 5 discriminator 4
 3175 0178 3B68     		ldr	r3, [r7]
 3176 017a 082B     		cmp	r3, #8
 3177 017c 04D1     		bne	.L217
 3178              		.loc 1 1273 5 discriminator 6
 3179 017e 7B68     		ldr	r3, [r7, #4]
 3180 0180 0122     		movs	r2, #1
 3181 0182 83F84020 		strb	r2, [r3, #64]
 3182 0186 03E0     		b	.L208
 3183              	.L217:
 3184              		.loc 1 1273 5 discriminator 7
 3185 0188 7B68     		ldr	r3, [r7, #4]
 3186 018a 0122     		movs	r2, #1
 3187 018c 83F84120 		strb	r2, [r3, #65]
 3188              	.L208:
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 3189              		.loc 1 1277 10 is_stmt 1
 3190 0190 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 3191              		.loc 1 1278 1
 3192 0192 1846     		mov	r0, r3
 3193 0194 1037     		adds	r7, r7, #16
 3194              	.LCFI106:
 3195              		.cfi_def_cfa_offset 8
 3196 0196 BD46     		mov	sp, r7
 3197              	.LCFI107:
 3198              		.cfi_def_cfa_register 13
 3199              		@ sp needed
 3200 0198 80BD     		pop	{r7, pc}
ARM GAS  /tmp//ccJMd58S.s 			page 79


 3201              	.L221:
 3202 019a 00BF     		.align	2
 3203              	.L220:
 3204 019c 002C0140 		.word	1073818624
 3205 01a0 00340140 		.word	1073820672
 3206              		.cfi_endproc
 3207              	.LFE84:
 3209              		.section	.text.HAL_TIM_PWM_Init,"ax",%progbits
 3210              		.align	1
 3211              		.global	HAL_TIM_PWM_Init
 3212              		.syntax unified
 3213              		.thumb
 3214              		.thumb_func
 3216              	HAL_TIM_PWM_Init:
 3217              	.LFB85:
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group3 TIM PWM functions
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief    TIM PWM functions
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                           ##### TIM PWM functions #####
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM PWM.
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM PWM.
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM PWM.
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM PWM.
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM PWM and enable interrupt.
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM PWM and disable interrupt.
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM PWM and enable DMA transfer.
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM PWM and disable DMA transfer.
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM PWM Time Base according to the specified
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 3218              		.loc 1 1316 1
 3219              		.cfi_startproc
 3220              		@ args = 0, pretend = 0, frame = 8
 3221              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp//ccJMd58S.s 			page 80


 3222 0000 80B5     		push	{r7, lr}
 3223              	.LCFI108:
 3224              		.cfi_def_cfa_offset 8
 3225              		.cfi_offset 7, -8
 3226              		.cfi_offset 14, -4
 3227 0002 82B0     		sub	sp, sp, #8
 3228              	.LCFI109:
 3229              		.cfi_def_cfa_offset 16
 3230 0004 00AF     		add	r7, sp, #0
 3231              	.LCFI110:
 3232              		.cfi_def_cfa_register 7
 3233 0006 7860     		str	r0, [r7, #4]
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
 3234              		.loc 1 1318 6
 3235 0008 7B68     		ldr	r3, [r7, #4]
 3236 000a 002B     		cmp	r3, #0
 3237 000c 01D1     		bne	.L223
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 3238              		.loc 1 1320 12
 3239 000e 0123     		movs	r3, #1
 3240 0010 41E0     		b	.L224
 3241              	.L223:
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim->Init.Period));
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
 3242              		.loc 1 1330 11
 3243 0012 7B68     		ldr	r3, [r7, #4]
 3244 0014 93F83D30 		ldrb	r3, [r3, #61]
 3245 0018 DBB2     		uxtb	r3, r3
 3246              		.loc 1 1330 6
 3247 001a 002B     		cmp	r3, #0
 3248 001c 06D1     		bne	.L225
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3249              		.loc 1 1333 16
 3250 001e 7B68     		ldr	r3, [r7, #4]
 3251 0020 0022     		movs	r2, #0
 3252 0022 83F83C20 		strb	r2, [r3, #60]
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (htim->PWM_MspInitCallback == NULL)
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->PWM_MspInitCallback = HAL_TIM_PWM_MspInit;
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
ARM GAS  /tmp//ccJMd58S.s 			page 81


1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->PWM_MspInitCallback(htim);
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     HAL_TIM_PWM_MspInit(htim);
 3253              		.loc 1 1347 5
 3254 0026 7868     		ldr	r0, [r7, #4]
 3255 0028 FFF7FEFF 		bl	HAL_TIM_PWM_MspInit
 3256              	.L225:
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 3257              		.loc 1 1352 15
 3258 002c 7B68     		ldr	r3, [r7, #4]
 3259 002e 0222     		movs	r2, #2
 3260 0030 83F83D20 		strb	r2, [r3, #61]
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Init the base time for the PWM */
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 3261              		.loc 1 1355 3
 3262 0034 7B68     		ldr	r3, [r7, #4]
 3263 0036 1A68     		ldr	r2, [r3]
 3264              		.loc 1 1355 38
 3265 0038 7B68     		ldr	r3, [r7, #4]
 3266 003a 0433     		adds	r3, r3, #4
 3267              		.loc 1 1355 3
 3268 003c 1946     		mov	r1, r3
 3269 003e 1046     		mov	r0, r2
 3270 0040 FFF7FEFF 		bl	TIM_Base_SetConfig
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 3271              		.loc 1 1358 23
 3272 0044 7B68     		ldr	r3, [r7, #4]
 3273 0046 0122     		movs	r2, #1
 3274 0048 83F84620 		strb	r2, [r3, #70]
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM channels state */
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 3275              		.loc 1 1361 3
 3276 004c 7B68     		ldr	r3, [r7, #4]
 3277 004e 0122     		movs	r2, #1
 3278 0050 83F83E20 		strb	r2, [r3, #62]
 3279 0054 7B68     		ldr	r3, [r7, #4]
 3280 0056 0122     		movs	r2, #1
 3281 0058 83F83F20 		strb	r2, [r3, #63]
 3282 005c 7B68     		ldr	r3, [r7, #4]
 3283 005e 0122     		movs	r2, #1
 3284 0060 83F84020 		strb	r2, [r3, #64]
 3285 0064 7B68     		ldr	r3, [r7, #4]
 3286 0066 0122     		movs	r2, #1
 3287 0068 83F84120 		strb	r2, [r3, #65]
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 3288              		.loc 1 1362 3
 3289 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 82


 3290 006e 0122     		movs	r2, #1
 3291 0070 83F84220 		strb	r2, [r3, #66]
 3292 0074 7B68     		ldr	r3, [r7, #4]
 3293 0076 0122     		movs	r2, #1
 3294 0078 83F84320 		strb	r2, [r3, #67]
 3295 007c 7B68     		ldr	r3, [r7, #4]
 3296 007e 0122     		movs	r2, #1
 3297 0080 83F84420 		strb	r2, [r3, #68]
 3298 0084 7B68     		ldr	r3, [r7, #4]
 3299 0086 0122     		movs	r2, #1
 3300 0088 83F84520 		strb	r2, [r3, #69]
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 3301              		.loc 1 1365 15
 3302 008c 7B68     		ldr	r3, [r7, #4]
 3303 008e 0122     		movs	r2, #1
 3304 0090 83F83D20 		strb	r2, [r3, #61]
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 3305              		.loc 1 1367 10
 3306 0094 0023     		movs	r3, #0
 3307              	.L224:
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 3308              		.loc 1 1368 1
 3309 0096 1846     		mov	r0, r3
 3310 0098 0837     		adds	r7, r7, #8
 3311              	.LCFI111:
 3312              		.cfi_def_cfa_offset 8
 3313 009a BD46     		mov	sp, r7
 3314              	.LCFI112:
 3315              		.cfi_def_cfa_register 13
 3316              		@ sp needed
 3317 009c 80BD     		pop	{r7, pc}
 3318              		.cfi_endproc
 3319              	.LFE85:
 3321              		.section	.text.HAL_TIM_PWM_DeInit,"ax",%progbits
 3322              		.align	1
 3323              		.global	HAL_TIM_PWM_DeInit
 3324              		.syntax unified
 3325              		.thumb
 3326              		.thumb_func
 3328              	HAL_TIM_PWM_DeInit:
 3329              	.LFB86:
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_DeInit(TIM_HandleTypeDef *htim)
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 3330              		.loc 1 1376 1
 3331              		.cfi_startproc
 3332              		@ args = 0, pretend = 0, frame = 8
 3333              		@ frame_needed = 1, uses_anonymous_args = 0
 3334 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp//ccJMd58S.s 			page 83


 3335              	.LCFI113:
 3336              		.cfi_def_cfa_offset 8
 3337              		.cfi_offset 7, -8
 3338              		.cfi_offset 14, -4
 3339 0002 82B0     		sub	sp, sp, #8
 3340              	.LCFI114:
 3341              		.cfi_def_cfa_offset 16
 3342 0004 00AF     		add	r7, sp, #0
 3343              	.LCFI115:
 3344              		.cfi_def_cfa_register 7
 3345 0006 7860     		str	r0, [r7, #4]
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 3346              		.loc 1 1380 15
 3347 0008 7B68     		ldr	r3, [r7, #4]
 3348 000a 0222     		movs	r2, #2
 3349 000c 83F83D20 		strb	r2, [r3, #61]
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 3350              		.loc 1 1383 3
 3351 0010 7B68     		ldr	r3, [r7, #4]
 3352 0012 1B68     		ldr	r3, [r3]
 3353 0014 1A6A     		ldr	r2, [r3, #32]
 3354 0016 41F21113 		movw	r3, #4369
 3355 001a 1340     		ands	r3, r3, r2
 3356 001c 002B     		cmp	r3, #0
 3357 001e 0FD1     		bne	.L227
 3358              		.loc 1 1383 3 is_stmt 0 discriminator 1
 3359 0020 7B68     		ldr	r3, [r7, #4]
 3360 0022 1B68     		ldr	r3, [r3]
 3361 0024 1A6A     		ldr	r2, [r3, #32]
 3362 0026 40F24443 		movw	r3, #1092
 3363 002a 1340     		ands	r3, r3, r2
 3364 002c 002B     		cmp	r3, #0
 3365 002e 07D1     		bne	.L227
 3366              		.loc 1 1383 3 discriminator 2
 3367 0030 7B68     		ldr	r3, [r7, #4]
 3368 0032 1B68     		ldr	r3, [r3]
 3369 0034 1A68     		ldr	r2, [r3]
 3370 0036 7B68     		ldr	r3, [r7, #4]
 3371 0038 1B68     		ldr	r3, [r3]
 3372 003a 22F00102 		bic	r2, r2, #1
 3373 003e 1A60     		str	r2, [r3]
 3374              	.L227:
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->PWM_MspDeInitCallback == NULL)
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->PWM_MspDeInitCallback = HAL_TIM_PWM_MspDeInit;
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->PWM_MspDeInitCallback(htim);
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
ARM GAS  /tmp//ccJMd58S.s 			page 84


1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_PWM_MspDeInit(htim);
 3375              		.loc 1 1394 3 is_stmt 1
 3376 0040 7868     		ldr	r0, [r7, #4]
 3377 0042 FFF7FEFF 		bl	HAL_TIM_PWM_MspDeInit
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the DMA burst operation state */
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
 3378              		.loc 1 1398 23
 3379 0046 7B68     		ldr	r3, [r7, #4]
 3380 0048 0022     		movs	r2, #0
 3381 004a 83F84620 		strb	r2, [r3, #70]
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the TIM channels state */
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 3382              		.loc 1 1401 3
 3383 004e 7B68     		ldr	r3, [r7, #4]
 3384 0050 0022     		movs	r2, #0
 3385 0052 83F83E20 		strb	r2, [r3, #62]
 3386 0056 7B68     		ldr	r3, [r7, #4]
 3387 0058 0022     		movs	r2, #0
 3388 005a 83F83F20 		strb	r2, [r3, #63]
 3389 005e 7B68     		ldr	r3, [r7, #4]
 3390 0060 0022     		movs	r2, #0
 3391 0062 83F84020 		strb	r2, [r3, #64]
 3392 0066 7B68     		ldr	r3, [r7, #4]
 3393 0068 0022     		movs	r2, #0
 3394 006a 83F84120 		strb	r2, [r3, #65]
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 3395              		.loc 1 1402 3
 3396 006e 7B68     		ldr	r3, [r7, #4]
 3397 0070 0022     		movs	r2, #0
 3398 0072 83F84220 		strb	r2, [r3, #66]
 3399 0076 7B68     		ldr	r3, [r7, #4]
 3400 0078 0022     		movs	r2, #0
 3401 007a 83F84320 		strb	r2, [r3, #67]
 3402 007e 7B68     		ldr	r3, [r7, #4]
 3403 0080 0022     		movs	r2, #0
 3404 0082 83F84420 		strb	r2, [r3, #68]
 3405 0086 7B68     		ldr	r3, [r7, #4]
 3406 0088 0022     		movs	r2, #0
 3407 008a 83F84520 		strb	r2, [r3, #69]
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 3408              		.loc 1 1405 15
 3409 008e 7B68     		ldr	r3, [r7, #4]
 3410 0090 0022     		movs	r2, #0
 3411 0092 83F83D20 		strb	r2, [r3, #61]
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Release Lock */
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 3412              		.loc 1 1408 3
 3413 0096 7B68     		ldr	r3, [r7, #4]
 3414 0098 0022     		movs	r2, #0
 3415 009a 83F83C20 		strb	r2, [r3, #60]
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 85


1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 3416              		.loc 1 1410 10
 3417 009e 0023     		movs	r3, #0
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 3418              		.loc 1 1411 1
 3419 00a0 1846     		mov	r0, r3
 3420 00a2 0837     		adds	r7, r7, #8
 3421              	.LCFI116:
 3422              		.cfi_def_cfa_offset 8
 3423 00a4 BD46     		mov	sp, r7
 3424              	.LCFI117:
 3425              		.cfi_def_cfa_register 13
 3426              		@ sp needed
 3427 00a6 80BD     		pop	{r7, pc}
 3428              		.cfi_endproc
 3429              	.LFE86:
 3431              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 3432              		.align	1
 3433              		.weak	HAL_TIM_PWM_MspInit
 3434              		.syntax unified
 3435              		.thumb
 3436              		.thumb_func
 3438              	HAL_TIM_PWM_MspInit:
 3439              	.LFB87:
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM PWM MSP.
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 3440              		.loc 1 1419 1
 3441              		.cfi_startproc
 3442              		@ args = 0, pretend = 0, frame = 8
 3443              		@ frame_needed = 1, uses_anonymous_args = 0
 3444              		@ link register save eliminated.
 3445 0000 80B4     		push	{r7}
 3446              	.LCFI118:
 3447              		.cfi_def_cfa_offset 4
 3448              		.cfi_offset 7, -4
 3449 0002 83B0     		sub	sp, sp, #12
 3450              	.LCFI119:
 3451              		.cfi_def_cfa_offset 16
 3452 0004 00AF     		add	r7, sp, #0
 3453              	.LCFI120:
 3454              		.cfi_def_cfa_register 7
 3455 0006 7860     		str	r0, [r7, #4]
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PWM_MspInit could be implemented in the user file
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 3456              		.loc 1 1426 1
 3457 0008 00BF     		nop
ARM GAS  /tmp//ccJMd58S.s 			page 86


 3458 000a 0C37     		adds	r7, r7, #12
 3459              	.LCFI121:
 3460              		.cfi_def_cfa_offset 4
 3461 000c BD46     		mov	sp, r7
 3462              	.LCFI122:
 3463              		.cfi_def_cfa_register 13
 3464              		@ sp needed
 3465 000e 80BC     		pop	{r7}
 3466              	.LCFI123:
 3467              		.cfi_restore 7
 3468              		.cfi_def_cfa_offset 0
 3469 0010 7047     		bx	lr
 3470              		.cfi_endproc
 3471              	.LFE87:
 3473              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 3474              		.align	1
 3475              		.weak	HAL_TIM_PWM_MspDeInit
 3476              		.syntax unified
 3477              		.thumb
 3478              		.thumb_func
 3480              	HAL_TIM_PWM_MspDeInit:
 3481              	.LFB88:
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM PWM MSP.
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef *htim)
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 3482              		.loc 1 1434 1
 3483              		.cfi_startproc
 3484              		@ args = 0, pretend = 0, frame = 8
 3485              		@ frame_needed = 1, uses_anonymous_args = 0
 3486              		@ link register save eliminated.
 3487 0000 80B4     		push	{r7}
 3488              	.LCFI124:
 3489              		.cfi_def_cfa_offset 4
 3490              		.cfi_offset 7, -4
 3491 0002 83B0     		sub	sp, sp, #12
 3492              	.LCFI125:
 3493              		.cfi_def_cfa_offset 16
 3494 0004 00AF     		add	r7, sp, #0
 3495              	.LCFI126:
 3496              		.cfi_def_cfa_register 7
 3497 0006 7860     		str	r0, [r7, #4]
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PWM_MspDeInit could be implemented in the user file
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 3498              		.loc 1 1441 1
 3499 0008 00BF     		nop
 3500 000a 0C37     		adds	r7, r7, #12
 3501              	.LCFI127:
ARM GAS  /tmp//ccJMd58S.s 			page 87


 3502              		.cfi_def_cfa_offset 4
 3503 000c BD46     		mov	sp, r7
 3504              	.LCFI128:
 3505              		.cfi_def_cfa_register 13
 3506              		@ sp needed
 3507 000e 80BC     		pop	{r7}
 3508              	.LCFI129:
 3509              		.cfi_restore 7
 3510              		.cfi_def_cfa_offset 0
 3511 0010 7047     		bx	lr
 3512              		.cfi_endproc
 3513              	.LFE88:
 3515              		.section	.text.HAL_TIM_PWM_Start,"ax",%progbits
 3516              		.align	1
 3517              		.global	HAL_TIM_PWM_Start
 3518              		.syntax unified
 3519              		.thumb
 3520              		.thumb_func
 3522              	HAL_TIM_PWM_Start:
 3523              	.LFB89:
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the PWM signal generation.
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 3524              		.loc 1 1455 1
 3525              		.cfi_startproc
 3526              		@ args = 0, pretend = 0, frame = 16
 3527              		@ frame_needed = 1, uses_anonymous_args = 0
 3528 0000 80B5     		push	{r7, lr}
 3529              	.LCFI130:
 3530              		.cfi_def_cfa_offset 8
 3531              		.cfi_offset 7, -8
 3532              		.cfi_offset 14, -4
 3533 0002 84B0     		sub	sp, sp, #16
 3534              	.LCFI131:
 3535              		.cfi_def_cfa_offset 24
 3536 0004 00AF     		add	r7, sp, #0
 3537              	.LCFI132:
 3538              		.cfi_def_cfa_register 7
 3539 0006 7860     		str	r0, [r7, #4]
 3540 0008 3960     		str	r1, [r7]
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM channel state */
ARM GAS  /tmp//ccJMd58S.s 			page 88


1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 3541              		.loc 1 1462 44
 3542 000a 3B68     		ldr	r3, [r7]
 3543 000c 002B     		cmp	r3, #0
 3544 000e 09D1     		bne	.L232
 3545              		.loc 1 1462 7 discriminator 1
 3546 0010 7B68     		ldr	r3, [r7, #4]
 3547 0012 93F83E30 		ldrb	r3, [r3, #62]
 3548 0016 DBB2     		uxtb	r3, r3
 3549              		.loc 1 1462 44 discriminator 1
 3550 0018 012B     		cmp	r3, #1
 3551 001a 14BF     		ite	ne
 3552 001c 0123     		movne	r3, #1
 3553 001e 0023     		moveq	r3, #0
 3554 0020 DBB2     		uxtb	r3, r3
 3555 0022 22E0     		b	.L233
 3556              	.L232:
 3557              		.loc 1 1462 44 is_stmt 0 discriminator 2
 3558 0024 3B68     		ldr	r3, [r7]
 3559 0026 042B     		cmp	r3, #4
 3560 0028 09D1     		bne	.L234
 3561              		.loc 1 1462 7 is_stmt 1 discriminator 4
 3562 002a 7B68     		ldr	r3, [r7, #4]
 3563 002c 93F83F30 		ldrb	r3, [r3, #63]
 3564 0030 DBB2     		uxtb	r3, r3
 3565              		.loc 1 1462 44 discriminator 4
 3566 0032 012B     		cmp	r3, #1
 3567 0034 14BF     		ite	ne
 3568 0036 0123     		movne	r3, #1
 3569 0038 0023     		moveq	r3, #0
 3570 003a DBB2     		uxtb	r3, r3
 3571 003c 15E0     		b	.L233
 3572              	.L234:
 3573              		.loc 1 1462 44 is_stmt 0 discriminator 5
 3574 003e 3B68     		ldr	r3, [r7]
 3575 0040 082B     		cmp	r3, #8
 3576 0042 09D1     		bne	.L236
 3577              		.loc 1 1462 7 is_stmt 1 discriminator 7
 3578 0044 7B68     		ldr	r3, [r7, #4]
 3579 0046 93F84030 		ldrb	r3, [r3, #64]
 3580 004a DBB2     		uxtb	r3, r3
 3581              		.loc 1 1462 44 discriminator 7
 3582 004c 012B     		cmp	r3, #1
 3583 004e 14BF     		ite	ne
 3584 0050 0123     		movne	r3, #1
 3585 0052 0023     		moveq	r3, #0
 3586 0054 DBB2     		uxtb	r3, r3
 3587 0056 08E0     		b	.L233
 3588              	.L236:
 3589              		.loc 1 1462 7 discriminator 8
 3590 0058 7B68     		ldr	r3, [r7, #4]
 3591 005a 93F84130 		ldrb	r3, [r3, #65]
 3592 005e DBB2     		uxtb	r3, r3
 3593              		.loc 1 1462 44 discriminator 8
 3594 0060 012B     		cmp	r3, #1
 3595 0062 14BF     		ite	ne
 3596 0064 0123     		movne	r3, #1
ARM GAS  /tmp//ccJMd58S.s 			page 89


 3597 0066 0023     		moveq	r3, #0
 3598 0068 DBB2     		uxtb	r3, r3
 3599              	.L233:
 3600              		.loc 1 1462 6 discriminator 12
 3601 006a 002B     		cmp	r3, #0
 3602 006c 01D0     		beq	.L238
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 3603              		.loc 1 1464 12
 3604 006e 0123     		movs	r3, #1
 3605 0070 72E0     		b	.L239
 3606              	.L238:
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 3607              		.loc 1 1468 3
 3608 0072 3B68     		ldr	r3, [r7]
 3609 0074 002B     		cmp	r3, #0
 3610 0076 04D1     		bne	.L240
 3611              		.loc 1 1468 3 is_stmt 0 discriminator 1
 3612 0078 7B68     		ldr	r3, [r7, #4]
 3613 007a 0222     		movs	r2, #2
 3614 007c 83F83E20 		strb	r2, [r3, #62]
 3615 0080 13E0     		b	.L241
 3616              	.L240:
 3617              		.loc 1 1468 3 discriminator 2
 3618 0082 3B68     		ldr	r3, [r7]
 3619 0084 042B     		cmp	r3, #4
 3620 0086 04D1     		bne	.L242
 3621              		.loc 1 1468 3 discriminator 3
 3622 0088 7B68     		ldr	r3, [r7, #4]
 3623 008a 0222     		movs	r2, #2
 3624 008c 83F83F20 		strb	r2, [r3, #63]
 3625 0090 0BE0     		b	.L241
 3626              	.L242:
 3627              		.loc 1 1468 3 discriminator 4
 3628 0092 3B68     		ldr	r3, [r7]
 3629 0094 082B     		cmp	r3, #8
 3630 0096 04D1     		bne	.L244
 3631              		.loc 1 1468 3 discriminator 6
 3632 0098 7B68     		ldr	r3, [r7, #4]
 3633 009a 0222     		movs	r2, #2
 3634 009c 83F84020 		strb	r2, [r3, #64]
 3635 00a0 03E0     		b	.L241
 3636              	.L244:
 3637              		.loc 1 1468 3 discriminator 7
 3638 00a2 7B68     		ldr	r3, [r7, #4]
 3639 00a4 0222     		movs	r2, #2
 3640 00a6 83F84120 		strb	r2, [r3, #65]
 3641              	.L241:
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Capture compare channel */
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 3642              		.loc 1 1471 3 is_stmt 1
 3643 00aa 7B68     		ldr	r3, [r7, #4]
 3644 00ac 1B68     		ldr	r3, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 90


 3645 00ae 0122     		movs	r2, #1
 3646 00b0 3968     		ldr	r1, [r7]
 3647 00b2 1846     		mov	r0, r3
 3648 00b4 FFF7FEFF 		bl	TIM_CCxChannelCmd
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 3649              		.loc 1 1473 7
 3650 00b8 7B68     		ldr	r3, [r7, #4]
 3651 00ba 1B68     		ldr	r3, [r3]
 3652 00bc 284A     		ldr	r2, .L254
 3653 00be 9342     		cmp	r3, r2
 3654 00c0 04D0     		beq	.L246
 3655              		.loc 1 1473 7 is_stmt 0 discriminator 2
 3656 00c2 7B68     		ldr	r3, [r7, #4]
 3657 00c4 1B68     		ldr	r3, [r3]
 3658 00c6 274A     		ldr	r2, .L254+4
 3659 00c8 9342     		cmp	r3, r2
 3660 00ca 01D1     		bne	.L247
 3661              	.L246:
 3662              		.loc 1 1473 7 discriminator 3
 3663 00cc 0123     		movs	r3, #1
 3664              		.loc 1 1473 7
 3665 00ce 00E0     		b	.L248
 3666              	.L247:
 3667              		.loc 1 1473 7 discriminator 4
 3668 00d0 0023     		movs	r3, #0
 3669              	.L248:
 3670              		.loc 1 1473 6 is_stmt 1 discriminator 6
 3671 00d2 002B     		cmp	r3, #0
 3672 00d4 07D0     		beq	.L249
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 3673              		.loc 1 1476 5
 3674 00d6 7B68     		ldr	r3, [r7, #4]
 3675 00d8 1B68     		ldr	r3, [r3]
 3676 00da 5A6C     		ldr	r2, [r3, #68]
 3677 00dc 7B68     		ldr	r3, [r7, #4]
 3678 00de 1B68     		ldr	r3, [r3]
 3679 00e0 42F40042 		orr	r2, r2, #32768
 3680 00e4 5A64     		str	r2, [r3, #68]
 3681              	.L249:
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 3682              		.loc 1 1480 7
 3683 00e6 7B68     		ldr	r3, [r7, #4]
 3684 00e8 1B68     		ldr	r3, [r3]
 3685              		.loc 1 1480 6
 3686 00ea 1D4A     		ldr	r2, .L254
 3687 00ec 9342     		cmp	r3, r2
 3688 00ee 18D0     		beq	.L250
 3689              		.loc 1 1480 7 discriminator 1
 3690 00f0 7B68     		ldr	r3, [r7, #4]
 3691 00f2 1B68     		ldr	r3, [r3]
 3692 00f4 1B4A     		ldr	r2, .L254+4
ARM GAS  /tmp//ccJMd58S.s 			page 91


 3693 00f6 9342     		cmp	r3, r2
 3694 00f8 13D0     		beq	.L250
 3695              		.loc 1 1480 7 is_stmt 0 discriminator 2
 3696 00fa 7B68     		ldr	r3, [r7, #4]
 3697 00fc 1B68     		ldr	r3, [r3]
 3698 00fe B3F1804F 		cmp	r3, #1073741824
 3699 0102 0ED0     		beq	.L250
 3700              		.loc 1 1480 7 discriminator 3
 3701 0104 7B68     		ldr	r3, [r7, #4]
 3702 0106 1B68     		ldr	r3, [r3]
 3703 0108 174A     		ldr	r2, .L254+8
 3704 010a 9342     		cmp	r3, r2
 3705 010c 09D0     		beq	.L250
 3706              		.loc 1 1480 7 discriminator 4
 3707 010e 7B68     		ldr	r3, [r7, #4]
 3708 0110 1B68     		ldr	r3, [r3]
 3709 0112 164A     		ldr	r2, .L254+12
 3710 0114 9342     		cmp	r3, r2
 3711 0116 04D0     		beq	.L250
 3712              		.loc 1 1480 7 discriminator 5
 3713 0118 7B68     		ldr	r3, [r7, #4]
 3714 011a 1B68     		ldr	r3, [r3]
 3715 011c 144A     		ldr	r2, .L254+16
 3716 011e 9342     		cmp	r3, r2
 3717 0120 11D1     		bne	.L251
 3718              	.L250:
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 3719              		.loc 1 1482 19 is_stmt 1
 3720 0122 7B68     		ldr	r3, [r7, #4]
 3721 0124 1B68     		ldr	r3, [r3]
 3722              		.loc 1 1482 29
 3723 0126 9B68     		ldr	r3, [r3, #8]
 3724              		.loc 1 1482 13
 3725 0128 03F00703 		and	r3, r3, #7
 3726 012c FB60     		str	r3, [r7, #12]
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 3727              		.loc 1 1483 8
 3728 012e FB68     		ldr	r3, [r7, #12]
 3729 0130 062B     		cmp	r3, #6
 3730 0132 10D0     		beq	.L253
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 3731              		.loc 1 1485 7
 3732 0134 7B68     		ldr	r3, [r7, #4]
 3733 0136 1B68     		ldr	r3, [r3]
 3734 0138 1A68     		ldr	r2, [r3]
 3735 013a 7B68     		ldr	r3, [r7, #4]
 3736 013c 1B68     		ldr	r3, [r3]
 3737 013e 42F00102 		orr	r2, r2, #1
 3738 0142 1A60     		str	r2, [r3]
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 3739              		.loc 1 1483 8
 3740 0144 07E0     		b	.L253
 3741              	.L251:
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp//ccJMd58S.s 			page 92


1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 3742              		.loc 1 1490 5
 3743 0146 7B68     		ldr	r3, [r7, #4]
 3744 0148 1B68     		ldr	r3, [r3]
 3745 014a 1A68     		ldr	r2, [r3]
 3746 014c 7B68     		ldr	r3, [r7, #4]
 3747 014e 1B68     		ldr	r3, [r3]
 3748 0150 42F00102 		orr	r2, r2, #1
 3749 0154 1A60     		str	r2, [r3]
 3750              	.L253:
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 3751              		.loc 1 1494 10
 3752 0156 0023     		movs	r3, #0
 3753              	.L239:
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 3754              		.loc 1 1495 1
 3755 0158 1846     		mov	r0, r3
 3756 015a 1037     		adds	r7, r7, #16
 3757              	.LCFI133:
 3758              		.cfi_def_cfa_offset 8
 3759 015c BD46     		mov	sp, r7
 3760              	.LCFI134:
 3761              		.cfi_def_cfa_register 13
 3762              		@ sp needed
 3763 015e 80BD     		pop	{r7, pc}
 3764              	.L255:
 3765              		.align	2
 3766              	.L254:
 3767 0160 002C0140 		.word	1073818624
 3768 0164 00340140 		.word	1073820672
 3769 0168 00040040 		.word	1073742848
 3770 016c 00080040 		.word	1073743872
 3771 0170 000C0040 		.word	1073744896
 3772              		.cfi_endproc
 3773              	.LFE89:
 3775              		.section	.text.HAL_TIM_PWM_Stop,"ax",%progbits
 3776              		.align	1
 3777              		.global	HAL_TIM_PWM_Stop
 3778              		.syntax unified
 3779              		.thumb
 3780              		.thumb_func
 3782              	HAL_TIM_PWM_Stop:
 3783              	.LFB90:
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the PWM signal generation.
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
ARM GAS  /tmp//ccJMd58S.s 			page 93


1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 3784              		.loc 1 1509 1
 3785              		.cfi_startproc
 3786              		@ args = 0, pretend = 0, frame = 8
 3787              		@ frame_needed = 1, uses_anonymous_args = 0
 3788 0000 80B5     		push	{r7, lr}
 3789              	.LCFI135:
 3790              		.cfi_def_cfa_offset 8
 3791              		.cfi_offset 7, -8
 3792              		.cfi_offset 14, -4
 3793 0002 82B0     		sub	sp, sp, #8
 3794              	.LCFI136:
 3795              		.cfi_def_cfa_offset 16
 3796 0004 00AF     		add	r7, sp, #0
 3797              	.LCFI137:
 3798              		.cfi_def_cfa_register 7
 3799 0006 7860     		str	r0, [r7, #4]
 3800 0008 3960     		str	r1, [r7]
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Capture compare channel */
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 3801              		.loc 1 1514 3
 3802 000a 7B68     		ldr	r3, [r7, #4]
 3803 000c 1B68     		ldr	r3, [r3]
 3804 000e 0022     		movs	r2, #0
 3805 0010 3968     		ldr	r1, [r7]
 3806 0012 1846     		mov	r0, r3
 3807 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 3808              		.loc 1 1516 7
 3809 0018 7B68     		ldr	r3, [r7, #4]
 3810 001a 1B68     		ldr	r3, [r3]
 3811 001c 2E4A     		ldr	r2, .L269
 3812 001e 9342     		cmp	r3, r2
 3813 0020 04D0     		beq	.L257
 3814              		.loc 1 1516 7 is_stmt 0 discriminator 2
 3815 0022 7B68     		ldr	r3, [r7, #4]
 3816 0024 1B68     		ldr	r3, [r3]
 3817 0026 2D4A     		ldr	r2, .L269+4
 3818 0028 9342     		cmp	r3, r2
 3819 002a 01D1     		bne	.L258
 3820              	.L257:
 3821              		.loc 1 1516 7 discriminator 3
 3822 002c 0123     		movs	r3, #1
 3823              		.loc 1 1516 7
 3824 002e 00E0     		b	.L259
 3825              	.L258:
 3826              		.loc 1 1516 7 discriminator 4
 3827 0030 0023     		movs	r3, #0
 3828              	.L259:
ARM GAS  /tmp//ccJMd58S.s 			page 94


 3829              		.loc 1 1516 6 is_stmt 1 discriminator 6
 3830 0032 002B     		cmp	r3, #0
 3831 0034 17D0     		beq	.L260
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 3832              		.loc 1 1519 5
 3833 0036 7B68     		ldr	r3, [r7, #4]
 3834 0038 1B68     		ldr	r3, [r3]
 3835 003a 1A6A     		ldr	r2, [r3, #32]
 3836 003c 41F21113 		movw	r3, #4369
 3837 0040 1340     		ands	r3, r3, r2
 3838 0042 002B     		cmp	r3, #0
 3839 0044 0FD1     		bne	.L260
 3840              		.loc 1 1519 5 is_stmt 0 discriminator 1
 3841 0046 7B68     		ldr	r3, [r7, #4]
 3842 0048 1B68     		ldr	r3, [r3]
 3843 004a 1A6A     		ldr	r2, [r3, #32]
 3844 004c 40F24443 		movw	r3, #1092
 3845 0050 1340     		ands	r3, r3, r2
 3846 0052 002B     		cmp	r3, #0
 3847 0054 07D1     		bne	.L260
 3848              		.loc 1 1519 5 discriminator 2
 3849 0056 7B68     		ldr	r3, [r7, #4]
 3850 0058 1B68     		ldr	r3, [r3]
 3851 005a 5A6C     		ldr	r2, [r3, #68]
 3852 005c 7B68     		ldr	r3, [r7, #4]
 3853 005e 1B68     		ldr	r3, [r3]
 3854 0060 22F40042 		bic	r2, r2, #32768
 3855 0064 5A64     		str	r2, [r3, #68]
 3856              	.L260:
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 3857              		.loc 1 1523 3 is_stmt 1
 3858 0066 7B68     		ldr	r3, [r7, #4]
 3859 0068 1B68     		ldr	r3, [r3]
 3860 006a 1A6A     		ldr	r2, [r3, #32]
 3861 006c 41F21113 		movw	r3, #4369
 3862 0070 1340     		ands	r3, r3, r2
 3863 0072 002B     		cmp	r3, #0
 3864 0074 0FD1     		bne	.L261
 3865              		.loc 1 1523 3 is_stmt 0 discriminator 1
 3866 0076 7B68     		ldr	r3, [r7, #4]
 3867 0078 1B68     		ldr	r3, [r3]
 3868 007a 1A6A     		ldr	r2, [r3, #32]
 3869 007c 40F24443 		movw	r3, #1092
 3870 0080 1340     		ands	r3, r3, r2
 3871 0082 002B     		cmp	r3, #0
 3872 0084 07D1     		bne	.L261
 3873              		.loc 1 1523 3 discriminator 2
 3874 0086 7B68     		ldr	r3, [r7, #4]
 3875 0088 1B68     		ldr	r3, [r3]
 3876 008a 1A68     		ldr	r2, [r3]
 3877 008c 7B68     		ldr	r3, [r7, #4]
 3878 008e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 95


 3879 0090 22F00102 		bic	r2, r2, #1
 3880 0094 1A60     		str	r2, [r3]
 3881              	.L261:
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 3882              		.loc 1 1526 3 is_stmt 1
 3883 0096 3B68     		ldr	r3, [r7]
 3884 0098 002B     		cmp	r3, #0
 3885 009a 04D1     		bne	.L262
 3886              		.loc 1 1526 3 is_stmt 0 discriminator 1
 3887 009c 7B68     		ldr	r3, [r7, #4]
 3888 009e 0122     		movs	r2, #1
 3889 00a0 83F83E20 		strb	r2, [r3, #62]
 3890 00a4 13E0     		b	.L263
 3891              	.L262:
 3892              		.loc 1 1526 3 discriminator 2
 3893 00a6 3B68     		ldr	r3, [r7]
 3894 00a8 042B     		cmp	r3, #4
 3895 00aa 04D1     		bne	.L264
 3896              		.loc 1 1526 3 discriminator 3
 3897 00ac 7B68     		ldr	r3, [r7, #4]
 3898 00ae 0122     		movs	r2, #1
 3899 00b0 83F83F20 		strb	r2, [r3, #63]
 3900 00b4 0BE0     		b	.L263
 3901              	.L264:
 3902              		.loc 1 1526 3 discriminator 4
 3903 00b6 3B68     		ldr	r3, [r7]
 3904 00b8 082B     		cmp	r3, #8
 3905 00ba 04D1     		bne	.L266
 3906              		.loc 1 1526 3 discriminator 6
 3907 00bc 7B68     		ldr	r3, [r7, #4]
 3908 00be 0122     		movs	r2, #1
 3909 00c0 83F84020 		strb	r2, [r3, #64]
 3910 00c4 03E0     		b	.L263
 3911              	.L266:
 3912              		.loc 1 1526 3 discriminator 7
 3913 00c6 7B68     		ldr	r3, [r7, #4]
 3914 00c8 0122     		movs	r2, #1
 3915 00ca 83F84120 		strb	r2, [r3, #65]
 3916              	.L263:
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 3917              		.loc 1 1529 10 is_stmt 1
 3918 00ce 0023     		movs	r3, #0
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 3919              		.loc 1 1530 1
 3920 00d0 1846     		mov	r0, r3
 3921 00d2 0837     		adds	r7, r7, #8
 3922              	.LCFI138:
 3923              		.cfi_def_cfa_offset 8
 3924 00d4 BD46     		mov	sp, r7
 3925              	.LCFI139:
 3926              		.cfi_def_cfa_register 13
 3927              		@ sp needed
 3928 00d6 80BD     		pop	{r7, pc}
ARM GAS  /tmp//ccJMd58S.s 			page 96


 3929              	.L270:
 3930              		.align	2
 3931              	.L269:
 3932 00d8 002C0140 		.word	1073818624
 3933 00dc 00340140 		.word	1073820672
 3934              		.cfi_endproc
 3935              	.LFE90:
 3937              		.section	.text.HAL_TIM_PWM_Start_IT,"ax",%progbits
 3938              		.align	1
 3939              		.global	HAL_TIM_PWM_Start_IT
 3940              		.syntax unified
 3941              		.thumb
 3942              		.thumb_func
 3944              	HAL_TIM_PWM_Start_IT:
 3945              	.LFB91:
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the PWM signal generation in interrupt mode.
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to be enabled
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 3946              		.loc 1 1544 1
 3947              		.cfi_startproc
 3948              		@ args = 0, pretend = 0, frame = 16
 3949              		@ frame_needed = 1, uses_anonymous_args = 0
 3950 0000 80B5     		push	{r7, lr}
 3951              	.LCFI140:
 3952              		.cfi_def_cfa_offset 8
 3953              		.cfi_offset 7, -8
 3954              		.cfi_offset 14, -4
 3955 0002 84B0     		sub	sp, sp, #16
 3956              	.LCFI141:
 3957              		.cfi_def_cfa_offset 24
 3958 0004 00AF     		add	r7, sp, #0
 3959              	.LCFI142:
 3960              		.cfi_def_cfa_register 7
 3961 0006 7860     		str	r0, [r7, #4]
 3962 0008 3960     		str	r1, [r7]
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 3963              		.loc 1 1545 21
 3964 000a 0023     		movs	r3, #0
 3965 000c FB73     		strb	r3, [r7, #15]
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM channel state */
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
ARM GAS  /tmp//ccJMd58S.s 			page 97


 3966              		.loc 1 1552 44
 3967 000e 3B68     		ldr	r3, [r7]
 3968 0010 002B     		cmp	r3, #0
 3969 0012 09D1     		bne	.L272
 3970              		.loc 1 1552 7 discriminator 1
 3971 0014 7B68     		ldr	r3, [r7, #4]
 3972 0016 93F83E30 		ldrb	r3, [r3, #62]
 3973 001a DBB2     		uxtb	r3, r3
 3974              		.loc 1 1552 44 discriminator 1
 3975 001c 012B     		cmp	r3, #1
 3976 001e 14BF     		ite	ne
 3977 0020 0123     		movne	r3, #1
 3978 0022 0023     		moveq	r3, #0
 3979 0024 DBB2     		uxtb	r3, r3
 3980 0026 22E0     		b	.L273
 3981              	.L272:
 3982              		.loc 1 1552 44 is_stmt 0 discriminator 2
 3983 0028 3B68     		ldr	r3, [r7]
 3984 002a 042B     		cmp	r3, #4
 3985 002c 09D1     		bne	.L274
 3986              		.loc 1 1552 7 is_stmt 1 discriminator 4
 3987 002e 7B68     		ldr	r3, [r7, #4]
 3988 0030 93F83F30 		ldrb	r3, [r3, #63]
 3989 0034 DBB2     		uxtb	r3, r3
 3990              		.loc 1 1552 44 discriminator 4
 3991 0036 012B     		cmp	r3, #1
 3992 0038 14BF     		ite	ne
 3993 003a 0123     		movne	r3, #1
 3994 003c 0023     		moveq	r3, #0
 3995 003e DBB2     		uxtb	r3, r3
 3996 0040 15E0     		b	.L273
 3997              	.L274:
 3998              		.loc 1 1552 44 is_stmt 0 discriminator 5
 3999 0042 3B68     		ldr	r3, [r7]
 4000 0044 082B     		cmp	r3, #8
 4001 0046 09D1     		bne	.L276
 4002              		.loc 1 1552 7 is_stmt 1 discriminator 7
 4003 0048 7B68     		ldr	r3, [r7, #4]
 4004 004a 93F84030 		ldrb	r3, [r3, #64]
 4005 004e DBB2     		uxtb	r3, r3
 4006              		.loc 1 1552 44 discriminator 7
 4007 0050 012B     		cmp	r3, #1
 4008 0052 14BF     		ite	ne
 4009 0054 0123     		movne	r3, #1
 4010 0056 0023     		moveq	r3, #0
 4011 0058 DBB2     		uxtb	r3, r3
 4012 005a 08E0     		b	.L273
 4013              	.L276:
 4014              		.loc 1 1552 7 discriminator 8
 4015 005c 7B68     		ldr	r3, [r7, #4]
 4016 005e 93F84130 		ldrb	r3, [r3, #65]
 4017 0062 DBB2     		uxtb	r3, r3
 4018              		.loc 1 1552 44 discriminator 8
 4019 0064 012B     		cmp	r3, #1
 4020 0066 14BF     		ite	ne
 4021 0068 0123     		movne	r3, #1
 4022 006a 0023     		moveq	r3, #0
ARM GAS  /tmp//ccJMd58S.s 			page 98


 4023 006c DBB2     		uxtb	r3, r3
 4024              	.L273:
 4025              		.loc 1 1552 6 discriminator 12
 4026 006e 002B     		cmp	r3, #0
 4027 0070 01D0     		beq	.L278
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 4028              		.loc 1 1554 12
 4029 0072 0123     		movs	r3, #1
 4030 0074 BDE0     		b	.L279
 4031              	.L278:
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 4032              		.loc 1 1558 3
 4033 0076 3B68     		ldr	r3, [r7]
 4034 0078 002B     		cmp	r3, #0
 4035 007a 04D1     		bne	.L280
 4036              		.loc 1 1558 3 is_stmt 0 discriminator 1
 4037 007c 7B68     		ldr	r3, [r7, #4]
 4038 007e 0222     		movs	r2, #2
 4039 0080 83F83E20 		strb	r2, [r3, #62]
 4040 0084 13E0     		b	.L281
 4041              	.L280:
 4042              		.loc 1 1558 3 discriminator 2
 4043 0086 3B68     		ldr	r3, [r7]
 4044 0088 042B     		cmp	r3, #4
 4045 008a 04D1     		bne	.L282
 4046              		.loc 1 1558 3 discriminator 3
 4047 008c 7B68     		ldr	r3, [r7, #4]
 4048 008e 0222     		movs	r2, #2
 4049 0090 83F83F20 		strb	r2, [r3, #63]
 4050 0094 0BE0     		b	.L281
 4051              	.L282:
 4052              		.loc 1 1558 3 discriminator 4
 4053 0096 3B68     		ldr	r3, [r7]
 4054 0098 082B     		cmp	r3, #8
 4055 009a 04D1     		bne	.L284
 4056              		.loc 1 1558 3 discriminator 6
 4057 009c 7B68     		ldr	r3, [r7, #4]
 4058 009e 0222     		movs	r2, #2
 4059 00a0 83F84020 		strb	r2, [r3, #64]
 4060 00a4 03E0     		b	.L281
 4061              	.L284:
 4062              		.loc 1 1558 3 discriminator 7
 4063 00a6 7B68     		ldr	r3, [r7, #4]
 4064 00a8 0222     		movs	r2, #2
 4065 00aa 83F84120 		strb	r2, [r3, #65]
 4066              	.L281:
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 4067              		.loc 1 1560 3 is_stmt 1
 4068 00ae 3B68     		ldr	r3, [r7]
 4069 00b0 0C2B     		cmp	r3, #12
 4070 00b2 41D8     		bhi	.L286
 4071 00b4 01A2     		adr	r2, .L288
ARM GAS  /tmp//ccJMd58S.s 			page 99


 4072 00b6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4073 00ba 00BF     		.p2align 2
 4074              	.L288:
 4075 00bc F1000000 		.word	.L291+1
 4076 00c0 39010000 		.word	.L286+1
 4077 00c4 39010000 		.word	.L286+1
 4078 00c8 39010000 		.word	.L286+1
 4079 00cc 03010000 		.word	.L290+1
 4080 00d0 39010000 		.word	.L286+1
 4081 00d4 39010000 		.word	.L286+1
 4082 00d8 39010000 		.word	.L286+1
 4083 00dc 15010000 		.word	.L289+1
 4084 00e0 39010000 		.word	.L286+1
 4085 00e4 39010000 		.word	.L286+1
 4086 00e8 39010000 		.word	.L286+1
 4087 00ec 27010000 		.word	.L287+1
 4088              		.p2align 1
 4089              	.L291:
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 4090              		.loc 1 1565 7
 4091 00f0 7B68     		ldr	r3, [r7, #4]
 4092 00f2 1B68     		ldr	r3, [r3]
 4093 00f4 DA68     		ldr	r2, [r3, #12]
 4094 00f6 7B68     		ldr	r3, [r7, #4]
 4095 00f8 1B68     		ldr	r3, [r3]
 4096 00fa 42F00202 		orr	r2, r2, #2
 4097 00fe DA60     		str	r2, [r3, #12]
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4098              		.loc 1 1566 7
 4099 0100 1DE0     		b	.L292
 4100              	.L290:
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 4101              		.loc 1 1572 7
 4102 0102 7B68     		ldr	r3, [r7, #4]
 4103 0104 1B68     		ldr	r3, [r3]
 4104 0106 DA68     		ldr	r2, [r3, #12]
 4105 0108 7B68     		ldr	r3, [r7, #4]
 4106 010a 1B68     		ldr	r3, [r3]
 4107 010c 42F00402 		orr	r2, r2, #4
 4108 0110 DA60     		str	r2, [r3, #12]
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4109              		.loc 1 1573 7
 4110 0112 14E0     		b	.L292
 4111              	.L289:
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
ARM GAS  /tmp//ccJMd58S.s 			page 100


1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 4112              		.loc 1 1579 7
 4113 0114 7B68     		ldr	r3, [r7, #4]
 4114 0116 1B68     		ldr	r3, [r3]
 4115 0118 DA68     		ldr	r2, [r3, #12]
 4116 011a 7B68     		ldr	r3, [r7, #4]
 4117 011c 1B68     		ldr	r3, [r3]
 4118 011e 42F00802 		orr	r2, r2, #8
 4119 0122 DA60     		str	r2, [r3, #12]
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4120              		.loc 1 1580 7
 4121 0124 0BE0     		b	.L292
 4122              	.L287:
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 4123              		.loc 1 1586 7
 4124 0126 7B68     		ldr	r3, [r7, #4]
 4125 0128 1B68     		ldr	r3, [r3]
 4126 012a DA68     		ldr	r2, [r3, #12]
 4127 012c 7B68     		ldr	r3, [r7, #4]
 4128 012e 1B68     		ldr	r3, [r3]
 4129 0130 42F01002 		orr	r2, r2, #16
 4130 0134 DA60     		str	r2, [r3, #12]
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4131              		.loc 1 1587 7
 4132 0136 02E0     		b	.L292
 4133              	.L286:
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 4134              		.loc 1 1591 14
 4135 0138 0123     		movs	r3, #1
 4136 013a FB73     		strb	r3, [r7, #15]
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4137              		.loc 1 1592 7
 4138 013c 00BF     		nop
 4139              	.L292:
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 4140              		.loc 1 1595 6
 4141 013e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4142 0140 002B     		cmp	r3, #0
 4143 0142 55D1     		bne	.L293
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Capture compare channel */
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 4144              		.loc 1 1598 5
 4145 0144 7B68     		ldr	r3, [r7, #4]
 4146 0146 1B68     		ldr	r3, [r3]
 4147 0148 0122     		movs	r2, #1
ARM GAS  /tmp//ccJMd58S.s 			page 101


 4148 014a 3968     		ldr	r1, [r7]
 4149 014c 1846     		mov	r0, r3
 4150 014e FFF7FEFF 		bl	TIM_CCxChannelCmd
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 4151              		.loc 1 1600 9
 4152 0152 7B68     		ldr	r3, [r7, #4]
 4153 0154 1B68     		ldr	r3, [r3]
 4154 0156 294A     		ldr	r2, .L301
 4155 0158 9342     		cmp	r3, r2
 4156 015a 04D0     		beq	.L294
 4157              		.loc 1 1600 9 is_stmt 0 discriminator 2
 4158 015c 7B68     		ldr	r3, [r7, #4]
 4159 015e 1B68     		ldr	r3, [r3]
 4160 0160 274A     		ldr	r2, .L301+4
 4161 0162 9342     		cmp	r3, r2
 4162 0164 01D1     		bne	.L295
 4163              	.L294:
 4164              		.loc 1 1600 9 discriminator 3
 4165 0166 0123     		movs	r3, #1
 4166              		.loc 1 1600 9
 4167 0168 00E0     		b	.L296
 4168              	.L295:
 4169              		.loc 1 1600 9 discriminator 4
 4170 016a 0023     		movs	r3, #0
 4171              	.L296:
 4172              		.loc 1 1600 8 is_stmt 1 discriminator 6
 4173 016c 002B     		cmp	r3, #0
 4174 016e 07D0     		beq	.L297
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the main output */
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_MOE_ENABLE(htim);
 4175              		.loc 1 1603 7
 4176 0170 7B68     		ldr	r3, [r7, #4]
 4177 0172 1B68     		ldr	r3, [r3]
 4178 0174 5A6C     		ldr	r2, [r3, #68]
 4179 0176 7B68     		ldr	r3, [r7, #4]
 4180 0178 1B68     		ldr	r3, [r3]
 4181 017a 42F40042 		orr	r2, r2, #32768
 4182 017e 5A64     		str	r2, [r3, #68]
 4183              	.L297:
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 4184              		.loc 1 1607 9
 4185 0180 7B68     		ldr	r3, [r7, #4]
 4186 0182 1B68     		ldr	r3, [r3]
 4187              		.loc 1 1607 8
 4188 0184 1D4A     		ldr	r2, .L301
 4189 0186 9342     		cmp	r3, r2
 4190 0188 18D0     		beq	.L298
 4191              		.loc 1 1607 9 discriminator 1
 4192 018a 7B68     		ldr	r3, [r7, #4]
 4193 018c 1B68     		ldr	r3, [r3]
 4194 018e 1C4A     		ldr	r2, .L301+4
 4195 0190 9342     		cmp	r3, r2
ARM GAS  /tmp//ccJMd58S.s 			page 102


 4196 0192 13D0     		beq	.L298
 4197              		.loc 1 1607 9 is_stmt 0 discriminator 2
 4198 0194 7B68     		ldr	r3, [r7, #4]
 4199 0196 1B68     		ldr	r3, [r3]
 4200 0198 B3F1804F 		cmp	r3, #1073741824
 4201 019c 0ED0     		beq	.L298
 4202              		.loc 1 1607 9 discriminator 3
 4203 019e 7B68     		ldr	r3, [r7, #4]
 4204 01a0 1B68     		ldr	r3, [r3]
 4205 01a2 184A     		ldr	r2, .L301+8
 4206 01a4 9342     		cmp	r3, r2
 4207 01a6 09D0     		beq	.L298
 4208              		.loc 1 1607 9 discriminator 4
 4209 01a8 7B68     		ldr	r3, [r7, #4]
 4210 01aa 1B68     		ldr	r3, [r3]
 4211 01ac 164A     		ldr	r2, .L301+12
 4212 01ae 9342     		cmp	r3, r2
 4213 01b0 04D0     		beq	.L298
 4214              		.loc 1 1607 9 discriminator 5
 4215 01b2 7B68     		ldr	r3, [r7, #4]
 4216 01b4 1B68     		ldr	r3, [r3]
 4217 01b6 154A     		ldr	r2, .L301+16
 4218 01b8 9342     		cmp	r3, r2
 4219 01ba 11D1     		bne	.L299
 4220              	.L298:
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 4221              		.loc 1 1609 21 is_stmt 1
 4222 01bc 7B68     		ldr	r3, [r7, #4]
 4223 01be 1B68     		ldr	r3, [r3]
 4224              		.loc 1 1609 31
 4225 01c0 9B68     		ldr	r3, [r3, #8]
 4226              		.loc 1 1609 15
 4227 01c2 03F00703 		and	r3, r3, #7
 4228 01c6 BB60     		str	r3, [r7, #8]
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 4229              		.loc 1 1610 10
 4230 01c8 BB68     		ldr	r3, [r7, #8]
 4231 01ca 062B     		cmp	r3, #6
 4232 01cc 10D0     		beq	.L293
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
 4233              		.loc 1 1612 9
 4234 01ce 7B68     		ldr	r3, [r7, #4]
 4235 01d0 1B68     		ldr	r3, [r3]
 4236 01d2 1A68     		ldr	r2, [r3]
 4237 01d4 7B68     		ldr	r3, [r7, #4]
 4238 01d6 1B68     		ldr	r3, [r3]
 4239 01d8 42F00102 		orr	r2, r2, #1
 4240 01dc 1A60     		str	r2, [r3]
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 4241              		.loc 1 1610 10
 4242 01de 07E0     		b	.L293
 4243              	.L299:
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
ARM GAS  /tmp//ccJMd58S.s 			page 103


1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 4244              		.loc 1 1617 7
 4245 01e0 7B68     		ldr	r3, [r7, #4]
 4246 01e2 1B68     		ldr	r3, [r3]
 4247 01e4 1A68     		ldr	r2, [r3]
 4248 01e6 7B68     		ldr	r3, [r7, #4]
 4249 01e8 1B68     		ldr	r3, [r3]
 4250 01ea 42F00102 		orr	r2, r2, #1
 4251 01ee 1A60     		str	r2, [r3]
 4252              	.L293:
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 4253              		.loc 1 1622 10
 4254 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4255              	.L279:
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 4256              		.loc 1 1623 1
 4257 01f2 1846     		mov	r0, r3
 4258 01f4 1037     		adds	r7, r7, #16
 4259              	.LCFI143:
 4260              		.cfi_def_cfa_offset 8
 4261 01f6 BD46     		mov	sp, r7
 4262              	.LCFI144:
 4263              		.cfi_def_cfa_register 13
 4264              		@ sp needed
 4265 01f8 80BD     		pop	{r7, pc}
 4266              	.L302:
 4267 01fa 00BF     		.align	2
 4268              	.L301:
 4269 01fc 002C0140 		.word	1073818624
 4270 0200 00340140 		.word	1073820672
 4271 0204 00040040 		.word	1073742848
 4272 0208 00080040 		.word	1073743872
 4273 020c 000C0040 		.word	1073744896
 4274              		.cfi_endproc
 4275              	.LFE91:
 4277              		.section	.text.HAL_TIM_PWM_Stop_IT,"ax",%progbits
 4278              		.align	1
 4279              		.global	HAL_TIM_PWM_Stop_IT
 4280              		.syntax unified
 4281              		.thumb
 4282              		.thumb_func
 4284              	HAL_TIM_PWM_Stop_IT:
 4285              	.LFB92:
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the PWM signal generation in interrupt mode.
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
ARM GAS  /tmp//ccJMd58S.s 			page 104


1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 4286              		.loc 1 1637 1
 4287              		.cfi_startproc
 4288              		@ args = 0, pretend = 0, frame = 16
 4289              		@ frame_needed = 1, uses_anonymous_args = 0
 4290 0000 80B5     		push	{r7, lr}
 4291              	.LCFI145:
 4292              		.cfi_def_cfa_offset 8
 4293              		.cfi_offset 7, -8
 4294              		.cfi_offset 14, -4
 4295 0002 84B0     		sub	sp, sp, #16
 4296              	.LCFI146:
 4297              		.cfi_def_cfa_offset 24
 4298 0004 00AF     		add	r7, sp, #0
 4299              	.LCFI147:
 4300              		.cfi_def_cfa_register 7
 4301 0006 7860     		str	r0, [r7, #4]
 4302 0008 3960     		str	r1, [r7]
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 4303              		.loc 1 1638 21
 4304 000a 0023     		movs	r3, #0
 4305 000c FB73     		strb	r3, [r7, #15]
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 4306              		.loc 1 1643 3
 4307 000e 3B68     		ldr	r3, [r7]
 4308 0010 0C2B     		cmp	r3, #12
 4309 0012 41D8     		bhi	.L304
 4310 0014 01A2     		adr	r2, .L306
 4311 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4312 001a 00BF     		.p2align 2
 4313              	.L306:
 4314 001c 51000000 		.word	.L309+1
 4315 0020 99000000 		.word	.L304+1
 4316 0024 99000000 		.word	.L304+1
 4317 0028 99000000 		.word	.L304+1
 4318 002c 63000000 		.word	.L308+1
 4319 0030 99000000 		.word	.L304+1
 4320 0034 99000000 		.word	.L304+1
 4321 0038 99000000 		.word	.L304+1
 4322 003c 75000000 		.word	.L307+1
 4323 0040 99000000 		.word	.L304+1
 4324 0044 99000000 		.word	.L304+1
 4325 0048 99000000 		.word	.L304+1
 4326 004c 87000000 		.word	.L305+1
 4327              		.p2align 1
 4328              	.L309:
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
ARM GAS  /tmp//ccJMd58S.s 			page 105


1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 4329              		.loc 1 1648 7
 4330 0050 7B68     		ldr	r3, [r7, #4]
 4331 0052 1B68     		ldr	r3, [r3]
 4332 0054 DA68     		ldr	r2, [r3, #12]
 4333 0056 7B68     		ldr	r3, [r7, #4]
 4334 0058 1B68     		ldr	r3, [r3]
 4335 005a 22F00202 		bic	r2, r2, #2
 4336 005e DA60     		str	r2, [r3, #12]
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4337              		.loc 1 1649 7
 4338 0060 1DE0     		b	.L310
 4339              	.L308:
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 4340              		.loc 1 1655 7
 4341 0062 7B68     		ldr	r3, [r7, #4]
 4342 0064 1B68     		ldr	r3, [r3]
 4343 0066 DA68     		ldr	r2, [r3, #12]
 4344 0068 7B68     		ldr	r3, [r7, #4]
 4345 006a 1B68     		ldr	r3, [r3]
 4346 006c 22F00402 		bic	r2, r2, #4
 4347 0070 DA60     		str	r2, [r3, #12]
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4348              		.loc 1 1656 7
 4349 0072 14E0     		b	.L310
 4350              	.L307:
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 4351              		.loc 1 1662 7
 4352 0074 7B68     		ldr	r3, [r7, #4]
 4353 0076 1B68     		ldr	r3, [r3]
 4354 0078 DA68     		ldr	r2, [r3, #12]
 4355 007a 7B68     		ldr	r3, [r7, #4]
 4356 007c 1B68     		ldr	r3, [r3]
 4357 007e 22F00802 		bic	r2, r2, #8
 4358 0082 DA60     		str	r2, [r3, #12]
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4359              		.loc 1 1663 7
 4360 0084 0BE0     		b	.L310
 4361              	.L305:
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 4362              		.loc 1 1669 7
ARM GAS  /tmp//ccJMd58S.s 			page 106


 4363 0086 7B68     		ldr	r3, [r7, #4]
 4364 0088 1B68     		ldr	r3, [r3]
 4365 008a DA68     		ldr	r2, [r3, #12]
 4366 008c 7B68     		ldr	r3, [r7, #4]
 4367 008e 1B68     		ldr	r3, [r3]
 4368 0090 22F01002 		bic	r2, r2, #16
 4369 0094 DA60     		str	r2, [r3, #12]
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4370              		.loc 1 1670 7
 4371 0096 02E0     		b	.L310
 4372              	.L304:
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 4373              		.loc 1 1674 14
 4374 0098 0123     		movs	r3, #1
 4375 009a FB73     		strb	r3, [r7, #15]
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4376              		.loc 1 1675 7
 4377 009c 00BF     		nop
 4378              	.L310:
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 4379              		.loc 1 1678 6
 4380 009e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4381 00a0 002B     		cmp	r3, #0
 4382 00a2 61D1     		bne	.L311
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Capture compare channel */
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 4383              		.loc 1 1681 5
 4384 00a4 7B68     		ldr	r3, [r7, #4]
 4385 00a6 1B68     		ldr	r3, [r3]
 4386 00a8 0022     		movs	r2, #0
 4387 00aa 3968     		ldr	r1, [r7]
 4388 00ac 1846     		mov	r0, r3
 4389 00ae FFF7FEFF 		bl	TIM_CCxChannelCmd
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 4390              		.loc 1 1683 9
 4391 00b2 7B68     		ldr	r3, [r7, #4]
 4392 00b4 1B68     		ldr	r3, [r3]
 4393 00b6 2F4A     		ldr	r2, .L323
 4394 00b8 9342     		cmp	r3, r2
 4395 00ba 04D0     		beq	.L312
 4396              		.loc 1 1683 9 is_stmt 0 discriminator 2
 4397 00bc 7B68     		ldr	r3, [r7, #4]
 4398 00be 1B68     		ldr	r3, [r3]
 4399 00c0 2D4A     		ldr	r2, .L323+4
 4400 00c2 9342     		cmp	r3, r2
 4401 00c4 01D1     		bne	.L313
 4402              	.L312:
 4403              		.loc 1 1683 9 discriminator 3
 4404 00c6 0123     		movs	r3, #1
 4405              		.loc 1 1683 9
ARM GAS  /tmp//ccJMd58S.s 			page 107


 4406 00c8 00E0     		b	.L314
 4407              	.L313:
 4408              		.loc 1 1683 9 discriminator 4
 4409 00ca 0023     		movs	r3, #0
 4410              	.L314:
 4411              		.loc 1 1683 8 is_stmt 1 discriminator 6
 4412 00cc 002B     		cmp	r3, #0
 4413 00ce 17D0     		beq	.L315
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the Main Output */
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_MOE_DISABLE(htim);
 4414              		.loc 1 1686 7
 4415 00d0 7B68     		ldr	r3, [r7, #4]
 4416 00d2 1B68     		ldr	r3, [r3]
 4417 00d4 1A6A     		ldr	r2, [r3, #32]
 4418 00d6 41F21113 		movw	r3, #4369
 4419 00da 1340     		ands	r3, r3, r2
 4420 00dc 002B     		cmp	r3, #0
 4421 00de 0FD1     		bne	.L315
 4422              		.loc 1 1686 7 is_stmt 0 discriminator 1
 4423 00e0 7B68     		ldr	r3, [r7, #4]
 4424 00e2 1B68     		ldr	r3, [r3]
 4425 00e4 1A6A     		ldr	r2, [r3, #32]
 4426 00e6 40F24443 		movw	r3, #1092
 4427 00ea 1340     		ands	r3, r3, r2
 4428 00ec 002B     		cmp	r3, #0
 4429 00ee 07D1     		bne	.L315
 4430              		.loc 1 1686 7 discriminator 2
 4431 00f0 7B68     		ldr	r3, [r7, #4]
 4432 00f2 1B68     		ldr	r3, [r3]
 4433 00f4 5A6C     		ldr	r2, [r3, #68]
 4434 00f6 7B68     		ldr	r3, [r7, #4]
 4435 00f8 1B68     		ldr	r3, [r3]
 4436 00fa 22F40042 		bic	r2, r2, #32768
 4437 00fe 5A64     		str	r2, [r3, #68]
 4438              	.L315:
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Peripheral */
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
 4439              		.loc 1 1690 5 is_stmt 1
 4440 0100 7B68     		ldr	r3, [r7, #4]
 4441 0102 1B68     		ldr	r3, [r3]
 4442 0104 1A6A     		ldr	r2, [r3, #32]
 4443 0106 41F21113 		movw	r3, #4369
 4444 010a 1340     		ands	r3, r3, r2
 4445 010c 002B     		cmp	r3, #0
 4446 010e 0FD1     		bne	.L316
 4447              		.loc 1 1690 5 is_stmt 0 discriminator 1
 4448 0110 7B68     		ldr	r3, [r7, #4]
 4449 0112 1B68     		ldr	r3, [r3]
 4450 0114 1A6A     		ldr	r2, [r3, #32]
 4451 0116 40F24443 		movw	r3, #1092
 4452 011a 1340     		ands	r3, r3, r2
 4453 011c 002B     		cmp	r3, #0
 4454 011e 07D1     		bne	.L316
 4455              		.loc 1 1690 5 discriminator 2
ARM GAS  /tmp//ccJMd58S.s 			page 108


 4456 0120 7B68     		ldr	r3, [r7, #4]
 4457 0122 1B68     		ldr	r3, [r3]
 4458 0124 1A68     		ldr	r2, [r3]
 4459 0126 7B68     		ldr	r3, [r7, #4]
 4460 0128 1B68     		ldr	r3, [r3]
 4461 012a 22F00102 		bic	r2, r2, #1
 4462 012e 1A60     		str	r2, [r3]
 4463              	.L316:
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the TIM channel state */
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 4464              		.loc 1 1693 5 is_stmt 1
 4465 0130 3B68     		ldr	r3, [r7]
 4466 0132 002B     		cmp	r3, #0
 4467 0134 04D1     		bne	.L317
 4468              		.loc 1 1693 5 is_stmt 0 discriminator 1
 4469 0136 7B68     		ldr	r3, [r7, #4]
 4470 0138 0122     		movs	r2, #1
 4471 013a 83F83E20 		strb	r2, [r3, #62]
 4472 013e 13E0     		b	.L311
 4473              	.L317:
 4474              		.loc 1 1693 5 discriminator 2
 4475 0140 3B68     		ldr	r3, [r7]
 4476 0142 042B     		cmp	r3, #4
 4477 0144 04D1     		bne	.L318
 4478              		.loc 1 1693 5 discriminator 3
 4479 0146 7B68     		ldr	r3, [r7, #4]
 4480 0148 0122     		movs	r2, #1
 4481 014a 83F83F20 		strb	r2, [r3, #63]
 4482 014e 0BE0     		b	.L311
 4483              	.L318:
 4484              		.loc 1 1693 5 discriminator 4
 4485 0150 3B68     		ldr	r3, [r7]
 4486 0152 082B     		cmp	r3, #8
 4487 0154 04D1     		bne	.L320
 4488              		.loc 1 1693 5 discriminator 6
 4489 0156 7B68     		ldr	r3, [r7, #4]
 4490 0158 0122     		movs	r2, #1
 4491 015a 83F84020 		strb	r2, [r3, #64]
 4492 015e 03E0     		b	.L311
 4493              	.L320:
 4494              		.loc 1 1693 5 discriminator 7
 4495 0160 7B68     		ldr	r3, [r7, #4]
 4496 0162 0122     		movs	r2, #1
 4497 0164 83F84120 		strb	r2, [r3, #65]
 4498              	.L311:
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 4499              		.loc 1 1697 10 is_stmt 1
 4500 0168 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 4501              		.loc 1 1698 1
 4502 016a 1846     		mov	r0, r3
 4503 016c 1037     		adds	r7, r7, #16
 4504              	.LCFI148:
ARM GAS  /tmp//ccJMd58S.s 			page 109


 4505              		.cfi_def_cfa_offset 8
 4506 016e BD46     		mov	sp, r7
 4507              	.LCFI149:
 4508              		.cfi_def_cfa_register 13
 4509              		@ sp needed
 4510 0170 80BD     		pop	{r7, pc}
 4511              	.L324:
 4512 0172 00BF     		.align	2
 4513              	.L323:
 4514 0174 002C0140 		.word	1073818624
 4515 0178 00340140 		.word	1073820672
 4516              		.cfi_endproc
 4517              	.LFE92:
 4519              		.section	.text.HAL_TIM_PWM_Start_DMA,"ax",%progbits
 4520              		.align	1
 4521              		.global	HAL_TIM_PWM_Start_DMA
 4522              		.syntax unified
 4523              		.thumb
 4524              		.thumb_func
 4526              	HAL_TIM_PWM_Start_DMA:
 4527              	.LFB93:
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM PWM signal generation in DMA mode.
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  pData The source Buffer address.
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from memory to TIM peripheral
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, const uint32_t *
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                         uint16_t Length)
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 4528              		.loc 1 1715 1
 4529              		.cfi_startproc
 4530              		@ args = 0, pretend = 0, frame = 24
 4531              		@ frame_needed = 1, uses_anonymous_args = 0
 4532 0000 80B5     		push	{r7, lr}
 4533              	.LCFI150:
 4534              		.cfi_def_cfa_offset 8
 4535              		.cfi_offset 7, -8
 4536              		.cfi_offset 14, -4
 4537 0002 86B0     		sub	sp, sp, #24
 4538              	.LCFI151:
 4539              		.cfi_def_cfa_offset 32
 4540 0004 00AF     		add	r7, sp, #0
 4541              	.LCFI152:
 4542              		.cfi_def_cfa_register 7
 4543 0006 F860     		str	r0, [r7, #12]
 4544 0008 B960     		str	r1, [r7, #8]
 4545 000a 7A60     		str	r2, [r7, #4]
 4546 000c 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  /tmp//ccJMd58S.s 			page 110


1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 4547              		.loc 1 1716 21
 4548 000e 0023     		movs	r3, #0
 4549 0010 FB75     		strb	r3, [r7, #23]
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_BUSY)
 4550              		.loc 1 1723 44
 4551 0012 BB68     		ldr	r3, [r7, #8]
 4552 0014 002B     		cmp	r3, #0
 4553 0016 09D1     		bne	.L326
 4554              		.loc 1 1723 7 discriminator 1
 4555 0018 FB68     		ldr	r3, [r7, #12]
 4556 001a 93F83E30 		ldrb	r3, [r3, #62]
 4557 001e DBB2     		uxtb	r3, r3
 4558              		.loc 1 1723 44 discriminator 1
 4559 0020 022B     		cmp	r3, #2
 4560 0022 0CBF     		ite	eq
 4561 0024 0123     		moveq	r3, #1
 4562 0026 0023     		movne	r3, #0
 4563 0028 DBB2     		uxtb	r3, r3
 4564 002a 22E0     		b	.L327
 4565              	.L326:
 4566              		.loc 1 1723 44 is_stmt 0 discriminator 2
 4567 002c BB68     		ldr	r3, [r7, #8]
 4568 002e 042B     		cmp	r3, #4
 4569 0030 09D1     		bne	.L328
 4570              		.loc 1 1723 7 is_stmt 1 discriminator 4
 4571 0032 FB68     		ldr	r3, [r7, #12]
 4572 0034 93F83F30 		ldrb	r3, [r3, #63]
 4573 0038 DBB2     		uxtb	r3, r3
 4574              		.loc 1 1723 44 discriminator 4
 4575 003a 022B     		cmp	r3, #2
 4576 003c 0CBF     		ite	eq
 4577 003e 0123     		moveq	r3, #1
 4578 0040 0023     		movne	r3, #0
 4579 0042 DBB2     		uxtb	r3, r3
 4580 0044 15E0     		b	.L327
 4581              	.L328:
 4582              		.loc 1 1723 44 is_stmt 0 discriminator 5
 4583 0046 BB68     		ldr	r3, [r7, #8]
 4584 0048 082B     		cmp	r3, #8
 4585 004a 09D1     		bne	.L330
 4586              		.loc 1 1723 7 is_stmt 1 discriminator 7
 4587 004c FB68     		ldr	r3, [r7, #12]
 4588 004e 93F84030 		ldrb	r3, [r3, #64]
 4589 0052 DBB2     		uxtb	r3, r3
 4590              		.loc 1 1723 44 discriminator 7
 4591 0054 022B     		cmp	r3, #2
 4592 0056 0CBF     		ite	eq
 4593 0058 0123     		moveq	r3, #1
 4594 005a 0023     		movne	r3, #0
 4595 005c DBB2     		uxtb	r3, r3
ARM GAS  /tmp//ccJMd58S.s 			page 111


 4596 005e 08E0     		b	.L327
 4597              	.L330:
 4598              		.loc 1 1723 7 discriminator 8
 4599 0060 FB68     		ldr	r3, [r7, #12]
 4600 0062 93F84130 		ldrb	r3, [r3, #65]
 4601 0066 DBB2     		uxtb	r3, r3
 4602              		.loc 1 1723 44 discriminator 8
 4603 0068 022B     		cmp	r3, #2
 4604 006a 0CBF     		ite	eq
 4605 006c 0123     		moveq	r3, #1
 4606 006e 0023     		movne	r3, #0
 4607 0070 DBB2     		uxtb	r3, r3
 4608              	.L327:
 4609              		.loc 1 1723 6 discriminator 12
 4610 0072 002B     		cmp	r3, #0
 4611 0074 01D0     		beq	.L332
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
 4612              		.loc 1 1725 12
 4613 0076 0223     		movs	r3, #2
 4614 0078 67E1     		b	.L333
 4615              	.L332:
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (TIM_CHANNEL_STATE_GET(htim, Channel) == HAL_TIM_CHANNEL_STATE_READY)
 4616              		.loc 1 1727 49
 4617 007a BB68     		ldr	r3, [r7, #8]
 4618 007c 002B     		cmp	r3, #0
 4619 007e 09D1     		bne	.L334
 4620              		.loc 1 1727 12 discriminator 1
 4621 0080 FB68     		ldr	r3, [r7, #12]
 4622 0082 93F83E30 		ldrb	r3, [r3, #62]
 4623 0086 DBB2     		uxtb	r3, r3
 4624              		.loc 1 1727 49 discriminator 1
 4625 0088 012B     		cmp	r3, #1
 4626 008a 0CBF     		ite	eq
 4627 008c 0123     		moveq	r3, #1
 4628 008e 0023     		movne	r3, #0
 4629 0090 DBB2     		uxtb	r3, r3
 4630 0092 22E0     		b	.L335
 4631              	.L334:
 4632              		.loc 1 1727 49 is_stmt 0 discriminator 2
 4633 0094 BB68     		ldr	r3, [r7, #8]
 4634 0096 042B     		cmp	r3, #4
 4635 0098 09D1     		bne	.L336
 4636              		.loc 1 1727 12 is_stmt 1 discriminator 4
 4637 009a FB68     		ldr	r3, [r7, #12]
 4638 009c 93F83F30 		ldrb	r3, [r3, #63]
 4639 00a0 DBB2     		uxtb	r3, r3
 4640              		.loc 1 1727 49 discriminator 4
 4641 00a2 012B     		cmp	r3, #1
 4642 00a4 0CBF     		ite	eq
 4643 00a6 0123     		moveq	r3, #1
 4644 00a8 0023     		movne	r3, #0
 4645 00aa DBB2     		uxtb	r3, r3
 4646 00ac 15E0     		b	.L335
 4647              	.L336:
 4648              		.loc 1 1727 49 is_stmt 0 discriminator 5
ARM GAS  /tmp//ccJMd58S.s 			page 112


 4649 00ae BB68     		ldr	r3, [r7, #8]
 4650 00b0 082B     		cmp	r3, #8
 4651 00b2 09D1     		bne	.L338
 4652              		.loc 1 1727 12 is_stmt 1 discriminator 7
 4653 00b4 FB68     		ldr	r3, [r7, #12]
 4654 00b6 93F84030 		ldrb	r3, [r3, #64]
 4655 00ba DBB2     		uxtb	r3, r3
 4656              		.loc 1 1727 49 discriminator 7
 4657 00bc 012B     		cmp	r3, #1
 4658 00be 0CBF     		ite	eq
 4659 00c0 0123     		moveq	r3, #1
 4660 00c2 0023     		movne	r3, #0
 4661 00c4 DBB2     		uxtb	r3, r3
 4662 00c6 08E0     		b	.L335
 4663              	.L338:
 4664              		.loc 1 1727 12 discriminator 8
 4665 00c8 FB68     		ldr	r3, [r7, #12]
 4666 00ca 93F84130 		ldrb	r3, [r3, #65]
 4667 00ce DBB2     		uxtb	r3, r3
 4668              		.loc 1 1727 49 discriminator 8
 4669 00d0 012B     		cmp	r3, #1
 4670 00d2 0CBF     		ite	eq
 4671 00d4 0123     		moveq	r3, #1
 4672 00d6 0023     		movne	r3, #0
 4673 00d8 DBB2     		uxtb	r3, r3
 4674              	.L335:
 4675              		.loc 1 1727 11 discriminator 12
 4676 00da 002B     		cmp	r3, #0
 4677 00dc 24D0     		beq	.L340
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((pData == NULL) || (Length == 0U))
 4678              		.loc 1 1729 8
 4679 00de 7B68     		ldr	r3, [r7, #4]
 4680 00e0 002B     		cmp	r3, #0
 4681 00e2 02D0     		beq	.L341
 4682              		.loc 1 1729 25 discriminator 1
 4683 00e4 7B88     		ldrh	r3, [r7, #2]
 4684 00e6 002B     		cmp	r3, #0
 4685 00e8 01D1     		bne	.L342
 4686              	.L341:
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 4687              		.loc 1 1731 14
 4688 00ea 0123     		movs	r3, #1
 4689 00ec 2DE1     		b	.L333
 4690              	.L342:
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 4691              		.loc 1 1735 7
 4692 00ee BB68     		ldr	r3, [r7, #8]
 4693 00f0 002B     		cmp	r3, #0
 4694 00f2 04D1     		bne	.L343
 4695              		.loc 1 1735 7 is_stmt 0 discriminator 1
 4696 00f4 FB68     		ldr	r3, [r7, #12]
 4697 00f6 0222     		movs	r2, #2
ARM GAS  /tmp//ccJMd58S.s 			page 113


 4698 00f8 83F83E20 		strb	r2, [r3, #62]
 4699 00fc 16E0     		b	.L344
 4700              	.L343:
 4701              		.loc 1 1735 7 discriminator 2
 4702 00fe BB68     		ldr	r3, [r7, #8]
 4703 0100 042B     		cmp	r3, #4
 4704 0102 04D1     		bne	.L345
 4705              		.loc 1 1735 7 discriminator 3
 4706 0104 FB68     		ldr	r3, [r7, #12]
 4707 0106 0222     		movs	r2, #2
 4708 0108 83F83F20 		strb	r2, [r3, #63]
 4709              		.loc 1 1735 7 discriminator 10
 4710 010c 0EE0     		b	.L344
 4711              	.L345:
 4712              		.loc 1 1735 7 discriminator 4
 4713 010e BB68     		ldr	r3, [r7, #8]
 4714 0110 082B     		cmp	r3, #8
 4715 0112 04D1     		bne	.L347
 4716              		.loc 1 1735 7 discriminator 6
 4717 0114 FB68     		ldr	r3, [r7, #12]
 4718 0116 0222     		movs	r2, #2
 4719 0118 83F84020 		strb	r2, [r3, #64]
 4720              		.loc 1 1735 7 discriminator 10
 4721 011c 06E0     		b	.L344
 4722              	.L347:
 4723              		.loc 1 1735 7 discriminator 7
 4724 011e FB68     		ldr	r3, [r7, #12]
 4725 0120 0222     		movs	r2, #2
 4726 0122 83F84120 		strb	r2, [r3, #65]
 4727 0126 01E0     		b	.L344
 4728              	.L340:
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 4729              		.loc 1 1740 12 is_stmt 1
 4730 0128 0123     		movs	r3, #1
 4731 012a 0EE1     		b	.L333
 4732              	.L344:
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 4733              		.loc 1 1743 3
 4734 012c BB68     		ldr	r3, [r7, #8]
 4735 012e 0C2B     		cmp	r3, #12
 4736 0130 00F2AE80 		bhi	.L349
 4737 0134 01A2     		adr	r2, .L351
 4738 0136 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4739 013a 00BF     		.p2align 2
 4740              	.L351:
 4741 013c 71010000 		.word	.L354+1
 4742 0140 91020000 		.word	.L349+1
 4743 0144 91020000 		.word	.L349+1
 4744 0148 91020000 		.word	.L349+1
 4745 014c B9010000 		.word	.L353+1
 4746 0150 91020000 		.word	.L349+1
ARM GAS  /tmp//ccJMd58S.s 			page 114


 4747 0154 91020000 		.word	.L349+1
 4748 0158 91020000 		.word	.L349+1
 4749 015c 01020000 		.word	.L352+1
 4750 0160 91020000 		.word	.L349+1
 4751 0164 91020000 		.word	.L349+1
 4752 0168 91020000 		.word	.L349+1
 4753 016c 49020000 		.word	.L350+1
 4754              		.p2align 1
 4755              	.L354:
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 4756              		.loc 1 1748 17
 4757 0170 FB68     		ldr	r3, [r7, #12]
 4758 0172 5B6A     		ldr	r3, [r3, #36]
 4759              		.loc 1 1748 52
 4760 0174 774A     		ldr	r2, .L368
 4761 0176 9A62     		str	r2, [r3, #40]
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 4762              		.loc 1 1749 17
 4763 0178 FB68     		ldr	r3, [r7, #12]
 4764 017a 5B6A     		ldr	r3, [r3, #36]
 4765              		.loc 1 1749 56
 4766 017c 764A     		ldr	r2, .L368+4
 4767 017e DA62     		str	r2, [r3, #44]
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 4768              		.loc 1 1752 17
 4769 0180 FB68     		ldr	r3, [r7, #12]
 4770 0182 5B6A     		ldr	r3, [r3, #36]
 4771              		.loc 1 1752 53
 4772 0184 754A     		ldr	r2, .L368+8
 4773 0186 1A63     		str	r2, [r3, #48]
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->
 4774              		.loc 1 1755 11
 4775 0188 FB68     		ldr	r3, [r7, #12]
 4776 018a 586A     		ldr	r0, [r3, #36]
 4777 018c 7968     		ldr	r1, [r7, #4]
 4778              		.loc 1 1755 88
 4779 018e FB68     		ldr	r3, [r7, #12]
 4780 0190 1B68     		ldr	r3, [r3]
 4781              		.loc 1 1755 83
 4782 0192 3433     		adds	r3, r3, #52
 4783              		.loc 1 1755 11
 4784 0194 1A46     		mov	r2, r3
 4785 0196 7B88     		ldrh	r3, [r7, #2]
 4786 0198 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4787 019c 0346     		mov	r3, r0
 4788              		.loc 1 1755 10 discriminator 1
 4789 019e 002B     		cmp	r3, #0
 4790 01a0 01D0     		beq	.L355
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
ARM GAS  /tmp//ccJMd58S.s 			page 115


1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 4791              		.loc 1 1759 16
 4792 01a2 0123     		movs	r3, #1
 4793 01a4 D1E0     		b	.L333
 4794              	.L355:
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 4795              		.loc 1 1763 7
 4796 01a6 FB68     		ldr	r3, [r7, #12]
 4797 01a8 1B68     		ldr	r3, [r3]
 4798 01aa DA68     		ldr	r2, [r3, #12]
 4799 01ac FB68     		ldr	r3, [r7, #12]
 4800 01ae 1B68     		ldr	r3, [r3]
 4801 01b0 42F40072 		orr	r2, r2, #512
 4802 01b4 DA60     		str	r2, [r3, #12]
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4803              		.loc 1 1764 7
 4804 01b6 6EE0     		b	.L356
 4805              	.L353:
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 4806              		.loc 1 1770 17
 4807 01b8 FB68     		ldr	r3, [r7, #12]
 4808 01ba 9B6A     		ldr	r3, [r3, #40]
 4809              		.loc 1 1770 52
 4810 01bc 654A     		ldr	r2, .L368
 4811 01be 9A62     		str	r2, [r3, #40]
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 4812              		.loc 1 1771 17
 4813 01c0 FB68     		ldr	r3, [r7, #12]
 4814 01c2 9B6A     		ldr	r3, [r3, #40]
 4815              		.loc 1 1771 56
 4816 01c4 644A     		ldr	r2, .L368+4
 4817 01c6 DA62     		str	r2, [r3, #44]
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 4818              		.loc 1 1774 17
 4819 01c8 FB68     		ldr	r3, [r7, #12]
 4820 01ca 9B6A     		ldr	r3, [r3, #40]
 4821              		.loc 1 1774 53
 4822 01cc 634A     		ldr	r2, .L368+8
 4823 01ce 1A63     		str	r2, [r3, #48]
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->
 4824              		.loc 1 1777 11
 4825 01d0 FB68     		ldr	r3, [r7, #12]
 4826 01d2 986A     		ldr	r0, [r3, #40]
ARM GAS  /tmp//ccJMd58S.s 			page 116


 4827 01d4 7968     		ldr	r1, [r7, #4]
 4828              		.loc 1 1777 88
 4829 01d6 FB68     		ldr	r3, [r7, #12]
 4830 01d8 1B68     		ldr	r3, [r3]
 4831              		.loc 1 1777 83
 4832 01da 3833     		adds	r3, r3, #56
 4833              		.loc 1 1777 11
 4834 01dc 1A46     		mov	r2, r3
 4835 01de 7B88     		ldrh	r3, [r7, #2]
 4836 01e0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4837 01e4 0346     		mov	r3, r0
 4838              		.loc 1 1777 10 discriminator 1
 4839 01e6 002B     		cmp	r3, #0
 4840 01e8 01D0     		beq	.L357
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 4841              		.loc 1 1781 16
 4842 01ea 0123     		movs	r3, #1
 4843 01ec ADE0     		b	.L333
 4844              	.L357:
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 4845              		.loc 1 1784 7
 4846 01ee FB68     		ldr	r3, [r7, #12]
 4847 01f0 1B68     		ldr	r3, [r3]
 4848 01f2 DA68     		ldr	r2, [r3, #12]
 4849 01f4 FB68     		ldr	r3, [r7, #12]
 4850 01f6 1B68     		ldr	r3, [r3]
 4851 01f8 42F48062 		orr	r2, r2, #1024
 4852 01fc DA60     		str	r2, [r3, #12]
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4853              		.loc 1 1785 7
 4854 01fe 4AE0     		b	.L356
 4855              	.L352:
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 4856              		.loc 1 1791 17
 4857 0200 FB68     		ldr	r3, [r7, #12]
 4858 0202 DB6A     		ldr	r3, [r3, #44]
 4859              		.loc 1 1791 52
 4860 0204 534A     		ldr	r2, .L368
 4861 0206 9A62     		str	r2, [r3, #40]
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 4862              		.loc 1 1792 17
 4863 0208 FB68     		ldr	r3, [r7, #12]
 4864 020a DB6A     		ldr	r3, [r3, #44]
 4865              		.loc 1 1792 56
 4866 020c 524A     		ldr	r2, .L368+4
 4867 020e DA62     		str	r2, [r3, #44]
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 117


1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 4868              		.loc 1 1795 17
 4869 0210 FB68     		ldr	r3, [r7, #12]
 4870 0212 DB6A     		ldr	r3, [r3, #44]
 4871              		.loc 1 1795 53
 4872 0214 514A     		ldr	r2, .L368+8
 4873 0216 1A63     		str	r2, [r3, #48]
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->
 4874              		.loc 1 1798 11
 4875 0218 FB68     		ldr	r3, [r7, #12]
 4876 021a D86A     		ldr	r0, [r3, #44]
 4877 021c 7968     		ldr	r1, [r7, #4]
 4878              		.loc 1 1798 88
 4879 021e FB68     		ldr	r3, [r7, #12]
 4880 0220 1B68     		ldr	r3, [r3]
 4881              		.loc 1 1798 83
 4882 0222 3C33     		adds	r3, r3, #60
 4883              		.loc 1 1798 11
 4884 0224 1A46     		mov	r2, r3
 4885 0226 7B88     		ldrh	r3, [r7, #2]
 4886 0228 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4887 022c 0346     		mov	r3, r0
 4888              		.loc 1 1798 10 discriminator 1
 4889 022e 002B     		cmp	r3, #0
 4890 0230 01D0     		beq	.L358
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 4891              		.loc 1 1802 16
 4892 0232 0123     		movs	r3, #1
 4893 0234 89E0     		b	.L333
 4894              	.L358:
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Output Capture/Compare 3 request */
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 4895              		.loc 1 1805 7
 4896 0236 FB68     		ldr	r3, [r7, #12]
 4897 0238 1B68     		ldr	r3, [r3]
 4898 023a DA68     		ldr	r2, [r3, #12]
 4899 023c FB68     		ldr	r3, [r7, #12]
 4900 023e 1B68     		ldr	r3, [r3]
 4901 0240 42F40062 		orr	r2, r2, #2048
 4902 0244 DA60     		str	r2, [r3, #12]
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4903              		.loc 1 1806 7
 4904 0246 26E0     		b	.L356
 4905              	.L350:
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
ARM GAS  /tmp//ccJMd58S.s 			page 118


 4906              		.loc 1 1812 17
 4907 0248 FB68     		ldr	r3, [r7, #12]
 4908 024a 1B6B     		ldr	r3, [r3, #48]
 4909              		.loc 1 1812 52
 4910 024c 414A     		ldr	r2, .L368
 4911 024e 9A62     		str	r2, [r3, #40]
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 4912              		.loc 1 1813 17
 4913 0250 FB68     		ldr	r3, [r7, #12]
 4914 0252 1B6B     		ldr	r3, [r3, #48]
 4915              		.loc 1 1813 56
 4916 0254 404A     		ldr	r2, .L368+4
 4917 0256 DA62     		str	r2, [r3, #44]
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 4918              		.loc 1 1816 17
 4919 0258 FB68     		ldr	r3, [r7, #12]
 4920 025a 1B6B     		ldr	r3, [r3, #48]
 4921              		.loc 1 1816 53
 4922 025c 3F4A     		ldr	r2, .L368+8
 4923 025e 1A63     		str	r2, [r3, #48]
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->
 4924              		.loc 1 1819 11
 4925 0260 FB68     		ldr	r3, [r7, #12]
 4926 0262 186B     		ldr	r0, [r3, #48]
 4927 0264 7968     		ldr	r1, [r7, #4]
 4928              		.loc 1 1819 88
 4929 0266 FB68     		ldr	r3, [r7, #12]
 4930 0268 1B68     		ldr	r3, [r3]
 4931              		.loc 1 1819 83
 4932 026a 4033     		adds	r3, r3, #64
 4933              		.loc 1 1819 11
 4934 026c 1A46     		mov	r2, r3
 4935 026e 7B88     		ldrh	r3, [r7, #2]
 4936 0270 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4937 0274 0346     		mov	r3, r0
 4938              		.loc 1 1819 10 discriminator 1
 4939 0276 002B     		cmp	r3, #0
 4940 0278 01D0     		beq	.L359
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 4941              		.loc 1 1823 16
 4942 027a 0123     		movs	r3, #1
 4943 027c 65E0     		b	.L333
 4944              	.L359:
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 4945              		.loc 1 1826 7
 4946 027e FB68     		ldr	r3, [r7, #12]
 4947 0280 1B68     		ldr	r3, [r3]
 4948 0282 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 119


 4949 0284 FB68     		ldr	r3, [r7, #12]
 4950 0286 1B68     		ldr	r3, [r3]
 4951 0288 42F48052 		orr	r2, r2, #4096
 4952 028c DA60     		str	r2, [r3, #12]
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4953              		.loc 1 1827 7
 4954 028e 02E0     		b	.L356
 4955              	.L349:
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 4956              		.loc 1 1831 14
 4957 0290 0123     		movs	r3, #1
 4958 0292 FB75     		strb	r3, [r7, #23]
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 4959              		.loc 1 1832 7
 4960 0294 00BF     		nop
 4961              	.L356:
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 4962              		.loc 1 1835 6
 4963 0296 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4964 0298 002B     		cmp	r3, #0
 4965 029a 55D1     		bne	.L360
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Capture compare channel */
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 4966              		.loc 1 1838 5
 4967 029c FB68     		ldr	r3, [r7, #12]
 4968 029e 1B68     		ldr	r3, [r3]
 4969 02a0 0122     		movs	r2, #1
 4970 02a2 B968     		ldr	r1, [r7, #8]
 4971 02a4 1846     		mov	r0, r3
 4972 02a6 FFF7FEFF 		bl	TIM_CCxChannelCmd
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 4973              		.loc 1 1840 9
 4974 02aa FB68     		ldr	r3, [r7, #12]
 4975 02ac 1B68     		ldr	r3, [r3]
 4976 02ae 2C4A     		ldr	r2, .L368+12
 4977 02b0 9342     		cmp	r3, r2
 4978 02b2 04D0     		beq	.L361
 4979              		.loc 1 1840 9 is_stmt 0 discriminator 2
 4980 02b4 FB68     		ldr	r3, [r7, #12]
 4981 02b6 1B68     		ldr	r3, [r3]
 4982 02b8 2A4A     		ldr	r2, .L368+16
 4983 02ba 9342     		cmp	r3, r2
 4984 02bc 01D1     		bne	.L362
 4985              	.L361:
 4986              		.loc 1 1840 9 discriminator 3
 4987 02be 0123     		movs	r3, #1
 4988              		.loc 1 1840 9
 4989 02c0 00E0     		b	.L363
 4990              	.L362:
 4991              		.loc 1 1840 9 discriminator 4
ARM GAS  /tmp//ccJMd58S.s 			page 120


 4992 02c2 0023     		movs	r3, #0
 4993              	.L363:
 4994              		.loc 1 1840 8 is_stmt 1 discriminator 6
 4995 02c4 002B     		cmp	r3, #0
 4996 02c6 07D0     		beq	.L364
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the main output */
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_MOE_ENABLE(htim);
 4997              		.loc 1 1843 7
 4998 02c8 FB68     		ldr	r3, [r7, #12]
 4999 02ca 1B68     		ldr	r3, [r3]
 5000 02cc 5A6C     		ldr	r2, [r3, #68]
 5001 02ce FB68     		ldr	r3, [r7, #12]
 5002 02d0 1B68     		ldr	r3, [r3]
 5003 02d2 42F40042 		orr	r2, r2, #32768
 5004 02d6 5A64     		str	r2, [r3, #68]
 5005              	.L364:
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 5006              		.loc 1 1847 9
 5007 02d8 FB68     		ldr	r3, [r7, #12]
 5008 02da 1B68     		ldr	r3, [r3]
 5009              		.loc 1 1847 8
 5010 02dc 204A     		ldr	r2, .L368+12
 5011 02de 9342     		cmp	r3, r2
 5012 02e0 18D0     		beq	.L365
 5013              		.loc 1 1847 9 discriminator 1
 5014 02e2 FB68     		ldr	r3, [r7, #12]
 5015 02e4 1B68     		ldr	r3, [r3]
 5016 02e6 1F4A     		ldr	r2, .L368+16
 5017 02e8 9342     		cmp	r3, r2
 5018 02ea 13D0     		beq	.L365
 5019              		.loc 1 1847 9 is_stmt 0 discriminator 2
 5020 02ec FB68     		ldr	r3, [r7, #12]
 5021 02ee 1B68     		ldr	r3, [r3]
 5022 02f0 B3F1804F 		cmp	r3, #1073741824
 5023 02f4 0ED0     		beq	.L365
 5024              		.loc 1 1847 9 discriminator 3
 5025 02f6 FB68     		ldr	r3, [r7, #12]
 5026 02f8 1B68     		ldr	r3, [r3]
 5027 02fa 1B4A     		ldr	r2, .L368+20
 5028 02fc 9342     		cmp	r3, r2
 5029 02fe 09D0     		beq	.L365
 5030              		.loc 1 1847 9 discriminator 4
 5031 0300 FB68     		ldr	r3, [r7, #12]
 5032 0302 1B68     		ldr	r3, [r3]
 5033 0304 194A     		ldr	r2, .L368+24
 5034 0306 9342     		cmp	r3, r2
 5035 0308 04D0     		beq	.L365
 5036              		.loc 1 1847 9 discriminator 5
 5037 030a FB68     		ldr	r3, [r7, #12]
 5038 030c 1B68     		ldr	r3, [r3]
 5039 030e 184A     		ldr	r2, .L368+28
 5040 0310 9342     		cmp	r3, r2
 5041 0312 11D1     		bne	.L366
ARM GAS  /tmp//ccJMd58S.s 			page 121


 5042              	.L365:
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 5043              		.loc 1 1849 21 is_stmt 1
 5044 0314 FB68     		ldr	r3, [r7, #12]
 5045 0316 1B68     		ldr	r3, [r3]
 5046              		.loc 1 1849 31
 5047 0318 9B68     		ldr	r3, [r3, #8]
 5048              		.loc 1 1849 15
 5049 031a 03F00703 		and	r3, r3, #7
 5050 031e 3B61     		str	r3, [r7, #16]
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 5051              		.loc 1 1850 10
 5052 0320 3B69     		ldr	r3, [r7, #16]
 5053 0322 062B     		cmp	r3, #6
 5054 0324 10D0     		beq	.L360
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
 5055              		.loc 1 1852 9
 5056 0326 FB68     		ldr	r3, [r7, #12]
 5057 0328 1B68     		ldr	r3, [r3]
 5058 032a 1A68     		ldr	r2, [r3]
 5059 032c FB68     		ldr	r3, [r7, #12]
 5060 032e 1B68     		ldr	r3, [r3]
 5061 0330 42F00102 		orr	r2, r2, #1
 5062 0334 1A60     		str	r2, [r3]
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 5063              		.loc 1 1850 10
 5064 0336 07E0     		b	.L360
 5065              	.L366:
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 5066              		.loc 1 1857 7
 5067 0338 FB68     		ldr	r3, [r7, #12]
 5068 033a 1B68     		ldr	r3, [r3]
 5069 033c 1A68     		ldr	r2, [r3]
 5070 033e FB68     		ldr	r3, [r7, #12]
 5071 0340 1B68     		ldr	r3, [r3]
 5072 0342 42F00102 		orr	r2, r2, #1
 5073 0346 1A60     		str	r2, [r3]
 5074              	.L360:
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 5075              		.loc 1 1862 10
 5076 0348 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5077              	.L333:
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 5078              		.loc 1 1863 1
 5079 034a 1846     		mov	r0, r3
 5080 034c 1837     		adds	r7, r7, #24
 5081              	.LCFI153:
ARM GAS  /tmp//ccJMd58S.s 			page 122


 5082              		.cfi_def_cfa_offset 8
 5083 034e BD46     		mov	sp, r7
 5084              	.LCFI154:
 5085              		.cfi_def_cfa_register 13
 5086              		@ sp needed
 5087 0350 80BD     		pop	{r7, pc}
 5088              	.L369:
 5089 0352 00BF     		.align	2
 5090              	.L368:
 5091 0354 00000000 		.word	TIM_DMADelayPulseCplt
 5092 0358 00000000 		.word	TIM_DMADelayPulseHalfCplt
 5093 035c 00000000 		.word	TIM_DMAError
 5094 0360 002C0140 		.word	1073818624
 5095 0364 00340140 		.word	1073820672
 5096 0368 00040040 		.word	1073742848
 5097 036c 00080040 		.word	1073743872
 5098 0370 000C0040 		.word	1073744896
 5099              		.cfi_endproc
 5100              	.LFE93:
 5102              		.section	.text.HAL_TIM_PWM_Stop_DMA,"ax",%progbits
 5103              		.align	1
 5104              		.global	HAL_TIM_PWM_Stop_DMA
 5105              		.syntax unified
 5106              		.thumb
 5107              		.thumb_func
 5109              	HAL_TIM_PWM_Stop_DMA:
 5110              	.LFB94:
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM PWM signal generation in DMA mode.
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 5111              		.loc 1 1877 1
 5112              		.cfi_startproc
 5113              		@ args = 0, pretend = 0, frame = 16
 5114              		@ frame_needed = 1, uses_anonymous_args = 0
 5115 0000 80B5     		push	{r7, lr}
 5116              	.LCFI155:
 5117              		.cfi_def_cfa_offset 8
 5118              		.cfi_offset 7, -8
 5119              		.cfi_offset 14, -4
 5120 0002 84B0     		sub	sp, sp, #16
 5121              	.LCFI156:
 5122              		.cfi_def_cfa_offset 24
 5123 0004 00AF     		add	r7, sp, #0
 5124              	.LCFI157:
 5125              		.cfi_def_cfa_register 7
 5126 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 123


 5127 0008 3960     		str	r1, [r7]
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 5128              		.loc 1 1878 21
 5129 000a 0023     		movs	r3, #0
 5130 000c FB73     		strb	r3, [r7, #15]
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 5131              		.loc 1 1883 3
 5132 000e 3B68     		ldr	r3, [r7]
 5133 0010 0C2B     		cmp	r3, #12
 5134 0012 55D8     		bhi	.L371
 5135 0014 01A2     		adr	r2, .L373
 5136 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5137 001a 00BF     		.p2align 2
 5138              	.L373:
 5139 001c 51000000 		.word	.L376+1
 5140 0020 C1000000 		.word	.L371+1
 5141 0024 C1000000 		.word	.L371+1
 5142 0028 C1000000 		.word	.L371+1
 5143 002c 6D000000 		.word	.L375+1
 5144 0030 C1000000 		.word	.L371+1
 5145 0034 C1000000 		.word	.L371+1
 5146 0038 C1000000 		.word	.L371+1
 5147 003c 89000000 		.word	.L374+1
 5148 0040 C1000000 		.word	.L371+1
 5149 0044 C1000000 		.word	.L371+1
 5150 0048 C1000000 		.word	.L371+1
 5151 004c A5000000 		.word	.L372+1
 5152              		.p2align 1
 5153              	.L376:
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 5154              		.loc 1 1888 7
 5155 0050 7B68     		ldr	r3, [r7, #4]
 5156 0052 1B68     		ldr	r3, [r3]
 5157 0054 DA68     		ldr	r2, [r3, #12]
 5158 0056 7B68     		ldr	r3, [r7, #4]
 5159 0058 1B68     		ldr	r3, [r3]
 5160 005a 22F40072 		bic	r2, r2, #512
 5161 005e DA60     		str	r2, [r3, #12]
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 5162              		.loc 1 1889 13
 5163 0060 7B68     		ldr	r3, [r7, #4]
 5164 0062 5B6A     		ldr	r3, [r3, #36]
 5165 0064 1846     		mov	r0, r3
 5166 0066 FFF7FEFF 		bl	HAL_DMA_Abort_IT
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 5167              		.loc 1 1890 7
 5168 006a 2CE0     		b	.L377
 5169              	.L375:
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
ARM GAS  /tmp//ccJMd58S.s 			page 124


1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 5170              		.loc 1 1896 7
 5171 006c 7B68     		ldr	r3, [r7, #4]
 5172 006e 1B68     		ldr	r3, [r3]
 5173 0070 DA68     		ldr	r2, [r3, #12]
 5174 0072 7B68     		ldr	r3, [r7, #4]
 5175 0074 1B68     		ldr	r3, [r3]
 5176 0076 22F48062 		bic	r2, r2, #1024
 5177 007a DA60     		str	r2, [r3, #12]
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 5178              		.loc 1 1897 13
 5179 007c 7B68     		ldr	r3, [r7, #4]
 5180 007e 9B6A     		ldr	r3, [r3, #40]
 5181 0080 1846     		mov	r0, r3
 5182 0082 FFF7FEFF 		bl	HAL_DMA_Abort_IT
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 5183              		.loc 1 1898 7
 5184 0086 1EE0     		b	.L377
 5185              	.L374:
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 5186              		.loc 1 1904 7
 5187 0088 7B68     		ldr	r3, [r7, #4]
 5188 008a 1B68     		ldr	r3, [r3]
 5189 008c DA68     		ldr	r2, [r3, #12]
 5190 008e 7B68     		ldr	r3, [r7, #4]
 5191 0090 1B68     		ldr	r3, [r3]
 5192 0092 22F40062 		bic	r2, r2, #2048
 5193 0096 DA60     		str	r2, [r3, #12]
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 5194              		.loc 1 1905 13
 5195 0098 7B68     		ldr	r3, [r7, #4]
 5196 009a DB6A     		ldr	r3, [r3, #44]
 5197 009c 1846     		mov	r0, r3
 5198 009e FFF7FEFF 		bl	HAL_DMA_Abort_IT
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 5199              		.loc 1 1906 7
 5200 00a2 10E0     		b	.L377
 5201              	.L372:
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 5202              		.loc 1 1912 7
 5203 00a4 7B68     		ldr	r3, [r7, #4]
 5204 00a6 1B68     		ldr	r3, [r3]
 5205 00a8 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 125


 5206 00aa 7B68     		ldr	r3, [r7, #4]
 5207 00ac 1B68     		ldr	r3, [r3]
 5208 00ae 22F48052 		bic	r2, r2, #4096
 5209 00b2 DA60     		str	r2, [r3, #12]
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 5210              		.loc 1 1913 13
 5211 00b4 7B68     		ldr	r3, [r7, #4]
 5212 00b6 1B6B     		ldr	r3, [r3, #48]
 5213 00b8 1846     		mov	r0, r3
 5214 00ba FFF7FEFF 		bl	HAL_DMA_Abort_IT
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 5215              		.loc 1 1914 7
 5216 00be 02E0     		b	.L377
 5217              	.L371:
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 5218              		.loc 1 1918 14
 5219 00c0 0123     		movs	r3, #1
 5220 00c2 FB73     		strb	r3, [r7, #15]
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 5221              		.loc 1 1919 7
 5222 00c4 00BF     		nop
 5223              	.L377:
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 5224              		.loc 1 1922 6
 5225 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5226 00c8 002B     		cmp	r3, #0
 5227 00ca 61D1     		bne	.L378
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Capture compare channel */
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 5228              		.loc 1 1925 5
 5229 00cc 7B68     		ldr	r3, [r7, #4]
 5230 00ce 1B68     		ldr	r3, [r3]
 5231 00d0 0022     		movs	r2, #0
 5232 00d2 3968     		ldr	r1, [r7]
 5233 00d4 1846     		mov	r0, r3
 5234 00d6 FFF7FEFF 		bl	TIM_CCxChannelCmd
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5235              		.loc 1 1927 9
 5236 00da 7B68     		ldr	r3, [r7, #4]
 5237 00dc 1B68     		ldr	r3, [r3]
 5238 00de 2F4A     		ldr	r2, .L390
 5239 00e0 9342     		cmp	r3, r2
 5240 00e2 04D0     		beq	.L379
 5241              		.loc 1 1927 9 is_stmt 0 discriminator 2
 5242 00e4 7B68     		ldr	r3, [r7, #4]
 5243 00e6 1B68     		ldr	r3, [r3]
 5244 00e8 2D4A     		ldr	r2, .L390+4
 5245 00ea 9342     		cmp	r3, r2
 5246 00ec 01D1     		bne	.L380
 5247              	.L379:
ARM GAS  /tmp//ccJMd58S.s 			page 126


 5248              		.loc 1 1927 9 discriminator 3
 5249 00ee 0123     		movs	r3, #1
 5250              		.loc 1 1927 9
 5251 00f0 00E0     		b	.L381
 5252              	.L380:
 5253              		.loc 1 1927 9 discriminator 4
 5254 00f2 0023     		movs	r3, #0
 5255              	.L381:
 5256              		.loc 1 1927 8 is_stmt 1 discriminator 6
 5257 00f4 002B     		cmp	r3, #0
 5258 00f6 17D0     		beq	.L382
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the Main Output */
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_MOE_DISABLE(htim);
 5259              		.loc 1 1930 7
 5260 00f8 7B68     		ldr	r3, [r7, #4]
 5261 00fa 1B68     		ldr	r3, [r3]
 5262 00fc 1A6A     		ldr	r2, [r3, #32]
 5263 00fe 41F21113 		movw	r3, #4369
 5264 0102 1340     		ands	r3, r3, r2
 5265 0104 002B     		cmp	r3, #0
 5266 0106 0FD1     		bne	.L382
 5267              		.loc 1 1930 7 is_stmt 0 discriminator 1
 5268 0108 7B68     		ldr	r3, [r7, #4]
 5269 010a 1B68     		ldr	r3, [r3]
 5270 010c 1A6A     		ldr	r2, [r3, #32]
 5271 010e 40F24443 		movw	r3, #1092
 5272 0112 1340     		ands	r3, r3, r2
 5273 0114 002B     		cmp	r3, #0
 5274 0116 07D1     		bne	.L382
 5275              		.loc 1 1930 7 discriminator 2
 5276 0118 7B68     		ldr	r3, [r7, #4]
 5277 011a 1B68     		ldr	r3, [r3]
 5278 011c 5A6C     		ldr	r2, [r3, #68]
 5279 011e 7B68     		ldr	r3, [r7, #4]
 5280 0120 1B68     		ldr	r3, [r3]
 5281 0122 22F40042 		bic	r2, r2, #32768
 5282 0126 5A64     		str	r2, [r3, #68]
 5283              	.L382:
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Peripheral */
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
 5284              		.loc 1 1934 5 is_stmt 1
 5285 0128 7B68     		ldr	r3, [r7, #4]
 5286 012a 1B68     		ldr	r3, [r3]
 5287 012c 1A6A     		ldr	r2, [r3, #32]
 5288 012e 41F21113 		movw	r3, #4369
 5289 0132 1340     		ands	r3, r3, r2
 5290 0134 002B     		cmp	r3, #0
 5291 0136 0FD1     		bne	.L383
 5292              		.loc 1 1934 5 is_stmt 0 discriminator 1
 5293 0138 7B68     		ldr	r3, [r7, #4]
 5294 013a 1B68     		ldr	r3, [r3]
 5295 013c 1A6A     		ldr	r2, [r3, #32]
 5296 013e 40F24443 		movw	r3, #1092
 5297 0142 1340     		ands	r3, r3, r2
ARM GAS  /tmp//ccJMd58S.s 			page 127


 5298 0144 002B     		cmp	r3, #0
 5299 0146 07D1     		bne	.L383
 5300              		.loc 1 1934 5 discriminator 2
 5301 0148 7B68     		ldr	r3, [r7, #4]
 5302 014a 1B68     		ldr	r3, [r3]
 5303 014c 1A68     		ldr	r2, [r3]
 5304 014e 7B68     		ldr	r3, [r7, #4]
 5305 0150 1B68     		ldr	r3, [r3]
 5306 0152 22F00102 		bic	r2, r2, #1
 5307 0156 1A60     		str	r2, [r3]
 5308              	.L383:
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the TIM channel state */
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 5309              		.loc 1 1937 5 is_stmt 1
 5310 0158 3B68     		ldr	r3, [r7]
 5311 015a 002B     		cmp	r3, #0
 5312 015c 04D1     		bne	.L384
 5313              		.loc 1 1937 5 is_stmt 0 discriminator 1
 5314 015e 7B68     		ldr	r3, [r7, #4]
 5315 0160 0122     		movs	r2, #1
 5316 0162 83F83E20 		strb	r2, [r3, #62]
 5317 0166 13E0     		b	.L378
 5318              	.L384:
 5319              		.loc 1 1937 5 discriminator 2
 5320 0168 3B68     		ldr	r3, [r7]
 5321 016a 042B     		cmp	r3, #4
 5322 016c 04D1     		bne	.L385
 5323              		.loc 1 1937 5 discriminator 3
 5324 016e 7B68     		ldr	r3, [r7, #4]
 5325 0170 0122     		movs	r2, #1
 5326 0172 83F83F20 		strb	r2, [r3, #63]
 5327 0176 0BE0     		b	.L378
 5328              	.L385:
 5329              		.loc 1 1937 5 discriminator 4
 5330 0178 3B68     		ldr	r3, [r7]
 5331 017a 082B     		cmp	r3, #8
 5332 017c 04D1     		bne	.L387
 5333              		.loc 1 1937 5 discriminator 6
 5334 017e 7B68     		ldr	r3, [r7, #4]
 5335 0180 0122     		movs	r2, #1
 5336 0182 83F84020 		strb	r2, [r3, #64]
 5337 0186 03E0     		b	.L378
 5338              	.L387:
 5339              		.loc 1 1937 5 discriminator 7
 5340 0188 7B68     		ldr	r3, [r7, #4]
 5341 018a 0122     		movs	r2, #1
 5342 018c 83F84120 		strb	r2, [r3, #65]
 5343              	.L378:
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 5344              		.loc 1 1941 10 is_stmt 1
 5345 0190 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 5346              		.loc 1 1942 1
ARM GAS  /tmp//ccJMd58S.s 			page 128


 5347 0192 1846     		mov	r0, r3
 5348 0194 1037     		adds	r7, r7, #16
 5349              	.LCFI158:
 5350              		.cfi_def_cfa_offset 8
 5351 0196 BD46     		mov	sp, r7
 5352              	.LCFI159:
 5353              		.cfi_def_cfa_register 13
 5354              		@ sp needed
 5355 0198 80BD     		pop	{r7, pc}
 5356              	.L391:
 5357 019a 00BF     		.align	2
 5358              	.L390:
 5359 019c 002C0140 		.word	1073818624
 5360 01a0 00340140 		.word	1073820672
 5361              		.cfi_endproc
 5362              	.LFE94:
 5364              		.section	.text.HAL_TIM_IC_Init,"ax",%progbits
 5365              		.align	1
 5366              		.global	HAL_TIM_IC_Init
 5367              		.syntax unified
 5368              		.thumb
 5369              		.thumb_func
 5371              	HAL_TIM_IC_Init:
 5372              	.LFB95:
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group4 TIM Input Capture functions
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Input Capture functions
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****               ##### TIM Input Capture functions #####
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****  [..]
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    This section provides functions allowing to:
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) Initialize and configure the TIM Input Capture.
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) De-initialize the TIM Input Capture.
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) Start the TIM Input Capture.
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) Stop the TIM Input Capture.
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) Start the TIM Input Capture and enable interrupt.
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) Stop the TIM Input Capture and disable interrupt.
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) Start the TIM Input Capture and enable DMA transfer.
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) Stop the TIM Input Capture and disable DMA transfer.
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Time base according to the specified
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_IC_DeInit() before HAL_TIM_IC_Init()
ARM GAS  /tmp//ccJMd58S.s 			page 129


1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Init(TIM_HandleTypeDef *htim)
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 5373              		.loc 1 1980 1
 5374              		.cfi_startproc
 5375              		@ args = 0, pretend = 0, frame = 8
 5376              		@ frame_needed = 1, uses_anonymous_args = 0
 5377 0000 80B5     		push	{r7, lr}
 5378              	.LCFI160:
 5379              		.cfi_def_cfa_offset 8
 5380              		.cfi_offset 7, -8
 5381              		.cfi_offset 14, -4
 5382 0002 82B0     		sub	sp, sp, #8
 5383              	.LCFI161:
 5384              		.cfi_def_cfa_offset 16
 5385 0004 00AF     		add	r7, sp, #0
 5386              	.LCFI162:
 5387              		.cfi_def_cfa_register 7
 5388 0006 7860     		str	r0, [r7, #4]
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
 5389              		.loc 1 1982 6
 5390 0008 7B68     		ldr	r3, [r7, #4]
 5391 000a 002B     		cmp	r3, #0
 5392 000c 01D1     		bne	.L393
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 5393              		.loc 1 1984 12
 5394 000e 0123     		movs	r3, #1
 5395 0010 41E0     		b	.L394
 5396              	.L393:
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim->Init.Period));
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
 5397              		.loc 1 1994 11
 5398 0012 7B68     		ldr	r3, [r7, #4]
 5399 0014 93F83D30 		ldrb	r3, [r3, #61]
 5400 0018 DBB2     		uxtb	r3, r3
 5401              		.loc 1 1994 6
 5402 001a 002B     		cmp	r3, #0
 5403 001c 06D1     		bne	.L395
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 5404              		.loc 1 1997 16
 5405 001e 7B68     		ldr	r3, [r7, #4]
 5406 0020 0022     		movs	r2, #0
 5407 0022 83F83C20 		strb	r2, [r3, #60]
ARM GAS  /tmp//ccJMd58S.s 			page 130


1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (htim->IC_MspInitCallback == NULL)
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->IC_MspInitCallback = HAL_TIM_IC_MspInit;
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->IC_MspInitCallback(htim);
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     HAL_TIM_IC_MspInit(htim);
 5408              		.loc 1 2011 5
 5409 0026 7868     		ldr	r0, [r7, #4]
 5410 0028 FFF7FEFF 		bl	HAL_TIM_IC_MspInit
 5411              	.L395:
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 5412              		.loc 1 2016 15
 5413 002c 7B68     		ldr	r3, [r7, #4]
 5414 002e 0222     		movs	r2, #2
 5415 0030 83F83D20 		strb	r2, [r3, #61]
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Init the base time for the input capture */
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 5416              		.loc 1 2019 3
 5417 0034 7B68     		ldr	r3, [r7, #4]
 5418 0036 1A68     		ldr	r2, [r3]
 5419              		.loc 1 2019 38
 5420 0038 7B68     		ldr	r3, [r7, #4]
 5421 003a 0433     		adds	r3, r3, #4
 5422              		.loc 1 2019 3
 5423 003c 1946     		mov	r1, r3
 5424 003e 1046     		mov	r0, r2
 5425 0040 FFF7FEFF 		bl	TIM_Base_SetConfig
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 5426              		.loc 1 2022 23
 5427 0044 7B68     		ldr	r3, [r7, #4]
 5428 0046 0122     		movs	r2, #1
 5429 0048 83F84620 		strb	r2, [r3, #70]
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM channels state */
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 5430              		.loc 1 2025 3
 5431 004c 7B68     		ldr	r3, [r7, #4]
 5432 004e 0122     		movs	r2, #1
 5433 0050 83F83E20 		strb	r2, [r3, #62]
 5434 0054 7B68     		ldr	r3, [r7, #4]
 5435 0056 0122     		movs	r2, #1
 5436 0058 83F83F20 		strb	r2, [r3, #63]
ARM GAS  /tmp//ccJMd58S.s 			page 131


 5437 005c 7B68     		ldr	r3, [r7, #4]
 5438 005e 0122     		movs	r2, #1
 5439 0060 83F84020 		strb	r2, [r3, #64]
 5440 0064 7B68     		ldr	r3, [r7, #4]
 5441 0066 0122     		movs	r2, #1
 5442 0068 83F84120 		strb	r2, [r3, #65]
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 5443              		.loc 1 2026 3
 5444 006c 7B68     		ldr	r3, [r7, #4]
 5445 006e 0122     		movs	r2, #1
 5446 0070 83F84220 		strb	r2, [r3, #66]
 5447 0074 7B68     		ldr	r3, [r7, #4]
 5448 0076 0122     		movs	r2, #1
 5449 0078 83F84320 		strb	r2, [r3, #67]
 5450 007c 7B68     		ldr	r3, [r7, #4]
 5451 007e 0122     		movs	r2, #1
 5452 0080 83F84420 		strb	r2, [r3, #68]
 5453 0084 7B68     		ldr	r3, [r7, #4]
 5454 0086 0122     		movs	r2, #1
 5455 0088 83F84520 		strb	r2, [r3, #69]
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 5456              		.loc 1 2029 15
 5457 008c 7B68     		ldr	r3, [r7, #4]
 5458 008e 0122     		movs	r2, #1
 5459 0090 83F83D20 		strb	r2, [r3, #61]
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 5460              		.loc 1 2031 10
 5461 0094 0023     		movs	r3, #0
 5462              	.L394:
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 5463              		.loc 1 2032 1
 5464 0096 1846     		mov	r0, r3
 5465 0098 0837     		adds	r7, r7, #8
 5466              	.LCFI163:
 5467              		.cfi_def_cfa_offset 8
 5468 009a BD46     		mov	sp, r7
 5469              	.LCFI164:
 5470              		.cfi_def_cfa_register 13
 5471              		@ sp needed
 5472 009c 80BD     		pop	{r7, pc}
 5473              		.cfi_endproc
 5474              	.LFE95:
 5476              		.section	.text.HAL_TIM_IC_DeInit,"ax",%progbits
 5477              		.align	1
 5478              		.global	HAL_TIM_IC_DeInit
 5479              		.syntax unified
 5480              		.thumb
 5481              		.thumb_func
 5483              	HAL_TIM_IC_DeInit:
 5484              	.LFB96:
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
ARM GAS  /tmp//ccJMd58S.s 			page 132


2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_DeInit(TIM_HandleTypeDef *htim)
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 5485              		.loc 1 2040 1
 5486              		.cfi_startproc
 5487              		@ args = 0, pretend = 0, frame = 8
 5488              		@ frame_needed = 1, uses_anonymous_args = 0
 5489 0000 80B5     		push	{r7, lr}
 5490              	.LCFI165:
 5491              		.cfi_def_cfa_offset 8
 5492              		.cfi_offset 7, -8
 5493              		.cfi_offset 14, -4
 5494 0002 82B0     		sub	sp, sp, #8
 5495              	.LCFI166:
 5496              		.cfi_def_cfa_offset 16
 5497 0004 00AF     		add	r7, sp, #0
 5498              	.LCFI167:
 5499              		.cfi_def_cfa_register 7
 5500 0006 7860     		str	r0, [r7, #4]
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 5501              		.loc 1 2044 15
 5502 0008 7B68     		ldr	r3, [r7, #4]
 5503 000a 0222     		movs	r2, #2
 5504 000c 83F83D20 		strb	r2, [r3, #61]
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 5505              		.loc 1 2047 3
 5506 0010 7B68     		ldr	r3, [r7, #4]
 5507 0012 1B68     		ldr	r3, [r3]
 5508 0014 1A6A     		ldr	r2, [r3, #32]
 5509 0016 41F21113 		movw	r3, #4369
 5510 001a 1340     		ands	r3, r3, r2
 5511 001c 002B     		cmp	r3, #0
 5512 001e 0FD1     		bne	.L397
 5513              		.loc 1 2047 3 is_stmt 0 discriminator 1
 5514 0020 7B68     		ldr	r3, [r7, #4]
 5515 0022 1B68     		ldr	r3, [r3]
 5516 0024 1A6A     		ldr	r2, [r3, #32]
 5517 0026 40F24443 		movw	r3, #1092
 5518 002a 1340     		ands	r3, r3, r2
 5519 002c 002B     		cmp	r3, #0
 5520 002e 07D1     		bne	.L397
 5521              		.loc 1 2047 3 discriminator 2
 5522 0030 7B68     		ldr	r3, [r7, #4]
 5523 0032 1B68     		ldr	r3, [r3]
 5524 0034 1A68     		ldr	r2, [r3]
 5525 0036 7B68     		ldr	r3, [r7, #4]
 5526 0038 1B68     		ldr	r3, [r3]
 5527 003a 22F00102 		bic	r2, r2, #1
 5528 003e 1A60     		str	r2, [r3]
 5529              	.L397:
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 133


2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->IC_MspDeInitCallback == NULL)
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->IC_MspDeInitCallback = HAL_TIM_IC_MspDeInit;
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->IC_MspDeInitCallback(htim);
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_IC_MspDeInit(htim);
 5530              		.loc 1 2058 3 is_stmt 1
 5531 0040 7868     		ldr	r0, [r7, #4]
 5532 0042 FFF7FEFF 		bl	HAL_TIM_IC_MspDeInit
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the DMA burst operation state */
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
 5533              		.loc 1 2062 23
 5534 0046 7B68     		ldr	r3, [r7, #4]
 5535 0048 0022     		movs	r2, #0
 5536 004a 83F84620 		strb	r2, [r3, #70]
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the TIM channels state */
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 5537              		.loc 1 2065 3
 5538 004e 7B68     		ldr	r3, [r7, #4]
 5539 0050 0022     		movs	r2, #0
 5540 0052 83F83E20 		strb	r2, [r3, #62]
 5541 0056 7B68     		ldr	r3, [r7, #4]
 5542 0058 0022     		movs	r2, #0
 5543 005a 83F83F20 		strb	r2, [r3, #63]
 5544 005e 7B68     		ldr	r3, [r7, #4]
 5545 0060 0022     		movs	r2, #0
 5546 0062 83F84020 		strb	r2, [r3, #64]
 5547 0066 7B68     		ldr	r3, [r7, #4]
 5548 0068 0022     		movs	r2, #0
 5549 006a 83F84120 		strb	r2, [r3, #65]
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_RESET);
 5550              		.loc 1 2066 3
 5551 006e 7B68     		ldr	r3, [r7, #4]
 5552 0070 0022     		movs	r2, #0
 5553 0072 83F84220 		strb	r2, [r3, #66]
 5554 0076 7B68     		ldr	r3, [r7, #4]
 5555 0078 0022     		movs	r2, #0
 5556 007a 83F84320 		strb	r2, [r3, #67]
 5557 007e 7B68     		ldr	r3, [r7, #4]
 5558 0080 0022     		movs	r2, #0
 5559 0082 83F84420 		strb	r2, [r3, #68]
 5560 0086 7B68     		ldr	r3, [r7, #4]
 5561 0088 0022     		movs	r2, #0
 5562 008a 83F84520 		strb	r2, [r3, #69]
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 5563              		.loc 1 2069 15
 5564 008e 7B68     		ldr	r3, [r7, #4]
 5565 0090 0022     		movs	r2, #0
ARM GAS  /tmp//ccJMd58S.s 			page 134


 5566 0092 83F83D20 		strb	r2, [r3, #61]
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Release Lock */
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 5567              		.loc 1 2072 3
 5568 0096 7B68     		ldr	r3, [r7, #4]
 5569 0098 0022     		movs	r2, #0
 5570 009a 83F83C20 		strb	r2, [r3, #60]
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 5571              		.loc 1 2074 10
 5572 009e 0023     		movs	r3, #0
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 5573              		.loc 1 2075 1
 5574 00a0 1846     		mov	r0, r3
 5575 00a2 0837     		adds	r7, r7, #8
 5576              	.LCFI168:
 5577              		.cfi_def_cfa_offset 8
 5578 00a4 BD46     		mov	sp, r7
 5579              	.LCFI169:
 5580              		.cfi_def_cfa_register 13
 5581              		@ sp needed
 5582 00a6 80BD     		pop	{r7, pc}
 5583              		.cfi_endproc
 5584              	.LFE96:
 5586              		.section	.text.HAL_TIM_IC_MspInit,"ax",%progbits
 5587              		.align	1
 5588              		.weak	HAL_TIM_IC_MspInit
 5589              		.syntax unified
 5590              		.thumb
 5591              		.thumb_func
 5593              	HAL_TIM_IC_MspInit:
 5594              	.LFB97:
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture MSP.
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_IC_MspInit(TIM_HandleTypeDef *htim)
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 5595              		.loc 1 2083 1
 5596              		.cfi_startproc
 5597              		@ args = 0, pretend = 0, frame = 8
 5598              		@ frame_needed = 1, uses_anonymous_args = 0
 5599              		@ link register save eliminated.
 5600 0000 80B4     		push	{r7}
 5601              	.LCFI170:
 5602              		.cfi_def_cfa_offset 4
 5603              		.cfi_offset 7, -4
 5604 0002 83B0     		sub	sp, sp, #12
 5605              	.LCFI171:
 5606              		.cfi_def_cfa_offset 16
 5607 0004 00AF     		add	r7, sp, #0
 5608              	.LCFI172:
 5609              		.cfi_def_cfa_register 7
 5610 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 135


2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_IC_MspInit could be implemented in the user file
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 5611              		.loc 1 2090 1
 5612 0008 00BF     		nop
 5613 000a 0C37     		adds	r7, r7, #12
 5614              	.LCFI173:
 5615              		.cfi_def_cfa_offset 4
 5616 000c BD46     		mov	sp, r7
 5617              	.LCFI174:
 5618              		.cfi_def_cfa_register 13
 5619              		@ sp needed
 5620 000e 80BC     		pop	{r7}
 5621              	.LCFI175:
 5622              		.cfi_restore 7
 5623              		.cfi_def_cfa_offset 0
 5624 0010 7047     		bx	lr
 5625              		.cfi_endproc
 5626              	.LFE97:
 5628              		.section	.text.HAL_TIM_IC_MspDeInit,"ax",%progbits
 5629              		.align	1
 5630              		.weak	HAL_TIM_IC_MspDeInit
 5631              		.syntax unified
 5632              		.thumb
 5633              		.thumb_func
 5635              	HAL_TIM_IC_MspDeInit:
 5636              	.LFB98:
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM Input Capture MSP.
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_IC_MspDeInit(TIM_HandleTypeDef *htim)
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 5637              		.loc 1 2098 1
 5638              		.cfi_startproc
 5639              		@ args = 0, pretend = 0, frame = 8
 5640              		@ frame_needed = 1, uses_anonymous_args = 0
 5641              		@ link register save eliminated.
 5642 0000 80B4     		push	{r7}
 5643              	.LCFI176:
 5644              		.cfi_def_cfa_offset 4
 5645              		.cfi_offset 7, -4
 5646 0002 83B0     		sub	sp, sp, #12
 5647              	.LCFI177:
 5648              		.cfi_def_cfa_offset 16
 5649 0004 00AF     		add	r7, sp, #0
 5650              	.LCFI178:
 5651              		.cfi_def_cfa_register 7
 5652 0006 7860     		str	r0, [r7, #4]
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
ARM GAS  /tmp//ccJMd58S.s 			page 136


2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_IC_MspDeInit could be implemented in the user file
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 5653              		.loc 1 2105 1
 5654 0008 00BF     		nop
 5655 000a 0C37     		adds	r7, r7, #12
 5656              	.LCFI179:
 5657              		.cfi_def_cfa_offset 4
 5658 000c BD46     		mov	sp, r7
 5659              	.LCFI180:
 5660              		.cfi_def_cfa_register 13
 5661              		@ sp needed
 5662 000e 80BC     		pop	{r7}
 5663              	.LCFI181:
 5664              		.cfi_restore 7
 5665              		.cfi_def_cfa_offset 0
 5666 0010 7047     		bx	lr
 5667              		.cfi_endproc
 5668              	.LFE98:
 5670              		.section	.text.HAL_TIM_IC_Start,"ax",%progbits
 5671              		.align	1
 5672              		.global	HAL_TIM_IC_Start
 5673              		.syntax unified
 5674              		.thumb
 5675              		.thumb_func
 5677              	HAL_TIM_IC_Start:
 5678              	.LFB99:
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement.
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 5679              		.loc 1 2119 1
 5680              		.cfi_startproc
 5681              		@ args = 0, pretend = 0, frame = 16
 5682              		@ frame_needed = 1, uses_anonymous_args = 0
 5683 0000 80B5     		push	{r7, lr}
 5684              	.LCFI182:
 5685              		.cfi_def_cfa_offset 8
 5686              		.cfi_offset 7, -8
 5687              		.cfi_offset 14, -4
 5688 0002 84B0     		sub	sp, sp, #16
 5689              	.LCFI183:
 5690              		.cfi_def_cfa_offset 24
 5691 0004 00AF     		add	r7, sp, #0
 5692              	.LCFI184:
ARM GAS  /tmp//ccJMd58S.s 			page 137


 5693              		.cfi_def_cfa_register 7
 5694 0006 7860     		str	r0, [r7, #4]
 5695 0008 3960     		str	r1, [r7]
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_state = TIM_CHANNEL_STATE_GET(htim, Channel);
 5696              		.loc 1 2121 47
 5697 000a 3B68     		ldr	r3, [r7]
 5698 000c 002B     		cmp	r3, #0
 5699 000e 04D1     		bne	.L402
 5700              		.loc 1 2121 47 is_stmt 0 discriminator 1
 5701 0010 7B68     		ldr	r3, [r7, #4]
 5702 0012 93F83E30 		ldrb	r3, [r3, #62]
 5703 0016 DBB2     		uxtb	r3, r3
 5704 0018 13E0     		b	.L403
 5705              	.L402:
 5706              		.loc 1 2121 47 discriminator 2
 5707 001a 3B68     		ldr	r3, [r7]
 5708 001c 042B     		cmp	r3, #4
 5709 001e 04D1     		bne	.L404
 5710              		.loc 1 2121 47 discriminator 4
 5711 0020 7B68     		ldr	r3, [r7, #4]
 5712 0022 93F83F30 		ldrb	r3, [r3, #63]
 5713 0026 DBB2     		uxtb	r3, r3
 5714 0028 0BE0     		b	.L403
 5715              	.L404:
 5716              		.loc 1 2121 47 discriminator 5
 5717 002a 3B68     		ldr	r3, [r7]
 5718 002c 082B     		cmp	r3, #8
 5719 002e 04D1     		bne	.L406
 5720              		.loc 1 2121 47 discriminator 7
 5721 0030 7B68     		ldr	r3, [r7, #4]
 5722 0032 93F84030 		ldrb	r3, [r3, #64]
 5723 0036 DBB2     		uxtb	r3, r3
 5724 0038 03E0     		b	.L403
 5725              	.L406:
 5726              		.loc 1 2121 47 discriminator 8
 5727 003a 7B68     		ldr	r3, [r7, #4]
 5728 003c 93F84130 		ldrb	r3, [r3, #65]
 5729 0040 DBB2     		uxtb	r3, r3
 5730              	.L403:
 5731              		.loc 1 2121 31 is_stmt 1 discriminator 12
 5732 0042 FB73     		strb	r3, [r7, #15]
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_state = TIM_CHANNEL_N_STATE_GET(htim, Channel);
 5733              		.loc 1 2122 61
 5734 0044 3B68     		ldr	r3, [r7]
 5735 0046 002B     		cmp	r3, #0
 5736 0048 04D1     		bne	.L408
 5737              		.loc 1 2122 61 is_stmt 0 discriminator 1
 5738 004a 7B68     		ldr	r3, [r7, #4]
 5739 004c 93F84230 		ldrb	r3, [r3, #66]
 5740 0050 DBB2     		uxtb	r3, r3
 5741 0052 13E0     		b	.L409
 5742              	.L408:
 5743              		.loc 1 2122 61 discriminator 2
 5744 0054 3B68     		ldr	r3, [r7]
 5745 0056 042B     		cmp	r3, #4
 5746 0058 04D1     		bne	.L410
ARM GAS  /tmp//ccJMd58S.s 			page 138


 5747              		.loc 1 2122 61 discriminator 4
 5748 005a 7B68     		ldr	r3, [r7, #4]
 5749 005c 93F84330 		ldrb	r3, [r3, #67]
 5750 0060 DBB2     		uxtb	r3, r3
 5751 0062 0BE0     		b	.L409
 5752              	.L410:
 5753              		.loc 1 2122 61 discriminator 5
 5754 0064 3B68     		ldr	r3, [r7]
 5755 0066 082B     		cmp	r3, #8
 5756 0068 04D1     		bne	.L412
 5757              		.loc 1 2122 61 discriminator 7
 5758 006a 7B68     		ldr	r3, [r7, #4]
 5759 006c 93F84430 		ldrb	r3, [r3, #68]
 5760 0070 DBB2     		uxtb	r3, r3
 5761 0072 03E0     		b	.L409
 5762              	.L412:
 5763              		.loc 1 2122 61 discriminator 8
 5764 0074 7B68     		ldr	r3, [r7, #4]
 5765 0076 93F84530 		ldrb	r3, [r3, #69]
 5766 007a DBB2     		uxtb	r3, r3
 5767              	.L409:
 5768              		.loc 1 2122 31 is_stmt 1 discriminator 12
 5769 007c BB73     		strb	r3, [r7, #14]
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM channel state */
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((channel_state != HAL_TIM_CHANNEL_STATE_READY)
 5770              		.loc 1 2128 6
 5771 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5772 0080 012B     		cmp	r3, #1
 5773 0082 02D1     		bne	.L414
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       || (complementary_channel_state != HAL_TIM_CHANNEL_STATE_READY))
 5774              		.loc 1 2129 7
 5775 0084 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5776 0086 012B     		cmp	r3, #1
 5777 0088 01D0     		beq	.L415
 5778              	.L414:
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 5779              		.loc 1 2131 12
 5780 008a 0123     		movs	r3, #1
 5781 008c 77E0     		b	.L416
 5782              	.L415:
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 5783              		.loc 1 2135 3
 5784 008e 3B68     		ldr	r3, [r7]
 5785 0090 002B     		cmp	r3, #0
 5786 0092 04D1     		bne	.L417
 5787              		.loc 1 2135 3 is_stmt 0 discriminator 1
 5788 0094 7B68     		ldr	r3, [r7, #4]
 5789 0096 0222     		movs	r2, #2
 5790 0098 83F83E20 		strb	r2, [r3, #62]
ARM GAS  /tmp//ccJMd58S.s 			page 139


 5791 009c 13E0     		b	.L418
 5792              	.L417:
 5793              		.loc 1 2135 3 discriminator 2
 5794 009e 3B68     		ldr	r3, [r7]
 5795 00a0 042B     		cmp	r3, #4
 5796 00a2 04D1     		bne	.L419
 5797              		.loc 1 2135 3 discriminator 3
 5798 00a4 7B68     		ldr	r3, [r7, #4]
 5799 00a6 0222     		movs	r2, #2
 5800 00a8 83F83F20 		strb	r2, [r3, #63]
 5801 00ac 0BE0     		b	.L418
 5802              	.L419:
 5803              		.loc 1 2135 3 discriminator 4
 5804 00ae 3B68     		ldr	r3, [r7]
 5805 00b0 082B     		cmp	r3, #8
 5806 00b2 04D1     		bne	.L421
 5807              		.loc 1 2135 3 discriminator 6
 5808 00b4 7B68     		ldr	r3, [r7, #4]
 5809 00b6 0222     		movs	r2, #2
 5810 00b8 83F84020 		strb	r2, [r3, #64]
 5811 00bc 03E0     		b	.L418
 5812              	.L421:
 5813              		.loc 1 2135 3 discriminator 7
 5814 00be 7B68     		ldr	r3, [r7, #4]
 5815 00c0 0222     		movs	r2, #2
 5816 00c2 83F84120 		strb	r2, [r3, #65]
 5817              	.L418:
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 5818              		.loc 1 2136 3 is_stmt 1
 5819 00c6 3B68     		ldr	r3, [r7]
 5820 00c8 002B     		cmp	r3, #0
 5821 00ca 04D1     		bne	.L423
 5822              		.loc 1 2136 3 is_stmt 0 discriminator 1
 5823 00cc 7B68     		ldr	r3, [r7, #4]
 5824 00ce 0222     		movs	r2, #2
 5825 00d0 83F84220 		strb	r2, [r3, #66]
 5826 00d4 13E0     		b	.L424
 5827              	.L423:
 5828              		.loc 1 2136 3 discriminator 2
 5829 00d6 3B68     		ldr	r3, [r7]
 5830 00d8 042B     		cmp	r3, #4
 5831 00da 04D1     		bne	.L425
 5832              		.loc 1 2136 3 discriminator 3
 5833 00dc 7B68     		ldr	r3, [r7, #4]
 5834 00de 0222     		movs	r2, #2
 5835 00e0 83F84320 		strb	r2, [r3, #67]
 5836 00e4 0BE0     		b	.L424
 5837              	.L425:
 5838              		.loc 1 2136 3 discriminator 4
 5839 00e6 3B68     		ldr	r3, [r7]
 5840 00e8 082B     		cmp	r3, #8
 5841 00ea 04D1     		bne	.L427
 5842              		.loc 1 2136 3 discriminator 6
 5843 00ec 7B68     		ldr	r3, [r7, #4]
 5844 00ee 0222     		movs	r2, #2
 5845 00f0 83F84420 		strb	r2, [r3, #68]
 5846 00f4 03E0     		b	.L424
ARM GAS  /tmp//ccJMd58S.s 			page 140


 5847              	.L427:
 5848              		.loc 1 2136 3 discriminator 7
 5849 00f6 7B68     		ldr	r3, [r7, #4]
 5850 00f8 0222     		movs	r2, #2
 5851 00fa 83F84520 		strb	r2, [r3, #69]
 5852              	.L424:
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Input Capture channel */
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 5853              		.loc 1 2139 3 is_stmt 1
 5854 00fe 7B68     		ldr	r3, [r7, #4]
 5855 0100 1B68     		ldr	r3, [r3]
 5856 0102 0122     		movs	r2, #1
 5857 0104 3968     		ldr	r1, [r7]
 5858 0106 1846     		mov	r0, r3
 5859 0108 FFF7FEFF 		bl	TIM_CCxChannelCmd
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 5860              		.loc 1 2142 7
 5861 010c 7B68     		ldr	r3, [r7, #4]
 5862 010e 1B68     		ldr	r3, [r3]
 5863              		.loc 1 2142 6
 5864 0110 1D4A     		ldr	r2, .L433
 5865 0112 9342     		cmp	r3, r2
 5866 0114 18D0     		beq	.L429
 5867              		.loc 1 2142 7 discriminator 1
 5868 0116 7B68     		ldr	r3, [r7, #4]
 5869 0118 1B68     		ldr	r3, [r3]
 5870 011a 1C4A     		ldr	r2, .L433+4
 5871 011c 9342     		cmp	r3, r2
 5872 011e 13D0     		beq	.L429
 5873              		.loc 1 2142 7 is_stmt 0 discriminator 2
 5874 0120 7B68     		ldr	r3, [r7, #4]
 5875 0122 1B68     		ldr	r3, [r3]
 5876 0124 B3F1804F 		cmp	r3, #1073741824
 5877 0128 0ED0     		beq	.L429
 5878              		.loc 1 2142 7 discriminator 3
 5879 012a 7B68     		ldr	r3, [r7, #4]
 5880 012c 1B68     		ldr	r3, [r3]
 5881 012e 184A     		ldr	r2, .L433+8
 5882 0130 9342     		cmp	r3, r2
 5883 0132 09D0     		beq	.L429
 5884              		.loc 1 2142 7 discriminator 4
 5885 0134 7B68     		ldr	r3, [r7, #4]
 5886 0136 1B68     		ldr	r3, [r3]
 5887 0138 164A     		ldr	r2, .L433+12
 5888 013a 9342     		cmp	r3, r2
 5889 013c 04D0     		beq	.L429
 5890              		.loc 1 2142 7 discriminator 5
 5891 013e 7B68     		ldr	r3, [r7, #4]
 5892 0140 1B68     		ldr	r3, [r3]
 5893 0142 154A     		ldr	r2, .L433+16
 5894 0144 9342     		cmp	r3, r2
 5895 0146 11D1     		bne	.L430
 5896              	.L429:
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
ARM GAS  /tmp//ccJMd58S.s 			page 141


2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 5897              		.loc 1 2144 19 is_stmt 1
 5898 0148 7B68     		ldr	r3, [r7, #4]
 5899 014a 1B68     		ldr	r3, [r3]
 5900              		.loc 1 2144 29
 5901 014c 9B68     		ldr	r3, [r3, #8]
 5902              		.loc 1 2144 13
 5903 014e 03F00703 		and	r3, r3, #7
 5904 0152 BB60     		str	r3, [r7, #8]
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 5905              		.loc 1 2145 8
 5906 0154 BB68     		ldr	r3, [r7, #8]
 5907 0156 062B     		cmp	r3, #6
 5908 0158 10D0     		beq	.L432
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 5909              		.loc 1 2147 7
 5910 015a 7B68     		ldr	r3, [r7, #4]
 5911 015c 1B68     		ldr	r3, [r3]
 5912 015e 1A68     		ldr	r2, [r3]
 5913 0160 7B68     		ldr	r3, [r7, #4]
 5914 0162 1B68     		ldr	r3, [r3]
 5915 0164 42F00102 		orr	r2, r2, #1
 5916 0168 1A60     		str	r2, [r3]
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 5917              		.loc 1 2145 8
 5918 016a 07E0     		b	.L432
 5919              	.L430:
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 5920              		.loc 1 2152 5
 5921 016c 7B68     		ldr	r3, [r7, #4]
 5922 016e 1B68     		ldr	r3, [r3]
 5923 0170 1A68     		ldr	r2, [r3]
 5924 0172 7B68     		ldr	r3, [r7, #4]
 5925 0174 1B68     		ldr	r3, [r3]
 5926 0176 42F00102 		orr	r2, r2, #1
 5927 017a 1A60     		str	r2, [r3]
 5928              	.L432:
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 5929              		.loc 1 2156 10
 5930 017c 0023     		movs	r3, #0
 5931              	.L416:
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 5932              		.loc 1 2157 1
 5933 017e 1846     		mov	r0, r3
 5934 0180 1037     		adds	r7, r7, #16
 5935              	.LCFI185:
 5936              		.cfi_def_cfa_offset 8
 5937 0182 BD46     		mov	sp, r7
 5938              	.LCFI186:
ARM GAS  /tmp//ccJMd58S.s 			page 142


 5939              		.cfi_def_cfa_register 13
 5940              		@ sp needed
 5941 0184 80BD     		pop	{r7, pc}
 5942              	.L434:
 5943 0186 00BF     		.align	2
 5944              	.L433:
 5945 0188 002C0140 		.word	1073818624
 5946 018c 00340140 		.word	1073820672
 5947 0190 00040040 		.word	1073742848
 5948 0194 00080040 		.word	1073743872
 5949 0198 000C0040 		.word	1073744896
 5950              		.cfi_endproc
 5951              	.LFE99:
 5953              		.section	.text.HAL_TIM_IC_Stop,"ax",%progbits
 5954              		.align	1
 5955              		.global	HAL_TIM_IC_Stop
 5956              		.syntax unified
 5957              		.thumb
 5958              		.thumb_func
 5960              	HAL_TIM_IC_Stop:
 5961              	.LFB100:
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement.
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 5962              		.loc 1 2171 1
 5963              		.cfi_startproc
 5964              		@ args = 0, pretend = 0, frame = 8
 5965              		@ frame_needed = 1, uses_anonymous_args = 0
 5966 0000 80B5     		push	{r7, lr}
 5967              	.LCFI187:
 5968              		.cfi_def_cfa_offset 8
 5969              		.cfi_offset 7, -8
 5970              		.cfi_offset 14, -4
 5971 0002 82B0     		sub	sp, sp, #8
 5972              	.LCFI188:
 5973              		.cfi_def_cfa_offset 16
 5974 0004 00AF     		add	r7, sp, #0
 5975              	.LCFI189:
 5976              		.cfi_def_cfa_register 7
 5977 0006 7860     		str	r0, [r7, #4]
 5978 0008 3960     		str	r1, [r7]
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channel */
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
ARM GAS  /tmp//ccJMd58S.s 			page 143


 5979              		.loc 1 2176 3
 5980 000a 7B68     		ldr	r3, [r7, #4]
 5981 000c 1B68     		ldr	r3, [r3]
 5982 000e 0022     		movs	r2, #0
 5983 0010 3968     		ldr	r1, [r7]
 5984 0012 1846     		mov	r0, r3
 5985 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 5986              		.loc 1 2179 3
 5987 0018 7B68     		ldr	r3, [r7, #4]
 5988 001a 1B68     		ldr	r3, [r3]
 5989 001c 1A6A     		ldr	r2, [r3, #32]
 5990 001e 41F21113 		movw	r3, #4369
 5991 0022 1340     		ands	r3, r3, r2
 5992 0024 002B     		cmp	r3, #0
 5993 0026 0FD1     		bne	.L436
 5994              		.loc 1 2179 3 is_stmt 0 discriminator 1
 5995 0028 7B68     		ldr	r3, [r7, #4]
 5996 002a 1B68     		ldr	r3, [r3]
 5997 002c 1A6A     		ldr	r2, [r3, #32]
 5998 002e 40F24443 		movw	r3, #1092
 5999 0032 1340     		ands	r3, r3, r2
 6000 0034 002B     		cmp	r3, #0
 6001 0036 07D1     		bne	.L436
 6002              		.loc 1 2179 3 discriminator 2
 6003 0038 7B68     		ldr	r3, [r7, #4]
 6004 003a 1B68     		ldr	r3, [r3]
 6005 003c 1A68     		ldr	r2, [r3]
 6006 003e 7B68     		ldr	r3, [r7, #4]
 6007 0040 1B68     		ldr	r3, [r3]
 6008 0042 22F00102 		bic	r2, r2, #1
 6009 0046 1A60     		str	r2, [r3]
 6010              	.L436:
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 6011              		.loc 1 2182 3 is_stmt 1
 6012 0048 3B68     		ldr	r3, [r7]
 6013 004a 002B     		cmp	r3, #0
 6014 004c 04D1     		bne	.L437
 6015              		.loc 1 2182 3 is_stmt 0 discriminator 1
 6016 004e 7B68     		ldr	r3, [r7, #4]
 6017 0050 0122     		movs	r2, #1
 6018 0052 83F83E20 		strb	r2, [r3, #62]
 6019 0056 13E0     		b	.L438
 6020              	.L437:
 6021              		.loc 1 2182 3 discriminator 2
 6022 0058 3B68     		ldr	r3, [r7]
 6023 005a 042B     		cmp	r3, #4
 6024 005c 04D1     		bne	.L439
 6025              		.loc 1 2182 3 discriminator 3
 6026 005e 7B68     		ldr	r3, [r7, #4]
 6027 0060 0122     		movs	r2, #1
 6028 0062 83F83F20 		strb	r2, [r3, #63]
 6029 0066 0BE0     		b	.L438
ARM GAS  /tmp//ccJMd58S.s 			page 144


 6030              	.L439:
 6031              		.loc 1 2182 3 discriminator 4
 6032 0068 3B68     		ldr	r3, [r7]
 6033 006a 082B     		cmp	r3, #8
 6034 006c 04D1     		bne	.L441
 6035              		.loc 1 2182 3 discriminator 6
 6036 006e 7B68     		ldr	r3, [r7, #4]
 6037 0070 0122     		movs	r2, #1
 6038 0072 83F84020 		strb	r2, [r3, #64]
 6039 0076 03E0     		b	.L438
 6040              	.L441:
 6041              		.loc 1 2182 3 discriminator 7
 6042 0078 7B68     		ldr	r3, [r7, #4]
 6043 007a 0122     		movs	r2, #1
 6044 007c 83F84120 		strb	r2, [r3, #65]
 6045              	.L438:
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 6046              		.loc 1 2183 3 is_stmt 1
 6047 0080 3B68     		ldr	r3, [r7]
 6048 0082 002B     		cmp	r3, #0
 6049 0084 04D1     		bne	.L443
 6050              		.loc 1 2183 3 is_stmt 0 discriminator 1
 6051 0086 7B68     		ldr	r3, [r7, #4]
 6052 0088 0122     		movs	r2, #1
 6053 008a 83F84220 		strb	r2, [r3, #66]
 6054 008e 13E0     		b	.L444
 6055              	.L443:
 6056              		.loc 1 2183 3 discriminator 2
 6057 0090 3B68     		ldr	r3, [r7]
 6058 0092 042B     		cmp	r3, #4
 6059 0094 04D1     		bne	.L445
 6060              		.loc 1 2183 3 discriminator 3
 6061 0096 7B68     		ldr	r3, [r7, #4]
 6062 0098 0122     		movs	r2, #1
 6063 009a 83F84320 		strb	r2, [r3, #67]
 6064 009e 0BE0     		b	.L444
 6065              	.L445:
 6066              		.loc 1 2183 3 discriminator 4
 6067 00a0 3B68     		ldr	r3, [r7]
 6068 00a2 082B     		cmp	r3, #8
 6069 00a4 04D1     		bne	.L447
 6070              		.loc 1 2183 3 discriminator 6
 6071 00a6 7B68     		ldr	r3, [r7, #4]
 6072 00a8 0122     		movs	r2, #1
 6073 00aa 83F84420 		strb	r2, [r3, #68]
 6074 00ae 03E0     		b	.L444
 6075              	.L447:
 6076              		.loc 1 2183 3 discriminator 7
 6077 00b0 7B68     		ldr	r3, [r7, #4]
 6078 00b2 0122     		movs	r2, #1
 6079 00b4 83F84520 		strb	r2, [r3, #69]
 6080              	.L444:
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 6081              		.loc 1 2186 10 is_stmt 1
 6082 00b8 0023     		movs	r3, #0
ARM GAS  /tmp//ccJMd58S.s 			page 145


2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 6083              		.loc 1 2187 1
 6084 00ba 1846     		mov	r0, r3
 6085 00bc 0837     		adds	r7, r7, #8
 6086              	.LCFI190:
 6087              		.cfi_def_cfa_offset 8
 6088 00be BD46     		mov	sp, r7
 6089              	.LCFI191:
 6090              		.cfi_def_cfa_register 13
 6091              		@ sp needed
 6092 00c0 80BD     		pop	{r7, pc}
 6093              		.cfi_endproc
 6094              	.LFE100:
 6096              		.section	.text.HAL_TIM_IC_Start_IT,"ax",%progbits
 6097              		.align	1
 6098              		.global	HAL_TIM_IC_Start_IT
 6099              		.syntax unified
 6100              		.thumb
 6101              		.thumb_func
 6103              	HAL_TIM_IC_Start_IT:
 6104              	.LFB101:
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in interrupt mode.
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 6105              		.loc 1 2201 1
 6106              		.cfi_startproc
 6107              		@ args = 0, pretend = 0, frame = 16
 6108              		@ frame_needed = 1, uses_anonymous_args = 0
 6109 0000 80B5     		push	{r7, lr}
 6110              	.LCFI192:
 6111              		.cfi_def_cfa_offset 8
 6112              		.cfi_offset 7, -8
 6113              		.cfi_offset 14, -4
 6114 0002 84B0     		sub	sp, sp, #16
 6115              	.LCFI193:
 6116              		.cfi_def_cfa_offset 24
 6117 0004 00AF     		add	r7, sp, #0
 6118              	.LCFI194:
 6119              		.cfi_def_cfa_register 7
 6120 0006 7860     		str	r0, [r7, #4]
 6121 0008 3960     		str	r1, [r7]
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 6122              		.loc 1 2202 21
 6123 000a 0023     		movs	r3, #0
 6124 000c FB73     		strb	r3, [r7, #15]
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
ARM GAS  /tmp//ccJMd58S.s 			page 146


2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_state = TIM_CHANNEL_STATE_GET(htim, Channel);
 6125              		.loc 1 2205 47
 6126 000e 3B68     		ldr	r3, [r7]
 6127 0010 002B     		cmp	r3, #0
 6128 0012 04D1     		bne	.L451
 6129              		.loc 1 2205 47 is_stmt 0 discriminator 1
 6130 0014 7B68     		ldr	r3, [r7, #4]
 6131 0016 93F83E30 		ldrb	r3, [r3, #62]
 6132 001a DBB2     		uxtb	r3, r3
 6133 001c 13E0     		b	.L452
 6134              	.L451:
 6135              		.loc 1 2205 47 discriminator 2
 6136 001e 3B68     		ldr	r3, [r7]
 6137 0020 042B     		cmp	r3, #4
 6138 0022 04D1     		bne	.L453
 6139              		.loc 1 2205 47 discriminator 4
 6140 0024 7B68     		ldr	r3, [r7, #4]
 6141 0026 93F83F30 		ldrb	r3, [r3, #63]
 6142 002a DBB2     		uxtb	r3, r3
 6143 002c 0BE0     		b	.L452
 6144              	.L453:
 6145              		.loc 1 2205 47 discriminator 5
 6146 002e 3B68     		ldr	r3, [r7]
 6147 0030 082B     		cmp	r3, #8
 6148 0032 04D1     		bne	.L455
 6149              		.loc 1 2205 47 discriminator 7
 6150 0034 7B68     		ldr	r3, [r7, #4]
 6151 0036 93F84030 		ldrb	r3, [r3, #64]
 6152 003a DBB2     		uxtb	r3, r3
 6153 003c 03E0     		b	.L452
 6154              	.L455:
 6155              		.loc 1 2205 47 discriminator 8
 6156 003e 7B68     		ldr	r3, [r7, #4]
 6157 0040 93F84130 		ldrb	r3, [r3, #65]
 6158 0044 DBB2     		uxtb	r3, r3
 6159              	.L452:
 6160              		.loc 1 2205 31 is_stmt 1 discriminator 12
 6161 0046 BB73     		strb	r3, [r7, #14]
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_state = TIM_CHANNEL_N_STATE_GET(htim, Channel);
 6162              		.loc 1 2206 61
 6163 0048 3B68     		ldr	r3, [r7]
 6164 004a 002B     		cmp	r3, #0
 6165 004c 04D1     		bne	.L457
 6166              		.loc 1 2206 61 is_stmt 0 discriminator 1
 6167 004e 7B68     		ldr	r3, [r7, #4]
 6168 0050 93F84230 		ldrb	r3, [r3, #66]
 6169 0054 DBB2     		uxtb	r3, r3
 6170 0056 13E0     		b	.L458
 6171              	.L457:
 6172              		.loc 1 2206 61 discriminator 2
 6173 0058 3B68     		ldr	r3, [r7]
 6174 005a 042B     		cmp	r3, #4
 6175 005c 04D1     		bne	.L459
 6176              		.loc 1 2206 61 discriminator 4
 6177 005e 7B68     		ldr	r3, [r7, #4]
 6178 0060 93F84330 		ldrb	r3, [r3, #67]
ARM GAS  /tmp//ccJMd58S.s 			page 147


 6179 0064 DBB2     		uxtb	r3, r3
 6180 0066 0BE0     		b	.L458
 6181              	.L459:
 6182              		.loc 1 2206 61 discriminator 5
 6183 0068 3B68     		ldr	r3, [r7]
 6184 006a 082B     		cmp	r3, #8
 6185 006c 04D1     		bne	.L461
 6186              		.loc 1 2206 61 discriminator 7
 6187 006e 7B68     		ldr	r3, [r7, #4]
 6188 0070 93F84430 		ldrb	r3, [r3, #68]
 6189 0074 DBB2     		uxtb	r3, r3
 6190 0076 03E0     		b	.L458
 6191              	.L461:
 6192              		.loc 1 2206 61 discriminator 8
 6193 0078 7B68     		ldr	r3, [r7, #4]
 6194 007a 93F84530 		ldrb	r3, [r3, #69]
 6195 007e DBB2     		uxtb	r3, r3
 6196              	.L458:
 6197              		.loc 1 2206 31 is_stmt 1 discriminator 12
 6198 0080 7B73     		strb	r3, [r7, #13]
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM channel state */
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((channel_state != HAL_TIM_CHANNEL_STATE_READY)
 6199              		.loc 1 2212 6
 6200 0082 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 6201 0084 012B     		cmp	r3, #1
 6202 0086 02D1     		bne	.L463
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       || (complementary_channel_state != HAL_TIM_CHANNEL_STATE_READY))
 6203              		.loc 1 2213 7
 6204 0088 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 6205 008a 012B     		cmp	r3, #1
 6206 008c 01D0     		beq	.L464
 6207              	.L463:
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 6208              		.loc 1 2215 12
 6209 008e 0123     		movs	r3, #1
 6210 0090 C2E0     		b	.L465
 6211              	.L464:
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 6212              		.loc 1 2219 3
 6213 0092 3B68     		ldr	r3, [r7]
 6214 0094 002B     		cmp	r3, #0
 6215 0096 04D1     		bne	.L466
 6216              		.loc 1 2219 3 is_stmt 0 discriminator 1
 6217 0098 7B68     		ldr	r3, [r7, #4]
 6218 009a 0222     		movs	r2, #2
 6219 009c 83F83E20 		strb	r2, [r3, #62]
 6220 00a0 13E0     		b	.L467
 6221              	.L466:
 6222              		.loc 1 2219 3 discriminator 2
ARM GAS  /tmp//ccJMd58S.s 			page 148


 6223 00a2 3B68     		ldr	r3, [r7]
 6224 00a4 042B     		cmp	r3, #4
 6225 00a6 04D1     		bne	.L468
 6226              		.loc 1 2219 3 discriminator 3
 6227 00a8 7B68     		ldr	r3, [r7, #4]
 6228 00aa 0222     		movs	r2, #2
 6229 00ac 83F83F20 		strb	r2, [r3, #63]
 6230 00b0 0BE0     		b	.L467
 6231              	.L468:
 6232              		.loc 1 2219 3 discriminator 4
 6233 00b2 3B68     		ldr	r3, [r7]
 6234 00b4 082B     		cmp	r3, #8
 6235 00b6 04D1     		bne	.L470
 6236              		.loc 1 2219 3 discriminator 6
 6237 00b8 7B68     		ldr	r3, [r7, #4]
 6238 00ba 0222     		movs	r2, #2
 6239 00bc 83F84020 		strb	r2, [r3, #64]
 6240 00c0 03E0     		b	.L467
 6241              	.L470:
 6242              		.loc 1 2219 3 discriminator 7
 6243 00c2 7B68     		ldr	r3, [r7, #4]
 6244 00c4 0222     		movs	r2, #2
 6245 00c6 83F84120 		strb	r2, [r3, #65]
 6246              	.L467:
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 6247              		.loc 1 2220 3 is_stmt 1
 6248 00ca 3B68     		ldr	r3, [r7]
 6249 00cc 002B     		cmp	r3, #0
 6250 00ce 04D1     		bne	.L472
 6251              		.loc 1 2220 3 is_stmt 0 discriminator 1
 6252 00d0 7B68     		ldr	r3, [r7, #4]
 6253 00d2 0222     		movs	r2, #2
 6254 00d4 83F84220 		strb	r2, [r3, #66]
 6255 00d8 13E0     		b	.L473
 6256              	.L472:
 6257              		.loc 1 2220 3 discriminator 2
 6258 00da 3B68     		ldr	r3, [r7]
 6259 00dc 042B     		cmp	r3, #4
 6260 00de 04D1     		bne	.L474
 6261              		.loc 1 2220 3 discriminator 3
 6262 00e0 7B68     		ldr	r3, [r7, #4]
 6263 00e2 0222     		movs	r2, #2
 6264 00e4 83F84320 		strb	r2, [r3, #67]
 6265 00e8 0BE0     		b	.L473
 6266              	.L474:
 6267              		.loc 1 2220 3 discriminator 4
 6268 00ea 3B68     		ldr	r3, [r7]
 6269 00ec 082B     		cmp	r3, #8
 6270 00ee 04D1     		bne	.L476
 6271              		.loc 1 2220 3 discriminator 6
 6272 00f0 7B68     		ldr	r3, [r7, #4]
 6273 00f2 0222     		movs	r2, #2
 6274 00f4 83F84420 		strb	r2, [r3, #68]
 6275 00f8 03E0     		b	.L473
 6276              	.L476:
 6277              		.loc 1 2220 3 discriminator 7
 6278 00fa 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 149


 6279 00fc 0222     		movs	r2, #2
 6280 00fe 83F84520 		strb	r2, [r3, #69]
 6281              	.L473:
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 6282              		.loc 1 2222 3 is_stmt 1
 6283 0102 3B68     		ldr	r3, [r7]
 6284 0104 0C2B     		cmp	r3, #12
 6285 0106 41D8     		bhi	.L478
 6286 0108 01A2     		adr	r2, .L480
 6287 010a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6288 010e 00BF     		.p2align 2
 6289              	.L480:
 6290 0110 45010000 		.word	.L483+1
 6291 0114 8D010000 		.word	.L478+1
 6292 0118 8D010000 		.word	.L478+1
 6293 011c 8D010000 		.word	.L478+1
 6294 0120 57010000 		.word	.L482+1
 6295 0124 8D010000 		.word	.L478+1
 6296 0128 8D010000 		.word	.L478+1
 6297 012c 8D010000 		.word	.L478+1
 6298 0130 69010000 		.word	.L481+1
 6299 0134 8D010000 		.word	.L478+1
 6300 0138 8D010000 		.word	.L478+1
 6301 013c 8D010000 		.word	.L478+1
 6302 0140 7B010000 		.word	.L479+1
 6303              		.p2align 1
 6304              	.L483:
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 6305              		.loc 1 2227 7
 6306 0144 7B68     		ldr	r3, [r7, #4]
 6307 0146 1B68     		ldr	r3, [r3]
 6308 0148 DA68     		ldr	r2, [r3, #12]
 6309 014a 7B68     		ldr	r3, [r7, #4]
 6310 014c 1B68     		ldr	r3, [r3]
 6311 014e 42F00202 		orr	r2, r2, #2
 6312 0152 DA60     		str	r2, [r3, #12]
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6313              		.loc 1 2228 7
 6314 0154 1DE0     		b	.L484
 6315              	.L482:
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 6316              		.loc 1 2234 7
 6317 0156 7B68     		ldr	r3, [r7, #4]
 6318 0158 1B68     		ldr	r3, [r3]
 6319 015a DA68     		ldr	r2, [r3, #12]
 6320 015c 7B68     		ldr	r3, [r7, #4]
 6321 015e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 150


 6322 0160 42F00402 		orr	r2, r2, #4
 6323 0164 DA60     		str	r2, [r3, #12]
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6324              		.loc 1 2235 7
 6325 0166 14E0     		b	.L484
 6326              	.L481:
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 6327              		.loc 1 2241 7
 6328 0168 7B68     		ldr	r3, [r7, #4]
 6329 016a 1B68     		ldr	r3, [r3]
 6330 016c DA68     		ldr	r2, [r3, #12]
 6331 016e 7B68     		ldr	r3, [r7, #4]
 6332 0170 1B68     		ldr	r3, [r3]
 6333 0172 42F00802 		orr	r2, r2, #8
 6334 0176 DA60     		str	r2, [r3, #12]
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6335              		.loc 1 2242 7
 6336 0178 0BE0     		b	.L484
 6337              	.L479:
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 6338              		.loc 1 2248 7
 6339 017a 7B68     		ldr	r3, [r7, #4]
 6340 017c 1B68     		ldr	r3, [r3]
 6341 017e DA68     		ldr	r2, [r3, #12]
 6342 0180 7B68     		ldr	r3, [r7, #4]
 6343 0182 1B68     		ldr	r3, [r3]
 6344 0184 42F01002 		orr	r2, r2, #16
 6345 0188 DA60     		str	r2, [r3, #12]
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6346              		.loc 1 2249 7
 6347 018a 02E0     		b	.L484
 6348              	.L478:
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 6349              		.loc 1 2253 14
 6350 018c 0123     		movs	r3, #1
 6351 018e FB73     		strb	r3, [r7, #15]
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6352              		.loc 1 2254 7
 6353 0190 00BF     		nop
 6354              	.L484:
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 6355              		.loc 1 2257 6
ARM GAS  /tmp//ccJMd58S.s 			page 151


 6356 0192 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6357 0194 002B     		cmp	r3, #0
 6358 0196 3ED1     		bne	.L485
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Input Capture channel */
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6359              		.loc 1 2260 5
 6360 0198 7B68     		ldr	r3, [r7, #4]
 6361 019a 1B68     		ldr	r3, [r3]
 6362 019c 0122     		movs	r2, #1
 6363 019e 3968     		ldr	r1, [r7]
 6364 01a0 1846     		mov	r0, r3
 6365 01a2 FFF7FEFF 		bl	TIM_CCxChannelCmd
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigge
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 6366              		.loc 1 2263 9
 6367 01a6 7B68     		ldr	r3, [r7, #4]
 6368 01a8 1B68     		ldr	r3, [r3]
 6369              		.loc 1 2263 8
 6370 01aa 1D4A     		ldr	r2, .L489
 6371 01ac 9342     		cmp	r3, r2
 6372 01ae 18D0     		beq	.L486
 6373              		.loc 1 2263 9 discriminator 1
 6374 01b0 7B68     		ldr	r3, [r7, #4]
 6375 01b2 1B68     		ldr	r3, [r3]
 6376 01b4 1B4A     		ldr	r2, .L489+4
 6377 01b6 9342     		cmp	r3, r2
 6378 01b8 13D0     		beq	.L486
 6379              		.loc 1 2263 9 is_stmt 0 discriminator 2
 6380 01ba 7B68     		ldr	r3, [r7, #4]
 6381 01bc 1B68     		ldr	r3, [r3]
 6382 01be B3F1804F 		cmp	r3, #1073741824
 6383 01c2 0ED0     		beq	.L486
 6384              		.loc 1 2263 9 discriminator 3
 6385 01c4 7B68     		ldr	r3, [r7, #4]
 6386 01c6 1B68     		ldr	r3, [r3]
 6387 01c8 174A     		ldr	r2, .L489+8
 6388 01ca 9342     		cmp	r3, r2
 6389 01cc 09D0     		beq	.L486
 6390              		.loc 1 2263 9 discriminator 4
 6391 01ce 7B68     		ldr	r3, [r7, #4]
 6392 01d0 1B68     		ldr	r3, [r3]
 6393 01d2 164A     		ldr	r2, .L489+12
 6394 01d4 9342     		cmp	r3, r2
 6395 01d6 04D0     		beq	.L486
 6396              		.loc 1 2263 9 discriminator 5
 6397 01d8 7B68     		ldr	r3, [r7, #4]
 6398 01da 1B68     		ldr	r3, [r3]
 6399 01dc 144A     		ldr	r2, .L489+16
 6400 01de 9342     		cmp	r3, r2
 6401 01e0 11D1     		bne	.L487
 6402              	.L486:
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 6403              		.loc 1 2265 21 is_stmt 1
 6404 01e2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 152


 6405 01e4 1B68     		ldr	r3, [r3]
 6406              		.loc 1 2265 31
 6407 01e6 9B68     		ldr	r3, [r3, #8]
 6408              		.loc 1 2265 15
 6409 01e8 03F00703 		and	r3, r3, #7
 6410 01ec BB60     		str	r3, [r7, #8]
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 6411              		.loc 1 2266 10
 6412 01ee BB68     		ldr	r3, [r7, #8]
 6413 01f0 062B     		cmp	r3, #6
 6414 01f2 10D0     		beq	.L485
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         __HAL_TIM_ENABLE(htim);
 6415              		.loc 1 2268 9
 6416 01f4 7B68     		ldr	r3, [r7, #4]
 6417 01f6 1B68     		ldr	r3, [r3]
 6418 01f8 1A68     		ldr	r2, [r3]
 6419 01fa 7B68     		ldr	r3, [r7, #4]
 6420 01fc 1B68     		ldr	r3, [r3]
 6421 01fe 42F00102 		orr	r2, r2, #1
 6422 0202 1A60     		str	r2, [r3]
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 6423              		.loc 1 2266 10
 6424 0204 07E0     		b	.L485
 6425              	.L487:
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 6426              		.loc 1 2273 7
 6427 0206 7B68     		ldr	r3, [r7, #4]
 6428 0208 1B68     		ldr	r3, [r3]
 6429 020a 1A68     		ldr	r2, [r3]
 6430 020c 7B68     		ldr	r3, [r7, #4]
 6431 020e 1B68     		ldr	r3, [r3]
 6432 0210 42F00102 		orr	r2, r2, #1
 6433 0214 1A60     		str	r2, [r3]
 6434              	.L485:
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 6435              		.loc 1 2278 10
 6436 0216 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6437              	.L465:
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 6438              		.loc 1 2279 1
 6439 0218 1846     		mov	r0, r3
 6440 021a 1037     		adds	r7, r7, #16
 6441              	.LCFI195:
 6442              		.cfi_def_cfa_offset 8
 6443 021c BD46     		mov	sp, r7
 6444              	.LCFI196:
 6445              		.cfi_def_cfa_register 13
 6446              		@ sp needed
ARM GAS  /tmp//ccJMd58S.s 			page 153


 6447 021e 80BD     		pop	{r7, pc}
 6448              	.L490:
 6449              		.align	2
 6450              	.L489:
 6451 0220 002C0140 		.word	1073818624
 6452 0224 00340140 		.word	1073820672
 6453 0228 00040040 		.word	1073742848
 6454 022c 00080040 		.word	1073743872
 6455 0230 000C0040 		.word	1073744896
 6456              		.cfi_endproc
 6457              	.LFE101:
 6459              		.section	.text.HAL_TIM_IC_Stop_IT,"ax",%progbits
 6460              		.align	1
 6461              		.global	HAL_TIM_IC_Stop_IT
 6462              		.syntax unified
 6463              		.thumb
 6464              		.thumb_func
 6466              	HAL_TIM_IC_Stop_IT:
 6467              	.LFB102:
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in interrupt mode.
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 6468              		.loc 1 2293 1
 6469              		.cfi_startproc
 6470              		@ args = 0, pretend = 0, frame = 16
 6471              		@ frame_needed = 1, uses_anonymous_args = 0
 6472 0000 80B5     		push	{r7, lr}
 6473              	.LCFI197:
 6474              		.cfi_def_cfa_offset 8
 6475              		.cfi_offset 7, -8
 6476              		.cfi_offset 14, -4
 6477 0002 84B0     		sub	sp, sp, #16
 6478              	.LCFI198:
 6479              		.cfi_def_cfa_offset 24
 6480 0004 00AF     		add	r7, sp, #0
 6481              	.LCFI199:
 6482              		.cfi_def_cfa_register 7
 6483 0006 7860     		str	r0, [r7, #4]
 6484 0008 3960     		str	r1, [r7]
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 6485              		.loc 1 2294 21
 6486 000a 0023     		movs	r3, #0
 6487 000c FB73     		strb	r3, [r7, #15]
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
ARM GAS  /tmp//ccJMd58S.s 			page 154


2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 6488              		.loc 1 2299 3
 6489 000e 3B68     		ldr	r3, [r7]
 6490 0010 0C2B     		cmp	r3, #12
 6491 0012 41D8     		bhi	.L492
 6492 0014 01A2     		adr	r2, .L494
 6493 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6494 001a 00BF     		.p2align 2
 6495              	.L494:
 6496 001c 51000000 		.word	.L497+1
 6497 0020 99000000 		.word	.L492+1
 6498 0024 99000000 		.word	.L492+1
 6499 0028 99000000 		.word	.L492+1
 6500 002c 63000000 		.word	.L496+1
 6501 0030 99000000 		.word	.L492+1
 6502 0034 99000000 		.word	.L492+1
 6503 0038 99000000 		.word	.L492+1
 6504 003c 75000000 		.word	.L495+1
 6505 0040 99000000 		.word	.L492+1
 6506 0044 99000000 		.word	.L492+1
 6507 0048 99000000 		.word	.L492+1
 6508 004c 87000000 		.word	.L493+1
 6509              		.p2align 1
 6510              	.L497:
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 6511              		.loc 1 2304 7
 6512 0050 7B68     		ldr	r3, [r7, #4]
 6513 0052 1B68     		ldr	r3, [r3]
 6514 0054 DA68     		ldr	r2, [r3, #12]
 6515 0056 7B68     		ldr	r3, [r7, #4]
 6516 0058 1B68     		ldr	r3, [r3]
 6517 005a 22F00202 		bic	r2, r2, #2
 6518 005e DA60     		str	r2, [r3, #12]
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6519              		.loc 1 2305 7
 6520 0060 1DE0     		b	.L498
 6521              	.L496:
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 6522              		.loc 1 2311 7
 6523 0062 7B68     		ldr	r3, [r7, #4]
 6524 0064 1B68     		ldr	r3, [r3]
 6525 0066 DA68     		ldr	r2, [r3, #12]
 6526 0068 7B68     		ldr	r3, [r7, #4]
 6527 006a 1B68     		ldr	r3, [r3]
 6528 006c 22F00402 		bic	r2, r2, #4
 6529 0070 DA60     		str	r2, [r3, #12]
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
ARM GAS  /tmp//ccJMd58S.s 			page 155


 6530              		.loc 1 2312 7
 6531 0072 14E0     		b	.L498
 6532              	.L495:
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 6533              		.loc 1 2318 7
 6534 0074 7B68     		ldr	r3, [r7, #4]
 6535 0076 1B68     		ldr	r3, [r3]
 6536 0078 DA68     		ldr	r2, [r3, #12]
 6537 007a 7B68     		ldr	r3, [r7, #4]
 6538 007c 1B68     		ldr	r3, [r3]
 6539 007e 22F00802 		bic	r2, r2, #8
 6540 0082 DA60     		str	r2, [r3, #12]
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6541              		.loc 1 2319 7
 6542 0084 0BE0     		b	.L498
 6543              	.L493:
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 6544              		.loc 1 2325 7
 6545 0086 7B68     		ldr	r3, [r7, #4]
 6546 0088 1B68     		ldr	r3, [r3]
 6547 008a DA68     		ldr	r2, [r3, #12]
 6548 008c 7B68     		ldr	r3, [r7, #4]
 6549 008e 1B68     		ldr	r3, [r3]
 6550 0090 22F01002 		bic	r2, r2, #16
 6551 0094 DA60     		str	r2, [r3, #12]
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6552              		.loc 1 2326 7
 6553 0096 02E0     		b	.L498
 6554              	.L492:
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 6555              		.loc 1 2330 14
 6556 0098 0123     		movs	r3, #1
 6557 009a FB73     		strb	r3, [r7, #15]
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6558              		.loc 1 2331 7
 6559 009c 00BF     		nop
 6560              	.L498:
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 6561              		.loc 1 2334 6
 6562 009e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6563 00a0 002B     		cmp	r3, #0
 6564 00a2 56D1     		bne	.L499
ARM GAS  /tmp//ccJMd58S.s 			page 156


2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Input Capture channel */
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 6565              		.loc 1 2337 5
 6566 00a4 7B68     		ldr	r3, [r7, #4]
 6567 00a6 1B68     		ldr	r3, [r3]
 6568 00a8 0022     		movs	r2, #0
 6569 00aa 3968     		ldr	r1, [r7]
 6570 00ac 1846     		mov	r0, r3
 6571 00ae FFF7FEFF 		bl	TIM_CCxChannelCmd
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Peripheral */
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
 6572              		.loc 1 2340 5
 6573 00b2 7B68     		ldr	r3, [r7, #4]
 6574 00b4 1B68     		ldr	r3, [r3]
 6575 00b6 1A6A     		ldr	r2, [r3, #32]
 6576 00b8 41F21113 		movw	r3, #4369
 6577 00bc 1340     		ands	r3, r3, r2
 6578 00be 002B     		cmp	r3, #0
 6579 00c0 0FD1     		bne	.L500
 6580              		.loc 1 2340 5 is_stmt 0 discriminator 1
 6581 00c2 7B68     		ldr	r3, [r7, #4]
 6582 00c4 1B68     		ldr	r3, [r3]
 6583 00c6 1A6A     		ldr	r2, [r3, #32]
 6584 00c8 40F24443 		movw	r3, #1092
 6585 00cc 1340     		ands	r3, r3, r2
 6586 00ce 002B     		cmp	r3, #0
 6587 00d0 07D1     		bne	.L500
 6588              		.loc 1 2340 5 discriminator 2
 6589 00d2 7B68     		ldr	r3, [r7, #4]
 6590 00d4 1B68     		ldr	r3, [r3]
 6591 00d6 1A68     		ldr	r2, [r3]
 6592 00d8 7B68     		ldr	r3, [r7, #4]
 6593 00da 1B68     		ldr	r3, [r3]
 6594 00dc 22F00102 		bic	r2, r2, #1
 6595 00e0 1A60     		str	r2, [r3]
 6596              	.L500:
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the TIM channel state */
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 6597              		.loc 1 2343 5 is_stmt 1
 6598 00e2 3B68     		ldr	r3, [r7]
 6599 00e4 002B     		cmp	r3, #0
 6600 00e6 04D1     		bne	.L501
 6601              		.loc 1 2343 5 is_stmt 0 discriminator 1
 6602 00e8 7B68     		ldr	r3, [r7, #4]
 6603 00ea 0122     		movs	r2, #1
 6604 00ec 83F83E20 		strb	r2, [r3, #62]
 6605 00f0 13E0     		b	.L502
 6606              	.L501:
 6607              		.loc 1 2343 5 discriminator 2
 6608 00f2 3B68     		ldr	r3, [r7]
 6609 00f4 042B     		cmp	r3, #4
 6610 00f6 04D1     		bne	.L503
 6611              		.loc 1 2343 5 discriminator 3
 6612 00f8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 157


 6613 00fa 0122     		movs	r2, #1
 6614 00fc 83F83F20 		strb	r2, [r3, #63]
 6615 0100 0BE0     		b	.L502
 6616              	.L503:
 6617              		.loc 1 2343 5 discriminator 4
 6618 0102 3B68     		ldr	r3, [r7]
 6619 0104 082B     		cmp	r3, #8
 6620 0106 04D1     		bne	.L505
 6621              		.loc 1 2343 5 discriminator 6
 6622 0108 7B68     		ldr	r3, [r7, #4]
 6623 010a 0122     		movs	r2, #1
 6624 010c 83F84020 		strb	r2, [r3, #64]
 6625 0110 03E0     		b	.L502
 6626              	.L505:
 6627              		.loc 1 2343 5 discriminator 7
 6628 0112 7B68     		ldr	r3, [r7, #4]
 6629 0114 0122     		movs	r2, #1
 6630 0116 83F84120 		strb	r2, [r3, #65]
 6631              	.L502:
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 6632              		.loc 1 2344 5 is_stmt 1
 6633 011a 3B68     		ldr	r3, [r7]
 6634 011c 002B     		cmp	r3, #0
 6635 011e 04D1     		bne	.L507
 6636              		.loc 1 2344 5 is_stmt 0 discriminator 1
 6637 0120 7B68     		ldr	r3, [r7, #4]
 6638 0122 0122     		movs	r2, #1
 6639 0124 83F84220 		strb	r2, [r3, #66]
 6640 0128 13E0     		b	.L499
 6641              	.L507:
 6642              		.loc 1 2344 5 discriminator 2
 6643 012a 3B68     		ldr	r3, [r7]
 6644 012c 042B     		cmp	r3, #4
 6645 012e 04D1     		bne	.L508
 6646              		.loc 1 2344 5 discriminator 3
 6647 0130 7B68     		ldr	r3, [r7, #4]
 6648 0132 0122     		movs	r2, #1
 6649 0134 83F84320 		strb	r2, [r3, #67]
 6650 0138 0BE0     		b	.L499
 6651              	.L508:
 6652              		.loc 1 2344 5 discriminator 4
 6653 013a 3B68     		ldr	r3, [r7]
 6654 013c 082B     		cmp	r3, #8
 6655 013e 04D1     		bne	.L510
 6656              		.loc 1 2344 5 discriminator 6
 6657 0140 7B68     		ldr	r3, [r7, #4]
 6658 0142 0122     		movs	r2, #1
 6659 0144 83F84420 		strb	r2, [r3, #68]
 6660 0148 03E0     		b	.L499
 6661              	.L510:
 6662              		.loc 1 2344 5 discriminator 7
 6663 014a 7B68     		ldr	r3, [r7, #4]
 6664 014c 0122     		movs	r2, #1
 6665 014e 83F84520 		strb	r2, [r3, #69]
 6666              	.L499:
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 158


2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 6667              		.loc 1 2348 10 is_stmt 1
 6668 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 6669              		.loc 1 2349 1
 6670 0154 1846     		mov	r0, r3
 6671 0156 1037     		adds	r7, r7, #16
 6672              	.LCFI200:
 6673              		.cfi_def_cfa_offset 8
 6674 0158 BD46     		mov	sp, r7
 6675              	.LCFI201:
 6676              		.cfi_def_cfa_register 13
 6677              		@ sp needed
 6678 015a 80BD     		pop	{r7, pc}
 6679              		.cfi_endproc
 6680              	.LFE102:
 6682              		.section	.text.HAL_TIM_IC_Start_DMA,"ax",%progbits
 6683              		.align	1
 6684              		.global	HAL_TIM_IC_Start_DMA
 6685              		.syntax unified
 6686              		.thumb
 6687              		.thumb_func
 6689              	HAL_TIM_IC_Start_DMA:
 6690              	.LFB103:
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in DMA mode.
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  pData The destination Buffer address.
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from TIM peripheral to memory.
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData, 
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 6691              		.loc 1 2365 1
 6692              		.cfi_startproc
 6693              		@ args = 0, pretend = 0, frame = 24
 6694              		@ frame_needed = 1, uses_anonymous_args = 0
 6695 0000 80B5     		push	{r7, lr}
 6696              	.LCFI202:
 6697              		.cfi_def_cfa_offset 8
 6698              		.cfi_offset 7, -8
 6699              		.cfi_offset 14, -4
 6700 0002 86B0     		sub	sp, sp, #24
 6701              	.LCFI203:
 6702              		.cfi_def_cfa_offset 32
 6703 0004 00AF     		add	r7, sp, #0
 6704              	.LCFI204:
 6705              		.cfi_def_cfa_register 7
 6706 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 159


 6707 0008 B960     		str	r1, [r7, #8]
 6708 000a 7A60     		str	r2, [r7, #4]
 6709 000c 7B80     		strh	r3, [r7, #2]	@ movhi
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 6710              		.loc 1 2366 21
 6711 000e 0023     		movs	r3, #0
 6712 0010 FB75     		strb	r3, [r7, #23]
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_state = TIM_CHANNEL_STATE_GET(htim, Channel);
 6713              		.loc 1 2369 47
 6714 0012 BB68     		ldr	r3, [r7, #8]
 6715 0014 002B     		cmp	r3, #0
 6716 0016 04D1     		bne	.L514
 6717              		.loc 1 2369 47 is_stmt 0 discriminator 1
 6718 0018 FB68     		ldr	r3, [r7, #12]
 6719 001a 93F83E30 		ldrb	r3, [r3, #62]
 6720 001e DBB2     		uxtb	r3, r3
 6721 0020 13E0     		b	.L515
 6722              	.L514:
 6723              		.loc 1 2369 47 discriminator 2
 6724 0022 BB68     		ldr	r3, [r7, #8]
 6725 0024 042B     		cmp	r3, #4
 6726 0026 04D1     		bne	.L516
 6727              		.loc 1 2369 47 discriminator 4
 6728 0028 FB68     		ldr	r3, [r7, #12]
 6729 002a 93F83F30 		ldrb	r3, [r3, #63]
 6730 002e DBB2     		uxtb	r3, r3
 6731 0030 0BE0     		b	.L515
 6732              	.L516:
 6733              		.loc 1 2369 47 discriminator 5
 6734 0032 BB68     		ldr	r3, [r7, #8]
 6735 0034 082B     		cmp	r3, #8
 6736 0036 04D1     		bne	.L518
 6737              		.loc 1 2369 47 discriminator 7
 6738 0038 FB68     		ldr	r3, [r7, #12]
 6739 003a 93F84030 		ldrb	r3, [r3, #64]
 6740 003e DBB2     		uxtb	r3, r3
 6741 0040 03E0     		b	.L515
 6742              	.L518:
 6743              		.loc 1 2369 47 discriminator 8
 6744 0042 FB68     		ldr	r3, [r7, #12]
 6745 0044 93F84130 		ldrb	r3, [r3, #65]
 6746 0048 DBB2     		uxtb	r3, r3
 6747              	.L515:
 6748              		.loc 1 2369 31 is_stmt 1 discriminator 12
 6749 004a BB75     		strb	r3, [r7, #22]
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_state = TIM_CHANNEL_N_STATE_GET(htim, Channel);
 6750              		.loc 1 2370 61
 6751 004c BB68     		ldr	r3, [r7, #8]
 6752 004e 002B     		cmp	r3, #0
 6753 0050 04D1     		bne	.L520
 6754              		.loc 1 2370 61 is_stmt 0 discriminator 1
 6755 0052 FB68     		ldr	r3, [r7, #12]
 6756 0054 93F84230 		ldrb	r3, [r3, #66]
 6757 0058 DBB2     		uxtb	r3, r3
 6758 005a 13E0     		b	.L521
ARM GAS  /tmp//ccJMd58S.s 			page 160


 6759              	.L520:
 6760              		.loc 1 2370 61 discriminator 2
 6761 005c BB68     		ldr	r3, [r7, #8]
 6762 005e 042B     		cmp	r3, #4
 6763 0060 04D1     		bne	.L522
 6764              		.loc 1 2370 61 discriminator 4
 6765 0062 FB68     		ldr	r3, [r7, #12]
 6766 0064 93F84330 		ldrb	r3, [r3, #67]
 6767 0068 DBB2     		uxtb	r3, r3
 6768 006a 0BE0     		b	.L521
 6769              	.L522:
 6770              		.loc 1 2370 61 discriminator 5
 6771 006c BB68     		ldr	r3, [r7, #8]
 6772 006e 082B     		cmp	r3, #8
 6773 0070 04D1     		bne	.L524
 6774              		.loc 1 2370 61 discriminator 7
 6775 0072 FB68     		ldr	r3, [r7, #12]
 6776 0074 93F84430 		ldrb	r3, [r3, #68]
 6777 0078 DBB2     		uxtb	r3, r3
 6778 007a 03E0     		b	.L521
 6779              	.L524:
 6780              		.loc 1 2370 61 discriminator 8
 6781 007c FB68     		ldr	r3, [r7, #12]
 6782 007e 93F84530 		ldrb	r3, [r3, #69]
 6783 0082 DBB2     		uxtb	r3, r3
 6784              	.L521:
 6785              		.loc 1 2370 31 is_stmt 1 discriminator 12
 6786 0084 7B75     		strb	r3, [r7, #21]
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((channel_state == HAL_TIM_CHANNEL_STATE_BUSY)
 6787              		.loc 1 2377 6
 6788 0086 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6789 0088 022B     		cmp	r3, #2
 6790 008a 02D0     		beq	.L526
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       || (complementary_channel_state == HAL_TIM_CHANNEL_STATE_BUSY))
 6791              		.loc 1 2378 7
 6792 008c 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 6793 008e 022B     		cmp	r3, #2
 6794 0090 01D1     		bne	.L527
 6795              	.L526:
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
 6796              		.loc 1 2380 12
 6797 0092 0223     		movs	r3, #2
 6798 0094 3CE1     		b	.L528
 6799              	.L527:
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if ((channel_state == HAL_TIM_CHANNEL_STATE_READY)
 6800              		.loc 1 2382 11
 6801 0096 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6802 0098 012B     		cmp	r3, #1
 6803 009a 43D1     		bne	.L529
ARM GAS  /tmp//ccJMd58S.s 			page 161


2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****            && (complementary_channel_state == HAL_TIM_CHANNEL_STATE_READY))
 6804              		.loc 1 2383 12
 6805 009c 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 6806 009e 012B     		cmp	r3, #1
 6807 00a0 40D1     		bne	.L529
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((pData == NULL) || (Length == 0U))
 6808              		.loc 1 2385 8
 6809 00a2 7B68     		ldr	r3, [r7, #4]
 6810 00a4 002B     		cmp	r3, #0
 6811 00a6 02D0     		beq	.L530
 6812              		.loc 1 2385 25 discriminator 1
 6813 00a8 7B88     		ldrh	r3, [r7, #2]
 6814 00aa 002B     		cmp	r3, #0
 6815 00ac 01D1     		bne	.L531
 6816              	.L530:
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 6817              		.loc 1 2387 14
 6818 00ae 0123     		movs	r3, #1
 6819 00b0 2EE1     		b	.L528
 6820              	.L531:
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 6821              		.loc 1 2391 7
 6822 00b2 BB68     		ldr	r3, [r7, #8]
 6823 00b4 002B     		cmp	r3, #0
 6824 00b6 04D1     		bne	.L532
 6825              		.loc 1 2391 7 is_stmt 0 discriminator 1
 6826 00b8 FB68     		ldr	r3, [r7, #12]
 6827 00ba 0222     		movs	r2, #2
 6828 00bc 83F83E20 		strb	r2, [r3, #62]
 6829 00c0 13E0     		b	.L533
 6830              	.L532:
 6831              		.loc 1 2391 7 discriminator 2
 6832 00c2 BB68     		ldr	r3, [r7, #8]
 6833 00c4 042B     		cmp	r3, #4
 6834 00c6 04D1     		bne	.L534
 6835              		.loc 1 2391 7 discriminator 3
 6836 00c8 FB68     		ldr	r3, [r7, #12]
 6837 00ca 0222     		movs	r2, #2
 6838 00cc 83F83F20 		strb	r2, [r3, #63]
 6839 00d0 0BE0     		b	.L533
 6840              	.L534:
 6841              		.loc 1 2391 7 discriminator 4
 6842 00d2 BB68     		ldr	r3, [r7, #8]
 6843 00d4 082B     		cmp	r3, #8
 6844 00d6 04D1     		bne	.L536
 6845              		.loc 1 2391 7 discriminator 6
 6846 00d8 FB68     		ldr	r3, [r7, #12]
 6847 00da 0222     		movs	r2, #2
 6848 00dc 83F84020 		strb	r2, [r3, #64]
 6849 00e0 03E0     		b	.L533
 6850              	.L536:
 6851              		.loc 1 2391 7 discriminator 7
ARM GAS  /tmp//ccJMd58S.s 			page 162


 6852 00e2 FB68     		ldr	r3, [r7, #12]
 6853 00e4 0222     		movs	r2, #2
 6854 00e6 83F84120 		strb	r2, [r3, #65]
 6855              	.L533:
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 6856              		.loc 1 2392 7 is_stmt 1
 6857 00ea BB68     		ldr	r3, [r7, #8]
 6858 00ec 002B     		cmp	r3, #0
 6859 00ee 04D1     		bne	.L538
 6860              		.loc 1 2392 7 is_stmt 0 discriminator 1
 6861 00f0 FB68     		ldr	r3, [r7, #12]
 6862 00f2 0222     		movs	r2, #2
 6863 00f4 83F84220 		strb	r2, [r3, #66]
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 6864              		.loc 1 2385 8 is_stmt 1
 6865 00f8 16E0     		b	.L544
 6866              	.L538:
 6867              		.loc 1 2392 7 discriminator 2
 6868 00fa BB68     		ldr	r3, [r7, #8]
 6869 00fc 042B     		cmp	r3, #4
 6870 00fe 04D1     		bne	.L540
 6871              		.loc 1 2392 7 is_stmt 0 discriminator 3
 6872 0100 FB68     		ldr	r3, [r7, #12]
 6873 0102 0222     		movs	r2, #2
 6874 0104 83F84320 		strb	r2, [r3, #67]
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 6875              		.loc 1 2385 8 is_stmt 1
 6876 0108 0EE0     		b	.L544
 6877              	.L540:
 6878              		.loc 1 2392 7 discriminator 4
 6879 010a BB68     		ldr	r3, [r7, #8]
 6880 010c 082B     		cmp	r3, #8
 6881 010e 04D1     		bne	.L542
 6882              		.loc 1 2392 7 is_stmt 0 discriminator 6
 6883 0110 FB68     		ldr	r3, [r7, #12]
 6884 0112 0222     		movs	r2, #2
 6885 0114 83F84420 		strb	r2, [r3, #68]
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 6886              		.loc 1 2385 8 is_stmt 1
 6887 0118 06E0     		b	.L544
 6888              	.L542:
 6889              		.loc 1 2392 7 discriminator 7
 6890 011a FB68     		ldr	r3, [r7, #12]
 6891 011c 0222     		movs	r2, #2
 6892 011e 83F84520 		strb	r2, [r3, #69]
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
 6893              		.loc 1 2385 8
 6894 0122 01E0     		b	.L544
 6895              	.L529:
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 6896              		.loc 1 2397 12
 6897 0124 0123     		movs	r3, #1
 6898 0126 F3E0     		b	.L528
ARM GAS  /tmp//ccJMd58S.s 			page 163


 6899              	.L544:
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Input Capture channel */
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6900              		.loc 1 2401 3
 6901 0128 FB68     		ldr	r3, [r7, #12]
 6902 012a 1B68     		ldr	r3, [r3]
 6903 012c 0122     		movs	r2, #1
 6904 012e B968     		ldr	r1, [r7, #8]
 6905 0130 1846     		mov	r0, r3
 6906 0132 FFF7FEFF 		bl	TIM_CCxChannelCmd
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 6907              		.loc 1 2403 3
 6908 0136 BB68     		ldr	r3, [r7, #8]
 6909 0138 0C2B     		cmp	r3, #12
 6910 013a 00F2AD80 		bhi	.L545
 6911 013e 01A2     		adr	r2, .L547
 6912 0140 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6913              		.p2align 2
 6914              	.L547:
 6915 0144 79010000 		.word	.L550+1
 6916 0148 99020000 		.word	.L545+1
 6917 014c 99020000 		.word	.L545+1
 6918 0150 99020000 		.word	.L545+1
 6919 0154 C1010000 		.word	.L549+1
 6920 0158 99020000 		.word	.L545+1
 6921 015c 99020000 		.word	.L545+1
 6922 0160 99020000 		.word	.L545+1
 6923 0164 09020000 		.word	.L548+1
 6924 0168 99020000 		.word	.L545+1
 6925 016c 99020000 		.word	.L545+1
 6926 0170 99020000 		.word	.L545+1
 6927 0174 51020000 		.word	.L546+1
 6928              		.p2align 1
 6929              	.L550:
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 6930              		.loc 1 2408 17
 6931 0178 FB68     		ldr	r3, [r7, #12]
 6932 017a 5B6A     		ldr	r3, [r3, #36]
 6933              		.loc 1 2408 52
 6934 017c 664A     		ldr	r2, .L560
 6935 017e 9A62     		str	r2, [r3, #40]
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 6936              		.loc 1 2409 17
 6937 0180 FB68     		ldr	r3, [r7, #12]
 6938 0182 5B6A     		ldr	r3, [r3, #36]
 6939              		.loc 1 2409 56
 6940 0184 654A     		ldr	r2, .L560+4
 6941 0186 DA62     		str	r2, [r3, #44]
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
ARM GAS  /tmp//ccJMd58S.s 			page 164


2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 6942              		.loc 1 2412 17
 6943 0188 FB68     		ldr	r3, [r7, #12]
 6944 018a 5B6A     		ldr	r3, [r3, #36]
 6945              		.loc 1 2412 53
 6946 018c 644A     		ldr	r2, .L560+8
 6947 018e 1A63     		str	r2, [r3, #48]
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)p
 6948              		.loc 1 2415 11
 6949 0190 FB68     		ldr	r3, [r7, #12]
 6950 0192 586A     		ldr	r0, [r3, #36]
 6951              		.loc 1 2415 71
 6952 0194 FB68     		ldr	r3, [r7, #12]
 6953 0196 1B68     		ldr	r3, [r3]
 6954              		.loc 1 2415 66
 6955 0198 3433     		adds	r3, r3, #52
 6956              		.loc 1 2415 11
 6957 019a 1946     		mov	r1, r3
 6958 019c 7A68     		ldr	r2, [r7, #4]
 6959 019e 7B88     		ldrh	r3, [r7, #2]
 6960 01a0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6961 01a4 0346     		mov	r3, r0
 6962              		.loc 1 2415 10 discriminator 1
 6963 01a6 002B     		cmp	r3, #0
 6964 01a8 01D0     		beq	.L551
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 6965              		.loc 1 2419 16
 6966 01aa 0123     		movs	r3, #1
 6967 01ac B0E0     		b	.L528
 6968              	.L551:
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 6969              		.loc 1 2422 7
 6970 01ae FB68     		ldr	r3, [r7, #12]
 6971 01b0 1B68     		ldr	r3, [r3]
 6972 01b2 DA68     		ldr	r2, [r3, #12]
 6973 01b4 FB68     		ldr	r3, [r7, #12]
 6974 01b6 1B68     		ldr	r3, [r3]
 6975 01b8 42F40072 		orr	r2, r2, #512
 6976 01bc DA60     		str	r2, [r3, #12]
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 6977              		.loc 1 2423 7
 6978 01be 6EE0     		b	.L552
 6979              	.L549:
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 6980              		.loc 1 2429 17
ARM GAS  /tmp//ccJMd58S.s 			page 165


 6981 01c0 FB68     		ldr	r3, [r7, #12]
 6982 01c2 9B6A     		ldr	r3, [r3, #40]
 6983              		.loc 1 2429 52
 6984 01c4 544A     		ldr	r2, .L560
 6985 01c6 9A62     		str	r2, [r3, #40]
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 6986              		.loc 1 2430 17
 6987 01c8 FB68     		ldr	r3, [r7, #12]
 6988 01ca 9B6A     		ldr	r3, [r3, #40]
 6989              		.loc 1 2430 56
 6990 01cc 534A     		ldr	r2, .L560+4
 6991 01ce DA62     		str	r2, [r3, #44]
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 6992              		.loc 1 2433 17
 6993 01d0 FB68     		ldr	r3, [r7, #12]
 6994 01d2 9B6A     		ldr	r3, [r3, #40]
 6995              		.loc 1 2433 53
 6996 01d4 524A     		ldr	r2, .L560+8
 6997 01d6 1A63     		str	r2, [r3, #48]
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)p
 6998              		.loc 1 2436 11
 6999 01d8 FB68     		ldr	r3, [r7, #12]
 7000 01da 986A     		ldr	r0, [r3, #40]
 7001              		.loc 1 2436 71
 7002 01dc FB68     		ldr	r3, [r7, #12]
 7003 01de 1B68     		ldr	r3, [r3]
 7004              		.loc 1 2436 66
 7005 01e0 3833     		adds	r3, r3, #56
 7006              		.loc 1 2436 11
 7007 01e2 1946     		mov	r1, r3
 7008 01e4 7A68     		ldr	r2, [r7, #4]
 7009 01e6 7B88     		ldrh	r3, [r7, #2]
 7010 01e8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7011 01ec 0346     		mov	r3, r0
 7012              		.loc 1 2436 10 discriminator 1
 7013 01ee 002B     		cmp	r3, #0
 7014 01f0 01D0     		beq	.L553
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 7015              		.loc 1 2440 16
 7016 01f2 0123     		movs	r3, #1
 7017 01f4 8CE0     		b	.L528
 7018              	.L553:
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2  DMA request */
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 7019              		.loc 1 2443 7
 7020 01f6 FB68     		ldr	r3, [r7, #12]
 7021 01f8 1B68     		ldr	r3, [r3]
 7022 01fa DA68     		ldr	r2, [r3, #12]
 7023 01fc FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 166


 7024 01fe 1B68     		ldr	r3, [r3]
 7025 0200 42F48062 		orr	r2, r2, #1024
 7026 0204 DA60     		str	r2, [r3, #12]
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 7027              		.loc 1 2444 7
 7028 0206 4AE0     		b	.L552
 7029              	.L548:
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
 7030              		.loc 1 2450 17
 7031 0208 FB68     		ldr	r3, [r7, #12]
 7032 020a DB6A     		ldr	r3, [r3, #44]
 7033              		.loc 1 2450 52
 7034 020c 424A     		ldr	r2, .L560
 7035 020e 9A62     		str	r2, [r3, #40]
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 7036              		.loc 1 2451 17
 7037 0210 FB68     		ldr	r3, [r7, #12]
 7038 0212 DB6A     		ldr	r3, [r3, #44]
 7039              		.loc 1 2451 56
 7040 0214 414A     		ldr	r2, .L560+4
 7041 0216 DA62     		str	r2, [r3, #44]
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 7042              		.loc 1 2454 17
 7043 0218 FB68     		ldr	r3, [r7, #12]
 7044 021a DB6A     		ldr	r3, [r3, #44]
 7045              		.loc 1 2454 53
 7046 021c 404A     		ldr	r2, .L560+8
 7047 021e 1A63     		str	r2, [r3, #48]
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->CCR3, (uint32_t)p
 7048              		.loc 1 2457 11
 7049 0220 FB68     		ldr	r3, [r7, #12]
 7050 0222 D86A     		ldr	r0, [r3, #44]
 7051              		.loc 1 2457 71
 7052 0224 FB68     		ldr	r3, [r7, #12]
 7053 0226 1B68     		ldr	r3, [r3]
 7054              		.loc 1 2457 66
 7055 0228 3C33     		adds	r3, r3, #60
 7056              		.loc 1 2457 11
 7057 022a 1946     		mov	r1, r3
 7058 022c 7A68     		ldr	r2, [r7, #4]
 7059 022e 7B88     		ldrh	r3, [r7, #2]
 7060 0230 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7061 0234 0346     		mov	r3, r0
 7062              		.loc 1 2457 10 discriminator 1
 7063 0236 002B     		cmp	r3, #0
 7064 0238 01D0     		beq	.L554
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
ARM GAS  /tmp//ccJMd58S.s 			page 167


2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 7065              		.loc 1 2461 16
 7066 023a 0123     		movs	r3, #1
 7067 023c 68E0     		b	.L528
 7068              	.L554:
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3  DMA request */
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 7069              		.loc 1 2464 7
 7070 023e FB68     		ldr	r3, [r7, #12]
 7071 0240 1B68     		ldr	r3, [r3]
 7072 0242 DA68     		ldr	r2, [r3, #12]
 7073 0244 FB68     		ldr	r3, [r7, #12]
 7074 0246 1B68     		ldr	r3, [r3]
 7075 0248 42F40062 		orr	r2, r2, #2048
 7076 024c DA60     		str	r2, [r3, #12]
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 7077              		.loc 1 2465 7
 7078 024e 26E0     		b	.L552
 7079              	.L546:
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
 7080              		.loc 1 2471 17
 7081 0250 FB68     		ldr	r3, [r7, #12]
 7082 0252 1B6B     		ldr	r3, [r3, #48]
 7083              		.loc 1 2471 52
 7084 0254 304A     		ldr	r2, .L560
 7085 0256 9A62     		str	r2, [r3, #40]
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 7086              		.loc 1 2472 17
 7087 0258 FB68     		ldr	r3, [r7, #12]
 7088 025a 1B6B     		ldr	r3, [r3, #48]
 7089              		.loc 1 2472 56
 7090 025c 2F4A     		ldr	r2, .L560+4
 7091 025e DA62     		str	r2, [r3, #44]
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 7092              		.loc 1 2475 17
 7093 0260 FB68     		ldr	r3, [r7, #12]
 7094 0262 1B6B     		ldr	r3, [r3, #48]
 7095              		.loc 1 2475 53
 7096 0264 2E4A     		ldr	r2, .L560+8
 7097 0266 1A63     		str	r2, [r3, #48]
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->CCR4, (uint32_t)p
 7098              		.loc 1 2478 11
 7099 0268 FB68     		ldr	r3, [r7, #12]
 7100 026a 186B     		ldr	r0, [r3, #48]
 7101              		.loc 1 2478 71
 7102 026c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 168


 7103 026e 1B68     		ldr	r3, [r3]
 7104              		.loc 1 2478 66
 7105 0270 4033     		adds	r3, r3, #64
 7106              		.loc 1 2478 11
 7107 0272 1946     		mov	r1, r3
 7108 0274 7A68     		ldr	r2, [r7, #4]
 7109 0276 7B88     		ldrh	r3, [r7, #2]
 7110 0278 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7111 027c 0346     		mov	r3, r0
 7112              		.loc 1 2478 10 discriminator 1
 7113 027e 002B     		cmp	r3, #0
 7114 0280 01D0     		beq	.L555
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 7115              		.loc 1 2482 16
 7116 0282 0123     		movs	r3, #1
 7117 0284 44E0     		b	.L528
 7118              	.L555:
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4  DMA request */
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 7119              		.loc 1 2485 7
 7120 0286 FB68     		ldr	r3, [r7, #12]
 7121 0288 1B68     		ldr	r3, [r3]
 7122 028a DA68     		ldr	r2, [r3, #12]
 7123 028c FB68     		ldr	r3, [r7, #12]
 7124 028e 1B68     		ldr	r3, [r3]
 7125 0290 42F48052 		orr	r2, r2, #4096
 7126 0294 DA60     		str	r2, [r3, #12]
2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 7127              		.loc 1 2486 7
 7128 0296 02E0     		b	.L552
 7129              	.L545:
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 7130              		.loc 1 2490 14
 7131 0298 0123     		movs	r3, #1
 7132 029a FB75     		strb	r3, [r7, #23]
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 7133              		.loc 1 2491 7
 7134 029c 00BF     		nop
 7135              	.L552:
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger 
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 7136              		.loc 1 2495 7
 7137 029e FB68     		ldr	r3, [r7, #12]
 7138 02a0 1B68     		ldr	r3, [r3]
 7139              		.loc 1 2495 6
 7140 02a2 204A     		ldr	r2, .L560+12
 7141 02a4 9342     		cmp	r3, r2
 7142 02a6 18D0     		beq	.L556
ARM GAS  /tmp//ccJMd58S.s 			page 169


 7143              		.loc 1 2495 7 discriminator 1
 7144 02a8 FB68     		ldr	r3, [r7, #12]
 7145 02aa 1B68     		ldr	r3, [r3]
 7146 02ac 1E4A     		ldr	r2, .L560+16
 7147 02ae 9342     		cmp	r3, r2
 7148 02b0 13D0     		beq	.L556
 7149              		.loc 1 2495 7 is_stmt 0 discriminator 2
 7150 02b2 FB68     		ldr	r3, [r7, #12]
 7151 02b4 1B68     		ldr	r3, [r3]
 7152 02b6 B3F1804F 		cmp	r3, #1073741824
 7153 02ba 0ED0     		beq	.L556
 7154              		.loc 1 2495 7 discriminator 3
 7155 02bc FB68     		ldr	r3, [r7, #12]
 7156 02be 1B68     		ldr	r3, [r3]
 7157 02c0 1A4A     		ldr	r2, .L560+20
 7158 02c2 9342     		cmp	r3, r2
 7159 02c4 09D0     		beq	.L556
 7160              		.loc 1 2495 7 discriminator 4
 7161 02c6 FB68     		ldr	r3, [r7, #12]
 7162 02c8 1B68     		ldr	r3, [r3]
 7163 02ca 194A     		ldr	r2, .L560+24
 7164 02cc 9342     		cmp	r3, r2
 7165 02ce 04D0     		beq	.L556
 7166              		.loc 1 2495 7 discriminator 5
 7167 02d0 FB68     		ldr	r3, [r7, #12]
 7168 02d2 1B68     		ldr	r3, [r3]
 7169 02d4 174A     		ldr	r2, .L560+28
 7170 02d6 9342     		cmp	r3, r2
 7171 02d8 11D1     		bne	.L557
 7172              	.L556:
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 7173              		.loc 1 2497 19 is_stmt 1
 7174 02da FB68     		ldr	r3, [r7, #12]
 7175 02dc 1B68     		ldr	r3, [r3]
 7176              		.loc 1 2497 29
 7177 02de 9B68     		ldr	r3, [r3, #8]
 7178              		.loc 1 2497 13
 7179 02e0 03F00703 		and	r3, r3, #7
 7180 02e4 3B61     		str	r3, [r7, #16]
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 7181              		.loc 1 2498 8
 7182 02e6 3B69     		ldr	r3, [r7, #16]
 7183 02e8 062B     		cmp	r3, #6
 7184 02ea 10D0     		beq	.L559
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 7185              		.loc 1 2500 7
 7186 02ec FB68     		ldr	r3, [r7, #12]
 7187 02ee 1B68     		ldr	r3, [r3]
 7188 02f0 1A68     		ldr	r2, [r3]
 7189 02f2 FB68     		ldr	r3, [r7, #12]
 7190 02f4 1B68     		ldr	r3, [r3]
 7191 02f6 42F00102 		orr	r2, r2, #1
 7192 02fa 1A60     		str	r2, [r3]
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 7193              		.loc 1 2498 8
ARM GAS  /tmp//ccJMd58S.s 			page 170


 7194 02fc 07E0     		b	.L559
 7195              	.L557:
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE(htim);
 7196              		.loc 1 2505 5
 7197 02fe FB68     		ldr	r3, [r7, #12]
 7198 0300 1B68     		ldr	r3, [r3]
 7199 0302 1A68     		ldr	r2, [r3]
 7200 0304 FB68     		ldr	r3, [r7, #12]
 7201 0306 1B68     		ldr	r3, [r3]
 7202 0308 42F00102 		orr	r2, r2, #1
 7203 030c 1A60     		str	r2, [r3]
 7204              	.L559:
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 7205              		.loc 1 2509 10
 7206 030e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7207              	.L528:
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 7208              		.loc 1 2510 1
 7209 0310 1846     		mov	r0, r3
 7210 0312 1837     		adds	r7, r7, #24
 7211              	.LCFI205:
 7212              		.cfi_def_cfa_offset 8
 7213 0314 BD46     		mov	sp, r7
 7214              	.LCFI206:
 7215              		.cfi_def_cfa_register 13
 7216              		@ sp needed
 7217 0316 80BD     		pop	{r7, pc}
 7218              	.L561:
 7219              		.align	2
 7220              	.L560:
 7221 0318 00000000 		.word	TIM_DMACaptureCplt
 7222 031c 00000000 		.word	TIM_DMACaptureHalfCplt
 7223 0320 00000000 		.word	TIM_DMAError
 7224 0324 002C0140 		.word	1073818624
 7225 0328 00340140 		.word	1073820672
 7226 032c 00040040 		.word	1073742848
 7227 0330 00080040 		.word	1073743872
 7228 0334 000C0040 		.word	1073744896
 7229              		.cfi_endproc
 7230              	.LFE103:
 7232              		.section	.text.HAL_TIM_IC_Stop_DMA,"ax",%progbits
 7233              		.align	1
 7234              		.global	HAL_TIM_IC_Stop_DMA
 7235              		.syntax unified
 7236              		.thumb
 7237              		.thumb_func
 7239              	HAL_TIM_IC_Stop_DMA:
 7240              	.LFB104:
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
ARM GAS  /tmp//ccJMd58S.s 			page 171


2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in DMA mode.
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Input Capture handle
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 7241              		.loc 1 2524 1
 7242              		.cfi_startproc
 7243              		@ args = 0, pretend = 0, frame = 16
 7244              		@ frame_needed = 1, uses_anonymous_args = 0
 7245 0000 80B5     		push	{r7, lr}
 7246              	.LCFI207:
 7247              		.cfi_def_cfa_offset 8
 7248              		.cfi_offset 7, -8
 7249              		.cfi_offset 14, -4
 7250 0002 84B0     		sub	sp, sp, #16
 7251              	.LCFI208:
 7252              		.cfi_def_cfa_offset 24
 7253 0004 00AF     		add	r7, sp, #0
 7254              	.LCFI209:
 7255              		.cfi_def_cfa_register 7
 7256 0006 7860     		str	r0, [r7, #4]
 7257 0008 3960     		str	r1, [r7]
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 7258              		.loc 1 2525 21
 7259 000a 0023     		movs	r3, #0
 7260 000c FB73     		strb	r3, [r7, #15]
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channel */
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 7261              		.loc 1 2532 3
 7262 000e 7B68     		ldr	r3, [r7, #4]
 7263 0010 1B68     		ldr	r3, [r3]
 7264 0012 0022     		movs	r2, #0
 7265 0014 3968     		ldr	r1, [r7]
 7266 0016 1846     		mov	r0, r3
 7267 0018 FFF7FEFF 		bl	TIM_CCxChannelCmd
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 7268              		.loc 1 2534 3
 7269 001c 3B68     		ldr	r3, [r7]
 7270 001e 0C2B     		cmp	r3, #12
 7271 0020 54D8     		bhi	.L563
 7272 0022 01A2     		adr	r2, .L565
 7273 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7274              		.p2align 2
 7275              	.L565:
ARM GAS  /tmp//ccJMd58S.s 			page 172


 7276 0028 5D000000 		.word	.L568+1
 7277 002c CD000000 		.word	.L563+1
 7278 0030 CD000000 		.word	.L563+1
 7279 0034 CD000000 		.word	.L563+1
 7280 0038 79000000 		.word	.L567+1
 7281 003c CD000000 		.word	.L563+1
 7282 0040 CD000000 		.word	.L563+1
 7283 0044 CD000000 		.word	.L563+1
 7284 0048 95000000 		.word	.L566+1
 7285 004c CD000000 		.word	.L563+1
 7286 0050 CD000000 		.word	.L563+1
 7287 0054 CD000000 		.word	.L563+1
 7288 0058 B1000000 		.word	.L564+1
 7289              		.p2align 1
 7290              	.L568:
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 7291              		.loc 1 2539 7
 7292 005c 7B68     		ldr	r3, [r7, #4]
 7293 005e 1B68     		ldr	r3, [r3]
 7294 0060 DA68     		ldr	r2, [r3, #12]
 7295 0062 7B68     		ldr	r3, [r7, #4]
 7296 0064 1B68     		ldr	r3, [r3]
 7297 0066 22F40072 		bic	r2, r2, #512
 7298 006a DA60     		str	r2, [r3, #12]
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 7299              		.loc 1 2540 13
 7300 006c 7B68     		ldr	r3, [r7, #4]
 7301 006e 5B6A     		ldr	r3, [r3, #36]
 7302 0070 1846     		mov	r0, r3
 7303 0072 FFF7FEFF 		bl	HAL_DMA_Abort_IT
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 7304              		.loc 1 2541 7
 7305 0076 2CE0     		b	.L569
 7306              	.L567:
2542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
2545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 7307              		.loc 1 2547 7
 7308 0078 7B68     		ldr	r3, [r7, #4]
 7309 007a 1B68     		ldr	r3, [r3]
 7310 007c DA68     		ldr	r2, [r3, #12]
 7311 007e 7B68     		ldr	r3, [r7, #4]
 7312 0080 1B68     		ldr	r3, [r3]
 7313 0082 22F48062 		bic	r2, r2, #1024
 7314 0086 DA60     		str	r2, [r3, #12]
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 7315              		.loc 1 2548 13
 7316 0088 7B68     		ldr	r3, [r7, #4]
 7317 008a 9B6A     		ldr	r3, [r3, #40]
 7318 008c 1846     		mov	r0, r3
ARM GAS  /tmp//ccJMd58S.s 			page 173


 7319 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 7320              		.loc 1 2549 7
 7321 0092 1EE0     		b	.L569
 7322              	.L566:
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
2553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3  DMA request */
2555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 7323              		.loc 1 2555 7
 7324 0094 7B68     		ldr	r3, [r7, #4]
 7325 0096 1B68     		ldr	r3, [r3]
 7326 0098 DA68     		ldr	r2, [r3, #12]
 7327 009a 7B68     		ldr	r3, [r7, #4]
 7328 009c 1B68     		ldr	r3, [r3]
 7329 009e 22F40062 		bic	r2, r2, #2048
 7330 00a2 DA60     		str	r2, [r3, #12]
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 7331              		.loc 1 2556 13
 7332 00a4 7B68     		ldr	r3, [r7, #4]
 7333 00a6 DB6A     		ldr	r3, [r3, #44]
 7334 00a8 1846     		mov	r0, r3
 7335 00aa FFF7FEFF 		bl	HAL_DMA_Abort_IT
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 7336              		.loc 1 2557 7
 7337 00ae 10E0     		b	.L569
 7338              	.L564:
2558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4  DMA request */
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 7339              		.loc 1 2563 7
 7340 00b0 7B68     		ldr	r3, [r7, #4]
 7341 00b2 1B68     		ldr	r3, [r3]
 7342 00b4 DA68     		ldr	r2, [r3, #12]
 7343 00b6 7B68     		ldr	r3, [r7, #4]
 7344 00b8 1B68     		ldr	r3, [r3]
 7345 00ba 22F48052 		bic	r2, r2, #4096
 7346 00be DA60     		str	r2, [r3, #12]
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 7347              		.loc 1 2564 13
 7348 00c0 7B68     		ldr	r3, [r7, #4]
 7349 00c2 1B6B     		ldr	r3, [r3, #48]
 7350 00c4 1846     		mov	r0, r3
 7351 00c6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
2565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 7352              		.loc 1 2565 7
 7353 00ca 02E0     		b	.L569
 7354              	.L563:
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
ARM GAS  /tmp//ccJMd58S.s 			page 174


 7355              		.loc 1 2569 14
 7356 00cc 0123     		movs	r3, #1
 7357 00ce FB73     		strb	r3, [r7, #15]
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 7358              		.loc 1 2570 7
 7359 00d0 00BF     		nop
 7360              	.L569:
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 7361              		.loc 1 2573 6
 7362 00d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7363 00d4 002B     		cmp	r3, #0
 7364 00d6 4FD1     		bne	.L570
2574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Peripheral */
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE(htim);
 7365              		.loc 1 2576 5
 7366 00d8 7B68     		ldr	r3, [r7, #4]
 7367 00da 1B68     		ldr	r3, [r3]
 7368 00dc 1A6A     		ldr	r2, [r3, #32]
 7369 00de 41F21113 		movw	r3, #4369
 7370 00e2 1340     		ands	r3, r3, r2
 7371 00e4 002B     		cmp	r3, #0
 7372 00e6 0FD1     		bne	.L571
 7373              		.loc 1 2576 5 is_stmt 0 discriminator 1
 7374 00e8 7B68     		ldr	r3, [r7, #4]
 7375 00ea 1B68     		ldr	r3, [r3]
 7376 00ec 1A6A     		ldr	r2, [r3, #32]
 7377 00ee 40F24443 		movw	r3, #1092
 7378 00f2 1340     		ands	r3, r3, r2
 7379 00f4 002B     		cmp	r3, #0
 7380 00f6 07D1     		bne	.L571
 7381              		.loc 1 2576 5 discriminator 2
 7382 00f8 7B68     		ldr	r3, [r7, #4]
 7383 00fa 1B68     		ldr	r3, [r3]
 7384 00fc 1A68     		ldr	r2, [r3]
 7385 00fe 7B68     		ldr	r3, [r7, #4]
 7386 0100 1B68     		ldr	r3, [r3]
 7387 0102 22F00102 		bic	r2, r2, #1
 7388 0106 1A60     		str	r2, [r3]
 7389              	.L571:
2577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the TIM channel state */
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 7390              		.loc 1 2579 5 is_stmt 1
 7391 0108 3B68     		ldr	r3, [r7]
 7392 010a 002B     		cmp	r3, #0
 7393 010c 04D1     		bne	.L572
 7394              		.loc 1 2579 5 is_stmt 0 discriminator 1
 7395 010e 7B68     		ldr	r3, [r7, #4]
 7396 0110 0122     		movs	r2, #1
 7397 0112 83F83E20 		strb	r2, [r3, #62]
 7398 0116 13E0     		b	.L573
 7399              	.L572:
 7400              		.loc 1 2579 5 discriminator 2
 7401 0118 3B68     		ldr	r3, [r7]
ARM GAS  /tmp//ccJMd58S.s 			page 175


 7402 011a 042B     		cmp	r3, #4
 7403 011c 04D1     		bne	.L574
 7404              		.loc 1 2579 5 discriminator 3
 7405 011e 7B68     		ldr	r3, [r7, #4]
 7406 0120 0122     		movs	r2, #1
 7407 0122 83F83F20 		strb	r2, [r3, #63]
 7408 0126 0BE0     		b	.L573
 7409              	.L574:
 7410              		.loc 1 2579 5 discriminator 4
 7411 0128 3B68     		ldr	r3, [r7]
 7412 012a 082B     		cmp	r3, #8
 7413 012c 04D1     		bne	.L576
 7414              		.loc 1 2579 5 discriminator 6
 7415 012e 7B68     		ldr	r3, [r7, #4]
 7416 0130 0122     		movs	r2, #1
 7417 0132 83F84020 		strb	r2, [r3, #64]
 7418 0136 03E0     		b	.L573
 7419              	.L576:
 7420              		.loc 1 2579 5 discriminator 7
 7421 0138 7B68     		ldr	r3, [r7, #4]
 7422 013a 0122     		movs	r2, #1
 7423 013c 83F84120 		strb	r2, [r3, #65]
 7424              	.L573:
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 7425              		.loc 1 2580 5 is_stmt 1
 7426 0140 3B68     		ldr	r3, [r7]
 7427 0142 002B     		cmp	r3, #0
 7428 0144 04D1     		bne	.L578
 7429              		.loc 1 2580 5 is_stmt 0 discriminator 1
 7430 0146 7B68     		ldr	r3, [r7, #4]
 7431 0148 0122     		movs	r2, #1
 7432 014a 83F84220 		strb	r2, [r3, #66]
 7433 014e 13E0     		b	.L570
 7434              	.L578:
 7435              		.loc 1 2580 5 discriminator 2
 7436 0150 3B68     		ldr	r3, [r7]
 7437 0152 042B     		cmp	r3, #4
 7438 0154 04D1     		bne	.L579
 7439              		.loc 1 2580 5 discriminator 3
 7440 0156 7B68     		ldr	r3, [r7, #4]
 7441 0158 0122     		movs	r2, #1
 7442 015a 83F84320 		strb	r2, [r3, #67]
 7443 015e 0BE0     		b	.L570
 7444              	.L579:
 7445              		.loc 1 2580 5 discriminator 4
 7446 0160 3B68     		ldr	r3, [r7]
 7447 0162 082B     		cmp	r3, #8
 7448 0164 04D1     		bne	.L581
 7449              		.loc 1 2580 5 discriminator 6
 7450 0166 7B68     		ldr	r3, [r7, #4]
 7451 0168 0122     		movs	r2, #1
 7452 016a 83F84420 		strb	r2, [r3, #68]
 7453 016e 03E0     		b	.L570
 7454              	.L581:
 7455              		.loc 1 2580 5 discriminator 7
 7456 0170 7B68     		ldr	r3, [r7, #4]
 7457 0172 0122     		movs	r2, #1
ARM GAS  /tmp//ccJMd58S.s 			page 176


 7458 0174 83F84520 		strb	r2, [r3, #69]
 7459              	.L570:
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 7460              		.loc 1 2584 10 is_stmt 1
 7461 0178 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 7462              		.loc 1 2585 1
 7463 017a 1846     		mov	r0, r3
 7464 017c 1037     		adds	r7, r7, #16
 7465              	.LCFI210:
 7466              		.cfi_def_cfa_offset 8
 7467 017e BD46     		mov	sp, r7
 7468              	.LCFI211:
 7469              		.cfi_def_cfa_register 13
 7470              		@ sp needed
 7471 0180 80BD     		pop	{r7, pc}
 7472              		.cfi_endproc
 7473              	.LFE104:
 7475 0182 00BF     		.section	.text.HAL_TIM_OnePulse_Init,"ax",%progbits
 7476              		.align	1
 7477              		.global	HAL_TIM_OnePulse_Init
 7478              		.syntax unified
 7479              		.thumb
 7480              		.thumb_func
 7482              	HAL_TIM_OnePulse_Init:
 7483              	.LFB105:
2586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
2588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group5 TIM One Pulse functions
2591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief    TIM One Pulse functions
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
2593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
2594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
2595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         ##### TIM One Pulse functions #####
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
2597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
2599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM One Pulse.
2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM One Pulse.
2601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM One Pulse.
2602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM One Pulse.
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM One Pulse and enable interrupt.
2604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM One Pulse and disable interrupt.
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM One Pulse and enable DMA transfer.
2606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM One Pulse and disable DMA transfer.
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
2609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Time Base according to the specified
2613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and initializes the associated handle.
ARM GAS  /tmp//ccJMd58S.s 			page 177


2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
2615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
2617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_OnePulse_DeInit() before HAL_TIM_OnePulse_Init()
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   When the timer instance is initialized in One Pulse mode, timer
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         channels 1 and channel 2 are reserved and cannot be used for other
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         purpose.
2621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OnePulseMode Select the One pulse mode.
2623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
2624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_OPMODE_SINGLE: Only one pulse will be generated.
2625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_OPMODE_REPETITIVE: Repetitive pulses will be generated.
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Init(TIM_HandleTypeDef *htim, uint32_t OnePulseMode)
2629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 7484              		.loc 1 2629 1
 7485              		.cfi_startproc
 7486              		@ args = 0, pretend = 0, frame = 8
 7487              		@ frame_needed = 1, uses_anonymous_args = 0
 7488 0000 80B5     		push	{r7, lr}
 7489              	.LCFI212:
 7490              		.cfi_def_cfa_offset 8
 7491              		.cfi_offset 7, -8
 7492              		.cfi_offset 14, -4
 7493 0002 82B0     		sub	sp, sp, #8
 7494              	.LCFI213:
 7495              		.cfi_def_cfa_offset 16
 7496 0004 00AF     		add	r7, sp, #0
 7497              	.LCFI214:
 7498              		.cfi_def_cfa_register 7
 7499 0006 7860     		str	r0, [r7, #4]
 7500 0008 3960     		str	r1, [r7]
2630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
 7501              		.loc 1 2631 6
 7502 000a 7B68     		ldr	r3, [r7, #4]
 7503 000c 002B     		cmp	r3, #0
 7504 000e 01D1     		bne	.L585
2632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 7505              		.loc 1 2633 12
 7506 0010 0123     		movs	r3, #1
 7507 0012 41E0     		b	.L586
 7508              	.L585:
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
2639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OPM_MODE(OnePulseMode));
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim->Init.Period));
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
 7509              		.loc 1 2644 11
ARM GAS  /tmp//ccJMd58S.s 			page 178


 7510 0014 7B68     		ldr	r3, [r7, #4]
 7511 0016 93F83D30 		ldrb	r3, [r3, #61]
 7512 001a DBB2     		uxtb	r3, r3
 7513              		.loc 1 2644 6
 7514 001c 002B     		cmp	r3, #0
 7515 001e 06D1     		bne	.L587
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 7516              		.loc 1 2647 16
 7517 0020 7B68     		ldr	r3, [r7, #4]
 7518 0022 0022     		movs	r2, #0
 7519 0024 83F83C20 		strb	r2, [r3, #60]
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
2651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (htim->OnePulse_MspInitCallback == NULL)
2654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
2655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->OnePulse_MspInitCallback = HAL_TIM_OnePulse_MspInit;
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->OnePulse_MspInitCallback(htim);
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
2660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     HAL_TIM_OnePulse_MspInit(htim);
 7520              		.loc 1 2661 5
 7521 0028 7868     		ldr	r0, [r7, #4]
 7522 002a FFF7FEFF 		bl	HAL_TIM_OnePulse_MspInit
 7523              	.L587:
2662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
2666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 7524              		.loc 1 2666 15
 7525 002e 7B68     		ldr	r3, [r7, #4]
 7526 0030 0222     		movs	r2, #2
 7527 0032 83F83D20 		strb	r2, [r3, #61]
2667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Configure the Time base in the One Pulse Mode */
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 7528              		.loc 1 2669 3
 7529 0036 7B68     		ldr	r3, [r7, #4]
 7530 0038 1A68     		ldr	r2, [r3]
 7531              		.loc 1 2669 38
 7532 003a 7B68     		ldr	r3, [r7, #4]
 7533 003c 0433     		adds	r3, r3, #4
 7534              		.loc 1 2669 3
 7535 003e 1946     		mov	r1, r3
 7536 0040 1046     		mov	r0, r2
 7537 0042 FFF7FEFF 		bl	TIM_Base_SetConfig
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the OPM Bit */
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->CR1 &= ~TIM_CR1_OPM;
 7538              		.loc 1 2672 7
ARM GAS  /tmp//ccJMd58S.s 			page 179


 7539 0046 7B68     		ldr	r3, [r7, #4]
 7540 0048 1B68     		ldr	r3, [r3]
 7541              		.loc 1 2672 17
 7542 004a 1A68     		ldr	r2, [r3]
 7543              		.loc 1 2672 7
 7544 004c 7B68     		ldr	r3, [r7, #4]
 7545 004e 1B68     		ldr	r3, [r3]
 7546              		.loc 1 2672 23
 7547 0050 22F00802 		bic	r2, r2, #8
 7548 0054 1A60     		str	r2, [r3]
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Configure the OPM Mode */
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->CR1 |= OnePulseMode;
 7549              		.loc 1 2675 7
 7550 0056 7B68     		ldr	r3, [r7, #4]
 7551 0058 1B68     		ldr	r3, [r3]
 7552              		.loc 1 2675 17
 7553 005a 1968     		ldr	r1, [r3]
 7554              		.loc 1 2675 7
 7555 005c 7B68     		ldr	r3, [r7, #4]
 7556 005e 1B68     		ldr	r3, [r3]
 7557              		.loc 1 2675 23
 7558 0060 3A68     		ldr	r2, [r7]
 7559 0062 0A43     		orrs	r2, r2, r1
 7560 0064 1A60     		str	r2, [r3]
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 7561              		.loc 1 2678 23
 7562 0066 7B68     		ldr	r3, [r7, #4]
 7563 0068 0122     		movs	r2, #1
 7564 006a 83F84620 		strb	r2, [r3, #70]
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM channels state */
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 7565              		.loc 1 2681 3
 7566 006e 7B68     		ldr	r3, [r7, #4]
 7567 0070 0122     		movs	r2, #1
 7568 0072 83F83E20 		strb	r2, [r3, #62]
2682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 7569              		.loc 1 2682 3
 7570 0076 7B68     		ldr	r3, [r7, #4]
 7571 0078 0122     		movs	r2, #1
 7572 007a 83F83F20 		strb	r2, [r3, #63]
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 7573              		.loc 1 2683 3
 7574 007e 7B68     		ldr	r3, [r7, #4]
 7575 0080 0122     		movs	r2, #1
 7576 0082 83F84220 		strb	r2, [r3, #66]
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 7577              		.loc 1 2684 3
 7578 0086 7B68     		ldr	r3, [r7, #4]
 7579 0088 0122     		movs	r2, #1
 7580 008a 83F84320 		strb	r2, [r3, #67]
2685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
ARM GAS  /tmp//ccJMd58S.s 			page 180


 7581              		.loc 1 2687 15
 7582 008e 7B68     		ldr	r3, [r7, #4]
 7583 0090 0122     		movs	r2, #1
 7584 0092 83F83D20 		strb	r2, [r3, #61]
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 7585              		.loc 1 2689 10
 7586 0096 0023     		movs	r3, #0
 7587              	.L586:
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 7588              		.loc 1 2690 1
 7589 0098 1846     		mov	r0, r3
 7590 009a 0837     		adds	r7, r7, #8
 7591              	.LCFI215:
 7592              		.cfi_def_cfa_offset 8
 7593 009c BD46     		mov	sp, r7
 7594              	.LCFI216:
 7595              		.cfi_def_cfa_register 13
 7596              		@ sp needed
 7597 009e 80BD     		pop	{r7, pc}
 7598              		.cfi_endproc
 7599              	.LFE105:
 7601              		.section	.text.HAL_TIM_OnePulse_DeInit,"ax",%progbits
 7602              		.align	1
 7603              		.global	HAL_TIM_OnePulse_DeInit
 7604              		.syntax unified
 7605              		.thumb
 7606              		.thumb_func
 7608              	HAL_TIM_OnePulse_DeInit:
 7609              	.LFB106:
2691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM One Pulse
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_DeInit(TIM_HandleTypeDef *htim)
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 7610              		.loc 1 2698 1
 7611              		.cfi_startproc
 7612              		@ args = 0, pretend = 0, frame = 8
 7613              		@ frame_needed = 1, uses_anonymous_args = 0
 7614 0000 80B5     		push	{r7, lr}
 7615              	.LCFI217:
 7616              		.cfi_def_cfa_offset 8
 7617              		.cfi_offset 7, -8
 7618              		.cfi_offset 14, -4
 7619 0002 82B0     		sub	sp, sp, #8
 7620              	.LCFI218:
 7621              		.cfi_def_cfa_offset 16
 7622 0004 00AF     		add	r7, sp, #0
 7623              	.LCFI219:
 7624              		.cfi_def_cfa_register 7
 7625 0006 7860     		str	r0, [r7, #4]
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
2700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 181


2702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 7626              		.loc 1 2702 15
 7627 0008 7B68     		ldr	r3, [r7, #4]
 7628 000a 0222     		movs	r2, #2
 7629 000c 83F83D20 		strb	r2, [r3, #61]
2703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 7630              		.loc 1 2705 3
 7631 0010 7B68     		ldr	r3, [r7, #4]
 7632 0012 1B68     		ldr	r3, [r3]
 7633 0014 1A6A     		ldr	r2, [r3, #32]
 7634 0016 41F21113 		movw	r3, #4369
 7635 001a 1340     		ands	r3, r3, r2
 7636 001c 002B     		cmp	r3, #0
 7637 001e 0FD1     		bne	.L589
 7638              		.loc 1 2705 3 is_stmt 0 discriminator 1
 7639 0020 7B68     		ldr	r3, [r7, #4]
 7640 0022 1B68     		ldr	r3, [r3]
 7641 0024 1A6A     		ldr	r2, [r3, #32]
 7642 0026 40F24443 		movw	r3, #1092
 7643 002a 1340     		ands	r3, r3, r2
 7644 002c 002B     		cmp	r3, #0
 7645 002e 07D1     		bne	.L589
 7646              		.loc 1 2705 3 discriminator 2
 7647 0030 7B68     		ldr	r3, [r7, #4]
 7648 0032 1B68     		ldr	r3, [r3]
 7649 0034 1A68     		ldr	r2, [r3]
 7650 0036 7B68     		ldr	r3, [r7, #4]
 7651 0038 1B68     		ldr	r3, [r3]
 7652 003a 22F00102 		bic	r2, r2, #1
 7653 003e 1A60     		str	r2, [r3]
 7654              	.L589:
2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
2708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->OnePulse_MspDeInitCallback == NULL)
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->OnePulse_MspDeInitCallback = HAL_TIM_OnePulse_MspDeInit;
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
2713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->OnePulse_MspDeInitCallback(htim);
2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
2715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_OnePulse_MspDeInit(htim);
 7655              		.loc 1 2716 3 is_stmt 1
 7656 0040 7868     		ldr	r0, [r7, #4]
 7657 0042 FFF7FEFF 		bl	HAL_TIM_OnePulse_MspDeInit
2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the DMA burst operation state */
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
 7658              		.loc 1 2720 23
 7659 0046 7B68     		ldr	r3, [r7, #4]
 7660 0048 0022     		movs	r2, #0
 7661 004a 83F84620 		strb	r2, [r3, #70]
2721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel state */
ARM GAS  /tmp//ccJMd58S.s 			page 182


2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_RESET);
 7662              		.loc 1 2723 3
 7663 004e 7B68     		ldr	r3, [r7, #4]
 7664 0050 0022     		movs	r2, #0
 7665 0052 83F83E20 		strb	r2, [r3, #62]
2724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_RESET);
 7666              		.loc 1 2724 3
 7667 0056 7B68     		ldr	r3, [r7, #4]
 7668 0058 0022     		movs	r2, #0
 7669 005a 83F83F20 		strb	r2, [r3, #63]
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_RESET);
 7670              		.loc 1 2725 3
 7671 005e 7B68     		ldr	r3, [r7, #4]
 7672 0060 0022     		movs	r2, #0
 7673 0062 83F84220 		strb	r2, [r3, #66]
2726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_RESET);
 7674              		.loc 1 2726 3
 7675 0066 7B68     		ldr	r3, [r7, #4]
 7676 0068 0022     		movs	r2, #0
 7677 006a 83F84320 		strb	r2, [r3, #67]
2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 7678              		.loc 1 2729 15
 7679 006e 7B68     		ldr	r3, [r7, #4]
 7680 0070 0022     		movs	r2, #0
 7681 0072 83F83D20 		strb	r2, [r3, #61]
2730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Release Lock */
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 7682              		.loc 1 2732 3
 7683 0076 7B68     		ldr	r3, [r7, #4]
 7684 0078 0022     		movs	r2, #0
 7685 007a 83F83C20 		strb	r2, [r3, #60]
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 7686              		.loc 1 2734 10
 7687 007e 0023     		movs	r3, #0
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 7688              		.loc 1 2735 1
 7689 0080 1846     		mov	r0, r3
 7690 0082 0837     		adds	r7, r7, #8
 7691              	.LCFI220:
 7692              		.cfi_def_cfa_offset 8
 7693 0084 BD46     		mov	sp, r7
 7694              	.LCFI221:
 7695              		.cfi_def_cfa_register 13
 7696              		@ sp needed
 7697 0086 80BD     		pop	{r7, pc}
 7698              		.cfi_endproc
 7699              	.LFE106:
 7701              		.section	.text.HAL_TIM_OnePulse_MspInit,"ax",%progbits
 7702              		.align	1
 7703              		.weak	HAL_TIM_OnePulse_MspInit
 7704              		.syntax unified
 7705              		.thumb
 7706              		.thumb_func
ARM GAS  /tmp//ccJMd58S.s 			page 183


 7708              	HAL_TIM_OnePulse_MspInit:
 7709              	.LFB107:
2736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse MSP.
2739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
2741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspInit(TIM_HandleTypeDef *htim)
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 7710              		.loc 1 2743 1
 7711              		.cfi_startproc
 7712              		@ args = 0, pretend = 0, frame = 8
 7713              		@ frame_needed = 1, uses_anonymous_args = 0
 7714              		@ link register save eliminated.
 7715 0000 80B4     		push	{r7}
 7716              	.LCFI222:
 7717              		.cfi_def_cfa_offset 4
 7718              		.cfi_offset 7, -4
 7719 0002 83B0     		sub	sp, sp, #12
 7720              	.LCFI223:
 7721              		.cfi_def_cfa_offset 16
 7722 0004 00AF     		add	r7, sp, #0
 7723              	.LCFI224:
 7724              		.cfi_def_cfa_register 7
 7725 0006 7860     		str	r0, [r7, #4]
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
2746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspInit could be implemented in the user file
2749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 7726              		.loc 1 2750 1
 7727 0008 00BF     		nop
 7728 000a 0C37     		adds	r7, r7, #12
 7729              	.LCFI225:
 7730              		.cfi_def_cfa_offset 4
 7731 000c BD46     		mov	sp, r7
 7732              	.LCFI226:
 7733              		.cfi_def_cfa_register 13
 7734              		@ sp needed
 7735 000e 80BC     		pop	{r7}
 7736              	.LCFI227:
 7737              		.cfi_restore 7
 7738              		.cfi_def_cfa_offset 0
 7739 0010 7047     		bx	lr
 7740              		.cfi_endproc
 7741              	.LFE107:
 7743              		.section	.text.HAL_TIM_OnePulse_MspDeInit,"ax",%progbits
 7744              		.align	1
 7745              		.weak	HAL_TIM_OnePulse_MspDeInit
 7746              		.syntax unified
 7747              		.thumb
 7748              		.thumb_func
 7750              	HAL_TIM_OnePulse_MspDeInit:
 7751              	.LFB108:
ARM GAS  /tmp//ccJMd58S.s 			page 184


2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM One Pulse MSP.
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspDeInit(TIM_HandleTypeDef *htim)
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 7752              		.loc 1 2758 1
 7753              		.cfi_startproc
 7754              		@ args = 0, pretend = 0, frame = 8
 7755              		@ frame_needed = 1, uses_anonymous_args = 0
 7756              		@ link register save eliminated.
 7757 0000 80B4     		push	{r7}
 7758              	.LCFI228:
 7759              		.cfi_def_cfa_offset 4
 7760              		.cfi_offset 7, -4
 7761 0002 83B0     		sub	sp, sp, #12
 7762              	.LCFI229:
 7763              		.cfi_def_cfa_offset 16
 7764 0004 00AF     		add	r7, sp, #0
 7765              	.LCFI230:
 7766              		.cfi_def_cfa_register 7
 7767 0006 7860     		str	r0, [r7, #4]
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspDeInit could be implemented in the user file
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 7768              		.loc 1 2765 1
 7769 0008 00BF     		nop
 7770 000a 0C37     		adds	r7, r7, #12
 7771              	.LCFI231:
 7772              		.cfi_def_cfa_offset 4
 7773 000c BD46     		mov	sp, r7
 7774              	.LCFI232:
 7775              		.cfi_def_cfa_register 13
 7776              		@ sp needed
 7777 000e 80BC     		pop	{r7}
 7778              	.LCFI233:
 7779              		.cfi_restore 7
 7780              		.cfi_def_cfa_offset 0
 7781 0010 7047     		bx	lr
 7782              		.cfi_endproc
 7783              	.LFE108:
 7785              		.section	.text.HAL_TIM_OnePulse_Start,"ax",%progbits
 7786              		.align	1
 7787              		.global	HAL_TIM_OnePulse_Start
 7788              		.syntax unified
 7789              		.thumb
 7790              		.thumb_func
 7792              	HAL_TIM_OnePulse_Start:
 7793              	.LFB109:
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
ARM GAS  /tmp//ccJMd58S.s 			page 185


2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation.
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note Though OutputChannel parameter is deprecated and ignored by the function
2770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        it has been kept to avoid HAL_TIM API compatibility break.
2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note The pulse output channel is determined when calling
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *       @ref HAL_TIM_OnePulse_ConfigChannel().
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel See note above
2775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 7794              		.loc 1 2778 1
 7795              		.cfi_startproc
 7796              		@ args = 0, pretend = 0, frame = 16
 7797              		@ frame_needed = 1, uses_anonymous_args = 0
 7798 0000 80B5     		push	{r7, lr}
 7799              	.LCFI234:
 7800              		.cfi_def_cfa_offset 8
 7801              		.cfi_offset 7, -8
 7802              		.cfi_offset 14, -4
 7803 0002 84B0     		sub	sp, sp, #16
 7804              	.LCFI235:
 7805              		.cfi_def_cfa_offset 24
 7806 0004 00AF     		add	r7, sp, #0
 7807              	.LCFI236:
 7808              		.cfi_def_cfa_register 7
 7809 0006 7860     		str	r0, [r7, #4]
 7810 0008 3960     		str	r1, [r7]
2779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
 7811              		.loc 1 2779 31
 7812 000a 7B68     		ldr	r3, [r7, #4]
 7813 000c 93F83E30 		ldrb	r3, [r3, #62]
 7814 0010 FB73     		strb	r3, [r7, #15]
2780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
 7815              		.loc 1 2780 31
 7816 0012 7B68     		ldr	r3, [r7, #4]
 7817 0014 93F83F30 		ldrb	r3, [r3, #63]
 7818 0018 BB73     		strb	r3, [r7, #14]
2781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 7819              		.loc 1 2781 31
 7820 001a 7B68     		ldr	r3, [r7, #4]
 7821 001c 93F84230 		ldrb	r3, [r3, #66]
 7822 0020 7B73     		strb	r3, [r7, #13]
2782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 7823              		.loc 1 2782 31
 7824 0022 7B68     		ldr	r3, [r7, #4]
 7825 0024 93F84330 		ldrb	r3, [r3, #67]
 7826 0028 3B73     		strb	r3, [r7, #12]
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(OutputChannel);
2786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM channels state */
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 7827              		.loc 1 2788 6
 7828 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7829 002c 012B     		cmp	r3, #1
ARM GAS  /tmp//ccJMd58S.s 			page 186


 7830 002e 08D1     		bne	.L594
2789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       || (channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
 7831              		.loc 1 2789 7
 7832 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 7833 0032 012B     		cmp	r3, #1
 7834 0034 05D1     		bne	.L594
2790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 7835              		.loc 1 2790 7
 7836 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 7837 0038 012B     		cmp	r3, #1
 7838 003a 02D1     		bne	.L594
2791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
 7839              		.loc 1 2791 7
 7840 003c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 7841 003e 012B     		cmp	r3, #1
 7842 0040 01D0     		beq	.L595
 7843              	.L594:
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 7844              		.loc 1 2793 12
 7845 0042 0123     		movs	r3, #1
 7846 0044 35E0     		b	.L596
 7847              	.L595:
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channels state */
2797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 7848              		.loc 1 2797 3
 7849 0046 7B68     		ldr	r3, [r7, #4]
 7850 0048 0222     		movs	r2, #2
 7851 004a 83F83E20 		strb	r2, [r3, #62]
2798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 7852              		.loc 1 2798 3
 7853 004e 7B68     		ldr	r3, [r7, #4]
 7854 0050 0222     		movs	r2, #2
 7855 0052 83F83F20 		strb	r2, [r3, #63]
2799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 7856              		.loc 1 2799 3
 7857 0056 7B68     		ldr	r3, [r7, #4]
 7858 0058 0222     		movs	r2, #2
 7859 005a 83F84220 		strb	r2, [r3, #66]
2800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 7860              		.loc 1 2800 3
 7861 005e 7B68     		ldr	r3, [r7, #4]
 7862 0060 0222     		movs	r2, #2
 7863 0062 83F84320 		strb	r2, [r3, #67]
2801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels
2803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     whatever the combination, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together
2807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware
2809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
ARM GAS  /tmp//ccJMd58S.s 			page 187


 7864              		.loc 1 2811 3
 7865 0066 7B68     		ldr	r3, [r7, #4]
 7866 0068 1B68     		ldr	r3, [r3]
 7867 006a 0122     		movs	r2, #1
 7868 006c 0021     		movs	r1, #0
 7869 006e 1846     		mov	r0, r3
 7870 0070 FFF7FEFF 		bl	TIM_CCxChannelCmd
2812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 7871              		.loc 1 2812 3
 7872 0074 7B68     		ldr	r3, [r7, #4]
 7873 0076 1B68     		ldr	r3, [r3]
 7874 0078 0122     		movs	r2, #1
 7875 007a 0421     		movs	r1, #4
 7876 007c 1846     		mov	r0, r3
 7877 007e FFF7FEFF 		bl	TIM_CCxChannelCmd
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7878              		.loc 1 2814 7
 7879 0082 7B68     		ldr	r3, [r7, #4]
 7880 0084 1B68     		ldr	r3, [r3]
 7881 0086 0D4A     		ldr	r2, .L601
 7882 0088 9342     		cmp	r3, r2
 7883 008a 04D0     		beq	.L597
 7884              		.loc 1 2814 7 is_stmt 0 discriminator 2
 7885 008c 7B68     		ldr	r3, [r7, #4]
 7886 008e 1B68     		ldr	r3, [r3]
 7887 0090 0B4A     		ldr	r2, .L601+4
 7888 0092 9342     		cmp	r3, r2
 7889 0094 01D1     		bne	.L598
 7890              	.L597:
 7891              		.loc 1 2814 7 discriminator 3
 7892 0096 0123     		movs	r3, #1
 7893              		.loc 1 2814 7
 7894 0098 00E0     		b	.L599
 7895              	.L598:
 7896              		.loc 1 2814 7 discriminator 4
 7897 009a 0023     		movs	r3, #0
 7898              	.L599:
 7899              		.loc 1 2814 6 is_stmt 1 discriminator 6
 7900 009c 002B     		cmp	r3, #0
 7901 009e 07D0     		beq	.L600
2815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
2817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 7902              		.loc 1 2817 5
 7903 00a0 7B68     		ldr	r3, [r7, #4]
 7904 00a2 1B68     		ldr	r3, [r3]
 7905 00a4 5A6C     		ldr	r2, [r3, #68]
 7906 00a6 7B68     		ldr	r3, [r7, #4]
 7907 00a8 1B68     		ldr	r3, [r3]
 7908 00aa 42F40042 		orr	r2, r2, #32768
 7909 00ae 5A64     		str	r2, [r3, #68]
 7910              	.L600:
2818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
2821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
ARM GAS  /tmp//ccJMd58S.s 			page 188


 7911              		.loc 1 2821 10
 7912 00b0 0023     		movs	r3, #0
 7913              	.L596:
2822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 7914              		.loc 1 2822 1
 7915 00b2 1846     		mov	r0, r3
 7916 00b4 1037     		adds	r7, r7, #16
 7917              	.LCFI237:
 7918              		.cfi_def_cfa_offset 8
 7919 00b6 BD46     		mov	sp, r7
 7920              	.LCFI238:
 7921              		.cfi_def_cfa_register 13
 7922              		@ sp needed
 7923 00b8 80BD     		pop	{r7, pc}
 7924              	.L602:
 7925 00ba 00BF     		.align	2
 7926              	.L601:
 7927 00bc 002C0140 		.word	1073818624
 7928 00c0 00340140 		.word	1073820672
 7929              		.cfi_endproc
 7930              	.LFE109:
 7932              		.section	.text.HAL_TIM_OnePulse_Stop,"ax",%progbits
 7933              		.align	1
 7934              		.global	HAL_TIM_OnePulse_Stop
 7935              		.syntax unified
 7936              		.thumb
 7937              		.thumb_func
 7939              	HAL_TIM_OnePulse_Stop:
 7940              	.LFB110:
2823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation.
2826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note Though OutputChannel parameter is deprecated and ignored by the function
2827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        it has been kept to avoid HAL_TIM API compatibility break.
2828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note The pulse output channel is determined when calling
2829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *       @ref HAL_TIM_OnePulse_ConfigChannel().
2830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel See note above
2832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 7941              		.loc 1 2835 1
 7942              		.cfi_startproc
 7943              		@ args = 0, pretend = 0, frame = 8
 7944              		@ frame_needed = 1, uses_anonymous_args = 0
 7945 0000 80B5     		push	{r7, lr}
 7946              	.LCFI239:
 7947              		.cfi_def_cfa_offset 8
 7948              		.cfi_offset 7, -8
 7949              		.cfi_offset 14, -4
 7950 0002 82B0     		sub	sp, sp, #8
 7951              	.LCFI240:
 7952              		.cfi_def_cfa_offset 16
 7953 0004 00AF     		add	r7, sp, #0
 7954              	.LCFI241:
 7955              		.cfi_def_cfa_register 7
ARM GAS  /tmp//ccJMd58S.s 			page 189


 7956 0006 7860     		str	r0, [r7, #4]
 7957 0008 3960     		str	r1, [r7]
2836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(OutputChannel);
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   whatever the combination, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */
2844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 7958              		.loc 1 2845 3
 7959 000a 7B68     		ldr	r3, [r7, #4]
 7960 000c 1B68     		ldr	r3, [r3]
 7961 000e 0022     		movs	r2, #0
 7962 0010 0021     		movs	r1, #0
 7963 0012 1846     		mov	r0, r3
 7964 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 7965              		.loc 1 2846 3
 7966 0018 7B68     		ldr	r3, [r7, #4]
 7967 001a 1B68     		ldr	r3, [r3]
 7968 001c 0022     		movs	r2, #0
 7969 001e 0421     		movs	r1, #4
 7970 0020 1846     		mov	r0, r3
 7971 0022 FFF7FEFF 		bl	TIM_CCxChannelCmd
2847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7972              		.loc 1 2848 7
 7973 0026 7B68     		ldr	r3, [r7, #4]
 7974 0028 1B68     		ldr	r3, [r3]
 7975 002a 294A     		ldr	r2, .L610
 7976 002c 9342     		cmp	r3, r2
 7977 002e 04D0     		beq	.L604
 7978              		.loc 1 2848 7 is_stmt 0 discriminator 2
 7979 0030 7B68     		ldr	r3, [r7, #4]
 7980 0032 1B68     		ldr	r3, [r3]
 7981 0034 274A     		ldr	r2, .L610+4
 7982 0036 9342     		cmp	r3, r2
 7983 0038 01D1     		bne	.L605
 7984              	.L604:
 7985              		.loc 1 2848 7 discriminator 3
 7986 003a 0123     		movs	r3, #1
 7987              		.loc 1 2848 7
 7988 003c 00E0     		b	.L606
 7989              	.L605:
 7990              		.loc 1 2848 7 discriminator 4
 7991 003e 0023     		movs	r3, #0
 7992              	.L606:
 7993              		.loc 1 2848 6 is_stmt 1 discriminator 6
 7994 0040 002B     		cmp	r3, #0
 7995 0042 17D0     		beq	.L607
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
2851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 7996              		.loc 1 2851 5
ARM GAS  /tmp//ccJMd58S.s 			page 190


 7997 0044 7B68     		ldr	r3, [r7, #4]
 7998 0046 1B68     		ldr	r3, [r3]
 7999 0048 1A6A     		ldr	r2, [r3, #32]
 8000 004a 41F21113 		movw	r3, #4369
 8001 004e 1340     		ands	r3, r3, r2
 8002 0050 002B     		cmp	r3, #0
 8003 0052 0FD1     		bne	.L607
 8004              		.loc 1 2851 5 is_stmt 0 discriminator 1
 8005 0054 7B68     		ldr	r3, [r7, #4]
 8006 0056 1B68     		ldr	r3, [r3]
 8007 0058 1A6A     		ldr	r2, [r3, #32]
 8008 005a 40F24443 		movw	r3, #1092
 8009 005e 1340     		ands	r3, r3, r2
 8010 0060 002B     		cmp	r3, #0
 8011 0062 07D1     		bne	.L607
 8012              		.loc 1 2851 5 discriminator 2
 8013 0064 7B68     		ldr	r3, [r7, #4]
 8014 0066 1B68     		ldr	r3, [r3]
 8015 0068 5A6C     		ldr	r2, [r3, #68]
 8016 006a 7B68     		ldr	r3, [r7, #4]
 8017 006c 1B68     		ldr	r3, [r3]
 8018 006e 22F40042 		bic	r2, r2, #32768
 8019 0072 5A64     		str	r2, [r3, #68]
 8020              	.L607:
2852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
2855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8021              		.loc 1 2855 3 is_stmt 1
 8022 0074 7B68     		ldr	r3, [r7, #4]
 8023 0076 1B68     		ldr	r3, [r3]
 8024 0078 1A6A     		ldr	r2, [r3, #32]
 8025 007a 41F21113 		movw	r3, #4369
 8026 007e 1340     		ands	r3, r3, r2
 8027 0080 002B     		cmp	r3, #0
 8028 0082 0FD1     		bne	.L608
 8029              		.loc 1 2855 3 is_stmt 0 discriminator 1
 8030 0084 7B68     		ldr	r3, [r7, #4]
 8031 0086 1B68     		ldr	r3, [r3]
 8032 0088 1A6A     		ldr	r2, [r3, #32]
 8033 008a 40F24443 		movw	r3, #1092
 8034 008e 1340     		ands	r3, r3, r2
 8035 0090 002B     		cmp	r3, #0
 8036 0092 07D1     		bne	.L608
 8037              		.loc 1 2855 3 discriminator 2
 8038 0094 7B68     		ldr	r3, [r7, #4]
 8039 0096 1B68     		ldr	r3, [r3]
 8040 0098 1A68     		ldr	r2, [r3]
 8041 009a 7B68     		ldr	r3, [r7, #4]
 8042 009c 1B68     		ldr	r3, [r3]
 8043 009e 22F00102 		bic	r2, r2, #1
 8044 00a2 1A60     		str	r2, [r3]
 8045              	.L608:
2856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channels state */
2858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 8046              		.loc 1 2858 3 is_stmt 1
ARM GAS  /tmp//ccJMd58S.s 			page 191


 8047 00a4 7B68     		ldr	r3, [r7, #4]
 8048 00a6 0122     		movs	r2, #1
 8049 00a8 83F83E20 		strb	r2, [r3, #62]
2859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8050              		.loc 1 2859 3
 8051 00ac 7B68     		ldr	r3, [r7, #4]
 8052 00ae 0122     		movs	r2, #1
 8053 00b0 83F83F20 		strb	r2, [r3, #63]
2860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 8054              		.loc 1 2860 3
 8055 00b4 7B68     		ldr	r3, [r7, #4]
 8056 00b6 0122     		movs	r2, #1
 8057 00b8 83F84220 		strb	r2, [r3, #66]
2861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8058              		.loc 1 2861 3
 8059 00bc 7B68     		ldr	r3, [r7, #4]
 8060 00be 0122     		movs	r2, #1
 8061 00c0 83F84320 		strb	r2, [r3, #67]
2862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
2864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 8062              		.loc 1 2864 10
 8063 00c4 0023     		movs	r3, #0
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 8064              		.loc 1 2865 1
 8065 00c6 1846     		mov	r0, r3
 8066 00c8 0837     		adds	r7, r7, #8
 8067              	.LCFI242:
 8068              		.cfi_def_cfa_offset 8
 8069 00ca BD46     		mov	sp, r7
 8070              	.LCFI243:
 8071              		.cfi_def_cfa_register 13
 8072              		@ sp needed
 8073 00cc 80BD     		pop	{r7, pc}
 8074              	.L611:
 8075 00ce 00BF     		.align	2
 8076              	.L610:
 8077 00d0 002C0140 		.word	1073818624
 8078 00d4 00340140 		.word	1073820672
 8079              		.cfi_endproc
 8080              	.LFE110:
 8082              		.section	.text.HAL_TIM_OnePulse_Start_IT,"ax",%progbits
 8083              		.align	1
 8084              		.global	HAL_TIM_OnePulse_Start_IT
 8085              		.syntax unified
 8086              		.thumb
 8087              		.thumb_func
 8089              	HAL_TIM_OnePulse_Start_IT:
 8090              	.LFB111:
2866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation in interrupt mode.
2869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note Though OutputChannel parameter is deprecated and ignored by the function
2870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        it has been kept to avoid HAL_TIM API compatibility break.
2871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note The pulse output channel is determined when calling
2872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *       @ref HAL_TIM_OnePulse_ConfigChannel().
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
ARM GAS  /tmp//ccJMd58S.s 			page 192


2874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel See note above
2875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 8091              		.loc 1 2878 1
 8092              		.cfi_startproc
 8093              		@ args = 0, pretend = 0, frame = 16
 8094              		@ frame_needed = 1, uses_anonymous_args = 0
 8095 0000 80B5     		push	{r7, lr}
 8096              	.LCFI244:
 8097              		.cfi_def_cfa_offset 8
 8098              		.cfi_offset 7, -8
 8099              		.cfi_offset 14, -4
 8100 0002 84B0     		sub	sp, sp, #16
 8101              	.LCFI245:
 8102              		.cfi_def_cfa_offset 24
 8103 0004 00AF     		add	r7, sp, #0
 8104              	.LCFI246:
 8105              		.cfi_def_cfa_register 7
 8106 0006 7860     		str	r0, [r7, #4]
 8107 0008 3960     		str	r1, [r7]
2879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
 8108              		.loc 1 2879 31
 8109 000a 7B68     		ldr	r3, [r7, #4]
 8110 000c 93F83E30 		ldrb	r3, [r3, #62]
 8111 0010 FB73     		strb	r3, [r7, #15]
2880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
 8112              		.loc 1 2880 31
 8113 0012 7B68     		ldr	r3, [r7, #4]
 8114 0014 93F83F30 		ldrb	r3, [r3, #63]
 8115 0018 BB73     		strb	r3, [r7, #14]
2881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 8116              		.loc 1 2881 31
 8117 001a 7B68     		ldr	r3, [r7, #4]
 8118 001c 93F84230 		ldrb	r3, [r3, #66]
 8119 0020 7B73     		strb	r3, [r7, #13]
2882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 8120              		.loc 1 2882 31
 8121 0022 7B68     		ldr	r3, [r7, #4]
 8122 0024 93F84330 		ldrb	r3, [r3, #67]
 8123 0028 3B73     		strb	r3, [r7, #12]
2883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(OutputChannel);
2886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM channels state */
2888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 8124              		.loc 1 2888 6
 8125 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 8126 002c 012B     		cmp	r3, #1
 8127 002e 08D1     		bne	.L613
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       || (channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
 8128              		.loc 1 2889 7
 8129 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 8130 0032 012B     		cmp	r3, #1
 8131 0034 05D1     		bne	.L613
ARM GAS  /tmp//ccJMd58S.s 			page 193


2890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 8132              		.loc 1 2890 7
 8133 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 8134 0038 012B     		cmp	r3, #1
 8135 003a 02D1     		bne	.L613
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
 8136              		.loc 1 2891 7
 8137 003c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 8138 003e 012B     		cmp	r3, #1
 8139 0040 01D0     		beq	.L614
 8140              	.L613:
2892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 8141              		.loc 1 2893 12
 8142 0042 0123     		movs	r3, #1
 8143 0044 45E0     		b	.L615
 8144              	.L614:
2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channels state */
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8145              		.loc 1 2897 3
 8146 0046 7B68     		ldr	r3, [r7, #4]
 8147 0048 0222     		movs	r2, #2
 8148 004a 83F83E20 		strb	r2, [r3, #62]
2898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8149              		.loc 1 2898 3
 8150 004e 7B68     		ldr	r3, [r7, #4]
 8151 0050 0222     		movs	r2, #2
 8152 0052 83F83F20 		strb	r2, [r3, #63]
2899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8153              		.loc 1 2899 3
 8154 0056 7B68     		ldr	r3, [r7, #4]
 8155 0058 0222     		movs	r2, #2
 8156 005a 83F84220 		strb	r2, [r3, #66]
2900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8157              		.loc 1 2900 3
 8158 005e 7B68     		ldr	r3, [r7, #4]
 8159 0060 0222     		movs	r2, #2
 8160 0062 83F84320 		strb	r2, [r3, #67]
2901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels
2903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     whatever the combination, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together
2907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware
2909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 1 interrupt */
2912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8161              		.loc 1 2912 3
 8162 0066 7B68     		ldr	r3, [r7, #4]
 8163 0068 1B68     		ldr	r3, [r3]
 8164 006a DA68     		ldr	r2, [r3, #12]
 8165 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 194


 8166 006e 1B68     		ldr	r3, [r3]
 8167 0070 42F00202 		orr	r2, r2, #2
 8168 0074 DA60     		str	r2, [r3, #12]
2913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 2 interrupt */
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8169              		.loc 1 2915 3
 8170 0076 7B68     		ldr	r3, [r7, #4]
 8171 0078 1B68     		ldr	r3, [r3]
 8172 007a DA68     		ldr	r2, [r3, #12]
 8173 007c 7B68     		ldr	r3, [r7, #4]
 8174 007e 1B68     		ldr	r3, [r3]
 8175 0080 42F00402 		orr	r2, r2, #4
 8176 0084 DA60     		str	r2, [r3, #12]
2916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8177              		.loc 1 2917 3
 8178 0086 7B68     		ldr	r3, [r7, #4]
 8179 0088 1B68     		ldr	r3, [r3]
 8180 008a 0122     		movs	r2, #1
 8181 008c 0021     		movs	r1, #0
 8182 008e 1846     		mov	r0, r3
 8183 0090 FFF7FEFF 		bl	TIM_CCxChannelCmd
2918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8184              		.loc 1 2918 3
 8185 0094 7B68     		ldr	r3, [r7, #4]
 8186 0096 1B68     		ldr	r3, [r3]
 8187 0098 0122     		movs	r2, #1
 8188 009a 0421     		movs	r1, #4
 8189 009c 1846     		mov	r0, r3
 8190 009e FFF7FEFF 		bl	TIM_CCxChannelCmd
2919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8191              		.loc 1 2920 7
 8192 00a2 7B68     		ldr	r3, [r7, #4]
 8193 00a4 1B68     		ldr	r3, [r3]
 8194 00a6 0D4A     		ldr	r2, .L620
 8195 00a8 9342     		cmp	r3, r2
 8196 00aa 04D0     		beq	.L616
 8197              		.loc 1 2920 7 is_stmt 0 discriminator 2
 8198 00ac 7B68     		ldr	r3, [r7, #4]
 8199 00ae 1B68     		ldr	r3, [r3]
 8200 00b0 0B4A     		ldr	r2, .L620+4
 8201 00b2 9342     		cmp	r3, r2
 8202 00b4 01D1     		bne	.L617
 8203              	.L616:
 8204              		.loc 1 2920 7 discriminator 3
 8205 00b6 0123     		movs	r3, #1
 8206              		.loc 1 2920 7
 8207 00b8 00E0     		b	.L618
 8208              	.L617:
 8209              		.loc 1 2920 7 discriminator 4
 8210 00ba 0023     		movs	r3, #0
 8211              	.L618:
 8212              		.loc 1 2920 6 is_stmt 1 discriminator 6
 8213 00bc 002B     		cmp	r3, #0
 8214 00be 07D0     		beq	.L619
ARM GAS  /tmp//ccJMd58S.s 			page 195


2921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the main output */
2923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 8215              		.loc 1 2923 5
 8216 00c0 7B68     		ldr	r3, [r7, #4]
 8217 00c2 1B68     		ldr	r3, [r3]
 8218 00c4 5A6C     		ldr	r2, [r3, #68]
 8219 00c6 7B68     		ldr	r3, [r7, #4]
 8220 00c8 1B68     		ldr	r3, [r3]
 8221 00ca 42F40042 		orr	r2, r2, #32768
 8222 00ce 5A64     		str	r2, [r3, #68]
 8223              	.L619:
2924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
2927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 8224              		.loc 1 2927 10
 8225 00d0 0023     		movs	r3, #0
 8226              	.L615:
2928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 8227              		.loc 1 2928 1
 8228 00d2 1846     		mov	r0, r3
 8229 00d4 1037     		adds	r7, r7, #16
 8230              	.LCFI247:
 8231              		.cfi_def_cfa_offset 8
 8232 00d6 BD46     		mov	sp, r7
 8233              	.LCFI248:
 8234              		.cfi_def_cfa_register 13
 8235              		@ sp needed
 8236 00d8 80BD     		pop	{r7, pc}
 8237              	.L621:
 8238 00da 00BF     		.align	2
 8239              	.L620:
 8240 00dc 002C0140 		.word	1073818624
 8241 00e0 00340140 		.word	1073820672
 8242              		.cfi_endproc
 8243              	.LFE111:
 8245              		.section	.text.HAL_TIM_OnePulse_Stop_IT,"ax",%progbits
 8246              		.align	1
 8247              		.global	HAL_TIM_OnePulse_Stop_IT
 8248              		.syntax unified
 8249              		.thumb
 8250              		.thumb_func
 8252              	HAL_TIM_OnePulse_Stop_IT:
 8253              	.LFB112:
2929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation in interrupt mode.
2932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note Though OutputChannel parameter is deprecated and ignored by the function
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        it has been kept to avoid HAL_TIM API compatibility break.
2934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note The pulse output channel is determined when calling
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *       @ref HAL_TIM_OnePulse_ConfigChannel().
2936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
2937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel See note above
2938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
2939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
ARM GAS  /tmp//ccJMd58S.s 			page 196


2941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 8254              		.loc 1 2941 1
 8255              		.cfi_startproc
 8256              		@ args = 0, pretend = 0, frame = 8
 8257              		@ frame_needed = 1, uses_anonymous_args = 0
 8258 0000 80B5     		push	{r7, lr}
 8259              	.LCFI249:
 8260              		.cfi_def_cfa_offset 8
 8261              		.cfi_offset 7, -8
 8262              		.cfi_offset 14, -4
 8263 0002 82B0     		sub	sp, sp, #8
 8264              	.LCFI250:
 8265              		.cfi_def_cfa_offset 16
 8266 0004 00AF     		add	r7, sp, #0
 8267              	.LCFI251:
 8268              		.cfi_def_cfa_register 7
 8269 0006 7860     		str	r0, [r7, #4]
 8270 0008 3960     		str	r1, [r7]
2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(OutputChannel);
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 1 interrupt */
2946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 8271              		.loc 1 2946 3
 8272 000a 7B68     		ldr	r3, [r7, #4]
 8273 000c 1B68     		ldr	r3, [r3]
 8274 000e DA68     		ldr	r2, [r3, #12]
 8275 0010 7B68     		ldr	r3, [r7, #4]
 8276 0012 1B68     		ldr	r3, [r3]
 8277 0014 22F00202 		bic	r2, r2, #2
 8278 0018 DA60     		str	r2, [r3, #12]
2947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 2 interrupt */
2949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 8279              		.loc 1 2949 3
 8280 001a 7B68     		ldr	r3, [r7, #4]
 8281 001c 1B68     		ldr	r3, [r3]
 8282 001e DA68     		ldr	r2, [r3, #12]
 8283 0020 7B68     		ldr	r3, [r7, #4]
 8284 0022 1B68     		ldr	r3, [r3]
 8285 0024 22F00402 		bic	r2, r2, #4
 8286 0028 DA60     		str	r2, [r3, #12]
2950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels
2952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output
2955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   whatever the combination, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */
2956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 8287              		.loc 1 2956 3
 8288 002a 7B68     		ldr	r3, [r7, #4]
 8289 002c 1B68     		ldr	r3, [r3]
 8290 002e 0022     		movs	r2, #0
 8291 0030 0021     		movs	r1, #0
 8292 0032 1846     		mov	r0, r3
 8293 0034 FFF7FEFF 		bl	TIM_CCxChannelCmd
2957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
ARM GAS  /tmp//ccJMd58S.s 			page 197


 8294              		.loc 1 2957 3
 8295 0038 7B68     		ldr	r3, [r7, #4]
 8296 003a 1B68     		ldr	r3, [r3]
 8297 003c 0022     		movs	r2, #0
 8298 003e 0421     		movs	r1, #4
 8299 0040 1846     		mov	r0, r3
 8300 0042 FFF7FEFF 		bl	TIM_CCxChannelCmd
2958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8301              		.loc 1 2959 7
 8302 0046 7B68     		ldr	r3, [r7, #4]
 8303 0048 1B68     		ldr	r3, [r3]
 8304 004a 294A     		ldr	r2, .L629
 8305 004c 9342     		cmp	r3, r2
 8306 004e 04D0     		beq	.L623
 8307              		.loc 1 2959 7 is_stmt 0 discriminator 2
 8308 0050 7B68     		ldr	r3, [r7, #4]
 8309 0052 1B68     		ldr	r3, [r3]
 8310 0054 274A     		ldr	r2, .L629+4
 8311 0056 9342     		cmp	r3, r2
 8312 0058 01D1     		bne	.L624
 8313              	.L623:
 8314              		.loc 1 2959 7 discriminator 3
 8315 005a 0123     		movs	r3, #1
 8316              		.loc 1 2959 7
 8317 005c 00E0     		b	.L625
 8318              	.L624:
 8319              		.loc 1 2959 7 discriminator 4
 8320 005e 0023     		movs	r3, #0
 8321              	.L625:
 8322              		.loc 1 2959 6 is_stmt 1 discriminator 6
 8323 0060 002B     		cmp	r3, #0
 8324 0062 17D0     		beq	.L626
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
2961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the Main Output */
2962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 8325              		.loc 1 2962 5
 8326 0064 7B68     		ldr	r3, [r7, #4]
 8327 0066 1B68     		ldr	r3, [r3]
 8328 0068 1A6A     		ldr	r2, [r3, #32]
 8329 006a 41F21113 		movw	r3, #4369
 8330 006e 1340     		ands	r3, r3, r2
 8331 0070 002B     		cmp	r3, #0
 8332 0072 0FD1     		bne	.L626
 8333              		.loc 1 2962 5 is_stmt 0 discriminator 1
 8334 0074 7B68     		ldr	r3, [r7, #4]
 8335 0076 1B68     		ldr	r3, [r3]
 8336 0078 1A6A     		ldr	r2, [r3, #32]
 8337 007a 40F24443 		movw	r3, #1092
 8338 007e 1340     		ands	r3, r3, r2
 8339 0080 002B     		cmp	r3, #0
 8340 0082 07D1     		bne	.L626
 8341              		.loc 1 2962 5 discriminator 2
 8342 0084 7B68     		ldr	r3, [r7, #4]
 8343 0086 1B68     		ldr	r3, [r3]
 8344 0088 5A6C     		ldr	r2, [r3, #68]
 8345 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 198


 8346 008c 1B68     		ldr	r3, [r3]
 8347 008e 22F40042 		bic	r2, r2, #32768
 8348 0092 5A64     		str	r2, [r3, #68]
 8349              	.L626:
2963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
2964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
2966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8350              		.loc 1 2966 3 is_stmt 1
 8351 0094 7B68     		ldr	r3, [r7, #4]
 8352 0096 1B68     		ldr	r3, [r3]
 8353 0098 1A6A     		ldr	r2, [r3, #32]
 8354 009a 41F21113 		movw	r3, #4369
 8355 009e 1340     		ands	r3, r3, r2
 8356 00a0 002B     		cmp	r3, #0
 8357 00a2 0FD1     		bne	.L627
 8358              		.loc 1 2966 3 is_stmt 0 discriminator 1
 8359 00a4 7B68     		ldr	r3, [r7, #4]
 8360 00a6 1B68     		ldr	r3, [r3]
 8361 00a8 1A6A     		ldr	r2, [r3, #32]
 8362 00aa 40F24443 		movw	r3, #1092
 8363 00ae 1340     		ands	r3, r3, r2
 8364 00b0 002B     		cmp	r3, #0
 8365 00b2 07D1     		bne	.L627
 8366              		.loc 1 2966 3 discriminator 2
 8367 00b4 7B68     		ldr	r3, [r7, #4]
 8368 00b6 1B68     		ldr	r3, [r3]
 8369 00b8 1A68     		ldr	r2, [r3]
 8370 00ba 7B68     		ldr	r3, [r7, #4]
 8371 00bc 1B68     		ldr	r3, [r3]
 8372 00be 22F00102 		bic	r2, r2, #1
 8373 00c2 1A60     		str	r2, [r3]
 8374              	.L627:
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channels state */
2969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 8375              		.loc 1 2969 3 is_stmt 1
 8376 00c4 7B68     		ldr	r3, [r7, #4]
 8377 00c6 0122     		movs	r2, #1
 8378 00c8 83F83E20 		strb	r2, [r3, #62]
2970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8379              		.loc 1 2970 3
 8380 00cc 7B68     		ldr	r3, [r7, #4]
 8381 00ce 0122     		movs	r2, #1
 8382 00d0 83F83F20 		strb	r2, [r3, #63]
2971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 8383              		.loc 1 2971 3
 8384 00d4 7B68     		ldr	r3, [r7, #4]
 8385 00d6 0122     		movs	r2, #1
 8386 00d8 83F84220 		strb	r2, [r3, #66]
2972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8387              		.loc 1 2972 3
 8388 00dc 7B68     		ldr	r3, [r7, #4]
 8389 00de 0122     		movs	r2, #1
 8390 00e0 83F84320 		strb	r2, [r3, #67]
2973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
ARM GAS  /tmp//ccJMd58S.s 			page 199


2975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 8391              		.loc 1 2975 10
 8392 00e4 0023     		movs	r3, #0
2976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 8393              		.loc 1 2976 1
 8394 00e6 1846     		mov	r0, r3
 8395 00e8 0837     		adds	r7, r7, #8
 8396              	.LCFI252:
 8397              		.cfi_def_cfa_offset 8
 8398 00ea BD46     		mov	sp, r7
 8399              	.LCFI253:
 8400              		.cfi_def_cfa_register 13
 8401              		@ sp needed
 8402 00ec 80BD     		pop	{r7, pc}
 8403              	.L630:
 8404 00ee 00BF     		.align	2
 8405              	.L629:
 8406 00f0 002C0140 		.word	1073818624
 8407 00f4 00340140 		.word	1073820672
 8408              		.cfi_endproc
 8409              	.LFE112:
 8411              		.section	.text.HAL_TIM_Encoder_Init,"ax",%progbits
 8412              		.align	1
 8413              		.global	HAL_TIM_Encoder_Init
 8414              		.syntax unified
 8415              		.thumb
 8416              		.thumb_func
 8418              	HAL_TIM_Encoder_Init:
 8419              	.LFB113:
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
2979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
2980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
2981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
2982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group6 TIM Encoder functions
2983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Encoder functions
2984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
2986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
2987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                           ##### TIM Encoder functions #####
2988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
2989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
2990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     This section provides functions allowing to:
2991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Initialize and configure the TIM Encoder.
2992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) De-initialize the TIM Encoder.
2993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Encoder.
2994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Encoder.
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Encoder and enable interrupt.
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Encoder and disable interrupt.
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Start the TIM Encoder and enable DMA transfer.
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (+) Stop the TIM Encoder and disable DMA transfer.
2999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
3002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface and initialize the associated handle.
ARM GAS  /tmp//ccJMd58S.s 			page 200


3005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   Switching from Center Aligned counter mode to Edge counter mode (or reverse)
3006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         requires a timer reset to avoid unexpected direction
3007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         due to DIR bit readonly in center aligned mode.
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         Ex: call @ref HAL_TIM_Encoder_DeInit() before HAL_TIM_Encoder_Init()
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   Encoder mode and External clock mode 2 are not compatible and must not be selected toge
3010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         Ex: A call for @ref HAL_TIM_Encoder_Init will erase the settings of @ref HAL_TIM_Config
3011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         using TIM_CLOCKSOURCE_ETRMODE2 and vice versa
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   When the timer instance is initialized in Encoder mode, timer
3013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         channels 1 and channel 2 are reserved and cannot be used for other
3014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         purpose.
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM Encoder Interface configuration structure
3017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Init(TIM_HandleTypeDef *htim, const TIM_Encoder_InitTypeDef *sCon
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 8420              		.loc 1 3020 1
 8421              		.cfi_startproc
 8422              		@ args = 0, pretend = 0, frame = 24
 8423              		@ frame_needed = 1, uses_anonymous_args = 0
 8424 0000 80B5     		push	{r7, lr}
 8425              	.LCFI254:
 8426              		.cfi_def_cfa_offset 8
 8427              		.cfi_offset 7, -8
 8428              		.cfi_offset 14, -4
 8429 0002 86B0     		sub	sp, sp, #24
 8430              	.LCFI255:
 8431              		.cfi_def_cfa_offset 32
 8432 0004 00AF     		add	r7, sp, #0
 8433              	.LCFI256:
 8434              		.cfi_def_cfa_register 7
 8435 0006 7860     		str	r0, [r7, #4]
 8436 0008 3960     		str	r1, [r7]
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
3022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
3023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
3024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the TIM handle allocation */
3026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim == NULL)
 8437              		.loc 1 3026 6
 8438 000a 7B68     		ldr	r3, [r7, #4]
 8439 000c 002B     		cmp	r3, #0
 8440 000e 01D1     		bne	.L632
3027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 8441              		.loc 1 3028 12
 8442 0010 0123     		movs	r3, #1
 8443 0012 93E0     		b	.L633
 8444              	.L632:
3029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
3034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
3035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
3036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(sConfig->EncoderMode));
ARM GAS  /tmp//ccJMd58S.s 			page 201


3037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC1Selection));
3038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC2Selection));
3039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODERINPUT_POLARITY(sConfig->IC1Polarity));
3040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODERINPUT_POLARITY(sConfig->IC2Polarity));
3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC1Prescaler));
3042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC2Prescaler));
3043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC1Filter));
3044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC2Filter));
3045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_PERIOD(htim->Init.Period));
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_RESET)
 8445              		.loc 1 3047 11
 8446 0014 7B68     		ldr	r3, [r7, #4]
 8447 0016 93F83D30 		ldrb	r3, [r3, #61]
 8448 001a DBB2     		uxtb	r3, r3
 8449              		.loc 1 3047 6
 8450 001c 002B     		cmp	r3, #0
 8451 001e 06D1     		bne	.L634
3048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 8452              		.loc 1 3050 16
 8453 0020 7B68     		ldr	r3, [r7, #4]
 8454 0022 0022     		movs	r2, #0
 8455 0024 83F83C20 		strb	r2, [r3, #60]
3051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset interrupt callbacks to legacy weak callbacks */
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_ResetCallback(htim);
3055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (htim->Encoder_MspInitCallback == NULL)
3057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Encoder_MspInitCallback = HAL_TIM_Encoder_MspInit;
3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
3061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Encoder_MspInitCallback(htim);
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     HAL_TIM_Encoder_MspInit(htim);
 8456              		.loc 1 3064 5
 8457 0028 7868     		ldr	r0, [r7, #4]
 8458 002a FFF7FEFF 		bl	HAL_TIM_Encoder_MspInit
 8459              	.L634:
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM state */
3069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 8460              		.loc 1 3069 15
 8461 002e 7B68     		ldr	r3, [r7, #4]
 8462 0030 0222     		movs	r2, #2
 8463 0032 83F83D20 		strb	r2, [r3, #61]
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the SMS and ECE bits */
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->SMCR &= ~(TIM_SMCR_SMS | TIM_SMCR_ECE);
 8464              		.loc 1 3072 7
 8465 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 202


 8466 0038 1B68     		ldr	r3, [r3]
 8467              		.loc 1 3072 17
 8468 003a 9B68     		ldr	r3, [r3, #8]
 8469              		.loc 1 3072 7
 8470 003c 7A68     		ldr	r2, [r7, #4]
 8471 003e 1268     		ldr	r2, [r2]
 8472              		.loc 1 3072 24
 8473 0040 23F48043 		bic	r3, r3, #16384
 8474 0044 23F00703 		bic	r3, r3, #7
 8475 0048 9360     		str	r3, [r2, #8]
3073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Configure the Time base in the Encoder Mode */
3075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8476              		.loc 1 3075 3
 8477 004a 7B68     		ldr	r3, [r7, #4]
 8478 004c 1A68     		ldr	r2, [r3]
 8479              		.loc 1 3075 38
 8480 004e 7B68     		ldr	r3, [r7, #4]
 8481 0050 0433     		adds	r3, r3, #4
 8482              		.loc 1 3075 3
 8483 0052 1946     		mov	r1, r3
 8484 0054 1046     		mov	r0, r2
 8485 0056 FFF7FEFF 		bl	TIM_Base_SetConfig
3076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
3078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
 8486              		.loc 1 3078 17
 8487 005a 7B68     		ldr	r3, [r7, #4]
 8488 005c 1B68     		ldr	r3, [r3]
 8489              		.loc 1 3078 11
 8490 005e 9B68     		ldr	r3, [r3, #8]
 8491 0060 7B61     		str	r3, [r7, #20]
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
3081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 = htim->Instance->CCMR1;
 8492              		.loc 1 3081 18
 8493 0062 7B68     		ldr	r3, [r7, #4]
 8494 0064 1B68     		ldr	r3, [r3]
 8495              		.loc 1 3081 12
 8496 0066 9B69     		ldr	r3, [r3, #24]
 8497 0068 3B61     		str	r3, [r7, #16]
3082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = htim->Instance->CCER;
 8498              		.loc 1 3084 17
 8499 006a 7B68     		ldr	r3, [r7, #4]
 8500 006c 1B68     		ldr	r3, [r3]
 8501              		.loc 1 3084 11
 8502 006e 1B6A     		ldr	r3, [r3, #32]
 8503 0070 FB60     		str	r3, [r7, #12]
3085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the encoder Mode */
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr |= sConfig->EncoderMode;
 8504              		.loc 1 3087 21
 8505 0072 3B68     		ldr	r3, [r7]
 8506 0074 1B68     		ldr	r3, [r3]
 8507              		.loc 1 3087 11
ARM GAS  /tmp//ccJMd58S.s 			page 203


 8508 0076 7A69     		ldr	r2, [r7, #20]
 8509 0078 1343     		orrs	r3, r3, r2
 8510 007a 7B61     		str	r3, [r7, #20]
3088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
 8511              		.loc 1 3090 12
 8512 007c 3B69     		ldr	r3, [r7, #16]
 8513 007e 23F44073 		bic	r3, r3, #768
 8514 0082 23F00303 		bic	r3, r3, #3
 8515 0086 3B61     		str	r3, [r7, #16]
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
 8516              		.loc 1 3091 23
 8517 0088 3B68     		ldr	r3, [r7]
 8518 008a 9A68     		ldr	r2, [r3, #8]
 8519              		.loc 1 3091 48
 8520 008c 3B68     		ldr	r3, [r7]
 8521 008e 9B69     		ldr	r3, [r3, #24]
 8522              		.loc 1 3091 63
 8523 0090 1B02     		lsls	r3, r3, #8
 8524              		.loc 1 3091 38
 8525 0092 1343     		orrs	r3, r3, r2
 8526              		.loc 1 3091 12
 8527 0094 3A69     		ldr	r2, [r7, #16]
 8528 0096 1343     		orrs	r3, r3, r2
 8529 0098 3B61     		str	r3, [r7, #16]
3092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
 8530              		.loc 1 3094 12
 8531 009a 3B69     		ldr	r3, [r7, #16]
 8532 009c 23F44063 		bic	r3, r3, #3072
 8533 00a0 23F00C03 		bic	r3, r3, #12
 8534 00a4 3B61     		str	r3, [r7, #16]
3095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
 8535              		.loc 1 3095 12
 8536 00a6 3B69     		ldr	r3, [r7, #16]
 8537 00a8 23F47043 		bic	r3, r3, #61440
 8538 00ac 23F0F003 		bic	r3, r3, #240
 8539 00b0 3B61     		str	r3, [r7, #16]
3096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
 8540              		.loc 1 3096 22
 8541 00b2 3B68     		ldr	r3, [r7]
 8542 00b4 DA68     		ldr	r2, [r3, #12]
 8543              		.loc 1 3096 47
 8544 00b6 3B68     		ldr	r3, [r7]
 8545 00b8 DB69     		ldr	r3, [r3, #28]
 8546              		.loc 1 3096 62
 8547 00ba 1B02     		lsls	r3, r3, #8
 8548              		.loc 1 3096 37
 8549 00bc 1343     		orrs	r3, r3, r2
 8550              		.loc 1 3096 12
 8551 00be 3A69     		ldr	r2, [r7, #16]
 8552 00c0 1343     		orrs	r3, r3, r2
 8553 00c2 3B61     		str	r3, [r7, #16]
3097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 8554              		.loc 1 3097 23
ARM GAS  /tmp//ccJMd58S.s 			page 204


 8555 00c4 3B68     		ldr	r3, [r7]
 8556 00c6 1B69     		ldr	r3, [r3, #16]
 8557              		.loc 1 3097 35
 8558 00c8 1A01     		lsls	r2, r3, #4
 8559              		.loc 1 3097 52
 8560 00ca 3B68     		ldr	r3, [r7]
 8561 00cc 1B6A     		ldr	r3, [r3, #32]
 8562              		.loc 1 3097 64
 8563 00ce 1B03     		lsls	r3, r3, #12
 8564              		.loc 1 3097 42
 8565 00d0 1343     		orrs	r3, r3, r2
 8566              		.loc 1 3097 12
 8567 00d2 3A69     		ldr	r2, [r7, #16]
 8568 00d4 1343     		orrs	r3, r3, r2
 8569 00d6 3B61     		str	r3, [r7, #16]
3098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
 8570              		.loc 1 3100 11
 8571 00d8 FB68     		ldr	r3, [r7, #12]
 8572 00da 23F02203 		bic	r3, r3, #34
 8573 00de FB60     		str	r3, [r7, #12]
3101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
 8574              		.loc 1 3101 21
 8575 00e0 3B68     		ldr	r3, [r7]
 8576 00e2 5A68     		ldr	r2, [r3, #4]
 8577              		.loc 1 3101 45
 8578 00e4 3B68     		ldr	r3, [r7]
 8579 00e6 5B69     		ldr	r3, [r3, #20]
 8580              		.loc 1 3101 59
 8581 00e8 1B01     		lsls	r3, r3, #4
 8582              		.loc 1 3101 35
 8583 00ea 1343     		orrs	r3, r3, r2
 8584              		.loc 1 3101 11
 8585 00ec FA68     		ldr	r2, [r7, #12]
 8586 00ee 1343     		orrs	r3, r3, r2
 8587 00f0 FB60     		str	r3, [r7, #12]
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
3104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 8588              		.loc 1 3104 7
 8589 00f2 7B68     		ldr	r3, [r7, #4]
 8590 00f4 1B68     		ldr	r3, [r3]
 8591              		.loc 1 3104 24
 8592 00f6 7A69     		ldr	r2, [r7, #20]
 8593 00f8 9A60     		str	r2, [r3, #8]
3105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->CCMR1 = tmpccmr1;
 8594              		.loc 1 3107 7
 8595 00fa 7B68     		ldr	r3, [r7, #4]
 8596 00fc 1B68     		ldr	r3, [r3]
 8597              		.loc 1 3107 25
 8598 00fe 3A69     		ldr	r2, [r7, #16]
 8599 0100 9A61     		str	r2, [r3, #24]
3108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
ARM GAS  /tmp//ccJMd58S.s 			page 205


3110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->CCER = tmpccer;
 8600              		.loc 1 3110 7
 8601 0102 7B68     		ldr	r3, [r7, #4]
 8602 0104 1B68     		ldr	r3, [r3]
 8603              		.loc 1 3110 24
 8604 0106 FA68     		ldr	r2, [r7, #12]
 8605 0108 1A62     		str	r2, [r3, #32]
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the DMA burst operation state */
3113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8606              		.loc 1 3113 23
 8607 010a 7B68     		ldr	r3, [r7, #4]
 8608 010c 0122     		movs	r2, #1
 8609 010e 83F84620 		strb	r2, [r3, #70]
3114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channels state */
3116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 8610              		.loc 1 3116 3
 8611 0112 7B68     		ldr	r3, [r7, #4]
 8612 0114 0122     		movs	r2, #1
 8613 0116 83F83E20 		strb	r2, [r3, #62]
3117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8614              		.loc 1 3117 3
 8615 011a 7B68     		ldr	r3, [r7, #4]
 8616 011c 0122     		movs	r2, #1
 8617 011e 83F83F20 		strb	r2, [r3, #63]
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 8618              		.loc 1 3118 3
 8619 0122 7B68     		ldr	r3, [r7, #4]
 8620 0124 0122     		movs	r2, #1
 8621 0126 83F84220 		strb	r2, [r3, #66]
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 8622              		.loc 1 3119 3
 8623 012a 7B68     		ldr	r3, [r7, #4]
 8624 012c 0122     		movs	r2, #1
 8625 012e 83F84320 		strb	r2, [r3, #67]
3120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Initialize the TIM state*/
3122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 8626              		.loc 1 3122 15
 8627 0132 7B68     		ldr	r3, [r7, #4]
 8628 0134 0122     		movs	r2, #1
 8629 0136 83F83D20 		strb	r2, [r3, #61]
3123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 8630              		.loc 1 3124 10
 8631 013a 0023     		movs	r3, #0
 8632              	.L633:
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 8633              		.loc 1 3125 1
 8634 013c 1846     		mov	r0, r3
 8635 013e 1837     		adds	r7, r7, #24
 8636              	.LCFI257:
 8637              		.cfi_def_cfa_offset 8
 8638 0140 BD46     		mov	sp, r7
 8639              	.LCFI258:
 8640              		.cfi_def_cfa_register 13
ARM GAS  /tmp//ccJMd58S.s 			page 206


 8641              		@ sp needed
 8642 0142 80BD     		pop	{r7, pc}
 8643              		.cfi_endproc
 8644              	.LFE113:
 8646              		.section	.text.HAL_TIM_Encoder_DeInit,"ax",%progbits
 8647              		.align	1
 8648              		.global	HAL_TIM_Encoder_DeInit
 8649              		.syntax unified
 8650              		.thumb
 8651              		.thumb_func
 8653              	HAL_TIM_Encoder_DeInit:
 8654              	.LFB114:
3126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes the TIM Encoder interface
3130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_DeInit(TIM_HandleTypeDef *htim)
3134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 8655              		.loc 1 3134 1
 8656              		.cfi_startproc
 8657              		@ args = 0, pretend = 0, frame = 8
 8658              		@ frame_needed = 1, uses_anonymous_args = 0
 8659 0000 80B5     		push	{r7, lr}
 8660              	.LCFI259:
 8661              		.cfi_def_cfa_offset 8
 8662              		.cfi_offset 7, -8
 8663              		.cfi_offset 14, -4
 8664 0002 82B0     		sub	sp, sp, #8
 8665              	.LCFI260:
 8666              		.cfi_def_cfa_offset 16
 8667 0004 00AF     		add	r7, sp, #0
 8668              	.LCFI261:
 8669              		.cfi_def_cfa_register 7
 8670 0006 7860     		str	r0, [r7, #4]
3135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
3137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 8671              		.loc 1 3138 15
 8672 0008 7B68     		ldr	r3, [r7, #4]
 8673 000a 0222     		movs	r2, #2
 8674 000c 83F83D20 		strb	r2, [r3, #61]
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8675              		.loc 1 3141 3
 8676 0010 7B68     		ldr	r3, [r7, #4]
 8677 0012 1B68     		ldr	r3, [r3]
 8678 0014 1A6A     		ldr	r2, [r3, #32]
 8679 0016 41F21113 		movw	r3, #4369
 8680 001a 1340     		ands	r3, r3, r2
 8681 001c 002B     		cmp	r3, #0
 8682 001e 0FD1     		bne	.L636
 8683              		.loc 1 3141 3 is_stmt 0 discriminator 1
ARM GAS  /tmp//ccJMd58S.s 			page 207


 8684 0020 7B68     		ldr	r3, [r7, #4]
 8685 0022 1B68     		ldr	r3, [r3]
 8686 0024 1A6A     		ldr	r2, [r3, #32]
 8687 0026 40F24443 		movw	r3, #1092
 8688 002a 1340     		ands	r3, r3, r2
 8689 002c 002B     		cmp	r3, #0
 8690 002e 07D1     		bne	.L636
 8691              		.loc 1 3141 3 discriminator 2
 8692 0030 7B68     		ldr	r3, [r7, #4]
 8693 0032 1B68     		ldr	r3, [r3]
 8694 0034 1A68     		ldr	r2, [r3]
 8695 0036 7B68     		ldr	r3, [r7, #4]
 8696 0038 1B68     		ldr	r3, [r3]
 8697 003a 22F00102 		bic	r2, r2, #1
 8698 003e 1A60     		str	r2, [r3]
 8699              	.L636:
3142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->Encoder_MspDeInitCallback == NULL)
3145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Encoder_MspDeInitCallback = HAL_TIM_Encoder_MspDeInit;
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware */
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Encoder_MspDeInitCallback(htim);
3150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
3152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_Encoder_MspDeInit(htim);
 8700              		.loc 1 3152 3 is_stmt 1
 8701 0040 7868     		ldr	r0, [r7, #4]
 8702 0042 FFF7FEFF 		bl	HAL_TIM_Encoder_MspDeInit
3153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the DMA burst operation state */
3156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->DMABurstState = HAL_DMA_BURST_STATE_RESET;
 8703              		.loc 1 3156 23
 8704 0046 7B68     		ldr	r3, [r7, #4]
 8705 0048 0022     		movs	r2, #0
 8706 004a 83F84620 		strb	r2, [r3, #70]
3157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channels state */
3159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_RESET);
 8707              		.loc 1 3159 3
 8708 004e 7B68     		ldr	r3, [r7, #4]
 8709 0050 0022     		movs	r2, #0
 8710 0052 83F83E20 		strb	r2, [r3, #62]
3160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_RESET);
 8711              		.loc 1 3160 3
 8712 0056 7B68     		ldr	r3, [r7, #4]
 8713 0058 0022     		movs	r2, #0
 8714 005a 83F83F20 		strb	r2, [r3, #63]
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_RESET);
 8715              		.loc 1 3161 3
 8716 005e 7B68     		ldr	r3, [r7, #4]
 8717 0060 0022     		movs	r2, #0
 8718 0062 83F84220 		strb	r2, [r3, #66]
3162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_RESET);
 8719              		.loc 1 3162 3
ARM GAS  /tmp//ccJMd58S.s 			page 208


 8720 0066 7B68     		ldr	r3, [r7, #4]
 8721 0068 0022     		movs	r2, #0
 8722 006a 83F84320 		strb	r2, [r3, #67]
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change TIM state */
3165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 8723              		.loc 1 3165 15
 8724 006e 7B68     		ldr	r3, [r7, #4]
 8725 0070 0022     		movs	r2, #0
 8726 0072 83F83D20 		strb	r2, [r3, #61]
3166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Release Lock */
3168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 8727              		.loc 1 3168 3
 8728 0076 7B68     		ldr	r3, [r7, #4]
 8729 0078 0022     		movs	r2, #0
 8730 007a 83F83C20 		strb	r2, [r3, #60]
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 8731              		.loc 1 3170 10
 8732 007e 0023     		movs	r3, #0
3171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 8733              		.loc 1 3171 1
 8734 0080 1846     		mov	r0, r3
 8735 0082 0837     		adds	r7, r7, #8
 8736              	.LCFI262:
 8737              		.cfi_def_cfa_offset 8
 8738 0084 BD46     		mov	sp, r7
 8739              	.LCFI263:
 8740              		.cfi_def_cfa_register 13
 8741              		@ sp needed
 8742 0086 80BD     		pop	{r7, pc}
 8743              		.cfi_endproc
 8744              	.LFE114:
 8746              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 8747              		.align	1
 8748              		.weak	HAL_TIM_Encoder_MspInit
 8749              		.syntax unified
 8750              		.thumb
 8751              		.thumb_func
 8753              	HAL_TIM_Encoder_MspInit:
 8754              	.LFB115:
3172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface MSP.
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
3177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef *htim)
3179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 8755              		.loc 1 3179 1
 8756              		.cfi_startproc
 8757              		@ args = 0, pretend = 0, frame = 8
 8758              		@ frame_needed = 1, uses_anonymous_args = 0
 8759              		@ link register save eliminated.
 8760 0000 80B4     		push	{r7}
 8761              	.LCFI264:
ARM GAS  /tmp//ccJMd58S.s 			page 209


 8762              		.cfi_def_cfa_offset 4
 8763              		.cfi_offset 7, -4
 8764 0002 83B0     		sub	sp, sp, #12
 8765              	.LCFI265:
 8766              		.cfi_def_cfa_offset 16
 8767 0004 00AF     		add	r7, sp, #0
 8768              	.LCFI266:
 8769              		.cfi_def_cfa_register 7
 8770 0006 7860     		str	r0, [r7, #4]
3180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
3182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_Encoder_MspInit could be implemented in the user file
3185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
3186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 8771              		.loc 1 3186 1
 8772 0008 00BF     		nop
 8773 000a 0C37     		adds	r7, r7, #12
 8774              	.LCFI267:
 8775              		.cfi_def_cfa_offset 4
 8776 000c BD46     		mov	sp, r7
 8777              	.LCFI268:
 8778              		.cfi_def_cfa_register 13
 8779              		@ sp needed
 8780 000e 80BC     		pop	{r7}
 8781              	.LCFI269:
 8782              		.cfi_restore 7
 8783              		.cfi_def_cfa_offset 0
 8784 0010 7047     		bx	lr
 8785              		.cfi_endproc
 8786              	.LFE115:
 8788              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 8789              		.align	1
 8790              		.weak	HAL_TIM_Encoder_MspDeInit
 8791              		.syntax unified
 8792              		.thumb
 8793              		.thumb_func
 8795              	HAL_TIM_Encoder_MspDeInit:
 8796              	.LFB116:
3187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  DeInitializes TIM Encoder Interface MSP.
3190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
3192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef *htim)
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 8797              		.loc 1 3194 1
 8798              		.cfi_startproc
 8799              		@ args = 0, pretend = 0, frame = 8
 8800              		@ frame_needed = 1, uses_anonymous_args = 0
 8801              		@ link register save eliminated.
 8802 0000 80B4     		push	{r7}
 8803              	.LCFI270:
 8804              		.cfi_def_cfa_offset 4
 8805              		.cfi_offset 7, -4
ARM GAS  /tmp//ccJMd58S.s 			page 210


 8806 0002 83B0     		sub	sp, sp, #12
 8807              	.LCFI271:
 8808              		.cfi_def_cfa_offset 16
 8809 0004 00AF     		add	r7, sp, #0
 8810              	.LCFI272:
 8811              		.cfi_def_cfa_register 7
 8812 0006 7860     		str	r0, [r7, #4]
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
3196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
3197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_Encoder_MspDeInit could be implemented in the user file
3200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 8813              		.loc 1 3201 1
 8814 0008 00BF     		nop
 8815 000a 0C37     		adds	r7, r7, #12
 8816              	.LCFI273:
 8817              		.cfi_def_cfa_offset 4
 8818 000c BD46     		mov	sp, r7
 8819              	.LCFI274:
 8820              		.cfi_def_cfa_register 13
 8821              		@ sp needed
 8822 000e 80BC     		pop	{r7}
 8823              	.LCFI275:
 8824              		.cfi_restore 7
 8825              		.cfi_def_cfa_offset 0
 8826 0010 7047     		bx	lr
 8827              		.cfi_endproc
 8828              	.LFE116:
 8830              		.section	.text.HAL_TIM_Encoder_Start,"ax",%progbits
 8831              		.align	1
 8832              		.global	HAL_TIM_Encoder_Start
 8833              		.syntax unified
 8834              		.thumb
 8835              		.thumb_func
 8837              	HAL_TIM_Encoder_Start:
 8838              	.LFB117:
3202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface.
3205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
3207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
3214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 8839              		.loc 1 3214 1
 8840              		.cfi_startproc
 8841              		@ args = 0, pretend = 0, frame = 16
 8842              		@ frame_needed = 1, uses_anonymous_args = 0
 8843 0000 80B5     		push	{r7, lr}
 8844              	.LCFI276:
ARM GAS  /tmp//ccJMd58S.s 			page 211


 8845              		.cfi_def_cfa_offset 8
 8846              		.cfi_offset 7, -8
 8847              		.cfi_offset 14, -4
 8848 0002 84B0     		sub	sp, sp, #16
 8849              	.LCFI277:
 8850              		.cfi_def_cfa_offset 24
 8851 0004 00AF     		add	r7, sp, #0
 8852              	.LCFI278:
 8853              		.cfi_def_cfa_register 7
 8854 0006 7860     		str	r0, [r7, #4]
 8855 0008 3960     		str	r1, [r7]
3215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
 8856              		.loc 1 3215 31
 8857 000a 7B68     		ldr	r3, [r7, #4]
 8858 000c 93F83E30 		ldrb	r3, [r3, #62]
 8859 0010 FB73     		strb	r3, [r7, #15]
3216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
 8860              		.loc 1 3216 31
 8861 0012 7B68     		ldr	r3, [r7, #4]
 8862 0014 93F83F30 		ldrb	r3, [r3, #63]
 8863 0018 BB73     		strb	r3, [r7, #14]
3217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 8864              		.loc 1 3217 31
 8865 001a 7B68     		ldr	r3, [r7, #4]
 8866 001c 93F84230 		ldrb	r3, [r3, #66]
 8867 0020 7B73     		strb	r3, [r7, #13]
3218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 8868              		.loc 1 3218 31
 8869 0022 7B68     		ldr	r3, [r7, #4]
 8870 0024 93F84330 		ldrb	r3, [r3, #67]
 8871 0028 3B73     		strb	r3, [r7, #12]
3219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
 8872              		.loc 1 3224 6
 8873 002a 3B68     		ldr	r3, [r7]
 8874 002c 002B     		cmp	r3, #0
 8875 002e 10D1     		bne	.L641
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 8876              		.loc 1 3226 8
 8877 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 8878 0032 012B     		cmp	r3, #1
 8879 0034 02D1     		bne	.L642
3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY))
 8880              		.loc 1 3227 9
 8881 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 8882 0038 012B     		cmp	r3, #1
 8883 003a 01D0     		beq	.L643
 8884              	.L642:
3228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 8885              		.loc 1 3229 14
 8886 003c 0123     		movs	r3, #1
ARM GAS  /tmp//ccJMd58S.s 			page 212


 8887 003e 69E0     		b	.L644
 8888              	.L643:
3230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
3232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8889              		.loc 1 3233 7
 8890 0040 7B68     		ldr	r3, [r7, #4]
 8891 0042 0222     		movs	r2, #2
 8892 0044 83F83E20 		strb	r2, [r3, #62]
3234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8893              		.loc 1 3234 7
 8894 0048 7B68     		ldr	r3, [r7, #4]
 8895 004a 0222     		movs	r2, #2
 8896 004c 83F84220 		strb	r2, [r3, #66]
 8897 0050 31E0     		b	.L645
 8898              	.L641:
3235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
 8899              		.loc 1 3237 11
 8900 0052 3B68     		ldr	r3, [r7]
 8901 0054 042B     		cmp	r3, #4
 8902 0056 10D1     		bne	.L646
3238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
 8903              		.loc 1 3239 8
 8904 0058 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 8905 005a 012B     		cmp	r3, #1
 8906 005c 02D1     		bne	.L647
3240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
 8907              		.loc 1 3240 9
 8908 005e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 8909 0060 012B     		cmp	r3, #1
 8910 0062 01D0     		beq	.L648
 8911              	.L647:
3241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 8912              		.loc 1 3242 14
 8913 0064 0123     		movs	r3, #1
 8914 0066 55E0     		b	.L644
 8915              	.L648:
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
3245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8916              		.loc 1 3246 7
 8917 0068 7B68     		ldr	r3, [r7, #4]
 8918 006a 0222     		movs	r2, #2
 8919 006c 83F83F20 		strb	r2, [r3, #63]
3247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8920              		.loc 1 3247 7
 8921 0070 7B68     		ldr	r3, [r7, #4]
 8922 0072 0222     		movs	r2, #2
 8923 0074 83F84320 		strb	r2, [r3, #67]
 8924 0078 1DE0     		b	.L645
 8925              	.L646:
ARM GAS  /tmp//ccJMd58S.s 			page 213


3248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
3251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 8926              		.loc 1 3252 8
 8927 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 8928 007c 012B     		cmp	r3, #1
 8929 007e 08D1     		bne	.L649
3253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
 8930              		.loc 1 3253 9
 8931 0080 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 8932 0082 012B     		cmp	r3, #1
 8933 0084 05D1     		bne	.L649
3254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 8934              		.loc 1 3254 9
 8935 0086 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 8936 0088 012B     		cmp	r3, #1
 8937 008a 02D1     		bne	.L649
3255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
 8938              		.loc 1 3255 9
 8939 008c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 8940 008e 012B     		cmp	r3, #1
 8941 0090 01D0     		beq	.L650
 8942              	.L649:
3256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 8943              		.loc 1 3257 14
 8944 0092 0123     		movs	r3, #1
 8945 0094 3EE0     		b	.L644
 8946              	.L650:
3258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
3260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8947              		.loc 1 3261 7
 8948 0096 7B68     		ldr	r3, [r7, #4]
 8949 0098 0222     		movs	r2, #2
 8950 009a 83F83E20 		strb	r2, [r3, #62]
3262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8951              		.loc 1 3262 7
 8952 009e 7B68     		ldr	r3, [r7, #4]
 8953 00a0 0222     		movs	r2, #2
 8954 00a2 83F83F20 		strb	r2, [r3, #63]
3263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 8955              		.loc 1 3263 7
 8956 00a6 7B68     		ldr	r3, [r7, #4]
 8957 00a8 0222     		movs	r2, #2
 8958 00aa 83F84220 		strb	r2, [r3, #66]
3264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 8959              		.loc 1 3264 7
 8960 00ae 7B68     		ldr	r3, [r7, #4]
 8961 00b0 0222     		movs	r2, #2
 8962 00b2 83F84320 		strb	r2, [r3, #67]
 8963              	.L645:
3265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp//ccJMd58S.s 			page 214


3267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the encoder interface channels */
3269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 8964              		.loc 1 3269 3
 8965 00b6 3B68     		ldr	r3, [r7]
 8966 00b8 002B     		cmp	r3, #0
 8967 00ba 03D0     		beq	.L651
 8968 00bc 3B68     		ldr	r3, [r7]
 8969 00be 042B     		cmp	r3, #4
 8970 00c0 08D0     		beq	.L652
 8971 00c2 0FE0     		b	.L655
 8972              	.L651:
3270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
3272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8973              		.loc 1 3273 7
 8974 00c4 7B68     		ldr	r3, [r7, #4]
 8975 00c6 1B68     		ldr	r3, [r3]
 8976 00c8 0122     		movs	r2, #1
 8977 00ca 0021     		movs	r1, #0
 8978 00cc 1846     		mov	r0, r3
 8979 00ce FFF7FEFF 		bl	TIM_CCxChannelCmd
3274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 8980              		.loc 1 3274 7
 8981 00d2 16E0     		b	.L654
 8982              	.L652:
3275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
3278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8983              		.loc 1 3279 7
 8984 00d4 7B68     		ldr	r3, [r7, #4]
 8985 00d6 1B68     		ldr	r3, [r3]
 8986 00d8 0122     		movs	r2, #1
 8987 00da 0421     		movs	r1, #4
 8988 00dc 1846     		mov	r0, r3
 8989 00de FFF7FEFF 		bl	TIM_CCxChannelCmd
3280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 8990              		.loc 1 3280 7
 8991 00e2 0EE0     		b	.L654
 8992              	.L655:
3281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default :
3284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8993              		.loc 1 3285 7
 8994 00e4 7B68     		ldr	r3, [r7, #4]
 8995 00e6 1B68     		ldr	r3, [r3]
 8996 00e8 0122     		movs	r2, #1
 8997 00ea 0021     		movs	r1, #0
 8998 00ec 1846     		mov	r0, r3
 8999 00ee FFF7FEFF 		bl	TIM_CCxChannelCmd
3286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 9000              		.loc 1 3286 7
ARM GAS  /tmp//ccJMd58S.s 			page 215


 9001 00f2 7B68     		ldr	r3, [r7, #4]
 9002 00f4 1B68     		ldr	r3, [r3]
 9003 00f6 0122     		movs	r2, #1
 9004 00f8 0421     		movs	r1, #4
 9005 00fa 1846     		mov	r0, r3
 9006 00fc FFF7FEFF 		bl	TIM_CCxChannelCmd
3287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 9007              		.loc 1 3287 7
 9008 0100 00BF     		nop
 9009              	.L654:
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral */
3291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 9010              		.loc 1 3291 3
 9011 0102 7B68     		ldr	r3, [r7, #4]
 9012 0104 1B68     		ldr	r3, [r3]
 9013 0106 1A68     		ldr	r2, [r3]
 9014 0108 7B68     		ldr	r3, [r7, #4]
 9015 010a 1B68     		ldr	r3, [r3]
 9016 010c 42F00102 		orr	r2, r2, #1
 9017 0110 1A60     		str	r2, [r3]
3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
3294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 9018              		.loc 1 3294 10
 9019 0112 0023     		movs	r3, #0
 9020              	.L644:
3295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 9021              		.loc 1 3295 1
 9022 0114 1846     		mov	r0, r3
 9023 0116 1037     		adds	r7, r7, #16
 9024              	.LCFI279:
 9025              		.cfi_def_cfa_offset 8
 9026 0118 BD46     		mov	sp, r7
 9027              	.LCFI280:
 9028              		.cfi_def_cfa_register 13
 9029              		@ sp needed
 9030 011a 80BD     		pop	{r7, pc}
 9031              		.cfi_endproc
 9032              	.LFE117:
 9034              		.section	.text.HAL_TIM_Encoder_Stop,"ax",%progbits
 9035              		.align	1
 9036              		.global	HAL_TIM_Encoder_Stop
 9037              		.syntax unified
 9038              		.thumb
 9039              		.thumb_func
 9041              	HAL_TIM_Encoder_Stop:
 9042              	.LFB118:
3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface.
3299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
3301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
ARM GAS  /tmp//ccJMd58S.s 			page 216


3304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
3308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 9043              		.loc 1 3308 1
 9044              		.cfi_startproc
 9045              		@ args = 0, pretend = 0, frame = 8
 9046              		@ frame_needed = 1, uses_anonymous_args = 0
 9047 0000 80B5     		push	{r7, lr}
 9048              	.LCFI281:
 9049              		.cfi_def_cfa_offset 8
 9050              		.cfi_offset 7, -8
 9051              		.cfi_offset 14, -4
 9052 0002 82B0     		sub	sp, sp, #8
 9053              	.LCFI282:
 9054              		.cfi_def_cfa_offset 16
 9055 0004 00AF     		add	r7, sp, #0
 9056              	.LCFI283:
 9057              		.cfi_def_cfa_register 7
 9058 0006 7860     		str	r0, [r7, #4]
 9059 0008 3960     		str	r1, [r7]
3309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
3313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
3314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 9060              		.loc 1 3314 3
 9061 000a 3B68     		ldr	r3, [r7]
 9062 000c 002B     		cmp	r3, #0
 9063 000e 03D0     		beq	.L657
 9064 0010 3B68     		ldr	r3, [r7]
 9065 0012 042B     		cmp	r3, #4
 9066 0014 08D0     		beq	.L658
 9067 0016 0FE0     		b	.L678
 9068              	.L657:
3315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
3317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 9069              		.loc 1 3318 7
 9070 0018 7B68     		ldr	r3, [r7, #4]
 9071 001a 1B68     		ldr	r3, [r3]
 9072 001c 0022     		movs	r2, #0
 9073 001e 0021     		movs	r1, #0
 9074 0020 1846     		mov	r0, r3
 9075 0022 FFF7FEFF 		bl	TIM_CCxChannelCmd
3319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 9076              		.loc 1 3319 7
 9077 0026 16E0     		b	.L660
 9078              	.L658:
3320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
3323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
ARM GAS  /tmp//ccJMd58S.s 			page 217


 9079              		.loc 1 3324 7
 9080 0028 7B68     		ldr	r3, [r7, #4]
 9081 002a 1B68     		ldr	r3, [r3]
 9082 002c 0022     		movs	r2, #0
 9083 002e 0421     		movs	r1, #4
 9084 0030 1846     		mov	r0, r3
 9085 0032 FFF7FEFF 		bl	TIM_CCxChannelCmd
3325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 9086              		.loc 1 3325 7
 9087 0036 0EE0     		b	.L660
 9088              	.L678:
3326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default :
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 9089              		.loc 1 3330 7
 9090 0038 7B68     		ldr	r3, [r7, #4]
 9091 003a 1B68     		ldr	r3, [r3]
 9092 003c 0022     		movs	r2, #0
 9093 003e 0021     		movs	r1, #0
 9094 0040 1846     		mov	r0, r3
 9095 0042 FFF7FEFF 		bl	TIM_CCxChannelCmd
3331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 9096              		.loc 1 3331 7
 9097 0046 7B68     		ldr	r3, [r7, #4]
 9098 0048 1B68     		ldr	r3, [r3]
 9099 004a 0022     		movs	r2, #0
 9100 004c 0421     		movs	r1, #4
 9101 004e 1846     		mov	r0, r3
 9102 0050 FFF7FEFF 		bl	TIM_CCxChannelCmd
3332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 9103              		.loc 1 3332 7
 9104 0054 00BF     		nop
 9105              	.L660:
3333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
3337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 9106              		.loc 1 3337 3
 9107 0056 7B68     		ldr	r3, [r7, #4]
 9108 0058 1B68     		ldr	r3, [r3]
 9109 005a 1A6A     		ldr	r2, [r3, #32]
 9110 005c 41F21113 		movw	r3, #4369
 9111 0060 1340     		ands	r3, r3, r2
 9112 0062 002B     		cmp	r3, #0
 9113 0064 0FD1     		bne	.L661
 9114              		.loc 1 3337 3 is_stmt 0 discriminator 1
 9115 0066 7B68     		ldr	r3, [r7, #4]
 9116 0068 1B68     		ldr	r3, [r3]
 9117 006a 1A6A     		ldr	r2, [r3, #32]
 9118 006c 40F24443 		movw	r3, #1092
 9119 0070 1340     		ands	r3, r3, r2
 9120 0072 002B     		cmp	r3, #0
 9121 0074 07D1     		bne	.L661
 9122              		.loc 1 3337 3 discriminator 2
ARM GAS  /tmp//ccJMd58S.s 			page 218


 9123 0076 7B68     		ldr	r3, [r7, #4]
 9124 0078 1B68     		ldr	r3, [r3]
 9125 007a 1A68     		ldr	r2, [r3]
 9126 007c 7B68     		ldr	r3, [r7, #4]
 9127 007e 1B68     		ldr	r3, [r3]
 9128 0080 22F00102 		bic	r2, r2, #1
 9129 0084 1A60     		str	r2, [r3]
 9130              	.L661:
3338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((Channel == TIM_CHANNEL_1) || (Channel == TIM_CHANNEL_2))
 9131              		.loc 1 3340 6 is_stmt 1
 9132 0086 3B68     		ldr	r3, [r7]
 9133 0088 002B     		cmp	r3, #0
 9134 008a 02D0     		beq	.L662
 9135              		.loc 1 3340 34 discriminator 1
 9136 008c 3B68     		ldr	r3, [r7]
 9137 008e 042B     		cmp	r3, #4
 9138 0090 38D1     		bne	.L663
 9139              	.L662:
3341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 9140              		.loc 1 3342 5
 9141 0092 3B68     		ldr	r3, [r7]
 9142 0094 002B     		cmp	r3, #0
 9143 0096 04D1     		bne	.L664
 9144              		.loc 1 3342 5 is_stmt 0 discriminator 1
 9145 0098 7B68     		ldr	r3, [r7, #4]
 9146 009a 0122     		movs	r2, #1
 9147 009c 83F83E20 		strb	r2, [r3, #62]
 9148 00a0 13E0     		b	.L665
 9149              	.L664:
 9150              		.loc 1 3342 5 discriminator 2
 9151 00a2 3B68     		ldr	r3, [r7]
 9152 00a4 042B     		cmp	r3, #4
 9153 00a6 04D1     		bne	.L666
 9154              		.loc 1 3342 5 discriminator 3
 9155 00a8 7B68     		ldr	r3, [r7, #4]
 9156 00aa 0122     		movs	r2, #1
 9157 00ac 83F83F20 		strb	r2, [r3, #63]
 9158 00b0 0BE0     		b	.L665
 9159              	.L666:
 9160              		.loc 1 3342 5 discriminator 4
 9161 00b2 3B68     		ldr	r3, [r7]
 9162 00b4 082B     		cmp	r3, #8
 9163 00b6 04D1     		bne	.L668
 9164              		.loc 1 3342 5 discriminator 6
 9165 00b8 7B68     		ldr	r3, [r7, #4]
 9166 00ba 0122     		movs	r2, #1
 9167 00bc 83F84020 		strb	r2, [r3, #64]
 9168 00c0 03E0     		b	.L665
 9169              	.L668:
 9170              		.loc 1 3342 5 discriminator 7
 9171 00c2 7B68     		ldr	r3, [r7, #4]
 9172 00c4 0122     		movs	r2, #1
 9173 00c6 83F84120 		strb	r2, [r3, #65]
 9174              	.L665:
ARM GAS  /tmp//ccJMd58S.s 			page 219


3343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 9175              		.loc 1 3343 5 is_stmt 1
 9176 00ca 3B68     		ldr	r3, [r7]
 9177 00cc 002B     		cmp	r3, #0
 9178 00ce 04D1     		bne	.L670
 9179              		.loc 1 3343 5 is_stmt 0 discriminator 1
 9180 00d0 7B68     		ldr	r3, [r7, #4]
 9181 00d2 0122     		movs	r2, #1
 9182 00d4 83F84220 		strb	r2, [r3, #66]
 9183              		.loc 1 3343 5
 9184 00d8 24E0     		b	.L676
 9185              	.L670:
 9186              		.loc 1 3343 5 discriminator 2
 9187 00da 3B68     		ldr	r3, [r7]
 9188 00dc 042B     		cmp	r3, #4
 9189 00de 04D1     		bne	.L672
 9190              		.loc 1 3343 5 discriminator 3
 9191 00e0 7B68     		ldr	r3, [r7, #4]
 9192 00e2 0122     		movs	r2, #1
 9193 00e4 83F84320 		strb	r2, [r3, #67]
 9194              		.loc 1 3343 5
 9195 00e8 1CE0     		b	.L676
 9196              	.L672:
 9197              		.loc 1 3343 5 discriminator 4
 9198 00ea 3B68     		ldr	r3, [r7]
 9199 00ec 082B     		cmp	r3, #8
 9200 00ee 04D1     		bne	.L674
 9201              		.loc 1 3343 5 discriminator 6
 9202 00f0 7B68     		ldr	r3, [r7, #4]
 9203 00f2 0122     		movs	r2, #1
 9204 00f4 83F84420 		strb	r2, [r3, #68]
 9205              		.loc 1 3343 5
 9206 00f8 14E0     		b	.L676
 9207              	.L674:
 9208              		.loc 1 3343 5 discriminator 7
 9209 00fa 7B68     		ldr	r3, [r7, #4]
 9210 00fc 0122     		movs	r2, #1
 9211 00fe 83F84520 		strb	r2, [r3, #69]
 9212              		.loc 1 3343 5
 9213 0102 0FE0     		b	.L676
 9214              	.L663:
3344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
3346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 9215              		.loc 1 3347 5 is_stmt 1
 9216 0104 7B68     		ldr	r3, [r7, #4]
 9217 0106 0122     		movs	r2, #1
 9218 0108 83F83E20 		strb	r2, [r3, #62]
3348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 9219              		.loc 1 3348 5
 9220 010c 7B68     		ldr	r3, [r7, #4]
 9221 010e 0122     		movs	r2, #1
 9222 0110 83F83F20 		strb	r2, [r3, #63]
3349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 9223              		.loc 1 3349 5
 9224 0114 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 220


 9225 0116 0122     		movs	r2, #1
 9226 0118 83F84220 		strb	r2, [r3, #66]
3350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 9227              		.loc 1 3350 5
 9228 011c 7B68     		ldr	r3, [r7, #4]
 9229 011e 0122     		movs	r2, #1
 9230 0120 83F84320 		strb	r2, [r3, #67]
 9231              	.L676:
3351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
3354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 9232              		.loc 1 3354 10
 9233 0124 0023     		movs	r3, #0
3355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 9234              		.loc 1 3355 1
 9235 0126 1846     		mov	r0, r3
 9236 0128 0837     		adds	r7, r7, #8
 9237              	.LCFI284:
 9238              		.cfi_def_cfa_offset 8
 9239 012a BD46     		mov	sp, r7
 9240              	.LCFI285:
 9241              		.cfi_def_cfa_register 13
 9242              		@ sp needed
 9243 012c 80BD     		pop	{r7, pc}
 9244              		.cfi_endproc
 9245              	.LFE118:
 9247              		.section	.text.HAL_TIM_Encoder_Start_IT,"ax",%progbits
 9248              		.align	1
 9249              		.global	HAL_TIM_Encoder_Start_IT
 9250              		.syntax unified
 9251              		.thumb
 9252              		.thumb_func
 9254              	HAL_TIM_Encoder_Start_IT:
 9255              	.LFB119:
3356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in interrupt mode.
3359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
3361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
3368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 9256              		.loc 1 3368 1
 9257              		.cfi_startproc
 9258              		@ args = 0, pretend = 0, frame = 16
 9259              		@ frame_needed = 1, uses_anonymous_args = 0
 9260 0000 80B5     		push	{r7, lr}
 9261              	.LCFI286:
 9262              		.cfi_def_cfa_offset 8
 9263              		.cfi_offset 7, -8
 9264              		.cfi_offset 14, -4
ARM GAS  /tmp//ccJMd58S.s 			page 221


 9265 0002 84B0     		sub	sp, sp, #16
 9266              	.LCFI287:
 9267              		.cfi_def_cfa_offset 24
 9268 0004 00AF     		add	r7, sp, #0
 9269              	.LCFI288:
 9270              		.cfi_def_cfa_register 7
 9271 0006 7860     		str	r0, [r7, #4]
 9272 0008 3960     		str	r1, [r7]
3369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
 9273              		.loc 1 3369 31
 9274 000a 7B68     		ldr	r3, [r7, #4]
 9275 000c 93F83E30 		ldrb	r3, [r3, #62]
 9276 0010 FB73     		strb	r3, [r7, #15]
3370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
 9277              		.loc 1 3370 31
 9278 0012 7B68     		ldr	r3, [r7, #4]
 9279 0014 93F83F30 		ldrb	r3, [r3, #63]
 9280 0018 BB73     		strb	r3, [r7, #14]
3371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 9281              		.loc 1 3371 31
 9282 001a 7B68     		ldr	r3, [r7, #4]
 9283 001c 93F84230 		ldrb	r3, [r3, #66]
 9284 0020 7B73     		strb	r3, [r7, #13]
3372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 9285              		.loc 1 3372 31
 9286 0022 7B68     		ldr	r3, [r7, #4]
 9287 0024 93F84330 		ldrb	r3, [r3, #67]
 9288 0028 3B73     		strb	r3, [r7, #12]
3373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
 9289              		.loc 1 3378 6
 9290 002a 3B68     		ldr	r3, [r7]
 9291 002c 002B     		cmp	r3, #0
 9292 002e 10D1     		bne	.L680
3379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 9293              		.loc 1 3380 8
 9294 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 9295 0032 012B     		cmp	r3, #1
 9296 0034 02D1     		bne	.L681
3381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY))
 9297              		.loc 1 3381 9
 9298 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 9299 0038 012B     		cmp	r3, #1
 9300 003a 01D0     		beq	.L682
 9301              	.L681:
3382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 9302              		.loc 1 3383 14
 9303 003c 0123     		movs	r3, #1
 9304 003e 89E0     		b	.L683
 9305              	.L682:
3384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
ARM GAS  /tmp//ccJMd58S.s 			page 222


3385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
3386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 9306              		.loc 1 3387 7
 9307 0040 7B68     		ldr	r3, [r7, #4]
 9308 0042 0222     		movs	r2, #2
 9309 0044 83F83E20 		strb	r2, [r3, #62]
3388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 9310              		.loc 1 3388 7
 9311 0048 7B68     		ldr	r3, [r7, #4]
 9312 004a 0222     		movs	r2, #2
 9313 004c 83F84220 		strb	r2, [r3, #66]
 9314 0050 31E0     		b	.L684
 9315              	.L680:
3389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
 9316              		.loc 1 3391 11
 9317 0052 3B68     		ldr	r3, [r7]
 9318 0054 042B     		cmp	r3, #4
 9319 0056 10D1     		bne	.L685
3392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
 9320              		.loc 1 3393 8
 9321 0058 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 9322 005a 012B     		cmp	r3, #1
 9323 005c 02D1     		bne	.L686
3394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
 9324              		.loc 1 3394 9
 9325 005e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 9326 0060 012B     		cmp	r3, #1
 9327 0062 01D0     		beq	.L687
 9328              	.L686:
3395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 9329              		.loc 1 3396 14
 9330 0064 0123     		movs	r3, #1
 9331 0066 75E0     		b	.L683
 9332              	.L687:
3397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
3399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 9333              		.loc 1 3400 7
 9334 0068 7B68     		ldr	r3, [r7, #4]
 9335 006a 0222     		movs	r2, #2
 9336 006c 83F83F20 		strb	r2, [r3, #63]
3401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 9337              		.loc 1 3401 7
 9338 0070 7B68     		ldr	r3, [r7, #4]
 9339 0072 0222     		movs	r2, #2
 9340 0074 83F84320 		strb	r2, [r3, #67]
 9341 0078 1DE0     		b	.L684
 9342              	.L685:
3402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
ARM GAS  /tmp//ccJMd58S.s 			page 223


3405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 9343              		.loc 1 3406 8
 9344 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 9345 007c 012B     		cmp	r3, #1
 9346 007e 08D1     		bne	.L688
3407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (channel_2_state != HAL_TIM_CHANNEL_STATE_READY)
 9347              		.loc 1 3407 9
 9348 0080 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 9349 0082 012B     		cmp	r3, #1
 9350 0084 05D1     		bne	.L688
3408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_1_state != HAL_TIM_CHANNEL_STATE_READY)
 9351              		.loc 1 3408 9
 9352 0086 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 9353 0088 012B     		cmp	r3, #1
 9354 008a 02D1     		bne	.L688
3409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_2_state != HAL_TIM_CHANNEL_STATE_READY))
 9355              		.loc 1 3409 9
 9356 008c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 9357 008e 012B     		cmp	r3, #1
 9358 0090 01D0     		beq	.L689
 9359              	.L688:
3410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 9360              		.loc 1 3411 14
 9361 0092 0123     		movs	r3, #1
 9362 0094 5EE0     		b	.L683
 9363              	.L689:
3412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
3414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 9364              		.loc 1 3415 7
 9365 0096 7B68     		ldr	r3, [r7, #4]
 9366 0098 0222     		movs	r2, #2
 9367 009a 83F83E20 		strb	r2, [r3, #62]
3416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 9368              		.loc 1 3416 7
 9369 009e 7B68     		ldr	r3, [r7, #4]
 9370 00a0 0222     		movs	r2, #2
 9371 00a2 83F83F20 		strb	r2, [r3, #63]
3417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 9372              		.loc 1 3417 7
 9373 00a6 7B68     		ldr	r3, [r7, #4]
 9374 00a8 0222     		movs	r2, #2
 9375 00aa 83F84220 		strb	r2, [r3, #66]
3418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 9376              		.loc 1 3418 7
 9377 00ae 7B68     		ldr	r3, [r7, #4]
 9378 00b0 0222     		movs	r2, #2
 9379 00b2 83F84320 		strb	r2, [r3, #67]
 9380              	.L684:
3419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the encoder interface channels */
3423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the capture compare Interrupts 1 and/or 2 */
ARM GAS  /tmp//ccJMd58S.s 			page 224


3424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 9381              		.loc 1 3424 3
 9382 00b6 3B68     		ldr	r3, [r7]
 9383 00b8 002B     		cmp	r3, #0
 9384 00ba 03D0     		beq	.L690
 9385 00bc 3B68     		ldr	r3, [r7]
 9386 00be 042B     		cmp	r3, #4
 9387 00c0 10D0     		beq	.L691
 9388 00c2 1FE0     		b	.L694
 9389              	.L690:
3425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
3427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 9390              		.loc 1 3428 7
 9391 00c4 7B68     		ldr	r3, [r7, #4]
 9392 00c6 1B68     		ldr	r3, [r3]
 9393 00c8 0122     		movs	r2, #1
 9394 00ca 0021     		movs	r1, #0
 9395 00cc 1846     		mov	r0, r3
 9396 00ce FFF7FEFF 		bl	TIM_CCxChannelCmd
3429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 9397              		.loc 1 3429 7
 9398 00d2 7B68     		ldr	r3, [r7, #4]
 9399 00d4 1B68     		ldr	r3, [r3]
 9400 00d6 DA68     		ldr	r2, [r3, #12]
 9401 00d8 7B68     		ldr	r3, [r7, #4]
 9402 00da 1B68     		ldr	r3, [r3]
 9403 00dc 42F00202 		orr	r2, r2, #2
 9404 00e0 DA60     		str	r2, [r3, #12]
3430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 9405              		.loc 1 3430 7
 9406 00e2 2EE0     		b	.L693
 9407              	.L691:
3431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
3434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 9408              		.loc 1 3435 7
 9409 00e4 7B68     		ldr	r3, [r7, #4]
 9410 00e6 1B68     		ldr	r3, [r3]
 9411 00e8 0122     		movs	r2, #1
 9412 00ea 0421     		movs	r1, #4
 9413 00ec 1846     		mov	r0, r3
 9414 00ee FFF7FEFF 		bl	TIM_CCxChannelCmd
3436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 9415              		.loc 1 3436 7
 9416 00f2 7B68     		ldr	r3, [r7, #4]
 9417 00f4 1B68     		ldr	r3, [r3]
 9418 00f6 DA68     		ldr	r2, [r3, #12]
 9419 00f8 7B68     		ldr	r3, [r7, #4]
 9420 00fa 1B68     		ldr	r3, [r3]
 9421 00fc 42F00402 		orr	r2, r2, #4
 9422 0100 DA60     		str	r2, [r3, #12]
3437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 9423              		.loc 1 3437 7
ARM GAS  /tmp//ccJMd58S.s 			page 225


 9424 0102 1EE0     		b	.L693
 9425              	.L694:
3438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default :
3441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 9426              		.loc 1 3442 7
 9427 0104 7B68     		ldr	r3, [r7, #4]
 9428 0106 1B68     		ldr	r3, [r3]
 9429 0108 0122     		movs	r2, #1
 9430 010a 0021     		movs	r1, #0
 9431 010c 1846     		mov	r0, r3
 9432 010e FFF7FEFF 		bl	TIM_CCxChannelCmd
3443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 9433              		.loc 1 3443 7
 9434 0112 7B68     		ldr	r3, [r7, #4]
 9435 0114 1B68     		ldr	r3, [r3]
 9436 0116 0122     		movs	r2, #1
 9437 0118 0421     		movs	r1, #4
 9438 011a 1846     		mov	r0, r3
 9439 011c FFF7FEFF 		bl	TIM_CCxChannelCmd
3444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 9440              		.loc 1 3444 7
 9441 0120 7B68     		ldr	r3, [r7, #4]
 9442 0122 1B68     		ldr	r3, [r3]
 9443 0124 DA68     		ldr	r2, [r3, #12]
 9444 0126 7B68     		ldr	r3, [r7, #4]
 9445 0128 1B68     		ldr	r3, [r3]
 9446 012a 42F00202 		orr	r2, r2, #2
 9447 012e DA60     		str	r2, [r3, #12]
3445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 9448              		.loc 1 3445 7
 9449 0130 7B68     		ldr	r3, [r7, #4]
 9450 0132 1B68     		ldr	r3, [r3]
 9451 0134 DA68     		ldr	r2, [r3, #12]
 9452 0136 7B68     		ldr	r3, [r7, #4]
 9453 0138 1B68     		ldr	r3, [r3]
 9454 013a 42F00402 		orr	r2, r2, #4
 9455 013e DA60     		str	r2, [r3, #12]
3446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 9456              		.loc 1 3446 7
 9457 0140 00BF     		nop
 9458              	.L693:
3447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable the Peripheral */
3451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 9459              		.loc 1 3451 3
 9460 0142 7B68     		ldr	r3, [r7, #4]
 9461 0144 1B68     		ldr	r3, [r3]
 9462 0146 1A68     		ldr	r2, [r3]
 9463 0148 7B68     		ldr	r3, [r7, #4]
 9464 014a 1B68     		ldr	r3, [r3]
 9465 014c 42F00102 		orr	r2, r2, #1
 9466 0150 1A60     		str	r2, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 226


3452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
3454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 9467              		.loc 1 3454 10
 9468 0152 0023     		movs	r3, #0
 9469              	.L683:
3455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 9470              		.loc 1 3455 1
 9471 0154 1846     		mov	r0, r3
 9472 0156 1037     		adds	r7, r7, #16
 9473              	.LCFI289:
 9474              		.cfi_def_cfa_offset 8
 9475 0158 BD46     		mov	sp, r7
 9476              	.LCFI290:
 9477              		.cfi_def_cfa_register 13
 9478              		@ sp needed
 9479 015a 80BD     		pop	{r7, pc}
 9480              		.cfi_endproc
 9481              	.LFE119:
 9483              		.section	.text.HAL_TIM_Encoder_Stop_IT,"ax",%progbits
 9484              		.align	1
 9485              		.global	HAL_TIM_Encoder_Stop_IT
 9486              		.syntax unified
 9487              		.thumb
 9488              		.thumb_func
 9490              	HAL_TIM_Encoder_Stop_IT:
 9491              	.LFB120:
3456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in interrupt mode.
3459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be disabled
3461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
3468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 9492              		.loc 1 3468 1
 9493              		.cfi_startproc
 9494              		@ args = 0, pretend = 0, frame = 8
 9495              		@ frame_needed = 1, uses_anonymous_args = 0
 9496 0000 80B5     		push	{r7, lr}
 9497              	.LCFI291:
 9498              		.cfi_def_cfa_offset 8
 9499              		.cfi_offset 7, -8
 9500              		.cfi_offset 14, -4
 9501 0002 82B0     		sub	sp, sp, #8
 9502              	.LCFI292:
 9503              		.cfi_def_cfa_offset 16
 9504 0004 00AF     		add	r7, sp, #0
 9505              	.LCFI293:
 9506              		.cfi_def_cfa_register 7
 9507 0006 7860     		str	r0, [r7, #4]
 9508 0008 3960     		str	r1, [r7]
ARM GAS  /tmp//ccJMd58S.s 			page 227


3469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
3473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
3474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
 9509              		.loc 1 3474 6
 9510 000a 3B68     		ldr	r3, [r7]
 9511 000c 002B     		cmp	r3, #0
 9512 000e 0FD1     		bne	.L696
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 9513              		.loc 1 3476 5
 9514 0010 7B68     		ldr	r3, [r7, #4]
 9515 0012 1B68     		ldr	r3, [r3]
 9516 0014 0022     		movs	r2, #0
 9517 0016 0021     		movs	r1, #0
 9518 0018 1846     		mov	r0, r3
 9519 001a FFF7FEFF 		bl	TIM_CCxChannelCmd
3477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1 */
3479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 9520              		.loc 1 3479 5
 9521 001e 7B68     		ldr	r3, [r7, #4]
 9522 0020 1B68     		ldr	r3, [r3]
 9523 0022 DA68     		ldr	r2, [r3, #12]
 9524 0024 7B68     		ldr	r3, [r7, #4]
 9525 0026 1B68     		ldr	r3, [r3]
 9526 0028 22F00202 		bic	r2, r2, #2
 9527 002c DA60     		str	r2, [r3, #12]
 9528 002e 30E0     		b	.L697
 9529              	.L696:
3480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
 9530              		.loc 1 3481 11
 9531 0030 3B68     		ldr	r3, [r7]
 9532 0032 042B     		cmp	r3, #4
 9533 0034 0FD1     		bne	.L698
3482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 9534              		.loc 1 3483 5
 9535 0036 7B68     		ldr	r3, [r7, #4]
 9536 0038 1B68     		ldr	r3, [r3]
 9537 003a 0022     		movs	r2, #0
 9538 003c 0421     		movs	r1, #4
 9539 003e 1846     		mov	r0, r3
 9540 0040 FFF7FEFF 		bl	TIM_CCxChannelCmd
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare Interrupts 2 */
3486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 9541              		.loc 1 3486 5
 9542 0044 7B68     		ldr	r3, [r7, #4]
 9543 0046 1B68     		ldr	r3, [r3]
 9544 0048 DA68     		ldr	r2, [r3, #12]
 9545 004a 7B68     		ldr	r3, [r7, #4]
 9546 004c 1B68     		ldr	r3, [r3]
 9547 004e 22F00402 		bic	r2, r2, #4
ARM GAS  /tmp//ccJMd58S.s 			page 228


 9548 0052 DA60     		str	r2, [r3, #12]
 9549 0054 1DE0     		b	.L697
 9550              	.L698:
3487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
3489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 9551              		.loc 1 3490 5
 9552 0056 7B68     		ldr	r3, [r7, #4]
 9553 0058 1B68     		ldr	r3, [r3]
 9554 005a 0022     		movs	r2, #0
 9555 005c 0021     		movs	r1, #0
 9556 005e 1846     		mov	r0, r3
 9557 0060 FFF7FEFF 		bl	TIM_CCxChannelCmd
3491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 9558              		.loc 1 3491 5
 9559 0064 7B68     		ldr	r3, [r7, #4]
 9560 0066 1B68     		ldr	r3, [r3]
 9561 0068 0022     		movs	r2, #0
 9562 006a 0421     		movs	r1, #4
 9563 006c 1846     		mov	r0, r3
 9564 006e FFF7FEFF 		bl	TIM_CCxChannelCmd
3492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1 and 2 */
3494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 9565              		.loc 1 3494 5
 9566 0072 7B68     		ldr	r3, [r7, #4]
 9567 0074 1B68     		ldr	r3, [r3]
 9568 0076 DA68     		ldr	r2, [r3, #12]
 9569 0078 7B68     		ldr	r3, [r7, #4]
 9570 007a 1B68     		ldr	r3, [r3]
 9571 007c 22F00202 		bic	r2, r2, #2
 9572 0080 DA60     		str	r2, [r3, #12]
3495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 9573              		.loc 1 3495 5
 9574 0082 7B68     		ldr	r3, [r7, #4]
 9575 0084 1B68     		ldr	r3, [r3]
 9576 0086 DA68     		ldr	r2, [r3, #12]
 9577 0088 7B68     		ldr	r3, [r7, #4]
 9578 008a 1B68     		ldr	r3, [r3]
 9579 008c 22F00402 		bic	r2, r2, #4
 9580 0090 DA60     		str	r2, [r3, #12]
 9581              	.L697:
3496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
3499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 9582              		.loc 1 3499 3
 9583 0092 7B68     		ldr	r3, [r7, #4]
 9584 0094 1B68     		ldr	r3, [r3]
 9585 0096 1A6A     		ldr	r2, [r3, #32]
 9586 0098 41F21113 		movw	r3, #4369
 9587 009c 1340     		ands	r3, r3, r2
 9588 009e 002B     		cmp	r3, #0
 9589 00a0 0FD1     		bne	.L699
 9590              		.loc 1 3499 3 is_stmt 0 discriminator 1
 9591 00a2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 229


 9592 00a4 1B68     		ldr	r3, [r3]
 9593 00a6 1A6A     		ldr	r2, [r3, #32]
 9594 00a8 40F24443 		movw	r3, #1092
 9595 00ac 1340     		ands	r3, r3, r2
 9596 00ae 002B     		cmp	r3, #0
 9597 00b0 07D1     		bne	.L699
 9598              		.loc 1 3499 3 discriminator 2
 9599 00b2 7B68     		ldr	r3, [r7, #4]
 9600 00b4 1B68     		ldr	r3, [r3]
 9601 00b6 1A68     		ldr	r2, [r3]
 9602 00b8 7B68     		ldr	r3, [r7, #4]
 9603 00ba 1B68     		ldr	r3, [r3]
 9604 00bc 22F00102 		bic	r2, r2, #1
 9605 00c0 1A60     		str	r2, [r3]
 9606              	.L699:
3500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((Channel == TIM_CHANNEL_1) || (Channel == TIM_CHANNEL_2))
 9607              		.loc 1 3502 6 is_stmt 1
 9608 00c2 3B68     		ldr	r3, [r7]
 9609 00c4 002B     		cmp	r3, #0
 9610 00c6 02D0     		beq	.L700
 9611              		.loc 1 3502 34 discriminator 1
 9612 00c8 3B68     		ldr	r3, [r7]
 9613 00ca 042B     		cmp	r3, #4
 9614 00cc 38D1     		bne	.L701
 9615              	.L700:
3503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 9616              		.loc 1 3504 5
 9617 00ce 3B68     		ldr	r3, [r7]
 9618 00d0 002B     		cmp	r3, #0
 9619 00d2 04D1     		bne	.L702
 9620              		.loc 1 3504 5 is_stmt 0 discriminator 1
 9621 00d4 7B68     		ldr	r3, [r7, #4]
 9622 00d6 0122     		movs	r2, #1
 9623 00d8 83F83E20 		strb	r2, [r3, #62]
 9624 00dc 13E0     		b	.L703
 9625              	.L702:
 9626              		.loc 1 3504 5 discriminator 2
 9627 00de 3B68     		ldr	r3, [r7]
 9628 00e0 042B     		cmp	r3, #4
 9629 00e2 04D1     		bne	.L704
 9630              		.loc 1 3504 5 discriminator 3
 9631 00e4 7B68     		ldr	r3, [r7, #4]
 9632 00e6 0122     		movs	r2, #1
 9633 00e8 83F83F20 		strb	r2, [r3, #63]
 9634 00ec 0BE0     		b	.L703
 9635              	.L704:
 9636              		.loc 1 3504 5 discriminator 4
 9637 00ee 3B68     		ldr	r3, [r7]
 9638 00f0 082B     		cmp	r3, #8
 9639 00f2 04D1     		bne	.L706
 9640              		.loc 1 3504 5 discriminator 6
 9641 00f4 7B68     		ldr	r3, [r7, #4]
 9642 00f6 0122     		movs	r2, #1
 9643 00f8 83F84020 		strb	r2, [r3, #64]
ARM GAS  /tmp//ccJMd58S.s 			page 230


 9644 00fc 03E0     		b	.L703
 9645              	.L706:
 9646              		.loc 1 3504 5 discriminator 7
 9647 00fe 7B68     		ldr	r3, [r7, #4]
 9648 0100 0122     		movs	r2, #1
 9649 0102 83F84120 		strb	r2, [r3, #65]
 9650              	.L703:
3505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 9651              		.loc 1 3505 5 is_stmt 1
 9652 0106 3B68     		ldr	r3, [r7]
 9653 0108 002B     		cmp	r3, #0
 9654 010a 04D1     		bne	.L708
 9655              		.loc 1 3505 5 is_stmt 0 discriminator 1
 9656 010c 7B68     		ldr	r3, [r7, #4]
 9657 010e 0122     		movs	r2, #1
 9658 0110 83F84220 		strb	r2, [r3, #66]
 9659              		.loc 1 3505 5
 9660 0114 24E0     		b	.L714
 9661              	.L708:
 9662              		.loc 1 3505 5 discriminator 2
 9663 0116 3B68     		ldr	r3, [r7]
 9664 0118 042B     		cmp	r3, #4
 9665 011a 04D1     		bne	.L710
 9666              		.loc 1 3505 5 discriminator 3
 9667 011c 7B68     		ldr	r3, [r7, #4]
 9668 011e 0122     		movs	r2, #1
 9669 0120 83F84320 		strb	r2, [r3, #67]
 9670              		.loc 1 3505 5
 9671 0124 1CE0     		b	.L714
 9672              	.L710:
 9673              		.loc 1 3505 5 discriminator 4
 9674 0126 3B68     		ldr	r3, [r7]
 9675 0128 082B     		cmp	r3, #8
 9676 012a 04D1     		bne	.L712
 9677              		.loc 1 3505 5 discriminator 6
 9678 012c 7B68     		ldr	r3, [r7, #4]
 9679 012e 0122     		movs	r2, #1
 9680 0130 83F84420 		strb	r2, [r3, #68]
 9681              		.loc 1 3505 5
 9682 0134 14E0     		b	.L714
 9683              	.L712:
 9684              		.loc 1 3505 5 discriminator 7
 9685 0136 7B68     		ldr	r3, [r7, #4]
 9686 0138 0122     		movs	r2, #1
 9687 013a 83F84520 		strb	r2, [r3, #69]
 9688              		.loc 1 3505 5
 9689 013e 0FE0     		b	.L714
 9690              	.L701:
3506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
3508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 9691              		.loc 1 3509 5 is_stmt 1
 9692 0140 7B68     		ldr	r3, [r7, #4]
 9693 0142 0122     		movs	r2, #1
 9694 0144 83F83E20 		strb	r2, [r3, #62]
3510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
ARM GAS  /tmp//ccJMd58S.s 			page 231


 9695              		.loc 1 3510 5
 9696 0148 7B68     		ldr	r3, [r7, #4]
 9697 014a 0122     		movs	r2, #1
 9698 014c 83F83F20 		strb	r2, [r3, #63]
3511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 9699              		.loc 1 3511 5
 9700 0150 7B68     		ldr	r3, [r7, #4]
 9701 0152 0122     		movs	r2, #1
 9702 0154 83F84220 		strb	r2, [r3, #66]
3512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 9703              		.loc 1 3512 5
 9704 0158 7B68     		ldr	r3, [r7, #4]
 9705 015a 0122     		movs	r2, #1
 9706 015c 83F84320 		strb	r2, [r3, #67]
 9707              	.L714:
3513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
3516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 9708              		.loc 1 3516 10
 9709 0160 0023     		movs	r3, #0
3517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 9710              		.loc 1 3517 1
 9711 0162 1846     		mov	r0, r3
 9712 0164 0837     		adds	r7, r7, #8
 9713              	.LCFI294:
 9714              		.cfi_def_cfa_offset 8
 9715 0166 BD46     		mov	sp, r7
 9716              	.LCFI295:
 9717              		.cfi_def_cfa_register 13
 9718              		@ sp needed
 9719 0168 80BD     		pop	{r7, pc}
 9720              		.cfi_endproc
 9721              	.LFE120:
 9723              		.section	.text.HAL_TIM_Encoder_Start_DMA,"ax",%progbits
 9724              		.align	1
 9725              		.global	HAL_TIM_Encoder_Start_DMA
 9726              		.syntax unified
 9727              		.thumb
 9728              		.thumb_func
 9730              	HAL_TIM_Encoder_Start_DMA:
 9731              	.LFB121:
3518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in DMA mode.
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
3523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  pData1 The destination Buffer address for IC1.
3528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  pData2 The destination Buffer address for IC2.
3529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Length The length of data to be transferred from TIM peripheral to memory.
3530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pD
ARM GAS  /tmp//ccJMd58S.s 			page 232


3533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                             uint32_t *pData2, uint16_t Length)
3534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 9732              		.loc 1 3534 1
 9733              		.cfi_startproc
 9734              		@ args = 4, pretend = 0, frame = 24
 9735              		@ frame_needed = 1, uses_anonymous_args = 0
 9736 0000 80B5     		push	{r7, lr}
 9737              	.LCFI296:
 9738              		.cfi_def_cfa_offset 8
 9739              		.cfi_offset 7, -8
 9740              		.cfi_offset 14, -4
 9741 0002 86B0     		sub	sp, sp, #24
 9742              	.LCFI297:
 9743              		.cfi_def_cfa_offset 32
 9744 0004 00AF     		add	r7, sp, #0
 9745              	.LCFI298:
 9746              		.cfi_def_cfa_register 7
 9747 0006 F860     		str	r0, [r7, #12]
 9748 0008 B960     		str	r1, [r7, #8]
 9749 000a 7A60     		str	r2, [r7, #4]
 9750 000c 3B60     		str	r3, [r7]
3535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_1_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_1);
 9751              		.loc 1 3535 31
 9752 000e FB68     		ldr	r3, [r7, #12]
 9753 0010 93F83E30 		ldrb	r3, [r3, #62]
 9754 0014 FB75     		strb	r3, [r7, #23]
3536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_2_state = TIM_CHANNEL_STATE_GET(htim, TIM_CHANNEL_2);
 9755              		.loc 1 3536 31
 9756 0016 FB68     		ldr	r3, [r7, #12]
 9757 0018 93F83F30 		ldrb	r3, [r3, #63]
 9758 001c BB75     		strb	r3, [r7, #22]
3537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_1_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 9759              		.loc 1 3537 31
 9760 001e FB68     		ldr	r3, [r7, #12]
 9761 0020 93F84230 		ldrb	r3, [r3, #66]
 9762 0024 7B75     		strb	r3, [r7, #21]
3538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef complementary_channel_2_state = TIM_CHANNEL_N_STATE_GET(htim, TIM_CHA
 9763              		.loc 1 3538 31
 9764 0026 FB68     		ldr	r3, [r7, #12]
 9765 0028 93F84330 		ldrb	r3, [r3, #67]
 9766 002c 3B75     		strb	r3, [r7, #20]
3539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
3542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
 9767              		.loc 1 3544 6
 9768 002e BB68     		ldr	r3, [r7, #8]
 9769 0030 002B     		cmp	r3, #0
 9770 0032 20D1     		bne	.L717
3545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((channel_1_state == HAL_TIM_CHANNEL_STATE_BUSY)
 9771              		.loc 1 3546 8
 9772 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9773 0036 022B     		cmp	r3, #2
 9774 0038 02D0     		beq	.L718
ARM GAS  /tmp//ccJMd58S.s 			page 233


3547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_1_state == HAL_TIM_CHANNEL_STATE_BUSY))
 9775              		.loc 1 3547 9
 9776 003a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 9777 003c 022B     		cmp	r3, #2
 9778 003e 01D1     		bne	.L719
 9779              	.L718:
3548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_BUSY;
 9780              		.loc 1 3549 14
 9781 0040 0223     		movs	r3, #2
 9782 0042 3FE1     		b	.L720
 9783              	.L719:
3550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else if ((channel_1_state == HAL_TIM_CHANNEL_STATE_READY)
 9784              		.loc 1 3551 13
 9785 0044 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9786 0046 012B     		cmp	r3, #1
 9787 0048 13D1     		bne	.L721
3552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****              && (complementary_channel_1_state == HAL_TIM_CHANNEL_STATE_READY))
 9788              		.loc 1 3552 14
 9789 004a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 9790 004c 012B     		cmp	r3, #1
 9791 004e 10D1     		bne	.L721
3553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if ((pData1 == NULL) || (Length == 0U))
 9792              		.loc 1 3554 10
 9793 0050 7B68     		ldr	r3, [r7, #4]
 9794 0052 002B     		cmp	r3, #0
 9795 0054 02D0     		beq	.L722
 9796              		.loc 1 3554 28 discriminator 1
 9797 0056 3B8C     		ldrh	r3, [r7, #32]
 9798 0058 002B     		cmp	r3, #0
 9799 005a 01D1     		bne	.L723
 9800              	.L722:
3555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 9801              		.loc 1 3556 16
 9802 005c 0123     		movs	r3, #1
 9803 005e 31E1     		b	.L720
 9804              	.L723:
3557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       else
3559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 9805              		.loc 1 3560 9
 9806 0060 FB68     		ldr	r3, [r7, #12]
 9807 0062 0222     		movs	r2, #2
 9808 0064 83F83E20 		strb	r2, [r3, #62]
3561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 9809              		.loc 1 3561 9
 9810 0068 FB68     		ldr	r3, [r7, #12]
 9811 006a 0222     		movs	r2, #2
 9812 006c 83F84220 		strb	r2, [r3, #66]
3554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
 9813              		.loc 1 3554 10
 9814 0070 5DE0     		b	.L725
 9815              	.L721:
ARM GAS  /tmp//ccJMd58S.s 			page 234


3562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
3565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 9816              		.loc 1 3566 14
 9817 0072 0123     		movs	r3, #1
 9818 0074 26E1     		b	.L720
 9819              	.L717:
3567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
 9820              		.loc 1 3569 11
 9821 0076 BB68     		ldr	r3, [r7, #8]
 9822 0078 042B     		cmp	r3, #4
 9823 007a 20D1     		bne	.L726
3570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((channel_2_state == HAL_TIM_CHANNEL_STATE_BUSY)
 9824              		.loc 1 3571 8
 9825 007c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9826 007e 022B     		cmp	r3, #2
 9827 0080 02D0     		beq	.L727
3572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_2_state == HAL_TIM_CHANNEL_STATE_BUSY))
 9828              		.loc 1 3572 9
 9829 0082 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 9830 0084 022B     		cmp	r3, #2
 9831 0086 01D1     		bne	.L728
 9832              	.L727:
3573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_BUSY;
 9833              		.loc 1 3574 14
 9834 0088 0223     		movs	r3, #2
 9835 008a 1BE1     		b	.L720
 9836              	.L728:
3575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else if ((channel_2_state == HAL_TIM_CHANNEL_STATE_READY)
 9837              		.loc 1 3576 13
 9838 008c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9839 008e 012B     		cmp	r3, #1
 9840 0090 13D1     		bne	.L729
3577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****              && (complementary_channel_2_state == HAL_TIM_CHANNEL_STATE_READY))
 9841              		.loc 1 3577 14
 9842 0092 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 9843 0094 012B     		cmp	r3, #1
 9844 0096 10D1     		bne	.L729
3578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if ((pData2 == NULL) || (Length == 0U))
 9845              		.loc 1 3579 10
 9846 0098 3B68     		ldr	r3, [r7]
 9847 009a 002B     		cmp	r3, #0
 9848 009c 02D0     		beq	.L730
 9849              		.loc 1 3579 28 discriminator 1
 9850 009e 3B8C     		ldrh	r3, [r7, #32]
 9851 00a0 002B     		cmp	r3, #0
 9852 00a2 01D1     		bne	.L731
 9853              	.L730:
3580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
ARM GAS  /tmp//ccJMd58S.s 			page 235


3581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 9854              		.loc 1 3581 16
 9855 00a4 0123     		movs	r3, #1
 9856 00a6 0DE1     		b	.L720
 9857              	.L731:
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       else
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 9858              		.loc 1 3585 9
 9859 00a8 FB68     		ldr	r3, [r7, #12]
 9860 00aa 0222     		movs	r2, #2
 9861 00ac 83F83F20 		strb	r2, [r3, #63]
3586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 9862              		.loc 1 3586 9
 9863 00b0 FB68     		ldr	r3, [r7, #12]
 9864 00b2 0222     		movs	r2, #2
 9865 00b4 83F84320 		strb	r2, [r3, #67]
3579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
 9866              		.loc 1 3579 10
 9867 00b8 39E0     		b	.L725
 9868              	.L729:
3587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
3590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 9869              		.loc 1 3591 14
 9870 00ba 0123     		movs	r3, #1
 9871 00bc 02E1     		b	.L720
 9872              	.L726:
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
3595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((channel_1_state == HAL_TIM_CHANNEL_STATE_BUSY)
 9873              		.loc 1 3596 8
 9874 00be FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9875 00c0 022B     		cmp	r3, #2
 9876 00c2 08D0     		beq	.L733
3597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (channel_2_state == HAL_TIM_CHANNEL_STATE_BUSY)
 9877              		.loc 1 3597 9
 9878 00c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9879 00c6 022B     		cmp	r3, #2
 9880 00c8 05D0     		beq	.L733
3598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_1_state == HAL_TIM_CHANNEL_STATE_BUSY)
 9881              		.loc 1 3598 9
 9882 00ca 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 9883 00cc 022B     		cmp	r3, #2
 9884 00ce 02D0     		beq	.L733
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         || (complementary_channel_2_state == HAL_TIM_CHANNEL_STATE_BUSY))
 9885              		.loc 1 3599 9
 9886 00d0 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 9887 00d2 022B     		cmp	r3, #2
 9888 00d4 01D1     		bne	.L734
 9889              	.L733:
3600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
ARM GAS  /tmp//ccJMd58S.s 			page 236


3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_BUSY;
 9890              		.loc 1 3601 14
 9891 00d6 0223     		movs	r3, #2
 9892 00d8 F4E0     		b	.L720
 9893              	.L734:
3602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else if ((channel_1_state == HAL_TIM_CHANNEL_STATE_READY)
 9894              		.loc 1 3603 13
 9895 00da FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9896 00dc 012B     		cmp	r3, #1
 9897 00de 24D1     		bne	.L735
3604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****              && (channel_2_state == HAL_TIM_CHANNEL_STATE_READY)
 9898              		.loc 1 3604 14
 9899 00e0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9900 00e2 012B     		cmp	r3, #1
 9901 00e4 21D1     		bne	.L735
3605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****              && (complementary_channel_1_state == HAL_TIM_CHANNEL_STATE_READY)
 9902              		.loc 1 3605 14
 9903 00e6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 9904 00e8 012B     		cmp	r3, #1
 9905 00ea 1ED1     		bne	.L735
3606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****              && (complementary_channel_2_state == HAL_TIM_CHANNEL_STATE_READY))
 9906              		.loc 1 3606 14
 9907 00ec 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 9908 00ee 012B     		cmp	r3, #1
 9909 00f0 1BD1     		bne	.L735
3607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if ((((pData1 == NULL) || (pData2 == NULL))) || (Length == 0U))
 9910              		.loc 1 3608 10
 9911 00f2 7B68     		ldr	r3, [r7, #4]
 9912 00f4 002B     		cmp	r3, #0
 9913 00f6 05D0     		beq	.L736
 9914              		.loc 1 3608 30 discriminator 1
 9915 00f8 3B68     		ldr	r3, [r7]
 9916 00fa 002B     		cmp	r3, #0
 9917 00fc 02D0     		beq	.L736
 9918              		.loc 1 3608 52 discriminator 2
 9919 00fe 3B8C     		ldrh	r3, [r7, #32]
 9920 0100 002B     		cmp	r3, #0
 9921 0102 01D1     		bne	.L737
 9922              	.L736:
3609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 9923              		.loc 1 3610 16
 9924 0104 0123     		movs	r3, #1
 9925 0106 DDE0     		b	.L720
 9926              	.L737:
3611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       else
3613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 9927              		.loc 1 3614 9
 9928 0108 FB68     		ldr	r3, [r7, #12]
 9929 010a 0222     		movs	r2, #2
 9930 010c 83F83E20 		strb	r2, [r3, #62]
3615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 9931              		.loc 1 3615 9
ARM GAS  /tmp//ccJMd58S.s 			page 237


 9932 0110 FB68     		ldr	r3, [r7, #12]
 9933 0112 0222     		movs	r2, #2
 9934 0114 83F83F20 		strb	r2, [r3, #63]
3616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_BUSY);
 9935              		.loc 1 3616 9
 9936 0118 FB68     		ldr	r3, [r7, #12]
 9937 011a 0222     		movs	r2, #2
 9938 011c 83F84220 		strb	r2, [r3, #66]
3617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_BUSY);
 9939              		.loc 1 3617 9
 9940 0120 FB68     		ldr	r3, [r7, #12]
 9941 0122 0222     		movs	r2, #2
 9942 0124 83F84320 		strb	r2, [r3, #67]
3608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
 9943              		.loc 1 3608 10
 9944 0128 01E0     		b	.L725
 9945              	.L735:
3618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
3621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 9946              		.loc 1 3622 14
 9947 012a 0123     		movs	r3, #1
 9948 012c CAE0     		b	.L720
 9949              	.L725:
3623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 9950              		.loc 1 3626 3
 9951 012e BB68     		ldr	r3, [r7, #8]
 9952 0130 002B     		cmp	r3, #0
 9953 0132 03D0     		beq	.L738
 9954 0134 BB68     		ldr	r3, [r7, #8]
 9955 0136 042B     		cmp	r3, #4
 9956 0138 33D0     		beq	.L739
 9957 013a 65E0     		b	.L746
 9958              	.L738:
3627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
3629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 9959              		.loc 1 3631 17
 9960 013c FB68     		ldr	r3, [r7, #12]
 9961 013e 5B6A     		ldr	r3, [r3, #36]
 9962              		.loc 1 3631 52
 9963 0140 624A     		ldr	r2, .L747
 9964 0142 9A62     		str	r2, [r3, #40]
3632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 9965              		.loc 1 3632 17
 9966 0144 FB68     		ldr	r3, [r7, #12]
 9967 0146 5B6A     		ldr	r3, [r3, #36]
 9968              		.loc 1 3632 56
 9969 0148 614A     		ldr	r2, .L747+4
 9970 014a DA62     		str	r2, [r3, #44]
ARM GAS  /tmp//ccJMd58S.s 			page 238


3633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 9971              		.loc 1 3635 17
 9972 014c FB68     		ldr	r3, [r7, #12]
 9973 014e 5B6A     		ldr	r3, [r3, #36]
 9974              		.loc 1 3635 53
 9975 0150 604A     		ldr	r2, .L747+8
 9976 0152 1A63     		str	r2, [r3, #48]
3636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)p
 9977              		.loc 1 3638 11
 9978 0154 FB68     		ldr	r3, [r7, #12]
 9979 0156 586A     		ldr	r0, [r3, #36]
 9980              		.loc 1 3638 71
 9981 0158 FB68     		ldr	r3, [r7, #12]
 9982 015a 1B68     		ldr	r3, [r3]
 9983              		.loc 1 3638 66
 9984 015c 3433     		adds	r3, r3, #52
 9985              		.loc 1 3638 11
 9986 015e 1946     		mov	r1, r3
 9987 0160 7A68     		ldr	r2, [r7, #4]
 9988 0162 3B8C     		ldrh	r3, [r7, #32]
 9989 0164 FFF7FEFF 		bl	HAL_DMA_Start_IT
 9990 0168 0346     		mov	r3, r0
 9991              		.loc 1 3638 10 discriminator 1
 9992 016a 002B     		cmp	r3, #0
 9993 016c 01D0     		beq	.L741
3639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
3640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
3642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 9994              		.loc 1 3642 16
 9995 016e 0123     		movs	r3, #1
 9996 0170 A8E0     		b	.L720
 9997              	.L741:
3643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Input Capture DMA request */
3645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 9998              		.loc 1 3645 7
 9999 0172 FB68     		ldr	r3, [r7, #12]
 10000 0174 1B68     		ldr	r3, [r3]
 10001 0176 DA68     		ldr	r2, [r3, #12]
 10002 0178 FB68     		ldr	r3, [r7, #12]
 10003 017a 1B68     		ldr	r3, [r3]
 10004 017c 42F40072 		orr	r2, r2, #512
 10005 0180 DA60     		str	r2, [r3, #12]
3646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the Capture compare channel */
3648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 10006              		.loc 1 3648 7
 10007 0182 FB68     		ldr	r3, [r7, #12]
 10008 0184 1B68     		ldr	r3, [r3]
 10009 0186 0122     		movs	r2, #1
 10010 0188 0021     		movs	r1, #0
 10011 018a 1846     		mov	r0, r3
ARM GAS  /tmp//ccJMd58S.s 			page 239


 10012 018c FFF7FEFF 		bl	TIM_CCxChannelCmd
3649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the Peripheral */
3651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 10013              		.loc 1 3651 7
 10014 0190 FB68     		ldr	r3, [r7, #12]
 10015 0192 1B68     		ldr	r3, [r3]
 10016 0194 1A68     		ldr	r2, [r3]
 10017 0196 FB68     		ldr	r3, [r7, #12]
 10018 0198 1B68     		ldr	r3, [r3]
 10019 019a 42F00102 		orr	r2, r2, #1
 10020 019e 1A60     		str	r2, [r3]
3652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 10021              		.loc 1 3653 7
 10022 01a0 8FE0     		b	.L742
 10023              	.L739:
3654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
3657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 10024              		.loc 1 3659 17
 10025 01a2 FB68     		ldr	r3, [r7, #12]
 10026 01a4 9B6A     		ldr	r3, [r3, #40]
 10027              		.loc 1 3659 52
 10028 01a6 494A     		ldr	r2, .L747
 10029 01a8 9A62     		str	r2, [r3, #40]
3660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 10030              		.loc 1 3660 17
 10031 01aa FB68     		ldr	r3, [r7, #12]
 10032 01ac 9B6A     		ldr	r3, [r3, #40]
 10033              		.loc 1 3660 56
 10034 01ae 484A     		ldr	r2, .L747+4
 10035 01b0 DA62     		str	r2, [r3, #44]
3661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError;
 10036              		.loc 1 3663 17
 10037 01b2 FB68     		ldr	r3, [r7, #12]
 10038 01b4 9B6A     		ldr	r3, [r3, #40]
 10039              		.loc 1 3663 53
 10040 01b6 474A     		ldr	r2, .L747+8
 10041 01b8 1A63     		str	r2, [r3, #48]
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)p
 10042              		.loc 1 3665 11
 10043 01ba FB68     		ldr	r3, [r7, #12]
 10044 01bc 986A     		ldr	r0, [r3, #40]
 10045              		.loc 1 3665 71
 10046 01be FB68     		ldr	r3, [r7, #12]
 10047 01c0 1B68     		ldr	r3, [r3]
 10048              		.loc 1 3665 66
 10049 01c2 3833     		adds	r3, r3, #56
 10050              		.loc 1 3665 11
 10051 01c4 1946     		mov	r1, r3
ARM GAS  /tmp//ccJMd58S.s 			page 240


 10052 01c6 3A68     		ldr	r2, [r7]
 10053 01c8 3B8C     		ldrh	r3, [r7, #32]
 10054 01ca FFF7FEFF 		bl	HAL_DMA_Start_IT
 10055 01ce 0346     		mov	r3, r0
 10056              		.loc 1 3665 10 discriminator 1
 10057 01d0 002B     		cmp	r3, #0
 10058 01d2 01D0     		beq	.L743
3666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
3667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
3669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 10059              		.loc 1 3669 16
 10060 01d4 0123     		movs	r3, #1
 10061 01d6 75E0     		b	.L720
 10062              	.L743:
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
3672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 10063              		.loc 1 3672 7
 10064 01d8 FB68     		ldr	r3, [r7, #12]
 10065 01da 1B68     		ldr	r3, [r3]
 10066 01dc DA68     		ldr	r2, [r3, #12]
 10067 01de FB68     		ldr	r3, [r7, #12]
 10068 01e0 1B68     		ldr	r3, [r3]
 10069 01e2 42F48062 		orr	r2, r2, #1024
 10070 01e6 DA60     		str	r2, [r3, #12]
3673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the Capture compare channel */
3675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 10071              		.loc 1 3675 7
 10072 01e8 FB68     		ldr	r3, [r7, #12]
 10073 01ea 1B68     		ldr	r3, [r3]
 10074 01ec 0122     		movs	r2, #1
 10075 01ee 0421     		movs	r1, #4
 10076 01f0 1846     		mov	r0, r3
 10077 01f2 FFF7FEFF 		bl	TIM_CCxChannelCmd
3676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the Peripheral */
3678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 10078              		.loc 1 3678 7
 10079 01f6 FB68     		ldr	r3, [r7, #12]
 10080 01f8 1B68     		ldr	r3, [r3]
 10081 01fa 1A68     		ldr	r2, [r3]
 10082 01fc FB68     		ldr	r3, [r7, #12]
 10083 01fe 1B68     		ldr	r3, [r3]
 10084 0200 42F00102 		orr	r2, r2, #1
 10085 0204 1A60     		str	r2, [r3]
3679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 10086              		.loc 1 3680 7
 10087 0206 5CE0     		b	.L742
 10088              	.L746:
3681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
3684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
ARM GAS  /tmp//ccJMd58S.s 			page 241


3686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 10089              		.loc 1 3686 17
 10090 0208 FB68     		ldr	r3, [r7, #12]
 10091 020a 5B6A     		ldr	r3, [r3, #36]
 10092              		.loc 1 3686 52
 10093 020c 2F4A     		ldr	r2, .L747
 10094 020e 9A62     		str	r2, [r3, #40]
3687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 10095              		.loc 1 3687 17
 10096 0210 FB68     		ldr	r3, [r7, #12]
 10097 0212 5B6A     		ldr	r3, [r3, #36]
 10098              		.loc 1 3687 56
 10099 0214 2E4A     		ldr	r2, .L747+4
 10100 0216 DA62     		str	r2, [r3, #44]
3688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 10101              		.loc 1 3690 17
 10102 0218 FB68     		ldr	r3, [r7, #12]
 10103 021a 5B6A     		ldr	r3, [r3, #36]
 10104              		.loc 1 3690 53
 10105 021c 2D4A     		ldr	r2, .L747+8
 10106 021e 1A63     		str	r2, [r3, #48]
3691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)p
 10107              		.loc 1 3693 11
 10108 0220 FB68     		ldr	r3, [r7, #12]
 10109 0222 586A     		ldr	r0, [r3, #36]
 10110              		.loc 1 3693 71
 10111 0224 FB68     		ldr	r3, [r7, #12]
 10112 0226 1B68     		ldr	r3, [r3]
 10113              		.loc 1 3693 66
 10114 0228 3433     		adds	r3, r3, #52
 10115              		.loc 1 3693 11
 10116 022a 1946     		mov	r1, r3
 10117 022c 7A68     		ldr	r2, [r7, #4]
 10118 022e 3B8C     		ldrh	r3, [r7, #32]
 10119 0230 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10120 0234 0346     		mov	r3, r0
 10121              		.loc 1 3693 10 discriminator 1
 10122 0236 002B     		cmp	r3, #0
 10123 0238 01D0     		beq	.L744
3694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
3695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
3697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 10124              		.loc 1 3697 16
 10125 023a 0123     		movs	r3, #1
 10126 023c 42E0     		b	.L720
 10127              	.L744:
3698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
3701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 10128              		.loc 1 3701 17
 10129 023e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 242


 10130 0240 9B6A     		ldr	r3, [r3, #40]
 10131              		.loc 1 3701 52
 10132 0242 224A     		ldr	r2, .L747
 10133 0244 9A62     		str	r2, [r3, #40]
3702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 10134              		.loc 1 3702 17
 10135 0246 FB68     		ldr	r3, [r7, #12]
 10136 0248 9B6A     		ldr	r3, [r3, #40]
 10137              		.loc 1 3702 56
 10138 024a 214A     		ldr	r2, .L747+4
 10139 024c DA62     		str	r2, [r3, #44]
3703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
3705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 10140              		.loc 1 3705 17
 10141 024e FB68     		ldr	r3, [r7, #12]
 10142 0250 9B6A     		ldr	r3, [r3, #40]
 10143              		.loc 1 3705 53
 10144 0252 204A     		ldr	r2, .L747+8
 10145 0254 1A63     		str	r2, [r3, #48]
3706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
3708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)p
 10146              		.loc 1 3708 11
 10147 0256 FB68     		ldr	r3, [r7, #12]
 10148 0258 986A     		ldr	r0, [r3, #40]
 10149              		.loc 1 3708 71
 10150 025a FB68     		ldr	r3, [r7, #12]
 10151 025c 1B68     		ldr	r3, [r3]
 10152              		.loc 1 3708 66
 10153 025e 3833     		adds	r3, r3, #56
 10154              		.loc 1 3708 11
 10155 0260 1946     		mov	r1, r3
 10156 0262 3A68     		ldr	r2, [r7]
 10157 0264 3B8C     		ldrh	r3, [r7, #32]
 10158 0266 FFF7FEFF 		bl	HAL_DMA_Start_IT
 10159 026a 0346     		mov	r3, r0
 10160              		.loc 1 3708 10 discriminator 1
 10161 026c 002B     		cmp	r3, #0
 10162 026e 01D0     		beq	.L745
3709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            Length) != HAL_OK)
3710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
3712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 10163              		.loc 1 3712 16
 10164 0270 0123     		movs	r3, #1
 10165 0272 27E0     		b	.L720
 10166              	.L745:
3713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
3716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 10167              		.loc 1 3716 7
 10168 0274 FB68     		ldr	r3, [r7, #12]
 10169 0276 1B68     		ldr	r3, [r3]
 10170 0278 DA68     		ldr	r2, [r3, #12]
 10171 027a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 243


 10172 027c 1B68     		ldr	r3, [r3]
 10173 027e 42F40072 		orr	r2, r2, #512
 10174 0282 DA60     		str	r2, [r3, #12]
3717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
3718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 10175              		.loc 1 3718 7
 10176 0284 FB68     		ldr	r3, [r7, #12]
 10177 0286 1B68     		ldr	r3, [r3]
 10178 0288 DA68     		ldr	r2, [r3, #12]
 10179 028a FB68     		ldr	r3, [r7, #12]
 10180 028c 1B68     		ldr	r3, [r3]
 10181 028e 42F48062 		orr	r2, r2, #1024
 10182 0292 DA60     		str	r2, [r3, #12]
3719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the Capture compare channel */
3721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 10183              		.loc 1 3721 7
 10184 0294 FB68     		ldr	r3, [r7, #12]
 10185 0296 1B68     		ldr	r3, [r3]
 10186 0298 0122     		movs	r2, #1
 10187 029a 0021     		movs	r1, #0
 10188 029c 1846     		mov	r0, r3
 10189 029e FFF7FEFF 		bl	TIM_CCxChannelCmd
3722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 10190              		.loc 1 3722 7
 10191 02a2 FB68     		ldr	r3, [r7, #12]
 10192 02a4 1B68     		ldr	r3, [r3]
 10193 02a6 0122     		movs	r2, #1
 10194 02a8 0421     		movs	r1, #4
 10195 02aa 1846     		mov	r0, r3
 10196 02ac FFF7FEFF 		bl	TIM_CCxChannelCmd
3723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the Peripheral */
3725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 10197              		.loc 1 3725 7
 10198 02b0 FB68     		ldr	r3, [r7, #12]
 10199 02b2 1B68     		ldr	r3, [r3]
 10200 02b4 1A68     		ldr	r2, [r3]
 10201 02b6 FB68     		ldr	r3, [r7, #12]
 10202 02b8 1B68     		ldr	r3, [r3]
 10203 02ba 42F00102 		orr	r2, r2, #1
 10204 02be 1A60     		str	r2, [r3]
3726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 10205              		.loc 1 3727 7
 10206 02c0 00BF     		nop
 10207              	.L742:
3728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
3732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 10208              		.loc 1 3732 10
 10209 02c2 0023     		movs	r3, #0
 10210              	.L720:
3733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 10211              		.loc 1 3733 1
ARM GAS  /tmp//ccJMd58S.s 			page 244


 10212 02c4 1846     		mov	r0, r3
 10213 02c6 1837     		adds	r7, r7, #24
 10214              	.LCFI299:
 10215              		.cfi_def_cfa_offset 8
 10216 02c8 BD46     		mov	sp, r7
 10217              	.LCFI300:
 10218              		.cfi_def_cfa_register 13
 10219              		@ sp needed
 10220 02ca 80BD     		pop	{r7, pc}
 10221              	.L748:
 10222              		.align	2
 10223              	.L747:
 10224 02cc 00000000 		.word	TIM_DMACaptureCplt
 10225 02d0 00000000 		.word	TIM_DMACaptureHalfCplt
 10226 02d4 00000000 		.word	TIM_DMAError
 10227              		.cfi_endproc
 10228              	.LFE121:
 10230              		.section	.text.HAL_TIM_Encoder_Stop_DMA,"ax",%progbits
 10231              		.align	1
 10232              		.global	HAL_TIM_Encoder_Stop_DMA
 10233              		.syntax unified
 10234              		.thumb
 10235              		.thumb_func
 10237              	HAL_TIM_Encoder_Stop_DMA:
 10238              	.LFB122:
3734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in DMA mode.
3737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
3738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
3739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
3740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
3743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
3744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
3746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 10239              		.loc 1 3746 1
 10240              		.cfi_startproc
 10241              		@ args = 0, pretend = 0, frame = 8
 10242              		@ frame_needed = 1, uses_anonymous_args = 0
 10243 0000 80B5     		push	{r7, lr}
 10244              	.LCFI301:
 10245              		.cfi_def_cfa_offset 8
 10246              		.cfi_offset 7, -8
 10247              		.cfi_offset 14, -4
 10248 0002 82B0     		sub	sp, sp, #8
 10249              	.LCFI302:
 10250              		.cfi_def_cfa_offset 16
 10251 0004 00AF     		add	r7, sp, #0
 10252              	.LCFI303:
 10253              		.cfi_def_cfa_register 7
 10254 0006 7860     		str	r0, [r7, #4]
 10255 0008 3960     		str	r1, [r7]
3747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
3748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_INTERFACE_INSTANCE(htim->Instance));
ARM GAS  /tmp//ccJMd58S.s 			page 245


3749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
3751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
3752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
 10256              		.loc 1 3752 6
 10257 000a 3B68     		ldr	r3, [r7]
 10258 000c 002B     		cmp	r3, #0
 10259 000e 14D1     		bne	.L750
3753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 10260              		.loc 1 3754 5
 10261 0010 7B68     		ldr	r3, [r7, #4]
 10262 0012 1B68     		ldr	r3, [r3]
 10263 0014 0022     		movs	r2, #0
 10264 0016 0021     		movs	r1, #0
 10265 0018 1846     		mov	r0, r3
 10266 001a FFF7FEFF 		bl	TIM_CCxChannelCmd
3755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1 */
3757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 10267              		.loc 1 3757 5
 10268 001e 7B68     		ldr	r3, [r7, #4]
 10269 0020 1B68     		ldr	r3, [r3]
 10270 0022 DA68     		ldr	r2, [r3, #12]
 10271 0024 7B68     		ldr	r3, [r7, #4]
 10272 0026 1B68     		ldr	r3, [r3]
 10273 0028 22F40072 		bic	r2, r2, #512
 10274 002c DA60     		str	r2, [r3, #12]
3758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 10275              		.loc 1 3758 11
 10276 002e 7B68     		ldr	r3, [r7, #4]
 10277 0030 5B6A     		ldr	r3, [r3, #36]
 10278 0032 1846     		mov	r0, r3
 10279 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 10280 0038 3FE0     		b	.L751
 10281              	.L750:
3759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
 10282              		.loc 1 3760 11
 10283 003a 3B68     		ldr	r3, [r7]
 10284 003c 042B     		cmp	r3, #4
 10285 003e 14D1     		bne	.L752
3761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 10286              		.loc 1 3762 5
 10287 0040 7B68     		ldr	r3, [r7, #4]
 10288 0042 1B68     		ldr	r3, [r3]
 10289 0044 0022     		movs	r2, #0
 10290 0046 0421     		movs	r1, #4
 10291 0048 1846     		mov	r0, r3
 10292 004a FFF7FEFF 		bl	TIM_CCxChannelCmd
3763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare DMA Request 2 */
3765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 10293              		.loc 1 3765 5
 10294 004e 7B68     		ldr	r3, [r7, #4]
 10295 0050 1B68     		ldr	r3, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 246


 10296 0052 DA68     		ldr	r2, [r3, #12]
 10297 0054 7B68     		ldr	r3, [r7, #4]
 10298 0056 1B68     		ldr	r3, [r3]
 10299 0058 22F48062 		bic	r2, r2, #1024
 10300 005c DA60     		str	r2, [r3, #12]
3766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 10301              		.loc 1 3766 11
 10302 005e 7B68     		ldr	r3, [r7, #4]
 10303 0060 9B6A     		ldr	r3, [r3, #40]
 10304 0062 1846     		mov	r0, r3
 10305 0064 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 10306 0068 27E0     		b	.L751
 10307              	.L752:
3767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
3769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 10308              		.loc 1 3770 5
 10309 006a 7B68     		ldr	r3, [r7, #4]
 10310 006c 1B68     		ldr	r3, [r3]
 10311 006e 0022     		movs	r2, #0
 10312 0070 0021     		movs	r1, #0
 10313 0072 1846     		mov	r0, r3
 10314 0074 FFF7FEFF 		bl	TIM_CCxChannelCmd
3771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 10315              		.loc 1 3771 5
 10316 0078 7B68     		ldr	r3, [r7, #4]
 10317 007a 1B68     		ldr	r3, [r3]
 10318 007c 0022     		movs	r2, #0
 10319 007e 0421     		movs	r1, #4
 10320 0080 1846     		mov	r0, r3
 10321 0082 FFF7FEFF 		bl	TIM_CCxChannelCmd
3772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1 and 2 */
3774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 10322              		.loc 1 3774 5
 10323 0086 7B68     		ldr	r3, [r7, #4]
 10324 0088 1B68     		ldr	r3, [r3]
 10325 008a DA68     		ldr	r2, [r3, #12]
 10326 008c 7B68     		ldr	r3, [r7, #4]
 10327 008e 1B68     		ldr	r3, [r3]
 10328 0090 22F40072 		bic	r2, r2, #512
 10329 0094 DA60     		str	r2, [r3, #12]
3775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 10330              		.loc 1 3775 5
 10331 0096 7B68     		ldr	r3, [r7, #4]
 10332 0098 1B68     		ldr	r3, [r3]
 10333 009a DA68     		ldr	r2, [r3, #12]
 10334 009c 7B68     		ldr	r3, [r7, #4]
 10335 009e 1B68     		ldr	r3, [r3]
 10336 00a0 22F48062 		bic	r2, r2, #1024
 10337 00a4 DA60     		str	r2, [r3, #12]
3776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 10338              		.loc 1 3776 11
 10339 00a6 7B68     		ldr	r3, [r7, #4]
 10340 00a8 5B6A     		ldr	r3, [r3, #36]
 10341 00aa 1846     		mov	r0, r3
ARM GAS  /tmp//ccJMd58S.s 			page 247


 10342 00ac FFF7FEFF 		bl	HAL_DMA_Abort_IT
3777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 10343              		.loc 1 3777 11
 10344 00b0 7B68     		ldr	r3, [r7, #4]
 10345 00b2 9B6A     		ldr	r3, [r3, #40]
 10346 00b4 1846     		mov	r0, r3
 10347 00b6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 10348              	.L751:
3778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Peripheral */
3781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 10349              		.loc 1 3781 3
 10350 00ba 7B68     		ldr	r3, [r7, #4]
 10351 00bc 1B68     		ldr	r3, [r3]
 10352 00be 1A6A     		ldr	r2, [r3, #32]
 10353 00c0 41F21113 		movw	r3, #4369
 10354 00c4 1340     		ands	r3, r3, r2
 10355 00c6 002B     		cmp	r3, #0
 10356 00c8 0FD1     		bne	.L753
 10357              		.loc 1 3781 3 is_stmt 0 discriminator 1
 10358 00ca 7B68     		ldr	r3, [r7, #4]
 10359 00cc 1B68     		ldr	r3, [r3]
 10360 00ce 1A6A     		ldr	r2, [r3, #32]
 10361 00d0 40F24443 		movw	r3, #1092
 10362 00d4 1340     		ands	r3, r3, r2
 10363 00d6 002B     		cmp	r3, #0
 10364 00d8 07D1     		bne	.L753
 10365              		.loc 1 3781 3 discriminator 2
 10366 00da 7B68     		ldr	r3, [r7, #4]
 10367 00dc 1B68     		ldr	r3, [r3]
 10368 00de 1A68     		ldr	r2, [r3]
 10369 00e0 7B68     		ldr	r3, [r7, #4]
 10370 00e2 1B68     		ldr	r3, [r3]
 10371 00e4 22F00102 		bic	r2, r2, #1
 10372 00e8 1A60     		str	r2, [r3]
 10373              	.L753:
3782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TIM channel(s) state */
3784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((Channel == TIM_CHANNEL_1) || (Channel == TIM_CHANNEL_2))
 10374              		.loc 1 3784 6 is_stmt 1
 10375 00ea 3B68     		ldr	r3, [r7]
 10376 00ec 002B     		cmp	r3, #0
 10377 00ee 02D0     		beq	.L754
 10378              		.loc 1 3784 34 discriminator 1
 10379 00f0 3B68     		ldr	r3, [r7]
 10380 00f2 042B     		cmp	r3, #4
 10381 00f4 38D1     		bne	.L755
 10382              	.L754:
3785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 10383              		.loc 1 3786 5
 10384 00f6 3B68     		ldr	r3, [r7]
 10385 00f8 002B     		cmp	r3, #0
 10386 00fa 04D1     		bne	.L756
 10387              		.loc 1 3786 5 is_stmt 0 discriminator 1
 10388 00fc 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 248


 10389 00fe 0122     		movs	r2, #1
 10390 0100 83F83E20 		strb	r2, [r3, #62]
 10391 0104 13E0     		b	.L757
 10392              	.L756:
 10393              		.loc 1 3786 5 discriminator 2
 10394 0106 3B68     		ldr	r3, [r7]
 10395 0108 042B     		cmp	r3, #4
 10396 010a 04D1     		bne	.L758
 10397              		.loc 1 3786 5 discriminator 3
 10398 010c 7B68     		ldr	r3, [r7, #4]
 10399 010e 0122     		movs	r2, #1
 10400 0110 83F83F20 		strb	r2, [r3, #63]
 10401 0114 0BE0     		b	.L757
 10402              	.L758:
 10403              		.loc 1 3786 5 discriminator 4
 10404 0116 3B68     		ldr	r3, [r7]
 10405 0118 082B     		cmp	r3, #8
 10406 011a 04D1     		bne	.L760
 10407              		.loc 1 3786 5 discriminator 6
 10408 011c 7B68     		ldr	r3, [r7, #4]
 10409 011e 0122     		movs	r2, #1
 10410 0120 83F84020 		strb	r2, [r3, #64]
 10411 0124 03E0     		b	.L757
 10412              	.L760:
 10413              		.loc 1 3786 5 discriminator 7
 10414 0126 7B68     		ldr	r3, [r7, #4]
 10415 0128 0122     		movs	r2, #1
 10416 012a 83F84120 		strb	r2, [r3, #65]
 10417              	.L757:
3787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 10418              		.loc 1 3787 5 is_stmt 1
 10419 012e 3B68     		ldr	r3, [r7]
 10420 0130 002B     		cmp	r3, #0
 10421 0132 04D1     		bne	.L762
 10422              		.loc 1 3787 5 is_stmt 0 discriminator 1
 10423 0134 7B68     		ldr	r3, [r7, #4]
 10424 0136 0122     		movs	r2, #1
 10425 0138 83F84220 		strb	r2, [r3, #66]
 10426              		.loc 1 3787 5
 10427 013c 24E0     		b	.L768
 10428              	.L762:
 10429              		.loc 1 3787 5 discriminator 2
 10430 013e 3B68     		ldr	r3, [r7]
 10431 0140 042B     		cmp	r3, #4
 10432 0142 04D1     		bne	.L764
 10433              		.loc 1 3787 5 discriminator 3
 10434 0144 7B68     		ldr	r3, [r7, #4]
 10435 0146 0122     		movs	r2, #1
 10436 0148 83F84320 		strb	r2, [r3, #67]
 10437              		.loc 1 3787 5
 10438 014c 1CE0     		b	.L768
 10439              	.L764:
 10440              		.loc 1 3787 5 discriminator 4
 10441 014e 3B68     		ldr	r3, [r7]
 10442 0150 082B     		cmp	r3, #8
 10443 0152 04D1     		bne	.L766
 10444              		.loc 1 3787 5 discriminator 6
ARM GAS  /tmp//ccJMd58S.s 			page 249


 10445 0154 7B68     		ldr	r3, [r7, #4]
 10446 0156 0122     		movs	r2, #1
 10447 0158 83F84420 		strb	r2, [r3, #68]
 10448              		.loc 1 3787 5
 10449 015c 14E0     		b	.L768
 10450              	.L766:
 10451              		.loc 1 3787 5 discriminator 7
 10452 015e 7B68     		ldr	r3, [r7, #4]
 10453 0160 0122     		movs	r2, #1
 10454 0162 83F84520 		strb	r2, [r3, #69]
 10455              		.loc 1 3787 5
 10456 0166 0FE0     		b	.L768
 10457              	.L755:
3788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
3790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 10458              		.loc 1 3791 5 is_stmt 1
 10459 0168 7B68     		ldr	r3, [r7, #4]
 10460 016a 0122     		movs	r2, #1
 10461 016c 83F83E20 		strb	r2, [r3, #62]
3792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 10462              		.loc 1 3792 5
 10463 0170 7B68     		ldr	r3, [r7, #4]
 10464 0172 0122     		movs	r2, #1
 10465 0174 83F83F20 		strb	r2, [r3, #63]
3793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 10466              		.loc 1 3793 5
 10467 0178 7B68     		ldr	r3, [r7, #4]
 10468 017a 0122     		movs	r2, #1
 10469 017c 83F84220 		strb	r2, [r3, #66]
3794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 10470              		.loc 1 3794 5
 10471 0180 7B68     		ldr	r3, [r7, #4]
 10472 0182 0122     		movs	r2, #1
 10473 0184 83F84320 		strb	r2, [r3, #67]
 10474              	.L768:
3795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
3798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 10475              		.loc 1 3798 10
 10476 0188 0023     		movs	r3, #0
3799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 10477              		.loc 1 3799 1
 10478 018a 1846     		mov	r0, r3
 10479 018c 0837     		adds	r7, r7, #8
 10480              	.LCFI304:
 10481              		.cfi_def_cfa_offset 8
 10482 018e BD46     		mov	sp, r7
 10483              	.LCFI305:
 10484              		.cfi_def_cfa_register 13
 10485              		@ sp needed
 10486 0190 80BD     		pop	{r7, pc}
 10487              		.cfi_endproc
 10488              	.LFE122:
 10490              		.section	.text.HAL_TIM_IRQHandler,"ax",%progbits
ARM GAS  /tmp//ccJMd58S.s 			page 250


 10491              		.align	1
 10492              		.global	HAL_TIM_IRQHandler
 10493              		.syntax unified
 10494              		.thumb
 10495              		.thumb_func
 10497              	HAL_TIM_IRQHandler:
 10498              	.LFB123:
3800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
3803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group7 TIM IRQ handler management
3805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief    TIM IRQ handler management
3806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
3807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
3808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
3809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         ##### IRQ handler management #####
3810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
3811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   [..]
3812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     This section provides Timer IRQ handler function.
3813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
3815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
3816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
3818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  This function handles TIM interrupts requests.
3819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM  handle
3820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
3821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
3822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
3823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 10499              		.loc 1 3823 1
 10500              		.cfi_startproc
 10501              		@ args = 0, pretend = 0, frame = 16
 10502              		@ frame_needed = 1, uses_anonymous_args = 0
 10503 0000 80B5     		push	{r7, lr}
 10504              	.LCFI306:
 10505              		.cfi_def_cfa_offset 8
 10506              		.cfi_offset 7, -8
 10507              		.cfi_offset 14, -4
 10508 0002 84B0     		sub	sp, sp, #16
 10509              	.LCFI307:
 10510              		.cfi_def_cfa_offset 24
 10511 0004 00AF     		add	r7, sp, #0
 10512              	.LCFI308:
 10513              		.cfi_def_cfa_register 7
 10514 0006 7860     		str	r0, [r7, #4]
3824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t itsource = htim->Instance->DIER;
 10515              		.loc 1 3824 27
 10516 0008 7B68     		ldr	r3, [r7, #4]
 10517 000a 1B68     		ldr	r3, [r3]
 10518              		.loc 1 3824 12
 10519 000c DB68     		ldr	r3, [r3, #12]
 10520 000e FB60     		str	r3, [r7, #12]
3825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t itflag   = htim->Instance->SR;
 10521              		.loc 1 3825 27
 10522 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 251


 10523 0012 1B68     		ldr	r3, [r3]
 10524              		.loc 1 3825 12
 10525 0014 1B69     		ldr	r3, [r3, #16]
 10526 0016 BB60     		str	r3, [r7, #8]
3826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Capture compare 1 event */
3828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 10527              		.loc 1 3828 15
 10528 0018 BB68     		ldr	r3, [r7, #8]
 10529 001a 03F00203 		and	r3, r3, #2
 10530              		.loc 1 3828 6
 10531 001e 002B     		cmp	r3, #0
 10532 0020 20D0     		beq	.L771
3829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 10533              		.loc 1 3830 19
 10534 0022 FB68     		ldr	r3, [r7, #12]
 10535 0024 03F00203 		and	r3, r3, #2
 10536              		.loc 1 3830 8
 10537 0028 002B     		cmp	r3, #0
 10538 002a 1BD0     		beq	.L771
3831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 10539              		.loc 1 3833 9
 10540 002c 7B68     		ldr	r3, [r7, #4]
 10541 002e 1B68     		ldr	r3, [r3]
 10542 0030 6FF00202 		mvn	r2, #2
 10543 0034 1A61     		str	r2, [r3, #16]
3834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 10544              		.loc 1 3834 23
 10545 0036 7B68     		ldr	r3, [r7, #4]
 10546 0038 0122     		movs	r2, #1
 10547 003a 1A77     		strb	r2, [r3, #28]
3835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
3836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Input capture event */
3837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 10548              		.loc 1 3837 18
 10549 003c 7B68     		ldr	r3, [r7, #4]
 10550 003e 1B68     		ldr	r3, [r3]
 10551              		.loc 1 3837 28
 10552 0040 9B69     		ldr	r3, [r3, #24]
 10553              		.loc 1 3837 36
 10554 0042 03F00303 		and	r3, r3, #3
 10555              		.loc 1 3837 12
 10556 0046 002B     		cmp	r3, #0
 10557 0048 03D0     		beq	.L772
3838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
3839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->IC_CaptureCallback(htim);
3841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           HAL_TIM_IC_CaptureCallback(htim);
 10558              		.loc 1 3842 11
 10559 004a 7868     		ldr	r0, [r7, #4]
 10560 004c FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 10561 0050 05E0     		b	.L773
 10562              	.L772:
ARM GAS  /tmp//ccJMd58S.s 			page 252


3843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
3845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Output compare event */
3846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         else
3847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
3848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->OC_DelayElapsedCallback(htim);
3850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->PWM_PulseFinishedCallback(htim);
3851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           HAL_TIM_OC_DelayElapsedCallback(htim);
 10563              		.loc 1 3852 11
 10564 0052 7868     		ldr	r0, [r7, #4]
 10565 0054 FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
3853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           HAL_TIM_PWM_PulseFinishedCallback(htim);
 10566              		.loc 1 3853 11
 10567 0058 7868     		ldr	r0, [r7, #4]
 10568 005a FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 10569              	.L773:
3854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
3856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 10570              		.loc 1 3856 23
 10571 005e 7B68     		ldr	r3, [r7, #4]
 10572 0060 0022     		movs	r2, #0
 10573 0062 1A77     		strb	r2, [r3, #28]
 10574              	.L771:
3857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Capture compare 2 event */
3861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 10575              		.loc 1 3861 15
 10576 0064 BB68     		ldr	r3, [r7, #8]
 10577 0066 03F00403 		and	r3, r3, #4
 10578              		.loc 1 3861 6
 10579 006a 002B     		cmp	r3, #0
 10580 006c 20D0     		beq	.L774
3862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 10581              		.loc 1 3863 19
 10582 006e FB68     		ldr	r3, [r7, #12]
 10583 0070 03F00403 		and	r3, r3, #4
 10584              		.loc 1 3863 8
 10585 0074 002B     		cmp	r3, #0
 10586 0076 1BD0     		beq	.L774
3864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 10587              		.loc 1 3865 7
 10588 0078 7B68     		ldr	r3, [r7, #4]
 10589 007a 1B68     		ldr	r3, [r3]
 10590 007c 6FF00402 		mvn	r2, #4
 10591 0080 1A61     		str	r2, [r3, #16]
3866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 10592              		.loc 1 3866 21
 10593 0082 7B68     		ldr	r3, [r7, #4]
 10594 0084 0222     		movs	r2, #2
 10595 0086 1A77     		strb	r2, [r3, #28]
ARM GAS  /tmp//ccJMd58S.s 			page 253


3867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Input capture event */
3868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 10596              		.loc 1 3868 16
 10597 0088 7B68     		ldr	r3, [r7, #4]
 10598 008a 1B68     		ldr	r3, [r3]
 10599              		.loc 1 3868 26
 10600 008c 9B69     		ldr	r3, [r3, #24]
 10601              		.loc 1 3868 34
 10602 008e 03F44073 		and	r3, r3, #768
 10603              		.loc 1 3868 10
 10604 0092 002B     		cmp	r3, #0
 10605 0094 03D0     		beq	.L775
3869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback(htim);
3872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
 10606              		.loc 1 3873 9
 10607 0096 7868     		ldr	r0, [r7, #4]
 10608 0098 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 10609 009c 05E0     		b	.L776
 10610              	.L775:
3874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Output compare event */
3877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       else
3878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback(htim);
3881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback(htim);
3882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
 10611              		.loc 1 3883 9
 10612 009e 7868     		ldr	r0, [r7, #4]
 10613 00a0 FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
3884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 10614              		.loc 1 3884 9
 10615 00a4 7868     		ldr	r0, [r7, #4]
 10616 00a6 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 10617              	.L776:
3885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 10618              		.loc 1 3887 21
 10619 00aa 7B68     		ldr	r3, [r7, #4]
 10620 00ac 0022     		movs	r2, #0
 10621 00ae 1A77     		strb	r2, [r3, #28]
 10622              	.L774:
3888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Capture compare 3 event */
3891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 10623              		.loc 1 3891 15
 10624 00b0 BB68     		ldr	r3, [r7, #8]
 10625 00b2 03F00803 		and	r3, r3, #8
 10626              		.loc 1 3891 6
 10627 00b6 002B     		cmp	r3, #0
ARM GAS  /tmp//ccJMd58S.s 			page 254


 10628 00b8 20D0     		beq	.L777
3892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 10629              		.loc 1 3893 19
 10630 00ba FB68     		ldr	r3, [r7, #12]
 10631 00bc 03F00803 		and	r3, r3, #8
 10632              		.loc 1 3893 8
 10633 00c0 002B     		cmp	r3, #0
 10634 00c2 1BD0     		beq	.L777
3894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 10635              		.loc 1 3895 7
 10636 00c4 7B68     		ldr	r3, [r7, #4]
 10637 00c6 1B68     		ldr	r3, [r3]
 10638 00c8 6FF00802 		mvn	r2, #8
 10639 00cc 1A61     		str	r2, [r3, #16]
3896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 10640              		.loc 1 3896 21
 10641 00ce 7B68     		ldr	r3, [r7, #4]
 10642 00d0 0422     		movs	r2, #4
 10643 00d2 1A77     		strb	r2, [r3, #28]
3897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Input capture event */
3898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 10644              		.loc 1 3898 16
 10645 00d4 7B68     		ldr	r3, [r7, #4]
 10646 00d6 1B68     		ldr	r3, [r3]
 10647              		.loc 1 3898 26
 10648 00d8 DB69     		ldr	r3, [r3, #28]
 10649              		.loc 1 3898 34
 10650 00da 03F00303 		and	r3, r3, #3
 10651              		.loc 1 3898 10
 10652 00de 002B     		cmp	r3, #0
 10653 00e0 03D0     		beq	.L778
3899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback(htim);
3902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
 10654              		.loc 1 3903 9
 10655 00e2 7868     		ldr	r0, [r7, #4]
 10656 00e4 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 10657 00e8 05E0     		b	.L779
 10658              	.L778:
3904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Output compare event */
3907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       else
3908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback(htim);
3911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback(htim);
3912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
 10659              		.loc 1 3913 9
 10660 00ea 7868     		ldr	r0, [r7, #4]
 10661 00ec FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
3914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
ARM GAS  /tmp//ccJMd58S.s 			page 255


 10662              		.loc 1 3914 9
 10663 00f0 7868     		ldr	r0, [r7, #4]
 10664 00f2 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 10665              	.L779:
3915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 10666              		.loc 1 3917 21
 10667 00f6 7B68     		ldr	r3, [r7, #4]
 10668 00f8 0022     		movs	r2, #0
 10669 00fa 1A77     		strb	r2, [r3, #28]
 10670              	.L777:
3918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Capture compare 4 event */
3921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 10671              		.loc 1 3921 15
 10672 00fc BB68     		ldr	r3, [r7, #8]
 10673 00fe 03F01003 		and	r3, r3, #16
 10674              		.loc 1 3921 6
 10675 0102 002B     		cmp	r3, #0
 10676 0104 20D0     		beq	.L780
3922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 10677              		.loc 1 3923 19
 10678 0106 FB68     		ldr	r3, [r7, #12]
 10679 0108 03F01003 		and	r3, r3, #16
 10680              		.loc 1 3923 8
 10681 010c 002B     		cmp	r3, #0
 10682 010e 1BD0     		beq	.L780
3924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 10683              		.loc 1 3925 7
 10684 0110 7B68     		ldr	r3, [r7, #4]
 10685 0112 1B68     		ldr	r3, [r3]
 10686 0114 6FF01002 		mvn	r2, #16
 10687 0118 1A61     		str	r2, [r3, #16]
3926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 10688              		.loc 1 3926 21
 10689 011a 7B68     		ldr	r3, [r7, #4]
 10690 011c 0822     		movs	r2, #8
 10691 011e 1A77     		strb	r2, [r3, #28]
3927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Input capture event */
3928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 10692              		.loc 1 3928 16
 10693 0120 7B68     		ldr	r3, [r7, #4]
 10694 0122 1B68     		ldr	r3, [r3]
 10695              		.loc 1 3928 26
 10696 0124 DB69     		ldr	r3, [r3, #28]
 10697              		.loc 1 3928 34
 10698 0126 03F44073 		and	r3, r3, #768
 10699              		.loc 1 3928 10
 10700 012a 002B     		cmp	r3, #0
 10701 012c 03D0     		beq	.L781
3929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback(htim);
ARM GAS  /tmp//ccJMd58S.s 			page 256


3932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
 10702              		.loc 1 3933 9
 10703 012e 7868     		ldr	r0, [r7, #4]
 10704 0130 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 10705 0134 05E0     		b	.L782
 10706              	.L781:
3934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Output compare event */
3937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       else
3938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
3939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback(htim);
3941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback(htim);
3942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
 10707              		.loc 1 3943 9
 10708 0136 7868     		ldr	r0, [r7, #4]
 10709 0138 FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
3944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 10710              		.loc 1 3944 9
 10711 013c 7868     		ldr	r0, [r7, #4]
 10712 013e FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 10713              	.L782:
3945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
3947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 10714              		.loc 1 3947 21
 10715 0142 7B68     		ldr	r3, [r7, #4]
 10716 0144 0022     		movs	r2, #0
 10717 0146 1A77     		strb	r2, [r3, #28]
 10718              	.L780:
3948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* TIM Update event */
3951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 10719              		.loc 1 3951 15
 10720 0148 BB68     		ldr	r3, [r7, #8]
 10721 014a 03F00103 		and	r3, r3, #1
 10722              		.loc 1 3951 6
 10723 014e 002B     		cmp	r3, #0
 10724 0150 0CD0     		beq	.L783
3952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 10725              		.loc 1 3953 19
 10726 0152 FB68     		ldr	r3, [r7, #12]
 10727 0154 03F00103 		and	r3, r3, #1
 10728              		.loc 1 3953 8
 10729 0158 002B     		cmp	r3, #0
 10730 015a 07D0     		beq	.L783
3954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 10731              		.loc 1 3955 7
 10732 015c 7B68     		ldr	r3, [r7, #4]
 10733 015e 1B68     		ldr	r3, [r3]
 10734 0160 6FF00102 		mvn	r2, #1
ARM GAS  /tmp//ccJMd58S.s 			page 257


 10735 0164 1A61     		str	r2, [r3, #16]
3956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->PeriodElapsedCallback(htim);
3958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       HAL_TIM_PeriodElapsedCallback(htim);
 10736              		.loc 1 3959 7
 10737 0166 7868     		ldr	r0, [r7, #4]
 10738 0168 FFF7FEFF 		bl	HAL_TIM_PeriodElapsedCallback
 10739              	.L783:
3960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* TIM Break input event */
3964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 10740              		.loc 1 3964 15
 10741 016c BB68     		ldr	r3, [r7, #8]
 10742 016e 03F08003 		and	r3, r3, #128
 10743              		.loc 1 3964 6
 10744 0172 002B     		cmp	r3, #0
 10745 0174 0CD0     		beq	.L784
3965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 10746              		.loc 1 3966 19
 10747 0176 FB68     		ldr	r3, [r7, #12]
 10748 0178 03F08003 		and	r3, r3, #128
 10749              		.loc 1 3966 8
 10750 017c 002B     		cmp	r3, #0
 10751 017e 07D0     		beq	.L784
3967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 10752              		.loc 1 3968 7
 10753 0180 7B68     		ldr	r3, [r7, #4]
 10754 0182 1B68     		ldr	r3, [r3]
 10755 0184 6FF08002 		mvn	r2, #128
 10756 0188 1A61     		str	r2, [r3, #16]
3969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->BreakCallback(htim);
3971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       HAL_TIMEx_BreakCallback(htim);
 10757              		.loc 1 3972 7
 10758 018a 7868     		ldr	r0, [r7, #4]
 10759 018c FFF7FEFF 		bl	HAL_TIMEx_BreakCallback
 10760              	.L784:
3973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* TIM Trigger detection event */
3977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 10761              		.loc 1 3977 15
 10762 0190 BB68     		ldr	r3, [r7, #8]
 10763 0192 03F04003 		and	r3, r3, #64
 10764              		.loc 1 3977 6
 10765 0196 002B     		cmp	r3, #0
 10766 0198 0CD0     		beq	.L785
3978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 10767              		.loc 1 3979 19
ARM GAS  /tmp//ccJMd58S.s 			page 258


 10768 019a FB68     		ldr	r3, [r7, #12]
 10769 019c 03F04003 		and	r3, r3, #64
 10770              		.loc 1 3979 8
 10771 01a0 002B     		cmp	r3, #0
 10772 01a2 07D0     		beq	.L785
3980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 10773              		.loc 1 3981 7
 10774 01a4 7B68     		ldr	r3, [r7, #4]
 10775 01a6 1B68     		ldr	r3, [r3]
 10776 01a8 6FF04002 		mvn	r2, #64
 10777 01ac 1A61     		str	r2, [r3, #16]
3982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->TriggerCallback(htim);
3984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       HAL_TIM_TriggerCallback(htim);
 10778              		.loc 1 3985 7
 10779 01ae 7868     		ldr	r0, [r7, #4]
 10780 01b0 FFF7FEFF 		bl	HAL_TIM_TriggerCallback
 10781              	.L785:
3986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
3987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
3988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
3989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* TIM commutation event */
3990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 10782              		.loc 1 3990 15
 10783 01b4 BB68     		ldr	r3, [r7, #8]
 10784 01b6 03F02003 		and	r3, r3, #32
 10785              		.loc 1 3990 6
 10786 01ba 002B     		cmp	r3, #0
 10787 01bc 0CD0     		beq	.L787
3991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
3992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 10788              		.loc 1 3992 19
 10789 01be FB68     		ldr	r3, [r7, #12]
 10790 01c0 03F02003 		and	r3, r3, #32
 10791              		.loc 1 3992 8
 10792 01c4 002B     		cmp	r3, #0
 10793 01c6 07D0     		beq	.L787
3993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
3994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 10794              		.loc 1 3994 7
 10795 01c8 7B68     		ldr	r3, [r7, #4]
 10796 01ca 1B68     		ldr	r3, [r3]
 10797 01cc 6FF02002 		mvn	r2, #32
 10798 01d0 1A61     		str	r2, [r3, #16]
3995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
3996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->CommutationCallback(htim);
3997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
3998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       HAL_TIMEx_CommutCallback(htim);
 10799              		.loc 1 3998 7
 10800 01d2 7868     		ldr	r0, [r7, #4]
 10801 01d4 FFF7FEFF 		bl	HAL_TIMEx_CommutCallback
 10802              	.L787:
3999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
4000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp//ccJMd58S.s 			page 259


4002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 10803              		.loc 1 4002 1
 10804 01d8 00BF     		nop
 10805 01da 1037     		adds	r7, r7, #16
 10806              	.LCFI309:
 10807              		.cfi_def_cfa_offset 8
 10808 01dc BD46     		mov	sp, r7
 10809              	.LCFI310:
 10810              		.cfi_def_cfa_register 13
 10811              		@ sp needed
 10812 01de 80BD     		pop	{r7, pc}
 10813              		.cfi_endproc
 10814              	.LFE123:
 10816              		.section	.text.HAL_TIM_OC_ConfigChannel,"ax",%progbits
 10817              		.align	1
 10818              		.global	HAL_TIM_OC_ConfigChannel
 10819              		.syntax unified
 10820              		.thumb
 10821              		.thumb_func
 10823              	HAL_TIM_OC_ConfigChannel:
 10824              	.LFB124:
4003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
4006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group8 TIM Peripheral Control functions
4009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Peripheral Control functions
4010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
4011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
4012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
4013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                    ##### Peripheral Control functions #####
4014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
4015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****  [..]
4016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    This section provides functions allowing to:
4017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (+) Configure The Input Output channels for OC, PWM, IC or One Pulse mode.
4018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (+) Configure External Clock source.
4019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (+) Configure Complementary channels, break features and dead time.
4020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (+) Configure Master and the Slave synchronization.
4021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (+) Configure the DMA Burst Mode.
4022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
4024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
4025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare Channels according to the specified
4029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
4030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
4031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM Output Compare configuration structure
4032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to configure
4033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
4034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
4037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
4038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
ARM GAS  /tmp//ccJMd58S.s 			page 260


4039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_ConfigChannel(TIM_HandleTypeDef *htim,
4041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                            const TIM_OC_InitTypeDef *sConfig,
4042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                            uint32_t Channel)
4043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 10825              		.loc 1 4043 1
 10826              		.cfi_startproc
 10827              		@ args = 0, pretend = 0, frame = 24
 10828              		@ frame_needed = 1, uses_anonymous_args = 0
 10829 0000 80B5     		push	{r7, lr}
 10830              	.LCFI311:
 10831              		.cfi_def_cfa_offset 8
 10832              		.cfi_offset 7, -8
 10833              		.cfi_offset 14, -4
 10834 0002 86B0     		sub	sp, sp, #24
 10835              	.LCFI312:
 10836              		.cfi_def_cfa_offset 32
 10837 0004 00AF     		add	r7, sp, #0
 10838              	.LCFI313:
 10839              		.cfi_def_cfa_register 7
 10840 0006 F860     		str	r0, [r7, #12]
 10841 0008 B960     		str	r1, [r7, #8]
 10842 000a 7A60     		str	r2, [r7, #4]
4044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 10843              		.loc 1 4044 21
 10844 000c 0023     		movs	r3, #0
 10845 000e FB75     		strb	r3, [r7, #23]
4045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
4048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OC_MODE(sConfig->OCMode));
4049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
4050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Process Locked */
4052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
 10846              		.loc 1 4052 3
 10847 0010 FB68     		ldr	r3, [r7, #12]
 10848 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 10849 0016 012B     		cmp	r3, #1
 10850 0018 01D1     		bne	.L789
 10851              		.loc 1 4052 3 is_stmt 0 discriminator 1
 10852 001a 0223     		movs	r3, #2
 10853              		.loc 1 4052 3
 10854 001c 48E0     		b	.L790
 10855              	.L789:
 10856              		.loc 1 4052 3 discriminator 2
 10857 001e FB68     		ldr	r3, [r7, #12]
 10858 0020 0122     		movs	r2, #1
 10859 0022 83F83C20 		strb	r2, [r3, #60]
4053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 10860              		.loc 1 4054 3 is_stmt 1
 10861 0026 7B68     		ldr	r3, [r7, #4]
 10862 0028 0C2B     		cmp	r3, #12
 10863 002a 39D8     		bhi	.L791
 10864 002c 01A2     		adr	r2, .L793
 10865 002e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  /tmp//ccJMd58S.s 			page 261


 10866 0032 00BF     		.p2align 2
 10867              	.L793:
 10868 0034 69000000 		.word	.L796+1
 10869 0038 A1000000 		.word	.L791+1
 10870 003c A1000000 		.word	.L791+1
 10871 0040 A1000000 		.word	.L791+1
 10872 0044 77000000 		.word	.L795+1
 10873 0048 A1000000 		.word	.L791+1
 10874 004c A1000000 		.word	.L791+1
 10875 0050 A1000000 		.word	.L791+1
 10876 0054 85000000 		.word	.L794+1
 10877 0058 A1000000 		.word	.L791+1
 10878 005c A1000000 		.word	.L791+1
 10879 0060 A1000000 		.word	.L791+1
 10880 0064 93000000 		.word	.L792+1
 10881              		.p2align 1
 10882              	.L796:
4055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
4057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the TIM Channel 1 in Output Compare */
4062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
 10883              		.loc 1 4062 7
 10884 0068 FB68     		ldr	r3, [r7, #12]
 10885 006a 1B68     		ldr	r3, [r3]
 10886 006c B968     		ldr	r1, [r7, #8]
 10887 006e 1846     		mov	r0, r3
 10888 0070 FFF7FEFF 		bl	TIM_OC1_SetConfig
4063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 10889              		.loc 1 4063 7
 10890 0074 17E0     		b	.L797
 10891              	.L795:
4064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
4067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the TIM Channel 2 in Output Compare */
4072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
 10892              		.loc 1 4072 7
 10893 0076 FB68     		ldr	r3, [r7, #12]
 10894 0078 1B68     		ldr	r3, [r3]
 10895 007a B968     		ldr	r1, [r7, #8]
 10896 007c 1846     		mov	r0, r3
 10897 007e FFF7FEFF 		bl	TIM_OC2_SetConfig
4073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 10898              		.loc 1 4073 7
 10899 0082 10E0     		b	.L797
 10900              	.L794:
4074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
ARM GAS  /tmp//ccJMd58S.s 			page 262


4077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
4080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the TIM Channel 3 in Output Compare */
4082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
 10901              		.loc 1 4082 7
 10902 0084 FB68     		ldr	r3, [r7, #12]
 10903 0086 1B68     		ldr	r3, [r3]
 10904 0088 B968     		ldr	r1, [r7, #8]
 10905 008a 1846     		mov	r0, r3
 10906 008c FFF7FEFF 		bl	TIM_OC3_SetConfig
4083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 10907              		.loc 1 4083 7
 10908 0090 09E0     		b	.L797
 10909              	.L792:
4084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
4087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
4090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the TIM Channel 4 in Output Compare */
4092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
 10910              		.loc 1 4092 7
 10911 0092 FB68     		ldr	r3, [r7, #12]
 10912 0094 1B68     		ldr	r3, [r3]
 10913 0096 B968     		ldr	r1, [r7, #8]
 10914 0098 1846     		mov	r0, r3
 10915 009a FFF7FEFF 		bl	TIM_OC4_SetConfig
4093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 10916              		.loc 1 4093 7
 10917 009e 02E0     		b	.L797
 10918              	.L791:
4094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
4097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 10919              		.loc 1 4097 14
 10920 00a0 0123     		movs	r3, #1
 10921 00a2 FB75     		strb	r3, [r7, #23]
4098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 10922              		.loc 1 4098 7
 10923 00a4 00BF     		nop
 10924              	.L797:
4099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 10925              		.loc 1 4101 3
 10926 00a6 FB68     		ldr	r3, [r7, #12]
 10927 00a8 0022     		movs	r2, #0
 10928 00aa 83F83C20 		strb	r2, [r3, #60]
4102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 10929              		.loc 1 4103 10
 10930 00ae FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  /tmp//ccJMd58S.s 			page 263


 10931              	.L790:
4104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 10932              		.loc 1 4104 1
 10933 00b0 1846     		mov	r0, r3
 10934 00b2 1837     		adds	r7, r7, #24
 10935              	.LCFI314:
 10936              		.cfi_def_cfa_offset 8
 10937 00b4 BD46     		mov	sp, r7
 10938              	.LCFI315:
 10939              		.cfi_def_cfa_register 13
 10940              		@ sp needed
 10941 00b6 80BD     		pop	{r7, pc}
 10942              		.cfi_endproc
 10943              	.LFE124:
 10945              		.section	.text.HAL_TIM_IC_ConfigChannel,"ax",%progbits
 10946              		.align	1
 10947              		.global	HAL_TIM_IC_ConfigChannel
 10948              		.syntax unified
 10949              		.thumb
 10950              		.thumb_func
 10952              	HAL_TIM_IC_ConfigChannel:
 10953              	.LFB125:
4105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Channels according to the specified
4108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_IC_InitTypeDef.
4109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM IC handle
4110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM Input Capture configuration structure
4111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel to configure
4112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
4113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
4116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
4117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_ConfigChannel(TIM_HandleTypeDef *htim, const TIM_IC_InitTypeDef *sConf
4120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 10954              		.loc 1 4120 1
 10955              		.cfi_startproc
 10956              		@ args = 0, pretend = 0, frame = 24
 10957              		@ frame_needed = 1, uses_anonymous_args = 0
 10958 0000 80B5     		push	{r7, lr}
 10959              	.LCFI316:
 10960              		.cfi_def_cfa_offset 8
 10961              		.cfi_offset 7, -8
 10962              		.cfi_offset 14, -4
 10963 0002 86B0     		sub	sp, sp, #24
 10964              	.LCFI317:
 10965              		.cfi_def_cfa_offset 32
 10966 0004 00AF     		add	r7, sp, #0
 10967              	.LCFI318:
 10968              		.cfi_def_cfa_register 7
 10969 0006 F860     		str	r0, [r7, #12]
 10970 0008 B960     		str	r1, [r7, #8]
 10971 000a 7A60     		str	r2, [r7, #4]
4121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp//ccJMd58S.s 			page 264


 10972              		.loc 1 4121 21
 10973 000c 0023     		movs	r3, #0
 10974 000e FB75     		strb	r3, [r7, #23]
4122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->ICPolarity));
4126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->ICSelection));
4127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->ICPrescaler));
4128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->ICFilter));
4129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Process Locked */
4131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
 10975              		.loc 1 4131 3
 10976 0010 FB68     		ldr	r3, [r7, #12]
 10977 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 10978 0016 012B     		cmp	r3, #1
 10979 0018 01D1     		bne	.L799
 10980              		.loc 1 4131 3 is_stmt 0 discriminator 1
 10981 001a 0223     		movs	r3, #2
 10982              		.loc 1 4131 3
 10983 001c 88E0     		b	.L800
 10984              	.L799:
 10985              		.loc 1 4131 3 discriminator 2
 10986 001e FB68     		ldr	r3, [r7, #12]
 10987 0020 0122     		movs	r2, #1
 10988 0022 83F83C20 		strb	r2, [r3, #60]
4132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
 10989              		.loc 1 4133 6 is_stmt 1
 10990 0026 7B68     		ldr	r3, [r7, #4]
 10991 0028 002B     		cmp	r3, #0
 10992 002a 1BD1     		bne	.L801
4134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* TI1 Configuration */
4136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_TI1_SetConfig(htim->Instance,
 10993              		.loc 1 4136 5
 10994 002c FB68     		ldr	r3, [r7, #12]
 10995 002e 1868     		ldr	r0, [r3]
4137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
 10996              		.loc 1 4137 30
 10997 0030 BB68     		ldr	r3, [r7, #8]
 10998 0032 1968     		ldr	r1, [r3]
4138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICSelection,
 10999              		.loc 1 4138 30
 11000 0034 BB68     		ldr	r3, [r7, #8]
 11001 0036 5A68     		ldr	r2, [r3, #4]
4139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICFilter);
 11002              		.loc 1 4139 30
 11003 0038 BB68     		ldr	r3, [r7, #8]
 11004 003a DB68     		ldr	r3, [r3, #12]
4136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
 11005              		.loc 1 4136 5
 11006 003c FFF7FEFF 		bl	TIM_TI1_SetConfig
4140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the IC1PSC Bits */
4142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
ARM GAS  /tmp//ccJMd58S.s 			page 265


 11007              		.loc 1 4142 9
 11008 0040 FB68     		ldr	r3, [r7, #12]
 11009 0042 1B68     		ldr	r3, [r3]
 11010              		.loc 1 4142 19
 11011 0044 9A69     		ldr	r2, [r3, #24]
 11012              		.loc 1 4142 9
 11013 0046 FB68     		ldr	r3, [r7, #12]
 11014 0048 1B68     		ldr	r3, [r3]
 11015              		.loc 1 4142 27
 11016 004a 22F00C02 		bic	r2, r2, #12
 11017 004e 9A61     		str	r2, [r3, #24]
4143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the IC1PSC value */
4145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR1 |= sConfig->ICPrescaler;
 11018              		.loc 1 4145 9
 11019 0050 FB68     		ldr	r3, [r7, #12]
 11020 0052 1B68     		ldr	r3, [r3]
 11021              		.loc 1 4145 19
 11022 0054 9969     		ldr	r1, [r3, #24]
 11023              		.loc 1 4145 37
 11024 0056 BB68     		ldr	r3, [r7, #8]
 11025 0058 9A68     		ldr	r2, [r3, #8]
 11026              		.loc 1 4145 9
 11027 005a FB68     		ldr	r3, [r7, #12]
 11028 005c 1B68     		ldr	r3, [r3]
 11029              		.loc 1 4145 27
 11030 005e 0A43     		orrs	r2, r2, r1
 11031 0060 9A61     		str	r2, [r3, #24]
 11032 0062 60E0     		b	.L802
 11033              	.L801:
4146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
 11034              		.loc 1 4147 11
 11035 0064 7B68     		ldr	r3, [r7, #4]
 11036 0066 042B     		cmp	r3, #4
 11037 0068 1CD1     		bne	.L803
4148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* TI2 Configuration */
4150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_TI2_SetConfig(htim->Instance,
 11038              		.loc 1 4152 5
 11039 006a FB68     		ldr	r3, [r7, #12]
 11040 006c 1868     		ldr	r0, [r3]
4153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
 11041              		.loc 1 4153 30
 11042 006e BB68     		ldr	r3, [r7, #8]
 11043 0070 1968     		ldr	r1, [r3]
4154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICSelection,
 11044              		.loc 1 4154 30
 11045 0072 BB68     		ldr	r3, [r7, #8]
 11046 0074 5A68     		ldr	r2, [r3, #4]
4155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICFilter);
 11047              		.loc 1 4155 30
 11048 0076 BB68     		ldr	r3, [r7, #8]
 11049 0078 DB68     		ldr	r3, [r3, #12]
4152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
ARM GAS  /tmp//ccJMd58S.s 			page 266


 11050              		.loc 1 4152 5
 11051 007a FFF7FEFF 		bl	TIM_TI2_SetConfig
4156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the IC2PSC Bits */
4158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 11052              		.loc 1 4158 9
 11053 007e FB68     		ldr	r3, [r7, #12]
 11054 0080 1B68     		ldr	r3, [r3]
 11055              		.loc 1 4158 19
 11056 0082 9A69     		ldr	r2, [r3, #24]
 11057              		.loc 1 4158 9
 11058 0084 FB68     		ldr	r3, [r7, #12]
 11059 0086 1B68     		ldr	r3, [r3]
 11060              		.loc 1 4158 27
 11061 0088 22F44062 		bic	r2, r2, #3072
 11062 008c 9A61     		str	r2, [r3, #24]
4159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the IC2PSC value */
4161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
 11063              		.loc 1 4161 9
 11064 008e FB68     		ldr	r3, [r7, #12]
 11065 0090 1B68     		ldr	r3, [r3]
 11066              		.loc 1 4161 19
 11067 0092 9969     		ldr	r1, [r3, #24]
 11068              		.loc 1 4161 38
 11069 0094 BB68     		ldr	r3, [r7, #8]
 11070 0096 9B68     		ldr	r3, [r3, #8]
 11071              		.loc 1 4161 52
 11072 0098 1A02     		lsls	r2, r3, #8
 11073              		.loc 1 4161 9
 11074 009a FB68     		ldr	r3, [r7, #12]
 11075 009c 1B68     		ldr	r3, [r3]
 11076              		.loc 1 4161 27
 11077 009e 0A43     		orrs	r2, r2, r1
 11078 00a0 9A61     		str	r2, [r3, #24]
 11079 00a2 40E0     		b	.L802
 11080              	.L803:
4162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_3)
 11081              		.loc 1 4163 11
 11082 00a4 7B68     		ldr	r3, [r7, #4]
 11083 00a6 082B     		cmp	r3, #8
 11084 00a8 1BD1     		bne	.L804
4164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* TI3 Configuration */
4166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
4167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_TI3_SetConfig(htim->Instance,
 11085              		.loc 1 4168 5
 11086 00aa FB68     		ldr	r3, [r7, #12]
 11087 00ac 1868     		ldr	r0, [r3]
4169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
 11088              		.loc 1 4169 30
 11089 00ae BB68     		ldr	r3, [r7, #8]
 11090 00b0 1968     		ldr	r1, [r3]
4170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICSelection,
 11091              		.loc 1 4170 30
ARM GAS  /tmp//ccJMd58S.s 			page 267


 11092 00b2 BB68     		ldr	r3, [r7, #8]
 11093 00b4 5A68     		ldr	r2, [r3, #4]
4171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICFilter);
 11094              		.loc 1 4171 30
 11095 00b6 BB68     		ldr	r3, [r7, #8]
 11096 00b8 DB68     		ldr	r3, [r3, #12]
4168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
 11097              		.loc 1 4168 5
 11098 00ba FFF7FEFF 		bl	TIM_TI3_SetConfig
4172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the IC3PSC Bits */
4174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
 11099              		.loc 1 4174 9
 11100 00be FB68     		ldr	r3, [r7, #12]
 11101 00c0 1B68     		ldr	r3, [r3]
 11102              		.loc 1 4174 19
 11103 00c2 DA69     		ldr	r2, [r3, #28]
 11104              		.loc 1 4174 9
 11105 00c4 FB68     		ldr	r3, [r7, #12]
 11106 00c6 1B68     		ldr	r3, [r3]
 11107              		.loc 1 4174 27
 11108 00c8 22F00C02 		bic	r2, r2, #12
 11109 00cc DA61     		str	r2, [r3, #28]
4175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the IC3PSC value */
4177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR2 |= sConfig->ICPrescaler;
 11110              		.loc 1 4177 9
 11111 00ce FB68     		ldr	r3, [r7, #12]
 11112 00d0 1B68     		ldr	r3, [r3]
 11113              		.loc 1 4177 19
 11114 00d2 D969     		ldr	r1, [r3, #28]
 11115              		.loc 1 4177 37
 11116 00d4 BB68     		ldr	r3, [r7, #8]
 11117 00d6 9A68     		ldr	r2, [r3, #8]
 11118              		.loc 1 4177 9
 11119 00d8 FB68     		ldr	r3, [r7, #12]
 11120 00da 1B68     		ldr	r3, [r3]
 11121              		.loc 1 4177 27
 11122 00dc 0A43     		orrs	r2, r2, r1
 11123 00de DA61     		str	r2, [r3, #28]
 11124 00e0 21E0     		b	.L802
 11125              	.L804:
4178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_4)
 11126              		.loc 1 4179 11
 11127 00e2 7B68     		ldr	r3, [r7, #4]
 11128 00e4 0C2B     		cmp	r3, #12
 11129 00e6 1CD1     		bne	.L805
4180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* TI4 Configuration */
4182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
4183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_TI4_SetConfig(htim->Instance,
 11130              		.loc 1 4184 5
 11131 00e8 FB68     		ldr	r3, [r7, #12]
 11132 00ea 1868     		ldr	r0, [r3]
4185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
ARM GAS  /tmp//ccJMd58S.s 			page 268


 11133              		.loc 1 4185 30
 11134 00ec BB68     		ldr	r3, [r7, #8]
 11135 00ee 1968     		ldr	r1, [r3]
4186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICSelection,
 11136              		.loc 1 4186 30
 11137 00f0 BB68     		ldr	r3, [r7, #8]
 11138 00f2 5A68     		ldr	r2, [r3, #4]
4187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICFilter);
 11139              		.loc 1 4187 30
 11140 00f4 BB68     		ldr	r3, [r7, #8]
 11141 00f6 DB68     		ldr	r3, [r3, #12]
4184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                       sConfig->ICPolarity,
 11142              		.loc 1 4184 5
 11143 00f8 FFF7FEFF 		bl	TIM_TI4_SetConfig
4188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the IC4PSC Bits */
4190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
 11144              		.loc 1 4190 9
 11145 00fc FB68     		ldr	r3, [r7, #12]
 11146 00fe 1B68     		ldr	r3, [r3]
 11147              		.loc 1 4190 19
 11148 0100 DA69     		ldr	r2, [r3, #28]
 11149              		.loc 1 4190 9
 11150 0102 FB68     		ldr	r3, [r7, #12]
 11151 0104 1B68     		ldr	r3, [r3]
 11152              		.loc 1 4190 27
 11153 0106 22F44062 		bic	r2, r2, #3072
 11154 010a DA61     		str	r2, [r3, #28]
4191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the IC4PSC value */
4193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
 11155              		.loc 1 4193 9
 11156 010c FB68     		ldr	r3, [r7, #12]
 11157 010e 1B68     		ldr	r3, [r3]
 11158              		.loc 1 4193 19
 11159 0110 D969     		ldr	r1, [r3, #28]
 11160              		.loc 1 4193 38
 11161 0112 BB68     		ldr	r3, [r7, #8]
 11162 0114 9B68     		ldr	r3, [r3, #8]
 11163              		.loc 1 4193 52
 11164 0116 1A02     		lsls	r2, r3, #8
 11165              		.loc 1 4193 9
 11166 0118 FB68     		ldr	r3, [r7, #12]
 11167 011a 1B68     		ldr	r3, [r3]
 11168              		.loc 1 4193 27
 11169 011c 0A43     		orrs	r2, r2, r1
 11170 011e DA61     		str	r2, [r3, #28]
 11171 0120 01E0     		b	.L802
 11172              	.L805:
4194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
4196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     status = HAL_ERROR;
 11173              		.loc 1 4197 12
 11174 0122 0123     		movs	r3, #1
 11175 0124 FB75     		strb	r3, [r7, #23]
 11176              	.L802:
ARM GAS  /tmp//ccJMd58S.s 			page 269


4198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 11177              		.loc 1 4200 3
 11178 0126 FB68     		ldr	r3, [r7, #12]
 11179 0128 0022     		movs	r2, #0
 11180 012a 83F83C20 		strb	r2, [r3, #60]
4201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 11181              		.loc 1 4202 10
 11182 012e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11183              	.L800:
4203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 11184              		.loc 1 4203 1
 11185 0130 1846     		mov	r0, r3
 11186 0132 1837     		adds	r7, r7, #24
 11187              	.LCFI319:
 11188              		.cfi_def_cfa_offset 8
 11189 0134 BD46     		mov	sp, r7
 11190              	.LCFI320:
 11191              		.cfi_def_cfa_register 13
 11192              		@ sp needed
 11193 0136 80BD     		pop	{r7, pc}
 11194              		.cfi_endproc
 11195              	.LFE125:
 11197              		.section	.text.HAL_TIM_PWM_ConfigChannel,"ax",%progbits
 11198              		.align	1
 11199              		.global	HAL_TIM_PWM_ConfigChannel
 11200              		.syntax unified
 11201              		.thumb
 11202              		.thumb_func
 11204              	HAL_TIM_PWM_ConfigChannel:
 11205              	.LFB126:
4204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM PWM  channels according to the specified
4207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
4208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM PWM handle
4209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM PWM configuration structure
4210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be configured
4211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
4212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
4215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
4216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
4219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                             const TIM_OC_InitTypeDef *sConfig,
4220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                             uint32_t Channel)
4221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 11206              		.loc 1 4221 1
 11207              		.cfi_startproc
 11208              		@ args = 0, pretend = 0, frame = 24
 11209              		@ frame_needed = 1, uses_anonymous_args = 0
 11210 0000 80B5     		push	{r7, lr}
 11211              	.LCFI321:
ARM GAS  /tmp//ccJMd58S.s 			page 270


 11212              		.cfi_def_cfa_offset 8
 11213              		.cfi_offset 7, -8
 11214              		.cfi_offset 14, -4
 11215 0002 86B0     		sub	sp, sp, #24
 11216              	.LCFI322:
 11217              		.cfi_def_cfa_offset 32
 11218 0004 00AF     		add	r7, sp, #0
 11219              	.LCFI323:
 11220              		.cfi_def_cfa_register 7
 11221 0006 F860     		str	r0, [r7, #12]
 11222 0008 B960     		str	r1, [r7, #8]
 11223 000a 7A60     		str	r2, [r7, #4]
4222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 11224              		.loc 1 4222 21
 11225 000c 0023     		movs	r3, #0
 11226 000e FB75     		strb	r3, [r7, #23]
4223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
4226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
4227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
4228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));
4229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Process Locked */
4231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
 11227              		.loc 1 4231 3
 11228 0010 FB68     		ldr	r3, [r7, #12]
 11229 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 11230 0016 012B     		cmp	r3, #1
 11231 0018 01D1     		bne	.L807
 11232              		.loc 1 4231 3 is_stmt 0 discriminator 1
 11233 001a 0223     		movs	r3, #2
 11234              		.loc 1 4231 3
 11235 001c AEE0     		b	.L808
 11236              	.L807:
 11237              		.loc 1 4231 3 discriminator 2
 11238 001e FB68     		ldr	r3, [r7, #12]
 11239 0020 0122     		movs	r2, #1
 11240 0022 83F83C20 		strb	r2, [r3, #60]
4232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 11241              		.loc 1 4233 3 is_stmt 1
 11242 0026 7B68     		ldr	r3, [r7, #4]
 11243 0028 0C2B     		cmp	r3, #12
 11244 002a 00F29F80 		bhi	.L809
 11245 002e 01A2     		adr	r2, .L811
 11246 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 11247              		.p2align 2
 11248              	.L811:
 11249 0034 69000000 		.word	.L814+1
 11250 0038 6D010000 		.word	.L809+1
 11251 003c 6D010000 		.word	.L809+1
 11252 0040 6D010000 		.word	.L809+1
 11253 0044 A9000000 		.word	.L813+1
 11254 0048 6D010000 		.word	.L809+1
 11255 004c 6D010000 		.word	.L809+1
 11256 0050 6D010000 		.word	.L809+1
ARM GAS  /tmp//ccJMd58S.s 			page 271


 11257 0054 EB000000 		.word	.L812+1
 11258 0058 6D010000 		.word	.L809+1
 11259 005c 6D010000 		.word	.L809+1
 11260 0060 6D010000 		.word	.L809+1
 11261 0064 2B010000 		.word	.L810+1
 11262              		.p2align 1
 11263              	.L814:
4234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
4236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the Channel 1 in PWM mode */
4241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
 11264              		.loc 1 4241 7
 11265 0068 FB68     		ldr	r3, [r7, #12]
 11266 006a 1B68     		ldr	r3, [r3]
 11267 006c B968     		ldr	r1, [r7, #8]
 11268 006e 1846     		mov	r0, r3
 11269 0070 FFF7FEFF 		bl	TIM_OC1_SetConfig
4242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the Preload enable bit for channel1 */
4244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 11270              		.loc 1 4244 11
 11271 0074 FB68     		ldr	r3, [r7, #12]
 11272 0076 1B68     		ldr	r3, [r3]
 11273              		.loc 1 4244 21
 11274 0078 9A69     		ldr	r2, [r3, #24]
 11275              		.loc 1 4244 11
 11276 007a FB68     		ldr	r3, [r7, #12]
 11277 007c 1B68     		ldr	r3, [r3]
 11278              		.loc 1 4244 29
 11279 007e 42F00802 		orr	r2, r2, #8
 11280 0082 9A61     		str	r2, [r3, #24]
4245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the Output Fast mode */
4247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 11281              		.loc 1 4247 11
 11282 0084 FB68     		ldr	r3, [r7, #12]
 11283 0086 1B68     		ldr	r3, [r3]
 11284              		.loc 1 4247 21
 11285 0088 9A69     		ldr	r2, [r3, #24]
 11286              		.loc 1 4247 11
 11287 008a FB68     		ldr	r3, [r7, #12]
 11288 008c 1B68     		ldr	r3, [r3]
 11289              		.loc 1 4247 29
 11290 008e 22F00402 		bic	r2, r2, #4
 11291 0092 9A61     		str	r2, [r3, #24]
4248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
 11292              		.loc 1 4248 11
 11293 0094 FB68     		ldr	r3, [r7, #12]
 11294 0096 1B68     		ldr	r3, [r3]
 11295              		.loc 1 4248 21
 11296 0098 9969     		ldr	r1, [r3, #24]
 11297              		.loc 1 4248 39
 11298 009a BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp//ccJMd58S.s 			page 272


 11299 009c 1A69     		ldr	r2, [r3, #16]
 11300              		.loc 1 4248 11
 11301 009e FB68     		ldr	r3, [r7, #12]
 11302 00a0 1B68     		ldr	r3, [r3]
 11303              		.loc 1 4248 29
 11304 00a2 0A43     		orrs	r2, r2, r1
 11305 00a4 9A61     		str	r2, [r3, #24]
4249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 11306              		.loc 1 4249 7
 11307 00a6 64E0     		b	.L815
 11308              	.L813:
4250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
4253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the Channel 2 in PWM mode */
4258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
 11309              		.loc 1 4258 7
 11310 00a8 FB68     		ldr	r3, [r7, #12]
 11311 00aa 1B68     		ldr	r3, [r3]
 11312 00ac B968     		ldr	r1, [r7, #8]
 11313 00ae 1846     		mov	r0, r3
 11314 00b0 FFF7FEFF 		bl	TIM_OC2_SetConfig
4259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the Preload enable bit for channel2 */
4261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 11315              		.loc 1 4261 11
 11316 00b4 FB68     		ldr	r3, [r7, #12]
 11317 00b6 1B68     		ldr	r3, [r3]
 11318              		.loc 1 4261 21
 11319 00b8 9A69     		ldr	r2, [r3, #24]
 11320              		.loc 1 4261 11
 11321 00ba FB68     		ldr	r3, [r7, #12]
 11322 00bc 1B68     		ldr	r3, [r3]
 11323              		.loc 1 4261 29
 11324 00be 42F40062 		orr	r2, r2, #2048
 11325 00c2 9A61     		str	r2, [r3, #24]
4262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the Output Fast mode */
4264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 11326              		.loc 1 4264 11
 11327 00c4 FB68     		ldr	r3, [r7, #12]
 11328 00c6 1B68     		ldr	r3, [r3]
 11329              		.loc 1 4264 21
 11330 00c8 9A69     		ldr	r2, [r3, #24]
 11331              		.loc 1 4264 11
 11332 00ca FB68     		ldr	r3, [r7, #12]
 11333 00cc 1B68     		ldr	r3, [r3]
 11334              		.loc 1 4264 29
 11335 00ce 22F48062 		bic	r2, r2, #1024
 11336 00d2 9A61     		str	r2, [r3, #24]
4265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 11337              		.loc 1 4265 11
 11338 00d4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 273


 11339 00d6 1B68     		ldr	r3, [r3]
 11340              		.loc 1 4265 21
 11341 00d8 9969     		ldr	r1, [r3, #24]
 11342              		.loc 1 4265 39
 11343 00da BB68     		ldr	r3, [r7, #8]
 11344 00dc 1B69     		ldr	r3, [r3, #16]
 11345              		.loc 1 4265 52
 11346 00de 1A02     		lsls	r2, r3, #8
 11347              		.loc 1 4265 11
 11348 00e0 FB68     		ldr	r3, [r7, #12]
 11349 00e2 1B68     		ldr	r3, [r3]
 11350              		.loc 1 4265 29
 11351 00e4 0A43     		orrs	r2, r2, r1
 11352 00e6 9A61     		str	r2, [r3, #24]
4266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 11353              		.loc 1 4266 7
 11354 00e8 43E0     		b	.L815
 11355              	.L812:
4267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
4270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
4273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the Channel 3 in PWM mode */
4275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
 11356              		.loc 1 4275 7
 11357 00ea FB68     		ldr	r3, [r7, #12]
 11358 00ec 1B68     		ldr	r3, [r3]
 11359 00ee B968     		ldr	r1, [r7, #8]
 11360 00f0 1846     		mov	r0, r3
 11361 00f2 FFF7FEFF 		bl	TIM_OC3_SetConfig
4276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the Preload enable bit for channel3 */
4278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 11362              		.loc 1 4278 11
 11363 00f6 FB68     		ldr	r3, [r7, #12]
 11364 00f8 1B68     		ldr	r3, [r3]
 11365              		.loc 1 4278 21
 11366 00fa DA69     		ldr	r2, [r3, #28]
 11367              		.loc 1 4278 11
 11368 00fc FB68     		ldr	r3, [r7, #12]
 11369 00fe 1B68     		ldr	r3, [r3]
 11370              		.loc 1 4278 29
 11371 0100 42F00802 		orr	r2, r2, #8
 11372 0104 DA61     		str	r2, [r3, #28]
4279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the Output Fast mode */
4281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 11373              		.loc 1 4281 11
 11374 0106 FB68     		ldr	r3, [r7, #12]
 11375 0108 1B68     		ldr	r3, [r3]
 11376              		.loc 1 4281 21
 11377 010a DA69     		ldr	r2, [r3, #28]
 11378              		.loc 1 4281 11
 11379 010c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 274


 11380 010e 1B68     		ldr	r3, [r3]
 11381              		.loc 1 4281 29
 11382 0110 22F00402 		bic	r2, r2, #4
 11383 0114 DA61     		str	r2, [r3, #28]
4282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;
 11384              		.loc 1 4282 11
 11385 0116 FB68     		ldr	r3, [r7, #12]
 11386 0118 1B68     		ldr	r3, [r3]
 11387              		.loc 1 4282 21
 11388 011a D969     		ldr	r1, [r3, #28]
 11389              		.loc 1 4282 39
 11390 011c BB68     		ldr	r3, [r7, #8]
 11391 011e 1A69     		ldr	r2, [r3, #16]
 11392              		.loc 1 4282 11
 11393 0120 FB68     		ldr	r3, [r7, #12]
 11394 0122 1B68     		ldr	r3, [r3]
 11395              		.loc 1 4282 29
 11396 0124 0A43     		orrs	r2, r2, r1
 11397 0126 DA61     		str	r2, [r3, #28]
4283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 11398              		.loc 1 4283 7
 11399 0128 23E0     		b	.L815
 11400              	.L810:
4284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
4287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
4289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
4290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the Channel 4 in PWM mode */
4292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
 11401              		.loc 1 4292 7
 11402 012a FB68     		ldr	r3, [r7, #12]
 11403 012c 1B68     		ldr	r3, [r3]
 11404 012e B968     		ldr	r1, [r7, #8]
 11405 0130 1846     		mov	r0, r3
 11406 0132 FFF7FEFF 		bl	TIM_OC4_SetConfig
4293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the Preload enable bit for channel4 */
4295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 11407              		.loc 1 4295 11
 11408 0136 FB68     		ldr	r3, [r7, #12]
 11409 0138 1B68     		ldr	r3, [r3]
 11410              		.loc 1 4295 21
 11411 013a DA69     		ldr	r2, [r3, #28]
 11412              		.loc 1 4295 11
 11413 013c FB68     		ldr	r3, [r7, #12]
 11414 013e 1B68     		ldr	r3, [r3]
 11415              		.loc 1 4295 29
 11416 0140 42F40062 		orr	r2, r2, #2048
 11417 0144 DA61     		str	r2, [r3, #28]
4296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the Output Fast mode */
4298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 11418              		.loc 1 4298 11
 11419 0146 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 275


 11420 0148 1B68     		ldr	r3, [r3]
 11421              		.loc 1 4298 21
 11422 014a DA69     		ldr	r2, [r3, #28]
 11423              		.loc 1 4298 11
 11424 014c FB68     		ldr	r3, [r7, #12]
 11425 014e 1B68     		ldr	r3, [r3]
 11426              		.loc 1 4298 29
 11427 0150 22F48062 		bic	r2, r2, #1024
 11428 0154 DA61     		str	r2, [r3, #28]
4299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 11429              		.loc 1 4299 11
 11430 0156 FB68     		ldr	r3, [r7, #12]
 11431 0158 1B68     		ldr	r3, [r3]
 11432              		.loc 1 4299 21
 11433 015a D969     		ldr	r1, [r3, #28]
 11434              		.loc 1 4299 39
 11435 015c BB68     		ldr	r3, [r7, #8]
 11436 015e 1B69     		ldr	r3, [r3, #16]
 11437              		.loc 1 4299 52
 11438 0160 1A02     		lsls	r2, r3, #8
 11439              		.loc 1 4299 11
 11440 0162 FB68     		ldr	r3, [r7, #12]
 11441 0164 1B68     		ldr	r3, [r3]
 11442              		.loc 1 4299 29
 11443 0166 0A43     		orrs	r2, r2, r1
 11444 0168 DA61     		str	r2, [r3, #28]
4300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 11445              		.loc 1 4300 7
 11446 016a 02E0     		b	.L815
 11447              	.L809:
4301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
4304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 11448              		.loc 1 4304 14
 11449 016c 0123     		movs	r3, #1
 11450 016e FB75     		strb	r3, [r7, #23]
4305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 11451              		.loc 1 4305 7
 11452 0170 00BF     		nop
 11453              	.L815:
4306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 11454              		.loc 1 4308 3
 11455 0172 FB68     		ldr	r3, [r7, #12]
 11456 0174 0022     		movs	r2, #0
 11457 0176 83F83C20 		strb	r2, [r3, #60]
4309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 11458              		.loc 1 4310 10
 11459 017a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11460              	.L808:
4311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 11461              		.loc 1 4311 1
 11462 017c 1846     		mov	r0, r3
 11463 017e 1837     		adds	r7, r7, #24
ARM GAS  /tmp//ccJMd58S.s 			page 276


 11464              	.LCFI324:
 11465              		.cfi_def_cfa_offset 8
 11466 0180 BD46     		mov	sp, r7
 11467              	.LCFI325:
 11468              		.cfi_def_cfa_register 13
 11469              		@ sp needed
 11470 0182 80BD     		pop	{r7, pc}
 11471              		.cfi_endproc
 11472              	.LFE126:
 11474              		.section	.text.HAL_TIM_OnePulse_ConfigChannel,"ax",%progbits
 11475              		.align	1
 11476              		.global	HAL_TIM_OnePulse_ConfigChannel
 11477              		.syntax unified
 11478              		.thumb
 11479              		.thumb_func
 11481              	HAL_TIM_OnePulse_ConfigChannel:
 11482              	.LFB127:
4312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Channels according to the specified
4315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         parameters in the TIM_OnePulse_InitTypeDef.
4316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM One Pulse handle
4317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sConfig TIM One Pulse configuration structure
4318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OutputChannel TIM output channel to configure
4319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
4320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  InputChannel TIM input Channel to configure
4323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
4324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note  To output a waveform with a minimum delay user can enable the fast
4327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        mode by calling the @ref __HAL_TIM_ENABLE_OCxFAST macro. Then CCx
4328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        output is forced in response to the edge detection on TIx input,
4329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        without taking in account the comparison.
4330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_ConfigChannel(TIM_HandleTypeDef *htim,  TIM_OnePulse_InitTypeDef
4333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                                  uint32_t OutputChannel,  uint32_t InputChannel)
4334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 11483              		.loc 1 4334 1
 11484              		.cfi_startproc
 11485              		@ args = 0, pretend = 0, frame = 48
 11486              		@ frame_needed = 1, uses_anonymous_args = 0
 11487 0000 80B5     		push	{r7, lr}
 11488              	.LCFI326:
 11489              		.cfi_def_cfa_offset 8
 11490              		.cfi_offset 7, -8
 11491              		.cfi_offset 14, -4
 11492 0002 8CB0     		sub	sp, sp, #48
 11493              	.LCFI327:
 11494              		.cfi_def_cfa_offset 56
 11495 0004 00AF     		add	r7, sp, #0
 11496              	.LCFI328:
 11497              		.cfi_def_cfa_register 7
 11498 0006 F860     		str	r0, [r7, #12]
 11499 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp//ccJMd58S.s 			page 277


 11500 000a 7A60     		str	r2, [r7, #4]
 11501 000c 3B60     		str	r3, [r7]
4335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 11502              		.loc 1 4335 21
 11503 000e 0023     		movs	r3, #0
 11504 0010 87F82F30 		strb	r3, [r7, #47]
4336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_OC_InitTypeDef temp1;
4337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(OutputChannel));
4340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(InputChannel));
4341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (OutputChannel != InputChannel)
 11505              		.loc 1 4342 6
 11506 0014 7A68     		ldr	r2, [r7, #4]
 11507 0016 3B68     		ldr	r3, [r7]
 11508 0018 9A42     		cmp	r2, r3
 11509 001a 00F0BE80 		beq	.L817
4343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Process Locked */
4345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_LOCK(htim);
 11510              		.loc 1 4345 5
 11511 001e FB68     		ldr	r3, [r7, #12]
 11512 0020 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 11513 0024 012B     		cmp	r3, #1
 11514 0026 01D1     		bne	.L818
 11515              		.loc 1 4345 5 is_stmt 0 discriminator 1
 11516 0028 0223     		movs	r3, #2
 11517              		.loc 1 4345 5
 11518 002a B7E0     		b	.L828
 11519              	.L818:
 11520              		.loc 1 4345 5 discriminator 2
 11521 002c FB68     		ldr	r3, [r7, #12]
 11522 002e 0122     		movs	r2, #1
 11523 0030 83F83C20 		strb	r2, [r3, #60]
4346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_BUSY;
 11524              		.loc 1 4347 17 is_stmt 1
 11525 0034 FB68     		ldr	r3, [r7, #12]
 11526 0036 0222     		movs	r2, #2
 11527 0038 83F83D20 		strb	r2, [r3, #61]
4348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Extract the Output compare configuration from sConfig structure */
4350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     temp1.OCMode = sConfig->OCMode;
 11528              		.loc 1 4350 27
 11529 003c BB68     		ldr	r3, [r7, #8]
 11530 003e 1B68     		ldr	r3, [r3]
 11531              		.loc 1 4350 18
 11532 0040 3B61     		str	r3, [r7, #16]
4351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     temp1.Pulse = sConfig->Pulse;
 11533              		.loc 1 4351 26
 11534 0042 BB68     		ldr	r3, [r7, #8]
 11535 0044 5B68     		ldr	r3, [r3, #4]
 11536              		.loc 1 4351 17
 11537 0046 7B61     		str	r3, [r7, #20]
4352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     temp1.OCPolarity = sConfig->OCPolarity;
 11538              		.loc 1 4352 31
ARM GAS  /tmp//ccJMd58S.s 			page 278


 11539 0048 BB68     		ldr	r3, [r7, #8]
 11540 004a 9B68     		ldr	r3, [r3, #8]
 11541              		.loc 1 4352 22
 11542 004c BB61     		str	r3, [r7, #24]
4353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     temp1.OCNPolarity = sConfig->OCNPolarity;
 11543              		.loc 1 4353 32
 11544 004e BB68     		ldr	r3, [r7, #8]
 11545 0050 DB68     		ldr	r3, [r3, #12]
 11546              		.loc 1 4353 23
 11547 0052 FB61     		str	r3, [r7, #28]
4354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     temp1.OCIdleState = sConfig->OCIdleState;
 11548              		.loc 1 4354 32
 11549 0054 BB68     		ldr	r3, [r7, #8]
 11550 0056 1B69     		ldr	r3, [r3, #16]
 11551              		.loc 1 4354 23
 11552 0058 7B62     		str	r3, [r7, #36]
4355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     temp1.OCNIdleState = sConfig->OCNIdleState;
 11553              		.loc 1 4355 33
 11554 005a BB68     		ldr	r3, [r7, #8]
 11555 005c 5B69     		ldr	r3, [r3, #20]
 11556              		.loc 1 4355 24
 11557 005e BB62     		str	r3, [r7, #40]
4356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     switch (OutputChannel)
 11558              		.loc 1 4357 5
 11559 0060 7B68     		ldr	r3, [r7, #4]
 11560 0062 002B     		cmp	r3, #0
 11561 0064 03D0     		beq	.L820
 11562 0066 7B68     		ldr	r3, [r7, #4]
 11563 0068 042B     		cmp	r3, #4
 11564 006a 09D0     		beq	.L821
 11565 006c 11E0     		b	.L829
 11566              	.L820:
4358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_1:
4360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_OC1_SetConfig(htim->Instance, &temp1);
 11567              		.loc 1 4363 9
 11568 006e FB68     		ldr	r3, [r7, #12]
 11569 0070 1B68     		ldr	r3, [r3]
 11570 0072 07F11002 		add	r2, r7, #16
 11571 0076 1146     		mov	r1, r2
 11572 0078 1846     		mov	r0, r3
 11573 007a FFF7FEFF 		bl	TIM_OC1_SetConfig
4364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
 11574              		.loc 1 4364 9
 11575 007e 0CE0     		b	.L823
 11576              	.L821:
4365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_2:
4368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         TIM_OC2_SetConfig(htim->Instance, &temp1);
ARM GAS  /tmp//ccJMd58S.s 			page 279


 11577              		.loc 1 4371 9
 11578 0080 FB68     		ldr	r3, [r7, #12]
 11579 0082 1B68     		ldr	r3, [r3]
 11580 0084 07F11002 		add	r2, r7, #16
 11581 0088 1146     		mov	r1, r2
 11582 008a 1846     		mov	r0, r3
 11583 008c FFF7FEFF 		bl	TIM_OC2_SetConfig
4372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
 11584              		.loc 1 4372 9
 11585 0090 03E0     		b	.L823
 11586              	.L829:
4373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       default:
4376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         status = HAL_ERROR;
 11587              		.loc 1 4376 16
 11588 0092 0123     		movs	r3, #1
 11589 0094 87F82F30 		strb	r3, [r7, #47]
4377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
 11590              		.loc 1 4377 9
 11591 0098 00BF     		nop
 11592              	.L823:
4378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (status == HAL_OK)
 11593              		.loc 1 4380 8
 11594 009a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 11595 009e 002B     		cmp	r3, #0
 11596 00a0 70D1     		bne	.L824
4381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       switch (InputChannel)
 11597              		.loc 1 4382 7
 11598 00a2 3B68     		ldr	r3, [r7]
 11599 00a4 002B     		cmp	r3, #0
 11600 00a6 03D0     		beq	.L825
 11601 00a8 3B68     		ldr	r3, [r7]
 11602 00aa 042B     		cmp	r3, #4
 11603 00ac 33D0     		beq	.L826
 11604 00ae 65E0     		b	.L830
 11605              	.L825:
4383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         case TIM_CHANNEL_1:
4385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
4386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           TIM_TI1_SetConfig(htim->Instance, sConfig->ICPolarity,
 11606              		.loc 1 4388 11
 11607 00b0 FB68     		ldr	r3, [r7, #12]
 11608 00b2 1868     		ldr	r0, [r3]
 11609 00b4 BB68     		ldr	r3, [r7, #8]
 11610 00b6 9969     		ldr	r1, [r3, #24]
 11611 00b8 BB68     		ldr	r3, [r7, #8]
 11612 00ba DA69     		ldr	r2, [r3, #28]
 11613 00bc BB68     		ldr	r3, [r7, #8]
 11614 00be 1B6A     		ldr	r3, [r3, #32]
 11615 00c0 FFF7FEFF 		bl	TIM_TI1_SetConfig
4389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                             sConfig->ICSelection, sConfig->ICFilter);
ARM GAS  /tmp//ccJMd58S.s 			page 280


4390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Reset the IC1PSC Bits */
4392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 11616              		.loc 1 4392 15
 11617 00c4 FB68     		ldr	r3, [r7, #12]
 11618 00c6 1B68     		ldr	r3, [r3]
 11619              		.loc 1 4392 25
 11620 00c8 9A69     		ldr	r2, [r3, #24]
 11621              		.loc 1 4392 15
 11622 00ca FB68     		ldr	r3, [r7, #12]
 11623 00cc 1B68     		ldr	r3, [r3]
 11624              		.loc 1 4392 33
 11625 00ce 22F00C02 		bic	r2, r2, #12
 11626 00d2 9A61     		str	r2, [r3, #24]
4393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Select the Trigger source */
4395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->SMCR &= ~TIM_SMCR_TS;
 11627              		.loc 1 4395 15
 11628 00d4 FB68     		ldr	r3, [r7, #12]
 11629 00d6 1B68     		ldr	r3, [r3]
 11630              		.loc 1 4395 25
 11631 00d8 9A68     		ldr	r2, [r3, #8]
 11632              		.loc 1 4395 15
 11633 00da FB68     		ldr	r3, [r7, #12]
 11634 00dc 1B68     		ldr	r3, [r3]
 11635              		.loc 1 4395 32
 11636 00de 22F07002 		bic	r2, r2, #112
 11637 00e2 9A60     		str	r2, [r3, #8]
4396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->SMCR |= TIM_TS_TI1FP1;
 11638              		.loc 1 4396 15
 11639 00e4 FB68     		ldr	r3, [r7, #12]
 11640 00e6 1B68     		ldr	r3, [r3]
 11641              		.loc 1 4396 25
 11642 00e8 9A68     		ldr	r2, [r3, #8]
 11643              		.loc 1 4396 15
 11644 00ea FB68     		ldr	r3, [r7, #12]
 11645 00ec 1B68     		ldr	r3, [r3]
 11646              		.loc 1 4396 32
 11647 00ee 42F05002 		orr	r2, r2, #80
 11648 00f2 9A60     		str	r2, [r3, #8]
4397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Select the Slave Mode */
4399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 11649              		.loc 1 4399 15
 11650 00f4 FB68     		ldr	r3, [r7, #12]
 11651 00f6 1B68     		ldr	r3, [r3]
 11652              		.loc 1 4399 25
 11653 00f8 9A68     		ldr	r2, [r3, #8]
 11654              		.loc 1 4399 15
 11655 00fa FB68     		ldr	r3, [r7, #12]
 11656 00fc 1B68     		ldr	r3, [r3]
 11657              		.loc 1 4399 32
 11658 00fe 22F00702 		bic	r2, r2, #7
 11659 0102 9A60     		str	r2, [r3, #8]
4400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
 11660              		.loc 1 4400 15
 11661 0104 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 281


 11662 0106 1B68     		ldr	r3, [r3]
 11663              		.loc 1 4400 25
 11664 0108 9A68     		ldr	r2, [r3, #8]
 11665              		.loc 1 4400 15
 11666 010a FB68     		ldr	r3, [r7, #12]
 11667 010c 1B68     		ldr	r3, [r3]
 11668              		.loc 1 4400 32
 11669 010e 42F00602 		orr	r2, r2, #6
 11670 0112 9A60     		str	r2, [r3, #8]
4401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           break;
 11671              		.loc 1 4401 11
 11672 0114 36E0     		b	.L824
 11673              	.L826:
4402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
4403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         case TIM_CHANNEL_2:
4405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
4406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           TIM_TI2_SetConfig(htim->Instance, sConfig->ICPolarity,
 11674              		.loc 1 4408 11
 11675 0116 FB68     		ldr	r3, [r7, #12]
 11676 0118 1868     		ldr	r0, [r3]
 11677 011a BB68     		ldr	r3, [r7, #8]
 11678 011c 9969     		ldr	r1, [r3, #24]
 11679 011e BB68     		ldr	r3, [r7, #8]
 11680 0120 DA69     		ldr	r2, [r3, #28]
 11681 0122 BB68     		ldr	r3, [r7, #8]
 11682 0124 1B6A     		ldr	r3, [r3, #32]
 11683 0126 FFF7FEFF 		bl	TIM_TI2_SetConfig
4409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                             sConfig->ICSelection, sConfig->ICFilter);
4410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Reset the IC2PSC Bits */
4412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 11684              		.loc 1 4412 15
 11685 012a FB68     		ldr	r3, [r7, #12]
 11686 012c 1B68     		ldr	r3, [r3]
 11687              		.loc 1 4412 25
 11688 012e 9A69     		ldr	r2, [r3, #24]
 11689              		.loc 1 4412 15
 11690 0130 FB68     		ldr	r3, [r7, #12]
 11691 0132 1B68     		ldr	r3, [r3]
 11692              		.loc 1 4412 33
 11693 0134 22F44062 		bic	r2, r2, #3072
 11694 0138 9A61     		str	r2, [r3, #24]
4413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Select the Trigger source */
4415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->SMCR &= ~TIM_SMCR_TS;
 11695              		.loc 1 4415 15
 11696 013a FB68     		ldr	r3, [r7, #12]
 11697 013c 1B68     		ldr	r3, [r3]
 11698              		.loc 1 4415 25
 11699 013e 9A68     		ldr	r2, [r3, #8]
 11700              		.loc 1 4415 15
 11701 0140 FB68     		ldr	r3, [r7, #12]
 11702 0142 1B68     		ldr	r3, [r3]
 11703              		.loc 1 4415 32
ARM GAS  /tmp//ccJMd58S.s 			page 282


 11704 0144 22F07002 		bic	r2, r2, #112
 11705 0148 9A60     		str	r2, [r3, #8]
4416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->SMCR |= TIM_TS_TI2FP2;
 11706              		.loc 1 4416 15
 11707 014a FB68     		ldr	r3, [r7, #12]
 11708 014c 1B68     		ldr	r3, [r3]
 11709              		.loc 1 4416 25
 11710 014e 9A68     		ldr	r2, [r3, #8]
 11711              		.loc 1 4416 15
 11712 0150 FB68     		ldr	r3, [r7, #12]
 11713 0152 1B68     		ldr	r3, [r3]
 11714              		.loc 1 4416 32
 11715 0154 42F06002 		orr	r2, r2, #96
 11716 0158 9A60     		str	r2, [r3, #8]
4417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Select the Slave Mode */
4419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 11717              		.loc 1 4419 15
 11718 015a FB68     		ldr	r3, [r7, #12]
 11719 015c 1B68     		ldr	r3, [r3]
 11720              		.loc 1 4419 25
 11721 015e 9A68     		ldr	r2, [r3, #8]
 11722              		.loc 1 4419 15
 11723 0160 FB68     		ldr	r3, [r7, #12]
 11724 0162 1B68     		ldr	r3, [r3]
 11725              		.loc 1 4419 32
 11726 0164 22F00702 		bic	r2, r2, #7
 11727 0168 9A60     		str	r2, [r3, #8]
4420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
 11728              		.loc 1 4420 15
 11729 016a FB68     		ldr	r3, [r7, #12]
 11730 016c 1B68     		ldr	r3, [r3]
 11731              		.loc 1 4420 25
 11732 016e 9A68     		ldr	r2, [r3, #8]
 11733              		.loc 1 4420 15
 11734 0170 FB68     		ldr	r3, [r7, #12]
 11735 0172 1B68     		ldr	r3, [r3]
 11736              		.loc 1 4420 32
 11737 0174 42F00602 		orr	r2, r2, #6
 11738 0178 9A60     		str	r2, [r3, #8]
4421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           break;
 11739              		.loc 1 4421 11
 11740 017a 03E0     		b	.L824
 11741              	.L830:
4422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
4423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         default:
4425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           status = HAL_ERROR;
 11742              		.loc 1 4425 18
 11743 017c 0123     		movs	r3, #1
 11744 017e 87F82F30 		strb	r3, [r7, #47]
4426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           break;
 11745              		.loc 1 4426 11
 11746 0182 00BF     		nop
 11747              	.L824:
4427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
ARM GAS  /tmp//ccJMd58S.s 			page 283


4429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
 11748              		.loc 1 4430 17
 11749 0184 FB68     		ldr	r3, [r7, #12]
 11750 0186 0122     		movs	r2, #1
 11751 0188 83F83D20 		strb	r2, [r3, #61]
4431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_UNLOCK(htim);
 11752              		.loc 1 4432 5
 11753 018c FB68     		ldr	r3, [r7, #12]
 11754 018e 0022     		movs	r2, #0
 11755 0190 83F83C20 		strb	r2, [r3, #60]
4433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return status;
 11756              		.loc 1 4434 12
 11757 0194 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 11758 0198 00E0     		b	.L828
 11759              	.L817:
4435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
4437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 11760              		.loc 1 4438 12
 11761 019a 0123     		movs	r3, #1
 11762              	.L828:
4439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 11763              		.loc 1 4440 1
 11764 019c 1846     		mov	r0, r3
 11765 019e 3037     		adds	r7, r7, #48
 11766              	.LCFI329:
 11767              		.cfi_def_cfa_offset 8
 11768 01a0 BD46     		mov	sp, r7
 11769              	.LCFI330:
 11770              		.cfi_def_cfa_register 13
 11771              		@ sp needed
 11772 01a2 80BD     		pop	{r7, pc}
 11773              		.cfi_endproc
 11774              	.LFE127:
 11776              		.section	.text.HAL_TIM_DMABurst_WriteStart,"ax",%progbits
 11777              		.align	1
 11778              		.global	HAL_TIM_DMABurst_WriteStart
 11779              		.syntax unified
 11780              		.thumb
 11781              		.thumb_func
 11783              	HAL_TIM_DMABurst_WriteStart:
 11784              	.LFB128:
4441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the memory to the TIM peripheral
4444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA  will start the Data write
4446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
4448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
4449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
4450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
ARM GAS  /tmp//ccJMd58S.s 			page 284


4451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
4452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
4453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
4454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
4455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
4456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
4457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
4458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
4459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
4460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
4461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
4462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
4463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
4464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
4465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
4466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
4468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
4469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
4470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
4471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
4472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
4473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
4474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
4475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
4476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
4477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   This function should be used only when BurstLength is equal to DMA data transfer length
4478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress,
4481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                               uint32_t BurstRequestSrc, const uint32_t *BurstBuffer
4482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                               uint32_t  BurstLength)
4483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 11785              		.loc 1 4483 1
 11786              		.cfi_startproc
 11787              		@ args = 4, pretend = 0, frame = 24
 11788              		@ frame_needed = 1, uses_anonymous_args = 0
 11789 0000 80B5     		push	{r7, lr}
 11790              	.LCFI331:
 11791              		.cfi_def_cfa_offset 8
 11792              		.cfi_offset 7, -8
 11793              		.cfi_offset 14, -4
 11794 0002 88B0     		sub	sp, sp, #32
 11795              	.LCFI332:
 11796              		.cfi_def_cfa_offset 40
 11797 0004 02AF     		add	r7, sp, #8
 11798              	.LCFI333:
 11799              		.cfi_def_cfa 7, 32
 11800 0006 F860     		str	r0, [r7, #12]
 11801 0008 B960     		str	r1, [r7, #8]
 11802 000a 7A60     		str	r2, [r7, #4]
 11803 000c 3B60     		str	r3, [r7]
4484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status;
4485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   status = HAL_TIM_DMABurst_MultiWriteStart(htim, BurstBaseAddress, BurstRequestSrc, BurstBuffer, B
4487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                             ((BurstLength) >> 8U) + 1U);
 11804              		.loc 1 4487 60
ARM GAS  /tmp//ccJMd58S.s 			page 285


 11805 000e 3B6A     		ldr	r3, [r7, #32]
 11806 0010 1B0A     		lsrs	r3, r3, #8
4486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                             ((BurstLength) >> 8U) + 1U);
 11807              		.loc 1 4486 12
 11808 0012 0133     		adds	r3, r3, #1
 11809 0014 0193     		str	r3, [sp, #4]
 11810 0016 3B6A     		ldr	r3, [r7, #32]
 11811 0018 0093     		str	r3, [sp]
 11812 001a 3B68     		ldr	r3, [r7]
 11813 001c 7A68     		ldr	r2, [r7, #4]
 11814 001e B968     		ldr	r1, [r7, #8]
 11815 0020 F868     		ldr	r0, [r7, #12]
 11816 0022 FFF7FEFF 		bl	HAL_TIM_DMABurst_MultiWriteStart
 11817 0026 0346     		mov	r3, r0
 11818 0028 FB75     		strb	r3, [r7, #23]
4488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 11819              		.loc 1 4491 10
 11820 002a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
4492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 11821              		.loc 1 4492 1
 11822 002c 1846     		mov	r0, r3
 11823 002e 1837     		adds	r7, r7, #24
 11824              	.LCFI334:
 11825              		.cfi_def_cfa_offset 8
 11826 0030 BD46     		mov	sp, r7
 11827              	.LCFI335:
 11828              		.cfi_def_cfa_register 13
 11829              		@ sp needed
 11830 0032 80BD     		pop	{r7, pc}
 11831              		.cfi_endproc
 11832              	.LFE128:
 11834              		.section	.text.HAL_TIM_DMABurst_MultiWriteStart,"ax",%progbits
 11835              		.align	1
 11836              		.global	HAL_TIM_DMABurst_MultiWriteStart
 11837              		.syntax unified
 11838              		.thumb
 11839              		.thumb_func
 11841              	HAL_TIM_DMABurst_MultiWriteStart:
 11842              	.LFB129:
4493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer multiple Data from the memory to the TIM peripheral
4496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA will start the Data write
4498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
4500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
4501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
4502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
4503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
4504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
4505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
4506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
4507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
ARM GAS  /tmp//ccJMd58S.s 			page 286


4508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
4509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
4510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
4511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
4512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
4513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
4514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
4515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
4516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
4517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
4518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
4520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
4521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
4522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
4523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
4524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
4525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
4526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
4527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
4528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
4529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  DataLength Data length. This parameter can be one value
4530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         between 1 and 0xFFFF.
4531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_MultiWriteStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddre
4534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                                    uint32_t BurstRequestSrc, const uint32_t *BurstB
4535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                                    uint32_t  BurstLength,  uint32_t  DataLength)
4536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 11843              		.loc 1 4536 1
 11844              		.cfi_startproc
 11845              		@ args = 8, pretend = 0, frame = 24
 11846              		@ frame_needed = 1, uses_anonymous_args = 0
 11847 0000 80B5     		push	{r7, lr}
 11848              	.LCFI336:
 11849              		.cfi_def_cfa_offset 8
 11850              		.cfi_offset 7, -8
 11851              		.cfi_offset 14, -4
 11852 0002 86B0     		sub	sp, sp, #24
 11853              	.LCFI337:
 11854              		.cfi_def_cfa_offset 32
 11855 0004 00AF     		add	r7, sp, #0
 11856              	.LCFI338:
 11857              		.cfi_def_cfa_register 7
 11858 0006 F860     		str	r0, [r7, #12]
 11859 0008 B960     		str	r1, [r7, #8]
 11860 000a 7A60     		str	r2, [r7, #4]
 11861 000c 3B60     		str	r3, [r7]
4537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 11862              		.loc 1 4537 21
 11863 000e 0023     		movs	r3, #0
 11864 0010 FB75     		strb	r3, [r7, #23]
4538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
4541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
4542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
ARM GAS  /tmp//ccJMd58S.s 			page 287


4543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
4544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_DATA_LENGTH(DataLength));
4545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->DMABurstState == HAL_DMA_BURST_STATE_BUSY)
 11865              		.loc 1 4546 11
 11866 0012 FB68     		ldr	r3, [r7, #12]
 11867 0014 93F84630 		ldrb	r3, [r3, #70]
 11868 0018 DBB2     		uxtb	r3, r3
 11869              		.loc 1 4546 6
 11870 001a 022B     		cmp	r3, #2
 11871 001c 01D1     		bne	.L834
4547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
 11872              		.loc 1 4548 12
 11873 001e 0223     		movs	r3, #2
 11874 0020 2BE1     		b	.L835
 11875              	.L834:
4549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (htim->DMABurstState == HAL_DMA_BURST_STATE_READY)
 11876              		.loc 1 4550 16
 11877 0022 FB68     		ldr	r3, [r7, #12]
 11878 0024 93F84630 		ldrb	r3, [r3, #70]
 11879 0028 DBB2     		uxtb	r3, r3
 11880              		.loc 1 4550 11
 11881 002a 012B     		cmp	r3, #1
 11882 002c 0BD1     		bne	.L836
4551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((BurstBuffer == NULL) && (BurstLength > 0U))
 11883              		.loc 1 4552 8
 11884 002e 3B68     		ldr	r3, [r7]
 11885 0030 002B     		cmp	r3, #0
 11886 0032 04D1     		bne	.L837
 11887              		.loc 1 4552 31 discriminator 1
 11888 0034 3B6A     		ldr	r3, [r7, #32]
 11889 0036 002B     		cmp	r3, #0
 11890 0038 01D0     		beq	.L837
4553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 11891              		.loc 1 4554 14
 11892 003a 0123     		movs	r3, #1
 11893 003c 1DE1     		b	.L835
 11894              	.L837:
4555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
4557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->DMABurstState = HAL_DMA_BURST_STATE_BUSY;
 11895              		.loc 1 4558 27
 11896 003e FB68     		ldr	r3, [r7, #12]
 11897 0040 0222     		movs	r2, #2
 11898 0042 83F84620 		strb	r2, [r3, #70]
 11899              	.L836:
4559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
4562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* nothing to do */
4564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp//ccJMd58S.s 			page 288


4565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (BurstRequestSrc)
 11900              		.loc 1 4566 3
 11901 0046 7B68     		ldr	r3, [r7, #4]
 11902 0048 B3F5804F 		cmp	r3, #16384
 11903 004c 00F0D880 		beq	.L838
 11904 0050 7B68     		ldr	r3, [r7, #4]
 11905 0052 B3F5804F 		cmp	r3, #16384
 11906 0056 00F2EE80 		bhi	.L839
 11907 005a 7B68     		ldr	r3, [r7, #4]
 11908 005c B3F5005F 		cmp	r3, #8192
 11909 0060 00F0B380 		beq	.L840
 11910 0064 7B68     		ldr	r3, [r7, #4]
 11911 0066 B3F5005F 		cmp	r3, #8192
 11912 006a 00F2E480 		bhi	.L839
 11913 006e 7B68     		ldr	r3, [r7, #4]
 11914 0070 B3F5805F 		cmp	r3, #4096
 11915 0074 00F08E80 		beq	.L841
 11916 0078 7B68     		ldr	r3, [r7, #4]
 11917 007a B3F5805F 		cmp	r3, #4096
 11918 007e 00F2DA80 		bhi	.L839
 11919 0082 7B68     		ldr	r3, [r7, #4]
 11920 0084 B3F5006F 		cmp	r3, #2048
 11921 0088 69D0     		beq	.L842
 11922 008a 7B68     		ldr	r3, [r7, #4]
 11923 008c B3F5006F 		cmp	r3, #2048
 11924 0090 00F2D180 		bhi	.L839
 11925 0094 7B68     		ldr	r3, [r7, #4]
 11926 0096 B3F5806F 		cmp	r3, #1024
 11927 009a 45D0     		beq	.L843
 11928 009c 7B68     		ldr	r3, [r7, #4]
 11929 009e B3F5806F 		cmp	r3, #1024
 11930 00a2 00F2C880 		bhi	.L839
 11931 00a6 7B68     		ldr	r3, [r7, #4]
 11932 00a8 B3F5807F 		cmp	r3, #256
 11933 00ac 04D0     		beq	.L844
 11934 00ae 7B68     		ldr	r3, [r7, #4]
 11935 00b0 B3F5007F 		cmp	r3, #512
 11936 00b4 1CD0     		beq	.L845
 11937 00b6 BEE0     		b	.L839
 11938              	.L844:
4567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_UPDATE:
4569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA Period elapsed callbacks */
4571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 11939              		.loc 1 4571 17
 11940 00b8 FB68     		ldr	r3, [r7, #12]
 11941 00ba 1B6A     		ldr	r3, [r3, #32]
 11942              		.loc 1 4571 55
 11943 00bc 714A     		ldr	r2, .L862
 11944 00be 9A62     		str	r2, [r3, #40]
4572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 11945              		.loc 1 4572 17
 11946 00c0 FB68     		ldr	r3, [r7, #12]
 11947 00c2 1B6A     		ldr	r3, [r3, #32]
 11948              		.loc 1 4572 59
ARM GAS  /tmp//ccJMd58S.s 			page 289


 11949 00c4 704A     		ldr	r2, .L862+4
 11950 00c6 DA62     		str	r2, [r3, #44]
4573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 11951              		.loc 1 4575 17
 11952 00c8 FB68     		ldr	r3, [r7, #12]
 11953 00ca 1B6A     		ldr	r3, [r3, #32]
 11954              		.loc 1 4575 56
 11955 00cc 6F4A     		ldr	r2, .L862+8
 11956 00ce 1A63     		str	r2, [r3, #48]
4576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)BurstBuffer,
 11957              		.loc 1 4578 11
 11958 00d0 FB68     		ldr	r3, [r7, #12]
 11959 00d2 186A     		ldr	r0, [r3, #32]
 11960 00d4 3968     		ldr	r1, [r7]
4579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 11961              		.loc 1 4579 43
 11962 00d6 FB68     		ldr	r3, [r7, #12]
 11963 00d8 1B68     		ldr	r3, [r3]
 11964              		.loc 1 4579 38
 11965 00da 4C33     		adds	r3, r3, #76
4578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 11966              		.loc 1 4578 11
 11967 00dc 1A46     		mov	r2, r3
 11968 00de 7B6A     		ldr	r3, [r7, #36]
 11969 00e0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 11970 00e4 0346     		mov	r3, r0
4578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 11971              		.loc 1 4578 10 discriminator 1
 11972 00e6 002B     		cmp	r3, #0
 11973 00e8 00F0A880 		beq	.L855
4580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 11974              		.loc 1 4582 16
 11975 00ec 0123     		movs	r3, #1
 11976 00ee C4E0     		b	.L835
 11977              	.L845:
4583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC1:
4587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
4589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 11978              		.loc 1 4589 17
 11979 00f0 FB68     		ldr	r3, [r7, #12]
 11980 00f2 5B6A     		ldr	r3, [r3, #36]
 11981              		.loc 1 4589 52
 11982 00f4 664A     		ldr	r2, .L862+12
 11983 00f6 9A62     		str	r2, [r3, #40]
4590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 11984              		.loc 1 4590 17
 11985 00f8 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 290


 11986 00fa 5B6A     		ldr	r3, [r3, #36]
 11987              		.loc 1 4590 56
 11988 00fc 654A     		ldr	r2, .L862+16
 11989 00fe DA62     		str	r2, [r3, #44]
4591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 11990              		.loc 1 4593 17
 11991 0100 FB68     		ldr	r3, [r7, #12]
 11992 0102 5B6A     		ldr	r3, [r3, #36]
 11993              		.loc 1 4593 53
 11994 0104 614A     		ldr	r2, .L862+8
 11995 0106 1A63     		str	r2, [r3, #48]
4594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)BurstBuffer,
 11996              		.loc 1 4596 11
 11997 0108 FB68     		ldr	r3, [r7, #12]
 11998 010a 586A     		ldr	r0, [r3, #36]
 11999 010c 3968     		ldr	r1, [r7]
4597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12000              		.loc 1 4597 43
 12001 010e FB68     		ldr	r3, [r7, #12]
 12002 0110 1B68     		ldr	r3, [r3]
 12003              		.loc 1 4597 38
 12004 0112 4C33     		adds	r3, r3, #76
4596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12005              		.loc 1 4596 11
 12006 0114 1A46     		mov	r2, r3
 12007 0116 7B6A     		ldr	r3, [r7, #36]
 12008 0118 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12009 011c 0346     		mov	r3, r0
4596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12010              		.loc 1 4596 10 discriminator 1
 12011 011e 002B     		cmp	r3, #0
 12012 0120 00F08E80 		beq	.L856
4598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12013              		.loc 1 4600 16
 12014 0124 0123     		movs	r3, #1
 12015 0126 A8E0     		b	.L835
 12016              	.L843:
4601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC2:
4605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
4607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 12017              		.loc 1 4607 17
 12018 0128 FB68     		ldr	r3, [r7, #12]
 12019 012a 9B6A     		ldr	r3, [r3, #40]
 12020              		.loc 1 4607 52
 12021 012c 584A     		ldr	r2, .L862+12
 12022 012e 9A62     		str	r2, [r3, #40]
4608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
ARM GAS  /tmp//ccJMd58S.s 			page 291


 12023              		.loc 1 4608 17
 12024 0130 FB68     		ldr	r3, [r7, #12]
 12025 0132 9B6A     		ldr	r3, [r3, #40]
 12026              		.loc 1 4608 56
 12027 0134 574A     		ldr	r2, .L862+16
 12028 0136 DA62     		str	r2, [r3, #44]
4609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 12029              		.loc 1 4611 17
 12030 0138 FB68     		ldr	r3, [r7, #12]
 12031 013a 9B6A     		ldr	r3, [r3, #40]
 12032              		.loc 1 4611 53
 12033 013c 534A     		ldr	r2, .L862+8
 12034 013e 1A63     		str	r2, [r3, #48]
4612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)BurstBuffer,
 12035              		.loc 1 4614 11
 12036 0140 FB68     		ldr	r3, [r7, #12]
 12037 0142 986A     		ldr	r0, [r3, #40]
 12038 0144 3968     		ldr	r1, [r7]
4615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12039              		.loc 1 4615 43
 12040 0146 FB68     		ldr	r3, [r7, #12]
 12041 0148 1B68     		ldr	r3, [r3]
 12042              		.loc 1 4615 38
 12043 014a 4C33     		adds	r3, r3, #76
4614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12044              		.loc 1 4614 11
 12045 014c 1A46     		mov	r2, r3
 12046 014e 7B6A     		ldr	r3, [r7, #36]
 12047 0150 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12048 0154 0346     		mov	r3, r0
4614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12049              		.loc 1 4614 10 discriminator 1
 12050 0156 002B     		cmp	r3, #0
 12051 0158 74D0     		beq	.L857
4616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12052              		.loc 1 4618 16
 12053 015a 0123     		movs	r3, #1
 12054 015c 8DE0     		b	.L835
 12055              	.L842:
4619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC3:
4623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
4625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 12056              		.loc 1 4625 17
 12057 015e FB68     		ldr	r3, [r7, #12]
 12058 0160 DB6A     		ldr	r3, [r3, #44]
 12059              		.loc 1 4625 52
 12060 0162 4B4A     		ldr	r2, .L862+12
ARM GAS  /tmp//ccJMd58S.s 			page 292


 12061 0164 9A62     		str	r2, [r3, #40]
4626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 12062              		.loc 1 4626 17
 12063 0166 FB68     		ldr	r3, [r7, #12]
 12064 0168 DB6A     		ldr	r3, [r3, #44]
 12065              		.loc 1 4626 56
 12066 016a 4A4A     		ldr	r2, .L862+16
 12067 016c DA62     		str	r2, [r3, #44]
4627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 12068              		.loc 1 4629 17
 12069 016e FB68     		ldr	r3, [r7, #12]
 12070 0170 DB6A     		ldr	r3, [r3, #44]
 12071              		.loc 1 4629 53
 12072 0172 464A     		ldr	r2, .L862+8
 12073 0174 1A63     		str	r2, [r3, #48]
4630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)BurstBuffer,
 12074              		.loc 1 4632 11
 12075 0176 FB68     		ldr	r3, [r7, #12]
 12076 0178 D86A     		ldr	r0, [r3, #44]
 12077 017a 3968     		ldr	r1, [r7]
4633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12078              		.loc 1 4633 43
 12079 017c FB68     		ldr	r3, [r7, #12]
 12080 017e 1B68     		ldr	r3, [r3]
 12081              		.loc 1 4633 38
 12082 0180 4C33     		adds	r3, r3, #76
4632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12083              		.loc 1 4632 11
 12084 0182 1A46     		mov	r2, r3
 12085 0184 7B6A     		ldr	r3, [r7, #36]
 12086 0186 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12087 018a 0346     		mov	r3, r0
4632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12088              		.loc 1 4632 10 discriminator 1
 12089 018c 002B     		cmp	r3, #0
 12090 018e 5BD0     		beq	.L858
4634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12091              		.loc 1 4636 16
 12092 0190 0123     		movs	r3, #1
 12093 0192 72E0     		b	.L835
 12094              	.L841:
4637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC4:
4641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA compare callbacks */
4643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 12095              		.loc 1 4643 17
 12096 0194 FB68     		ldr	r3, [r7, #12]
 12097 0196 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp//ccJMd58S.s 			page 293


 12098              		.loc 1 4643 52
 12099 0198 3D4A     		ldr	r2, .L862+12
 12100 019a 9A62     		str	r2, [r3, #40]
4644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMADelayPulseHalfCplt;
 12101              		.loc 1 4644 17
 12102 019c FB68     		ldr	r3, [r7, #12]
 12103 019e 1B6B     		ldr	r3, [r3, #48]
 12104              		.loc 1 4644 56
 12105 01a0 3C4A     		ldr	r2, .L862+16
 12106 01a2 DA62     		str	r2, [r3, #44]
4645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 12107              		.loc 1 4647 17
 12108 01a4 FB68     		ldr	r3, [r7, #12]
 12109 01a6 1B6B     		ldr	r3, [r3, #48]
 12110              		.loc 1 4647 53
 12111 01a8 384A     		ldr	r2, .L862+8
 12112 01aa 1A63     		str	r2, [r3, #48]
4648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)BurstBuffer,
 12113              		.loc 1 4650 11
 12114 01ac FB68     		ldr	r3, [r7, #12]
 12115 01ae 186B     		ldr	r0, [r3, #48]
 12116 01b0 3968     		ldr	r1, [r7]
4651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12117              		.loc 1 4651 43
 12118 01b2 FB68     		ldr	r3, [r7, #12]
 12119 01b4 1B68     		ldr	r3, [r3]
 12120              		.loc 1 4651 38
 12121 01b6 4C33     		adds	r3, r3, #76
4650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12122              		.loc 1 4650 11
 12123 01b8 1A46     		mov	r2, r3
 12124 01ba 7B6A     		ldr	r3, [r7, #36]
 12125 01bc FFF7FEFF 		bl	HAL_DMA_Start_IT
 12126 01c0 0346     		mov	r3, r0
4650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12127              		.loc 1 4650 10 discriminator 1
 12128 01c2 002B     		cmp	r3, #0
 12129 01c4 42D0     		beq	.L859
4652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12130              		.loc 1 4654 16
 12131 01c6 0123     		movs	r3, #1
 12132 01c8 57E0     		b	.L835
 12133              	.L840:
4655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_COM:
4659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA commutation callbacks */
4661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
 12134              		.loc 1 4661 17
ARM GAS  /tmp//ccJMd58S.s 			page 294


 12135 01ca FB68     		ldr	r3, [r7, #12]
 12136 01cc 5B6B     		ldr	r3, [r3, #52]
 12137              		.loc 1 4661 60
 12138 01ce 324A     		ldr	r2, .L862+20
 12139 01d0 9A62     		str	r2, [r3, #40]
4662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferHalfCpltCallback =  TIMEx_DMACommutationHalfCplt;
 12140              		.loc 1 4662 17
 12141 01d2 FB68     		ldr	r3, [r7, #12]
 12142 01d4 5B6B     		ldr	r3, [r3, #52]
 12143              		.loc 1 4662 64
 12144 01d6 314A     		ldr	r2, .L862+24
 12145 01d8 DA62     		str	r2, [r3, #44]
4663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
 12146              		.loc 1 4665 17
 12147 01da FB68     		ldr	r3, [r7, #12]
 12148 01dc 5B6B     		ldr	r3, [r3, #52]
 12149              		.loc 1 4665 61
 12150 01de 2B4A     		ldr	r2, .L862+8
 12151 01e0 1A63     		str	r2, [r3, #48]
4666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)BurstBuffer,
 12152              		.loc 1 4668 11
 12153 01e2 FB68     		ldr	r3, [r7, #12]
 12154 01e4 586B     		ldr	r0, [r3, #52]
 12155 01e6 3968     		ldr	r1, [r7]
4669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12156              		.loc 1 4669 43
 12157 01e8 FB68     		ldr	r3, [r7, #12]
 12158 01ea 1B68     		ldr	r3, [r3]
 12159              		.loc 1 4669 38
 12160 01ec 4C33     		adds	r3, r3, #76
4668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12161              		.loc 1 4668 11
 12162 01ee 1A46     		mov	r2, r3
 12163 01f0 7B6A     		ldr	r3, [r7, #36]
 12164 01f2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12165 01f6 0346     		mov	r3, r0
4668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12166              		.loc 1 4668 10 discriminator 1
 12167 01f8 002B     		cmp	r3, #0
 12168 01fa 29D0     		beq	.L860
4670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12169              		.loc 1 4672 16
 12170 01fc 0123     		movs	r3, #1
 12171 01fe 3CE0     		b	.L835
 12172              	.L838:
4673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
4677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA trigger callbacks */
ARM GAS  /tmp//ccJMd58S.s 			page 295


4679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
 12173              		.loc 1 4679 17
 12174 0200 FB68     		ldr	r3, [r7, #12]
 12175 0202 9B6B     		ldr	r3, [r3, #56]
 12176              		.loc 1 4679 56
 12177 0204 264A     		ldr	r2, .L862+28
 12178 0206 9A62     		str	r2, [r3, #40]
4680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferHalfCpltCallback = TIM_DMATriggerHalfCplt;
 12179              		.loc 1 4680 17
 12180 0208 FB68     		ldr	r3, [r7, #12]
 12181 020a 9B6B     		ldr	r3, [r3, #56]
 12182              		.loc 1 4680 60
 12183 020c 254A     		ldr	r2, .L862+32
 12184 020e DA62     		str	r2, [r3, #44]
4681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
 12185              		.loc 1 4683 17
 12186 0210 FB68     		ldr	r3, [r7, #12]
 12187 0212 9B6B     		ldr	r3, [r3, #56]
 12188              		.loc 1 4683 57
 12189 0214 1D4A     		ldr	r2, .L862+8
 12190 0216 1A63     		str	r2, [r3, #48]
4684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)BurstBuffer,
 12191              		.loc 1 4686 11
 12192 0218 FB68     		ldr	r3, [r7, #12]
 12193 021a 986B     		ldr	r0, [r3, #56]
 12194 021c 3968     		ldr	r1, [r7]
4687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12195              		.loc 1 4687 43
 12196 021e FB68     		ldr	r3, [r7, #12]
 12197 0220 1B68     		ldr	r3, [r3]
 12198              		.loc 1 4687 38
 12199 0222 4C33     		adds	r3, r3, #76
4686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12200              		.loc 1 4686 11
 12201 0224 1A46     		mov	r2, r3
 12202 0226 7B6A     		ldr	r3, [r7, #36]
 12203 0228 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12204 022c 0346     		mov	r3, r0
4686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            (uint32_t)&htim->Instance->DMAR, DataLength) != HAL_OK)
 12205              		.loc 1 4686 10 discriminator 1
 12206 022e 002B     		cmp	r3, #0
 12207 0230 10D0     		beq	.L861
4688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12208              		.loc 1 4690 16
 12209 0232 0123     		movs	r3, #1
 12210 0234 21E0     		b	.L835
 12211              	.L839:
4691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
ARM GAS  /tmp//ccJMd58S.s 			page 296


4695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 12212              		.loc 1 4695 14
 12213 0236 0123     		movs	r3, #1
 12214 0238 FB75     		strb	r3, [r7, #23]
4696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 12215              		.loc 1 4696 7
 12216 023a 0CE0     		b	.L847
 12217              	.L855:
4584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12218              		.loc 1 4584 7
 12219 023c 00BF     		nop
 12220 023e 0AE0     		b	.L847
 12221              	.L856:
4602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12222              		.loc 1 4602 7
 12223 0240 00BF     		nop
 12224 0242 08E0     		b	.L847
 12225              	.L857:
4620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12226              		.loc 1 4620 7
 12227 0244 00BF     		nop
 12228 0246 06E0     		b	.L847
 12229              	.L858:
4638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12230              		.loc 1 4638 7
 12231 0248 00BF     		nop
 12232 024a 04E0     		b	.L847
 12233              	.L859:
4656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12234              		.loc 1 4656 7
 12235 024c 00BF     		nop
 12236 024e 02E0     		b	.L847
 12237              	.L860:
4674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12238              		.loc 1 4674 7
 12239 0250 00BF     		nop
 12240 0252 00E0     		b	.L847
 12241              	.L861:
4692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12242              		.loc 1 4692 7
 12243 0254 00BF     		nop
 12244              	.L847:
4697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 12245              		.loc 1 4699 6
 12246 0256 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12247 0258 002B     		cmp	r3, #0
 12248 025a 0DD1     		bne	.L854
4700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Configure the DMA Burst Mode */
4702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->DCR = (BurstBaseAddress | BurstLength);
 12249              		.loc 1 4702 9
 12250 025c FB68     		ldr	r3, [r7, #12]
 12251 025e 1B68     		ldr	r3, [r3]
 12252              		.loc 1 4702 45
 12253 0260 B968     		ldr	r1, [r7, #8]
ARM GAS  /tmp//ccJMd58S.s 			page 297


 12254 0262 3A6A     		ldr	r2, [r7, #32]
 12255 0264 0A43     		orrs	r2, r2, r1
 12256              		.loc 1 4702 25
 12257 0266 9A64     		str	r2, [r3, #72]
4703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the TIM DMA Request */
4704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
 12258              		.loc 1 4704 5
 12259 0268 FB68     		ldr	r3, [r7, #12]
 12260 026a 1B68     		ldr	r3, [r3]
 12261 026c D968     		ldr	r1, [r3, #12]
 12262 026e FB68     		ldr	r3, [r7, #12]
 12263 0270 1B68     		ldr	r3, [r3]
 12264 0272 7A68     		ldr	r2, [r7, #4]
 12265 0274 0A43     		orrs	r2, r2, r1
 12266 0276 DA60     		str	r2, [r3, #12]
 12267              	.L854:
4705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
4708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 12268              		.loc 1 4708 10
 12269 0278 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12270              	.L835:
4709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 12271              		.loc 1 4709 1
 12272 027a 1846     		mov	r0, r3
 12273 027c 1837     		adds	r7, r7, #24
 12274              	.LCFI339:
 12275              		.cfi_def_cfa_offset 8
 12276 027e BD46     		mov	sp, r7
 12277              	.LCFI340:
 12278              		.cfi_def_cfa_register 13
 12279              		@ sp needed
 12280 0280 80BD     		pop	{r7, pc}
 12281              	.L863:
 12282 0282 00BF     		.align	2
 12283              	.L862:
 12284 0284 00000000 		.word	TIM_DMAPeriodElapsedCplt
 12285 0288 00000000 		.word	TIM_DMAPeriodElapsedHalfCplt
 12286 028c 00000000 		.word	TIM_DMAError
 12287 0290 00000000 		.word	TIM_DMADelayPulseCplt
 12288 0294 00000000 		.word	TIM_DMADelayPulseHalfCplt
 12289 0298 00000000 		.word	TIMEx_DMACommutationCplt
 12290 029c 00000000 		.word	TIMEx_DMACommutationHalfCplt
 12291 02a0 00000000 		.word	TIM_DMATriggerCplt
 12292 02a4 00000000 		.word	TIM_DMATriggerHalfCplt
 12293              		.cfi_endproc
 12294              	.LFE129:
 12296              		.section	.text.HAL_TIM_DMABurst_WriteStop,"ax",%progbits
 12297              		.align	1
 12298              		.global	HAL_TIM_DMABurst_WriteStop
 12299              		.syntax unified
 12300              		.thumb
 12301              		.thumb_func
 12303              	HAL_TIM_DMABurst_WriteStop:
 12304              	.LFB130:
4710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 298


4711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stops the TIM DMA Burst mode
4713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources to disable
4715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
4718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 12305              		.loc 1 4718 1
 12306              		.cfi_startproc
 12307              		@ args = 0, pretend = 0, frame = 16
 12308              		@ frame_needed = 1, uses_anonymous_args = 0
 12309 0000 80B5     		push	{r7, lr}
 12310              	.LCFI341:
 12311              		.cfi_def_cfa_offset 8
 12312              		.cfi_offset 7, -8
 12313              		.cfi_offset 14, -4
 12314 0002 84B0     		sub	sp, sp, #16
 12315              	.LCFI342:
 12316              		.cfi_def_cfa_offset 24
 12317 0004 00AF     		add	r7, sp, #0
 12318              	.LCFI343:
 12319              		.cfi_def_cfa_register 7
 12320 0006 7860     		str	r0, [r7, #4]
 12321 0008 3960     		str	r1, [r7]
4719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 12322              		.loc 1 4719 21
 12323 000a 0023     		movs	r3, #0
 12324 000c FB73     		strb	r3, [r7, #15]
4720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
4723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA channel) */
4725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (BurstRequestSrc)
 12325              		.loc 1 4725 3
 12326 000e 3B68     		ldr	r3, [r7]
 12327 0010 B3F5804F 		cmp	r3, #16384
 12328 0014 50D0     		beq	.L865
 12329 0016 3B68     		ldr	r3, [r7]
 12330 0018 B3F5804F 		cmp	r3, #16384
 12331 001c 52D8     		bhi	.L866
 12332 001e 3B68     		ldr	r3, [r7]
 12333 0020 B3F5005F 		cmp	r3, #8192
 12334 0024 42D0     		beq	.L867
 12335 0026 3B68     		ldr	r3, [r7]
 12336 0028 B3F5005F 		cmp	r3, #8192
 12337 002c 4AD8     		bhi	.L866
 12338 002e 3B68     		ldr	r3, [r7]
 12339 0030 B3F5805F 		cmp	r3, #4096
 12340 0034 34D0     		beq	.L868
 12341 0036 3B68     		ldr	r3, [r7]
 12342 0038 B3F5805F 		cmp	r3, #4096
 12343 003c 42D8     		bhi	.L866
 12344 003e 3B68     		ldr	r3, [r7]
 12345 0040 B3F5006F 		cmp	r3, #2048
 12346 0044 26D0     		beq	.L869
ARM GAS  /tmp//ccJMd58S.s 			page 299


 12347 0046 3B68     		ldr	r3, [r7]
 12348 0048 B3F5006F 		cmp	r3, #2048
 12349 004c 3AD8     		bhi	.L866
 12350 004e 3B68     		ldr	r3, [r7]
 12351 0050 B3F5806F 		cmp	r3, #1024
 12352 0054 18D0     		beq	.L870
 12353 0056 3B68     		ldr	r3, [r7]
 12354 0058 B3F5806F 		cmp	r3, #1024
 12355 005c 32D8     		bhi	.L866
 12356 005e 3B68     		ldr	r3, [r7]
 12357 0060 B3F5807F 		cmp	r3, #256
 12358 0064 04D0     		beq	.L871
 12359 0066 3B68     		ldr	r3, [r7]
 12360 0068 B3F5007F 		cmp	r3, #512
 12361 006c 06D0     		beq	.L872
 12362 006e 29E0     		b	.L866
 12363              	.L871:
4726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_UPDATE:
4728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_UPDATE]);
 12364              		.loc 1 4729 13
 12365 0070 7B68     		ldr	r3, [r7, #4]
 12366 0072 1B6A     		ldr	r3, [r3, #32]
 12367 0074 1846     		mov	r0, r3
 12368 0076 FFF7FEFF 		bl	HAL_DMA_Abort_IT
4730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 12369              		.loc 1 4730 7
 12370 007a 26E0     		b	.L873
 12371              	.L872:
4731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC1:
4733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 12372              		.loc 1 4734 13
 12373 007c 7B68     		ldr	r3, [r7, #4]
 12374 007e 5B6A     		ldr	r3, [r3, #36]
 12375 0080 1846     		mov	r0, r3
 12376 0082 FFF7FEFF 		bl	HAL_DMA_Abort_IT
4735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 12377              		.loc 1 4735 7
 12378 0086 20E0     		b	.L873
 12379              	.L870:
4736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC2:
4738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 12380              		.loc 1 4739 13
 12381 0088 7B68     		ldr	r3, [r7, #4]
 12382 008a 9B6A     		ldr	r3, [r3, #40]
 12383 008c 1846     		mov	r0, r3
 12384 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
4740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 12385              		.loc 1 4740 7
 12386 0092 1AE0     		b	.L873
 12387              	.L869:
4741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
ARM GAS  /tmp//ccJMd58S.s 			page 300


4742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC3:
4743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 12388              		.loc 1 4744 13
 12389 0094 7B68     		ldr	r3, [r7, #4]
 12390 0096 DB6A     		ldr	r3, [r3, #44]
 12391 0098 1846     		mov	r0, r3
 12392 009a FFF7FEFF 		bl	HAL_DMA_Abort_IT
4745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 12393              		.loc 1 4745 7
 12394 009e 14E0     		b	.L873
 12395              	.L868:
4746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC4:
4748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 12396              		.loc 1 4749 13
 12397 00a0 7B68     		ldr	r3, [r7, #4]
 12398 00a2 1B6B     		ldr	r3, [r3, #48]
 12399 00a4 1846     		mov	r0, r3
 12400 00a6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
4750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 12401              		.loc 1 4750 7
 12402 00aa 0EE0     		b	.L873
 12403              	.L867:
4751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_COM:
4753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_COMMUTATION]);
 12404              		.loc 1 4754 13
 12405 00ac 7B68     		ldr	r3, [r7, #4]
 12406 00ae 5B6B     		ldr	r3, [r3, #52]
 12407 00b0 1846     		mov	r0, r3
 12408 00b2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
4755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 12409              		.loc 1 4755 7
 12410 00b6 08E0     		b	.L873
 12411              	.L865:
4756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
4758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_TRIGGER]);
 12412              		.loc 1 4759 13
 12413 00b8 7B68     		ldr	r3, [r7, #4]
 12414 00ba 9B6B     		ldr	r3, [r3, #56]
 12415 00bc 1846     		mov	r0, r3
 12416 00be FFF7FEFF 		bl	HAL_DMA_Abort_IT
4760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 12417              		.loc 1 4760 7
 12418 00c2 02E0     		b	.L873
 12419              	.L866:
4761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
4763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 12420              		.loc 1 4763 14
 12421 00c4 0123     		movs	r3, #1
 12422 00c6 FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp//ccJMd58S.s 			page 301


4764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 12423              		.loc 1 4764 7
 12424 00c8 00BF     		nop
 12425              	.L873:
4765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 12426              		.loc 1 4767 6
 12427 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12428 00cc 002B     		cmp	r3, #0
 12429 00ce 0CD1     		bne	.L874
4768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the TIM Update DMA request */
4770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
 12430              		.loc 1 4770 5
 12431 00d0 7B68     		ldr	r3, [r7, #4]
 12432 00d2 1B68     		ldr	r3, [r3]
 12433 00d4 D968     		ldr	r1, [r3, #12]
 12434 00d6 3B68     		ldr	r3, [r7]
 12435 00d8 DA43     		mvns	r2, r3
 12436 00da 7B68     		ldr	r3, [r7, #4]
 12437 00dc 1B68     		ldr	r3, [r3]
 12438 00de 0A40     		ands	r2, r2, r1
 12439 00e0 DA60     		str	r2, [r3, #12]
4771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Change the DMA burst operation state */
4773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 12440              		.loc 1 4773 25
 12441 00e2 7B68     		ldr	r3, [r7, #4]
 12442 00e4 0122     		movs	r2, #1
 12443 00e6 83F84620 		strb	r2, [r3, #70]
 12444              	.L874:
4774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
4777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 12445              		.loc 1 4777 10
 12446 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
4778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 12447              		.loc 1 4778 1
 12448 00ec 1846     		mov	r0, r3
 12449 00ee 1037     		adds	r7, r7, #16
 12450              	.LCFI344:
 12451              		.cfi_def_cfa_offset 8
 12452 00f0 BD46     		mov	sp, r7
 12453              	.LCFI345:
 12454              		.cfi_def_cfa_register 13
 12455              		@ sp needed
 12456 00f2 80BD     		pop	{r7, pc}
 12457              		.cfi_endproc
 12458              	.LFE130:
 12460              		.section	.text.HAL_TIM_DMABurst_ReadStart,"ax",%progbits
 12461              		.align	1
 12462              		.global	HAL_TIM_DMABurst_ReadStart
 12463              		.syntax unified
 12464              		.thumb
 12465              		.thumb_func
ARM GAS  /tmp//ccJMd58S.s 			page 302


 12467              	HAL_TIM_DMABurst_ReadStart:
 12468              	.LFB131:
4779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the TIM peripheral to the memory
4782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA  will start the Data read
4784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
4786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
4787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
4788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
4789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
4790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
4791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
4792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
4793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
4794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
4795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
4796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
4797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
4798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
4799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
4800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
4801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
4802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
4803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
4804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
4806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
4807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
4808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
4809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
4810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
4811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
4812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
4813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
4814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
4815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   This function should be used only when BurstLength is equal to DMA data transfer length
4816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress,
4819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                              uint32_t BurstRequestSrc, uint32_t  *BurstBuffer, uint
4820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 12469              		.loc 1 4820 1
 12470              		.cfi_startproc
 12471              		@ args = 4, pretend = 0, frame = 24
 12472              		@ frame_needed = 1, uses_anonymous_args = 0
 12473 0000 80B5     		push	{r7, lr}
 12474              	.LCFI346:
 12475              		.cfi_def_cfa_offset 8
 12476              		.cfi_offset 7, -8
 12477              		.cfi_offset 14, -4
 12478 0002 88B0     		sub	sp, sp, #32
 12479              	.LCFI347:
 12480              		.cfi_def_cfa_offset 40
 12481 0004 02AF     		add	r7, sp, #8
ARM GAS  /tmp//ccJMd58S.s 			page 303


 12482              	.LCFI348:
 12483              		.cfi_def_cfa 7, 32
 12484 0006 F860     		str	r0, [r7, #12]
 12485 0008 B960     		str	r1, [r7, #8]
 12486 000a 7A60     		str	r2, [r7, #4]
 12487 000c 3B60     		str	r3, [r7]
4821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status;
4822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   status = HAL_TIM_DMABurst_MultiReadStart(htim, BurstBaseAddress, BurstRequestSrc, BurstBuffer, Bu
4824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                            ((BurstLength) >> 8U) + 1U);
 12488              		.loc 1 4824 59
 12489 000e 3B6A     		ldr	r3, [r7, #32]
 12490 0010 1B0A     		lsrs	r3, r3, #8
4823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                            ((BurstLength) >> 8U) + 1U);
 12491              		.loc 1 4823 12
 12492 0012 0133     		adds	r3, r3, #1
 12493 0014 0193     		str	r3, [sp, #4]
 12494 0016 3B6A     		ldr	r3, [r7, #32]
 12495 0018 0093     		str	r3, [sp]
 12496 001a 3B68     		ldr	r3, [r7]
 12497 001c 7A68     		ldr	r2, [r7, #4]
 12498 001e B968     		ldr	r1, [r7, #8]
 12499 0020 F868     		ldr	r0, [r7, #12]
 12500 0022 FFF7FEFF 		bl	HAL_TIM_DMABurst_MultiReadStart
 12501 0026 0346     		mov	r3, r0
 12502 0028 FB75     		strb	r3, [r7, #23]
4825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 12503              		.loc 1 4827 10
 12504 002a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
4828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 12505              		.loc 1 4828 1
 12506 002c 1846     		mov	r0, r3
 12507 002e 1837     		adds	r7, r7, #24
 12508              	.LCFI349:
 12509              		.cfi_def_cfa_offset 8
 12510 0030 BD46     		mov	sp, r7
 12511              	.LCFI350:
 12512              		.cfi_def_cfa_register 13
 12513              		@ sp needed
 12514 0032 80BD     		pop	{r7, pc}
 12515              		.cfi_endproc
 12516              	.LFE131:
 12518              		.section	.text.HAL_TIM_DMABurst_MultiReadStart,"ax",%progbits
 12519              		.align	1
 12520              		.global	HAL_TIM_DMABurst_MultiReadStart
 12521              		.syntax unified
 12522              		.thumb
 12523              		.thumb_func
 12525              	HAL_TIM_DMABurst_MultiReadStart:
 12526              	.LFB132:
4829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
4831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the TIM peripheral to the memory
4832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
4833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstBaseAddress TIM Base address from where the DMA  will start the Data read
ARM GAS  /tmp//ccJMd58S.s 			page 304


4834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
4836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
4837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
4838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
4839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
4840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
4841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
4842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
4843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
4844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
4845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
4846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
4847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
4848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
4849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
4850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
4851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
4852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
4853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources
4854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         This parameter can be one of the following values:
4855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
4856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
4857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
4858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
4859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
4860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
4861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
4862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstBuffer The Buffer address.
4863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstLength DMA Burst length. This parameter can be one value
4864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
4865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  DataLength Data length. This parameter can be one value
4866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         between 1 and 0xFFFF.
4867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
4868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
4869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_MultiReadStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddres
4870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                                   uint32_t BurstRequestSrc, uint32_t  *BurstBuffer,
4871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                                   uint32_t  BurstLength, uint32_t  DataLength)
4872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 12527              		.loc 1 4872 1
 12528              		.cfi_startproc
 12529              		@ args = 8, pretend = 0, frame = 24
 12530              		@ frame_needed = 1, uses_anonymous_args = 0
 12531 0000 80B5     		push	{r7, lr}
 12532              	.LCFI351:
 12533              		.cfi_def_cfa_offset 8
 12534              		.cfi_offset 7, -8
 12535              		.cfi_offset 14, -4
 12536 0002 86B0     		sub	sp, sp, #24
 12537              	.LCFI352:
 12538              		.cfi_def_cfa_offset 32
 12539 0004 00AF     		add	r7, sp, #0
 12540              	.LCFI353:
 12541              		.cfi_def_cfa_register 7
 12542 0006 F860     		str	r0, [r7, #12]
 12543 0008 B960     		str	r1, [r7, #8]
 12544 000a 7A60     		str	r2, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 305


 12545 000c 3B60     		str	r3, [r7]
4873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 12546              		.loc 1 4873 21
 12547 000e 0023     		movs	r3, #0
 12548 0010 FB75     		strb	r3, [r7, #23]
4874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
4876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
4877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
4878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
4879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
4880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_DATA_LENGTH(DataLength));
4881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->DMABurstState == HAL_DMA_BURST_STATE_BUSY)
 12549              		.loc 1 4882 11
 12550 0012 FB68     		ldr	r3, [r7, #12]
 12551 0014 93F84630 		ldrb	r3, [r3, #70]
 12552 0018 DBB2     		uxtb	r3, r3
 12553              		.loc 1 4882 6
 12554 001a 022B     		cmp	r3, #2
 12555 001c 01D1     		bne	.L879
4883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_BUSY;
 12556              		.loc 1 4884 12
 12557 001e 0223     		movs	r3, #2
 12558 0020 2BE1     		b	.L880
 12559              	.L879:
4885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (htim->DMABurstState == HAL_DMA_BURST_STATE_READY)
 12560              		.loc 1 4886 16
 12561 0022 FB68     		ldr	r3, [r7, #12]
 12562 0024 93F84630 		ldrb	r3, [r3, #70]
 12563 0028 DBB2     		uxtb	r3, r3
 12564              		.loc 1 4886 11
 12565 002a 012B     		cmp	r3, #1
 12566 002c 0BD1     		bne	.L881
4887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if ((BurstBuffer == NULL) && (BurstLength > 0U))
 12567              		.loc 1 4888 8
 12568 002e 3B68     		ldr	r3, [r7]
 12569 0030 002B     		cmp	r3, #0
 12570 0032 04D1     		bne	.L882
 12571              		.loc 1 4888 31 discriminator 1
 12572 0034 3B6A     		ldr	r3, [r7, #32]
 12573 0036 002B     		cmp	r3, #0
 12574 0038 01D0     		beq	.L882
4889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       return HAL_ERROR;
 12575              		.loc 1 4890 14
 12576 003a 0123     		movs	r3, #1
 12577 003c 1DE1     		b	.L880
 12578              	.L882:
4891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     else
4893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->DMABurstState = HAL_DMA_BURST_STATE_BUSY;
 12579              		.loc 1 4894 27
ARM GAS  /tmp//ccJMd58S.s 			page 306


 12580 003e FB68     		ldr	r3, [r7, #12]
 12581 0040 0222     		movs	r2, #2
 12582 0042 83F84620 		strb	r2, [r3, #70]
 12583              	.L881:
4895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
4898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* nothing to do */
4900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
4901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (BurstRequestSrc)
 12584              		.loc 1 4901 3
 12585 0046 7B68     		ldr	r3, [r7, #4]
 12586 0048 B3F5804F 		cmp	r3, #16384
 12587 004c 00F0D880 		beq	.L883
 12588 0050 7B68     		ldr	r3, [r7, #4]
 12589 0052 B3F5804F 		cmp	r3, #16384
 12590 0056 00F2EE80 		bhi	.L884
 12591 005a 7B68     		ldr	r3, [r7, #4]
 12592 005c B3F5005F 		cmp	r3, #8192
 12593 0060 00F0B380 		beq	.L885
 12594 0064 7B68     		ldr	r3, [r7, #4]
 12595 0066 B3F5005F 		cmp	r3, #8192
 12596 006a 00F2E480 		bhi	.L884
 12597 006e 7B68     		ldr	r3, [r7, #4]
 12598 0070 B3F5805F 		cmp	r3, #4096
 12599 0074 00F08E80 		beq	.L886
 12600 0078 7B68     		ldr	r3, [r7, #4]
 12601 007a B3F5805F 		cmp	r3, #4096
 12602 007e 00F2DA80 		bhi	.L884
 12603 0082 7B68     		ldr	r3, [r7, #4]
 12604 0084 B3F5006F 		cmp	r3, #2048
 12605 0088 69D0     		beq	.L887
 12606 008a 7B68     		ldr	r3, [r7, #4]
 12607 008c B3F5006F 		cmp	r3, #2048
 12608 0090 00F2D180 		bhi	.L884
 12609 0094 7B68     		ldr	r3, [r7, #4]
 12610 0096 B3F5806F 		cmp	r3, #1024
 12611 009a 45D0     		beq	.L888
 12612 009c 7B68     		ldr	r3, [r7, #4]
 12613 009e B3F5806F 		cmp	r3, #1024
 12614 00a2 00F2C880 		bhi	.L884
 12615 00a6 7B68     		ldr	r3, [r7, #4]
 12616 00a8 B3F5807F 		cmp	r3, #256
 12617 00ac 04D0     		beq	.L889
 12618 00ae 7B68     		ldr	r3, [r7, #4]
 12619 00b0 B3F5007F 		cmp	r3, #512
 12620 00b4 1CD0     		beq	.L890
 12621 00b6 BEE0     		b	.L884
 12622              	.L889:
4902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
4903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_UPDATE:
4904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA Period elapsed callbacks */
4906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 12623              		.loc 1 4906 17
 12624 00b8 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 307


 12625 00ba 1B6A     		ldr	r3, [r3, #32]
 12626              		.loc 1 4906 55
 12627 00bc 714A     		ldr	r2, .L907
 12628 00be 9A62     		str	r2, [r3, #40]
4907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferHalfCpltCallback = TIM_DMAPeriodElapsedHalfCplt;
 12629              		.loc 1 4907 17
 12630 00c0 FB68     		ldr	r3, [r7, #12]
 12631 00c2 1B6A     		ldr	r3, [r3, #32]
 12632              		.loc 1 4907 59
 12633 00c4 704A     		ldr	r2, .L907+4
 12634 00c6 DA62     		str	r2, [r3, #44]
4908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 12635              		.loc 1 4910 17
 12636 00c8 FB68     		ldr	r3, [r7, #12]
 12637 00ca 1B6A     		ldr	r3, [r3, #32]
 12638              		.loc 1 4910 56
 12639 00cc 6F4A     		ldr	r2, .L907+8
 12640 00ce 1A63     		str	r2, [r3, #48]
4911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)&htim->Instance->DMAR, (uint32_
 12641              		.loc 1 4913 11
 12642 00d0 FB68     		ldr	r3, [r7, #12]
 12643 00d2 186A     		ldr	r0, [r3, #32]
 12644              		.loc 1 4913 74
 12645 00d4 FB68     		ldr	r3, [r7, #12]
 12646 00d6 1B68     		ldr	r3, [r3]
 12647              		.loc 1 4913 69
 12648 00d8 4C33     		adds	r3, r3, #76
 12649              		.loc 1 4913 11
 12650 00da 1946     		mov	r1, r3
 12651 00dc 3A68     		ldr	r2, [r7]
 12652 00de 7B6A     		ldr	r3, [r7, #36]
 12653 00e0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12654 00e4 0346     		mov	r3, r0
 12655              		.loc 1 4913 10 discriminator 1
 12656 00e6 002B     		cmp	r3, #0
 12657 00e8 00F0A880 		beq	.L900
4914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            DataLength) != HAL_OK)
4915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12658              		.loc 1 4917 16
 12659 00ec 0123     		movs	r3, #1
 12660 00ee C4E0     		b	.L880
 12661              	.L890:
4918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC1:
4922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 12662              		.loc 1 4924 17
 12663 00f0 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 308


 12664 00f2 5B6A     		ldr	r3, [r3, #36]
 12665              		.loc 1 4924 52
 12666 00f4 664A     		ldr	r2, .L907+12
 12667 00f6 9A62     		str	r2, [r3, #40]
4925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 12668              		.loc 1 4925 17
 12669 00f8 FB68     		ldr	r3, [r7, #12]
 12670 00fa 5B6A     		ldr	r3, [r3, #36]
 12671              		.loc 1 4925 56
 12672 00fc 654A     		ldr	r2, .L907+16
 12673 00fe DA62     		str	r2, [r3, #44]
4926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 12674              		.loc 1 4928 17
 12675 0100 FB68     		ldr	r3, [r7, #12]
 12676 0102 5B6A     		ldr	r3, [r3, #36]
 12677              		.loc 1 4928 53
 12678 0104 614A     		ldr	r2, .L907+8
 12679 0106 1A63     		str	r2, [r3, #48]
4929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
 12680              		.loc 1 4931 11
 12681 0108 FB68     		ldr	r3, [r7, #12]
 12682 010a 586A     		ldr	r0, [r3, #36]
 12683              		.loc 1 4931 71
 12684 010c FB68     		ldr	r3, [r7, #12]
 12685 010e 1B68     		ldr	r3, [r3]
 12686              		.loc 1 4931 66
 12687 0110 4C33     		adds	r3, r3, #76
 12688              		.loc 1 4931 11
 12689 0112 1946     		mov	r1, r3
 12690 0114 3A68     		ldr	r2, [r7]
 12691 0116 7B6A     		ldr	r3, [r7, #36]
 12692 0118 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12693 011c 0346     		mov	r3, r0
 12694              		.loc 1 4931 10 discriminator 1
 12695 011e 002B     		cmp	r3, #0
 12696 0120 00F08E80 		beq	.L901
4932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            DataLength) != HAL_OK)
4933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12697              		.loc 1 4935 16
 12698 0124 0123     		movs	r3, #1
 12699 0126 A8E0     		b	.L880
 12700              	.L888:
4936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC2:
4940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 12701              		.loc 1 4942 17
 12702 0128 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 309


 12703 012a 9B6A     		ldr	r3, [r3, #40]
 12704              		.loc 1 4942 52
 12705 012c 584A     		ldr	r2, .L907+12
 12706 012e 9A62     		str	r2, [r3, #40]
4943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 12707              		.loc 1 4943 17
 12708 0130 FB68     		ldr	r3, [r7, #12]
 12709 0132 9B6A     		ldr	r3, [r3, #40]
 12710              		.loc 1 4943 56
 12711 0134 574A     		ldr	r2, .L907+16
 12712 0136 DA62     		str	r2, [r3, #44]
4944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 12713              		.loc 1 4946 17
 12714 0138 FB68     		ldr	r3, [r7, #12]
 12715 013a 9B6A     		ldr	r3, [r3, #40]
 12716              		.loc 1 4946 53
 12717 013c 534A     		ldr	r2, .L907+8
 12718 013e 1A63     		str	r2, [r3, #48]
4947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
 12719              		.loc 1 4949 11
 12720 0140 FB68     		ldr	r3, [r7, #12]
 12721 0142 986A     		ldr	r0, [r3, #40]
 12722              		.loc 1 4949 71
 12723 0144 FB68     		ldr	r3, [r7, #12]
 12724 0146 1B68     		ldr	r3, [r3]
 12725              		.loc 1 4949 66
 12726 0148 4C33     		adds	r3, r3, #76
 12727              		.loc 1 4949 11
 12728 014a 1946     		mov	r1, r3
 12729 014c 3A68     		ldr	r2, [r7]
 12730 014e 7B6A     		ldr	r3, [r7, #36]
 12731 0150 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12732 0154 0346     		mov	r3, r0
 12733              		.loc 1 4949 10 discriminator 1
 12734 0156 002B     		cmp	r3, #0
 12735 0158 74D0     		beq	.L902
4950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            DataLength) != HAL_OK)
4951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12736              		.loc 1 4953 16
 12737 015a 0123     		movs	r3, #1
 12738 015c 8DE0     		b	.L880
 12739              	.L887:
4954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC3:
4958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
 12740              		.loc 1 4960 17
 12741 015e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 310


 12742 0160 DB6A     		ldr	r3, [r3, #44]
 12743              		.loc 1 4960 52
 12744 0162 4B4A     		ldr	r2, .L907+12
 12745 0164 9A62     		str	r2, [r3, #40]
4961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 12746              		.loc 1 4961 17
 12747 0166 FB68     		ldr	r3, [r7, #12]
 12748 0168 DB6A     		ldr	r3, [r3, #44]
 12749              		.loc 1 4961 56
 12750 016a 4A4A     		ldr	r2, .L907+16
 12751 016c DA62     		str	r2, [r3, #44]
4962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 12752              		.loc 1 4964 17
 12753 016e FB68     		ldr	r3, [r7, #12]
 12754 0170 DB6A     		ldr	r3, [r3, #44]
 12755              		.loc 1 4964 53
 12756 0172 464A     		ldr	r2, .L907+8
 12757 0174 1A63     		str	r2, [r3, #48]
4965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
 12758              		.loc 1 4967 11
 12759 0176 FB68     		ldr	r3, [r7, #12]
 12760 0178 D86A     		ldr	r0, [r3, #44]
 12761              		.loc 1 4967 71
 12762 017a FB68     		ldr	r3, [r7, #12]
 12763 017c 1B68     		ldr	r3, [r3]
 12764              		.loc 1 4967 66
 12765 017e 4C33     		adds	r3, r3, #76
 12766              		.loc 1 4967 11
 12767 0180 1946     		mov	r1, r3
 12768 0182 3A68     		ldr	r2, [r7]
 12769 0184 7B6A     		ldr	r3, [r7, #36]
 12770 0186 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12771 018a 0346     		mov	r3, r0
 12772              		.loc 1 4967 10 discriminator 1
 12773 018c 002B     		cmp	r3, #0
 12774 018e 5BD0     		beq	.L903
4968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            DataLength) != HAL_OK)
4969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12775              		.loc 1 4971 16
 12776 0190 0123     		movs	r3, #1
 12777 0192 72E0     		b	.L880
 12778              	.L886:
4972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC4:
4976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA capture callbacks */
4978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
 12779              		.loc 1 4978 17
 12780 0194 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 311


 12781 0196 1B6B     		ldr	r3, [r3, #48]
 12782              		.loc 1 4978 52
 12783 0198 3D4A     		ldr	r2, .L907+12
 12784 019a 9A62     		str	r2, [r3, #40]
4979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferHalfCpltCallback = TIM_DMACaptureHalfCplt;
 12785              		.loc 1 4979 17
 12786 019c FB68     		ldr	r3, [r7, #12]
 12787 019e 1B6B     		ldr	r3, [r3, #48]
 12788              		.loc 1 4979 56
 12789 01a0 3C4A     		ldr	r2, .L907+16
 12790 01a2 DA62     		str	r2, [r3, #44]
4980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
4982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 12791              		.loc 1 4982 17
 12792 01a4 FB68     		ldr	r3, [r7, #12]
 12793 01a6 1B6B     		ldr	r3, [r3, #48]
 12794              		.loc 1 4982 53
 12795 01a8 384A     		ldr	r2, .L907+8
 12796 01aa 1A63     		str	r2, [r3, #48]
4983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
4985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
 12797              		.loc 1 4985 11
 12798 01ac FB68     		ldr	r3, [r7, #12]
 12799 01ae 186B     		ldr	r0, [r3, #48]
 12800              		.loc 1 4985 71
 12801 01b0 FB68     		ldr	r3, [r7, #12]
 12802 01b2 1B68     		ldr	r3, [r3]
 12803              		.loc 1 4985 66
 12804 01b4 4C33     		adds	r3, r3, #76
 12805              		.loc 1 4985 11
 12806 01b6 1946     		mov	r1, r3
 12807 01b8 3A68     		ldr	r2, [r7]
 12808 01ba 7B6A     		ldr	r3, [r7, #36]
 12809 01bc FFF7FEFF 		bl	HAL_DMA_Start_IT
 12810 01c0 0346     		mov	r3, r0
 12811              		.loc 1 4985 10 discriminator 1
 12812 01c2 002B     		cmp	r3, #0
 12813 01c4 42D0     		beq	.L904
4986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            DataLength) != HAL_OK)
4987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
4988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
4989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12814              		.loc 1 4989 16
 12815 01c6 0123     		movs	r3, #1
 12816 01c8 57E0     		b	.L880
 12817              	.L885:
4990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
4991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
4992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
4993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_COM:
4994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
4995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA commutation callbacks */
4996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
 12818              		.loc 1 4996 17
 12819 01ca FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 312


 12820 01cc 5B6B     		ldr	r3, [r3, #52]
 12821              		.loc 1 4996 60
 12822 01ce 324A     		ldr	r2, .L907+20
 12823 01d0 9A62     		str	r2, [r3, #40]
4997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferHalfCpltCallback =  TIMEx_DMACommutationHalfCplt;
 12824              		.loc 1 4997 17
 12825 01d2 FB68     		ldr	r3, [r7, #12]
 12826 01d4 5B6B     		ldr	r3, [r3, #52]
 12827              		.loc 1 4997 64
 12828 01d6 314A     		ldr	r2, .L907+24
 12829 01d8 DA62     		str	r2, [r3, #44]
4998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
4999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
5000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
 12830              		.loc 1 5000 17
 12831 01da FB68     		ldr	r3, [r7, #12]
 12832 01dc 5B6B     		ldr	r3, [r3, #52]
 12833              		.loc 1 5000 61
 12834 01de 2B4A     		ldr	r2, .L907+8
 12835 01e0 1A63     		str	r2, [r3, #48]
5001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
5003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)&htim->Instance->DMAR, (ui
 12836              		.loc 1 5003 11
 12837 01e2 FB68     		ldr	r3, [r7, #12]
 12838 01e4 586B     		ldr	r0, [r3, #52]
 12839              		.loc 1 5003 79
 12840 01e6 FB68     		ldr	r3, [r7, #12]
 12841 01e8 1B68     		ldr	r3, [r3]
 12842              		.loc 1 5003 74
 12843 01ea 4C33     		adds	r3, r3, #76
 12844              		.loc 1 5003 11
 12845 01ec 1946     		mov	r1, r3
 12846 01ee 3A68     		ldr	r2, [r7]
 12847 01f0 7B6A     		ldr	r3, [r7, #36]
 12848 01f2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12849 01f6 0346     		mov	r3, r0
 12850              		.loc 1 5003 10 discriminator 1
 12851 01f8 002B     		cmp	r3, #0
 12852 01fa 29D0     		beq	.L905
5004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            DataLength) != HAL_OK)
5005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
5006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
5007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12853              		.loc 1 5007 16
 12854 01fc 0123     		movs	r3, #1
 12855 01fe 3CE0     		b	.L880
 12856              	.L883:
5008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
5009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
5010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
5012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA trigger callbacks */
5014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
 12857              		.loc 1 5014 17
 12858 0200 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 313


 12859 0202 9B6B     		ldr	r3, [r3, #56]
 12860              		.loc 1 5014 56
 12861 0204 264A     		ldr	r2, .L907+28
 12862 0206 9A62     		str	r2, [r3, #40]
5015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferHalfCpltCallback = TIM_DMATriggerHalfCplt;
 12863              		.loc 1 5015 17
 12864 0208 FB68     		ldr	r3, [r7, #12]
 12865 020a 9B6B     		ldr	r3, [r3, #56]
 12866              		.loc 1 5015 60
 12867 020c 254A     		ldr	r2, .L907+32
 12868 020e DA62     		str	r2, [r3, #44]
5016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the DMA error callback */
5018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
 12869              		.loc 1 5018 17
 12870 0210 FB68     		ldr	r3, [r7, #12]
 12871 0212 9B6B     		ldr	r3, [r3, #56]
 12872              		.loc 1 5018 57
 12873 0214 1D4A     		ldr	r2, .L907+8
 12874 0216 1A63     		str	r2, [r3, #48]
5019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the DMA channel */
5021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)&htim->Instance->DMAR, (uint32
 12875              		.loc 1 5021 11
 12876 0218 FB68     		ldr	r3, [r7, #12]
 12877 021a 986B     		ldr	r0, [r3, #56]
 12878              		.loc 1 5021 75
 12879 021c FB68     		ldr	r3, [r7, #12]
 12880 021e 1B68     		ldr	r3, [r3]
 12881              		.loc 1 5021 70
 12882 0220 4C33     		adds	r3, r3, #76
 12883              		.loc 1 5021 11
 12884 0222 1946     		mov	r1, r3
 12885 0224 3A68     		ldr	r2, [r7]
 12886 0226 7B6A     		ldr	r3, [r7, #36]
 12887 0228 FFF7FEFF 		bl	HAL_DMA_Start_IT
 12888 022c 0346     		mov	r3, r0
 12889              		.loc 1 5021 10 discriminator 1
 12890 022e 002B     		cmp	r3, #0
 12891 0230 10D0     		beq	.L906
5022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                            DataLength) != HAL_OK)
5023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
5024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
5025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 12892              		.loc 1 5025 16
 12893 0232 0123     		movs	r3, #1
 12894 0234 21E0     		b	.L880
 12895              	.L884:
5026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
5027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
5028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
5030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 12896              		.loc 1 5030 14
 12897 0236 0123     		movs	r3, #1
 12898 0238 FB75     		strb	r3, [r7, #23]
5031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
ARM GAS  /tmp//ccJMd58S.s 			page 314


 12899              		.loc 1 5031 7
 12900 023a 0CE0     		b	.L892
 12901              	.L900:
4919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12902              		.loc 1 4919 7
 12903 023c 00BF     		nop
 12904 023e 0AE0     		b	.L892
 12905              	.L901:
4937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12906              		.loc 1 4937 7
 12907 0240 00BF     		nop
 12908 0242 08E0     		b	.L892
 12909              	.L902:
4955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12910              		.loc 1 4955 7
 12911 0244 00BF     		nop
 12912 0246 06E0     		b	.L892
 12913              	.L903:
4973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12914              		.loc 1 4973 7
 12915 0248 00BF     		nop
 12916 024a 04E0     		b	.L892
 12917              	.L904:
4991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12918              		.loc 1 4991 7
 12919 024c 00BF     		nop
 12920 024e 02E0     		b	.L892
 12921              	.L905:
5009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12922              		.loc 1 5009 7
 12923 0250 00BF     		nop
 12924 0252 00E0     		b	.L892
 12925              	.L906:
5027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 12926              		.loc 1 5027 7
 12927 0254 00BF     		nop
 12928              	.L892:
5032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 12929              		.loc 1 5034 6
 12930 0256 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12931 0258 002B     		cmp	r3, #0
 12932 025a 0DD1     		bne	.L899
5035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Configure the DMA Burst Mode */
5037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Instance->DCR = (BurstBaseAddress | BurstLength);
 12933              		.loc 1 5037 9
 12934 025c FB68     		ldr	r3, [r7, #12]
 12935 025e 1B68     		ldr	r3, [r3]
 12936              		.loc 1 5037 45
 12937 0260 B968     		ldr	r1, [r7, #8]
 12938 0262 3A6A     		ldr	r2, [r7, #32]
 12939 0264 0A43     		orrs	r2, r2, r1
 12940              		.loc 1 5037 25
 12941 0266 9A64     		str	r2, [r3, #72]
5038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 315


5039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Enable the TIM DMA Request */
5040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
 12942              		.loc 1 5040 5
 12943 0268 FB68     		ldr	r3, [r7, #12]
 12944 026a 1B68     		ldr	r3, [r3]
 12945 026c D968     		ldr	r1, [r3, #12]
 12946 026e FB68     		ldr	r3, [r7, #12]
 12947 0270 1B68     		ldr	r3, [r3]
 12948 0272 7A68     		ldr	r2, [r7, #4]
 12949 0274 0A43     		orrs	r2, r2, r1
 12950 0276 DA60     		str	r2, [r3, #12]
 12951              	.L899:
5041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
5044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 12952              		.loc 1 5044 10
 12953 0278 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12954              	.L880:
5045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 12955              		.loc 1 5045 1
 12956 027a 1846     		mov	r0, r3
 12957 027c 1837     		adds	r7, r7, #24
 12958              	.LCFI354:
 12959              		.cfi_def_cfa_offset 8
 12960 027e BD46     		mov	sp, r7
 12961              	.LCFI355:
 12962              		.cfi_def_cfa_register 13
 12963              		@ sp needed
 12964 0280 80BD     		pop	{r7, pc}
 12965              	.L908:
 12966 0282 00BF     		.align	2
 12967              	.L907:
 12968 0284 00000000 		.word	TIM_DMAPeriodElapsedCplt
 12969 0288 00000000 		.word	TIM_DMAPeriodElapsedHalfCplt
 12970 028c 00000000 		.word	TIM_DMAError
 12971 0290 00000000 		.word	TIM_DMACaptureCplt
 12972 0294 00000000 		.word	TIM_DMACaptureHalfCplt
 12973 0298 00000000 		.word	TIMEx_DMACommutationCplt
 12974 029c 00000000 		.word	TIMEx_DMACommutationHalfCplt
 12975 02a0 00000000 		.word	TIM_DMATriggerCplt
 12976 02a4 00000000 		.word	TIM_DMATriggerHalfCplt
 12977              		.cfi_endproc
 12978              	.LFE132:
 12980              		.section	.text.HAL_TIM_DMABurst_ReadStop,"ax",%progbits
 12981              		.align	1
 12982              		.global	HAL_TIM_DMABurst_ReadStop
 12983              		.syntax unified
 12984              		.thumb
 12985              		.thumb_func
 12987              	HAL_TIM_DMABurst_ReadStop:
 12988              	.LFB133:
5046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Stop the DMA burst reading
5049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  BurstRequestSrc TIM DMA Request sources to disable.
ARM GAS  /tmp//ccJMd58S.s 			page 316


5051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
5052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
5054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 12989              		.loc 1 5054 1
 12990              		.cfi_startproc
 12991              		@ args = 0, pretend = 0, frame = 16
 12992              		@ frame_needed = 1, uses_anonymous_args = 0
 12993 0000 80B5     		push	{r7, lr}
 12994              	.LCFI356:
 12995              		.cfi_def_cfa_offset 8
 12996              		.cfi_offset 7, -8
 12997              		.cfi_offset 14, -4
 12998 0002 84B0     		sub	sp, sp, #16
 12999              	.LCFI357:
 13000              		.cfi_def_cfa_offset 24
 13001 0004 00AF     		add	r7, sp, #0
 13002              	.LCFI358:
 13003              		.cfi_def_cfa_register 7
 13004 0006 7860     		str	r0, [r7, #4]
 13005 0008 3960     		str	r1, [r7]
5055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 13006              		.loc 1 5055 21
 13007 000a 0023     		movs	r3, #0
 13008 000c FB73     		strb	r3, [r7, #15]
5056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
5058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
5059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA channel) */
5061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (BurstRequestSrc)
 13009              		.loc 1 5061 3
 13010 000e 3B68     		ldr	r3, [r7]
 13011 0010 B3F5804F 		cmp	r3, #16384
 13012 0014 50D0     		beq	.L910
 13013 0016 3B68     		ldr	r3, [r7]
 13014 0018 B3F5804F 		cmp	r3, #16384
 13015 001c 52D8     		bhi	.L911
 13016 001e 3B68     		ldr	r3, [r7]
 13017 0020 B3F5005F 		cmp	r3, #8192
 13018 0024 42D0     		beq	.L912
 13019 0026 3B68     		ldr	r3, [r7]
 13020 0028 B3F5005F 		cmp	r3, #8192
 13021 002c 4AD8     		bhi	.L911
 13022 002e 3B68     		ldr	r3, [r7]
 13023 0030 B3F5805F 		cmp	r3, #4096
 13024 0034 34D0     		beq	.L913
 13025 0036 3B68     		ldr	r3, [r7]
 13026 0038 B3F5805F 		cmp	r3, #4096
 13027 003c 42D8     		bhi	.L911
 13028 003e 3B68     		ldr	r3, [r7]
 13029 0040 B3F5006F 		cmp	r3, #2048
 13030 0044 26D0     		beq	.L914
 13031 0046 3B68     		ldr	r3, [r7]
 13032 0048 B3F5006F 		cmp	r3, #2048
 13033 004c 3AD8     		bhi	.L911
 13034 004e 3B68     		ldr	r3, [r7]
ARM GAS  /tmp//ccJMd58S.s 			page 317


 13035 0050 B3F5806F 		cmp	r3, #1024
 13036 0054 18D0     		beq	.L915
 13037 0056 3B68     		ldr	r3, [r7]
 13038 0058 B3F5806F 		cmp	r3, #1024
 13039 005c 32D8     		bhi	.L911
 13040 005e 3B68     		ldr	r3, [r7]
 13041 0060 B3F5807F 		cmp	r3, #256
 13042 0064 04D0     		beq	.L916
 13043 0066 3B68     		ldr	r3, [r7]
 13044 0068 B3F5007F 		cmp	r3, #512
 13045 006c 06D0     		beq	.L917
 13046 006e 29E0     		b	.L911
 13047              	.L916:
5062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_UPDATE:
5064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_UPDATE]);
 13048              		.loc 1 5065 13
 13049 0070 7B68     		ldr	r3, [r7, #4]
 13050 0072 1B6A     		ldr	r3, [r3, #32]
 13051 0074 1846     		mov	r0, r3
 13052 0076 FFF7FEFF 		bl	HAL_DMA_Abort_IT
5066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13053              		.loc 1 5066 7
 13054 007a 26E0     		b	.L918
 13055              	.L917:
5067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC1:
5069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC1]);
 13056              		.loc 1 5070 13
 13057 007c 7B68     		ldr	r3, [r7, #4]
 13058 007e 5B6A     		ldr	r3, [r3, #36]
 13059 0080 1846     		mov	r0, r3
 13060 0082 FFF7FEFF 		bl	HAL_DMA_Abort_IT
5071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13061              		.loc 1 5071 7
 13062 0086 20E0     		b	.L918
 13063              	.L915:
5072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC2:
5074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC2]);
 13064              		.loc 1 5075 13
 13065 0088 7B68     		ldr	r3, [r7, #4]
 13066 008a 9B6A     		ldr	r3, [r3, #40]
 13067 008c 1846     		mov	r0, r3
 13068 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
5076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13069              		.loc 1 5076 7
 13070 0092 1AE0     		b	.L918
 13071              	.L914:
5077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC3:
5079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC3]);
 13072              		.loc 1 5080 13
ARM GAS  /tmp//ccJMd58S.s 			page 318


 13073 0094 7B68     		ldr	r3, [r7, #4]
 13074 0096 DB6A     		ldr	r3, [r3, #44]
 13075 0098 1846     		mov	r0, r3
 13076 009a FFF7FEFF 		bl	HAL_DMA_Abort_IT
5081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13077              		.loc 1 5081 7
 13078 009e 14E0     		b	.L918
 13079              	.L913:
5082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_CC4:
5084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_CC4]);
 13080              		.loc 1 5085 13
 13081 00a0 7B68     		ldr	r3, [r7, #4]
 13082 00a2 1B6B     		ldr	r3, [r3, #48]
 13083 00a4 1846     		mov	r0, r3
 13084 00a6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
5086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13085              		.loc 1 5086 7
 13086 00aa 0EE0     		b	.L918
 13087              	.L912:
5087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_COM:
5089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_COMMUTATION]);
 13088              		.loc 1 5090 13
 13089 00ac 7B68     		ldr	r3, [r7, #4]
 13090 00ae 5B6B     		ldr	r3, [r3, #52]
 13091 00b0 1846     		mov	r0, r3
 13092 00b2 FFF7FEFF 		bl	HAL_DMA_Abort_IT
5091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13093              		.loc 1 5091 7
 13094 00b6 08E0     		b	.L918
 13095              	.L910:
5092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
5094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       (void)HAL_DMA_Abort_IT(htim->hdma[TIM_DMA_ID_TRIGGER]);
 13096              		.loc 1 5095 13
 13097 00b8 7B68     		ldr	r3, [r7, #4]
 13098 00ba 9B6B     		ldr	r3, [r3, #56]
 13099 00bc 1846     		mov	r0, r3
 13100 00be FFF7FEFF 		bl	HAL_DMA_Abort_IT
5096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13101              		.loc 1 5096 7
 13102 00c2 02E0     		b	.L918
 13103              	.L911:
5097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
5099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 13104              		.loc 1 5099 14
 13105 00c4 0123     		movs	r3, #1
 13106 00c6 FB73     		strb	r3, [r7, #15]
5100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13107              		.loc 1 5100 7
 13108 00c8 00BF     		nop
 13109              	.L918:
ARM GAS  /tmp//ccJMd58S.s 			page 319


5101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 13110              		.loc 1 5103 6
 13111 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 13112 00cc 002B     		cmp	r3, #0
 13113 00ce 0CD1     		bne	.L919
5104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Disable the TIM Update DMA request */
5106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
 13114              		.loc 1 5106 5
 13115 00d0 7B68     		ldr	r3, [r7, #4]
 13116 00d2 1B68     		ldr	r3, [r3]
 13117 00d4 D968     		ldr	r1, [r3, #12]
 13118 00d6 3B68     		ldr	r3, [r7]
 13119 00d8 DA43     		mvns	r2, r3
 13120 00da 7B68     		ldr	r3, [r7, #4]
 13121 00dc 1B68     		ldr	r3, [r3]
 13122 00de 0A40     		ands	r2, r2, r1
 13123 00e0 DA60     		str	r2, [r3, #12]
5107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Change the DMA burst operation state */
5109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 13124              		.loc 1 5109 25
 13125 00e2 7B68     		ldr	r3, [r7, #4]
 13126 00e4 0122     		movs	r2, #1
 13127 00e6 83F84620 		strb	r2, [r3, #70]
 13128              	.L919:
5110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
5113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 13129              		.loc 1 5113 10
 13130 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
5114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 13131              		.loc 1 5114 1
 13132 00ec 1846     		mov	r0, r3
 13133 00ee 1037     		adds	r7, r7, #16
 13134              	.LCFI359:
 13135              		.cfi_def_cfa_offset 8
 13136 00f0 BD46     		mov	sp, r7
 13137              	.LCFI360:
 13138              		.cfi_def_cfa_register 13
 13139              		@ sp needed
 13140 00f2 80BD     		pop	{r7, pc}
 13141              		.cfi_endproc
 13142              	.LFE133:
 13144              		.section	.text.HAL_TIM_GenerateEvent,"ax",%progbits
 13145              		.align	1
 13146              		.global	HAL_TIM_GenerateEvent
 13147              		.syntax unified
 13148              		.thumb
 13149              		.thumb_func
 13151              	HAL_TIM_GenerateEvent:
 13152              	.LFB134:
5115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
ARM GAS  /tmp//ccJMd58S.s 			page 320


5117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Generate a software event
5118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  EventSource specifies the event source.
5120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
5121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_UPDATE: Timer update Event source
5122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC1: Timer Capture Compare 1 Event source
5123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC2: Timer Capture Compare 2 Event source
5124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC3: Timer Capture Compare 3 Event source
5125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC4: Timer Capture Compare 4 Event source
5126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_COM: Timer COM event source
5127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_TRIGGER: Timer Trigger Event source
5128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_BREAK: Timer Break event source
5129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   Basic timers can only generate an update event.
5130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   TIM_EVENTSOURCE_COM is relevant only with advanced timer instances.
5131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note   TIM_EVENTSOURCE_BREAK are relevant only for timer instances
5132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         supporting a break input.
5133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
5134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_GenerateEvent(TIM_HandleTypeDef *htim, uint32_t EventSource)
5137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 13153              		.loc 1 5137 1
 13154              		.cfi_startproc
 13155              		@ args = 0, pretend = 0, frame = 8
 13156              		@ frame_needed = 1, uses_anonymous_args = 0
 13157              		@ link register save eliminated.
 13158 0000 80B4     		push	{r7}
 13159              	.LCFI361:
 13160              		.cfi_def_cfa_offset 4
 13161              		.cfi_offset 7, -4
 13162 0002 83B0     		sub	sp, sp, #12
 13163              	.LCFI362:
 13164              		.cfi_def_cfa_offset 16
 13165 0004 00AF     		add	r7, sp, #0
 13166              	.LCFI363:
 13167              		.cfi_def_cfa_register 7
 13168 0006 7860     		str	r0, [r7, #4]
 13169 0008 3960     		str	r1, [r7]
5138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
5139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
5140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(EventSource));
5141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Process Locked */
5143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
 13170              		.loc 1 5143 3
 13171 000a 7B68     		ldr	r3, [r7, #4]
 13172 000c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 13173 0010 012B     		cmp	r3, #1
 13174 0012 01D1     		bne	.L922
 13175              		.loc 1 5143 3 is_stmt 0 discriminator 1
 13176 0014 0223     		movs	r3, #2
 13177              		.loc 1 5143 3
 13178 0016 14E0     		b	.L923
 13179              	.L922:
 13180              		.loc 1 5143 3 discriminator 2
 13181 0018 7B68     		ldr	r3, [r7, #4]
 13182 001a 0122     		movs	r2, #1
ARM GAS  /tmp//ccJMd58S.s 			page 321


 13183 001c 83F83C20 		strb	r2, [r3, #60]
5144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the TIM state */
5146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 13184              		.loc 1 5146 15 is_stmt 1
 13185 0020 7B68     		ldr	r3, [r7, #4]
 13186 0022 0222     		movs	r2, #2
 13187 0024 83F83D20 		strb	r2, [r3, #61]
5147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the event sources */
5149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->EGR = EventSource;
 13188              		.loc 1 5149 7
 13189 0028 7B68     		ldr	r3, [r7, #4]
 13190 002a 1B68     		ldr	r3, [r3]
 13191              		.loc 1 5149 23
 13192 002c 3A68     		ldr	r2, [r7]
 13193 002e 5A61     		str	r2, [r3, #20]
5150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Change the TIM state */
5152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 13194              		.loc 1 5152 15
 13195 0030 7B68     		ldr	r3, [r7, #4]
 13196 0032 0122     		movs	r2, #1
 13197 0034 83F83D20 		strb	r2, [r3, #61]
5153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 13198              		.loc 1 5154 3
 13199 0038 7B68     		ldr	r3, [r7, #4]
 13200 003a 0022     		movs	r2, #0
 13201 003c 83F83C20 		strb	r2, [r3, #60]
5155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Return function status */
5157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 13202              		.loc 1 5157 10
 13203 0040 0023     		movs	r3, #0
 13204              	.L923:
5158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 13205              		.loc 1 5158 1
 13206 0042 1846     		mov	r0, r3
 13207 0044 0C37     		adds	r7, r7, #12
 13208              	.LCFI364:
 13209              		.cfi_def_cfa_offset 4
 13210 0046 BD46     		mov	sp, r7
 13211              	.LCFI365:
 13212              		.cfi_def_cfa_register 13
 13213              		@ sp needed
 13214 0048 80BC     		pop	{r7}
 13215              	.LCFI366:
 13216              		.cfi_restore 7
 13217              		.cfi_def_cfa_offset 0
 13218 004a 7047     		bx	lr
 13219              		.cfi_endproc
 13220              	.LFE134:
 13222              		.section	.text.HAL_TIM_ConfigOCrefClear,"ax",%progbits
 13223              		.align	1
 13224              		.global	HAL_TIM_ConfigOCrefClear
 13225              		.syntax unified
ARM GAS  /tmp//ccJMd58S.s 			page 322


 13226              		.thumb
 13227              		.thumb_func
 13229              	HAL_TIM_ConfigOCrefClear:
 13230              	.LFB135:
5159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configures the OCRef clear feature
5162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sClearInputConfig pointer to a TIM_ClearInputConfigTypeDef structure that
5164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         contains the OCREF clear feature and parameters for the TIM peripheral.
5165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel specifies the TIM Channel
5166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
5167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
5168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
5169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
5170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
5171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
5172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigOCrefClear(TIM_HandleTypeDef *htim,
5174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                            const TIM_ClearInputConfigTypeDef *sClearInputConfig,
5175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                            uint32_t Channel)
5176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 13231              		.loc 1 5176 1
 13232              		.cfi_startproc
 13233              		@ args = 0, pretend = 0, frame = 24
 13234              		@ frame_needed = 1, uses_anonymous_args = 0
 13235 0000 80B5     		push	{r7, lr}
 13236              	.LCFI367:
 13237              		.cfi_def_cfa_offset 8
 13238              		.cfi_offset 7, -8
 13239              		.cfi_offset 14, -4
 13240 0002 86B0     		sub	sp, sp, #24
 13241              	.LCFI368:
 13242              		.cfi_def_cfa_offset 32
 13243 0004 00AF     		add	r7, sp, #0
 13244              	.LCFI369:
 13245              		.cfi_def_cfa_register 7
 13246 0006 F860     		str	r0, [r7, #12]
 13247 0008 B960     		str	r1, [r7, #8]
 13248 000a 7A60     		str	r2, [r7, #4]
5177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 13249              		.loc 1 5177 21
 13250 000c 0023     		movs	r3, #0
 13251 000e FB75     		strb	r3, [r7, #23]
5178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
5180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_OCXREF_CLEAR_INSTANCE(htim->Instance));
5181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLEARINPUT_SOURCE(sClearInputConfig->ClearInputSource));
5182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Process Locked */
5184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
 13252              		.loc 1 5184 3
 13253 0010 FB68     		ldr	r3, [r7, #12]
 13254 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 13255 0016 012B     		cmp	r3, #1
 13256 0018 01D1     		bne	.L925
 13257              		.loc 1 5184 3 is_stmt 0 discriminator 1
ARM GAS  /tmp//ccJMd58S.s 			page 323


 13258 001a 0223     		movs	r3, #2
 13259              		.loc 1 5184 3
 13260 001c B8E0     		b	.L926
 13261              	.L925:
 13262              		.loc 1 5184 3 discriminator 2
 13263 001e FB68     		ldr	r3, [r7, #12]
 13264 0020 0122     		movs	r2, #1
 13265 0022 83F83C20 		strb	r2, [r3, #60]
5185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 13266              		.loc 1 5186 15 is_stmt 1
 13267 0026 FB68     		ldr	r3, [r7, #12]
 13268 0028 0222     		movs	r2, #2
 13269 002a 83F83D20 		strb	r2, [r3, #61]
5187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (sClearInputConfig->ClearInputSource)
 13270              		.loc 1 5188 28
 13271 002e BB68     		ldr	r3, [r7, #8]
 13272 0030 5B68     		ldr	r3, [r3, #4]
 13273              		.loc 1 5188 3
 13274 0032 002B     		cmp	r3, #0
 13275 0034 02D0     		beq	.L927
 13276 0036 012B     		cmp	r3, #1
 13277 0038 09D0     		beq	.L928
 13278 003a 21E0     		b	.L947
 13279              	.L927:
5189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLEARINPUTSOURCE_NONE:
5191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Clear the OCREF clear selection bit and the the ETR Bits */
5193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       CLEAR_BIT(htim->Instance->SMCR, (TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP))
 13280              		.loc 1 5193 7
 13281 003c FB68     		ldr	r3, [r7, #12]
 13282 003e 1B68     		ldr	r3, [r3]
 13283 0040 9A68     		ldr	r2, [r3, #8]
 13284 0042 FB68     		ldr	r3, [r7, #12]
 13285 0044 1B68     		ldr	r3, [r3]
 13286 0046 22F47F42 		bic	r2, r2, #65280
 13287 004a 9A60     		str	r2, [r3, #8]
5194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13288              		.loc 1 5194 7
 13289 004c 1BE0     		b	.L930
 13290              	.L928:
5195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLEARINPUTSOURCE_ETR:
5198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
5200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLEARINPUT_POLARITY(sClearInputConfig->ClearInputPolarity));
5201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLEARINPUT_PRESCALER(sClearInputConfig->ClearInputPrescaler));
5202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLEARINPUT_FILTER(sClearInputConfig->ClearInputFilter));
5203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* When OCRef clear feature is used with ETR source, ETR prescaler must be off */
5205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (sClearInputConfig->ClearInputPrescaler != TIM_CLEARINPUTPRESCALER_DIV1)
 13291              		.loc 1 5205 28
 13292 004e BB68     		ldr	r3, [r7, #8]
 13293 0050 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 324


 13294              		.loc 1 5205 10
 13295 0052 002B     		cmp	r3, #0
 13296 0054 09D0     		beq	.L931
5206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
5207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->State = HAL_TIM_STATE_READY;
 13297              		.loc 1 5207 21
 13298 0056 FB68     		ldr	r3, [r7, #12]
 13299 0058 0122     		movs	r2, #1
 13300 005a 83F83D20 		strb	r2, [r3, #61]
5208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         __HAL_UNLOCK(htim);
 13301              		.loc 1 5208 9
 13302 005e FB68     		ldr	r3, [r7, #12]
 13303 0060 0022     		movs	r2, #0
 13304 0062 83F83C20 		strb	r2, [r3, #60]
5209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 13305              		.loc 1 5209 16
 13306 0066 0123     		movs	r3, #1
 13307 0068 92E0     		b	.L926
 13308              	.L931:
5210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
5211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
 13309              		.loc 1 5212 7
 13310 006a FB68     		ldr	r3, [r7, #12]
 13311 006c 1868     		ldr	r0, [r3]
5213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClearInputConfig->ClearInputPrescaler,
 13312              		.loc 1 5213 42
 13313 006e BB68     		ldr	r3, [r7, #8]
 13314 0070 D968     		ldr	r1, [r3, #12]
5214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClearInputConfig->ClearInputPolarity,
 13315              		.loc 1 5214 42
 13316 0072 BB68     		ldr	r3, [r7, #8]
 13317 0074 9A68     		ldr	r2, [r3, #8]
5215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClearInputConfig->ClearInputFilter);
 13318              		.loc 1 5215 42
 13319 0076 BB68     		ldr	r3, [r7, #8]
 13320 0078 1B69     		ldr	r3, [r3, #16]
5212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClearInputConfig->ClearInputPrescaler,
 13321              		.loc 1 5212 7
 13322 007a FFF7FEFF 		bl	TIM_ETR_SetConfig
5216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13323              		.loc 1 5216 7
 13324 007e 02E0     		b	.L930
 13325              	.L947:
5217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
5220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 13326              		.loc 1 5220 14
 13327 0080 0123     		movs	r3, #1
 13328 0082 FB75     		strb	r3, [r7, #23]
5221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13329              		.loc 1 5221 7
 13330 0084 00BF     		nop
 13331              	.L930:
5222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 325


5224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (status == HAL_OK)
 13332              		.loc 1 5224 6
 13333 0086 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 13334 0088 002B     		cmp	r3, #0
 13335 008a 78D1     		bne	.L932
5225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     switch (Channel)
 13336              		.loc 1 5226 5
 13337 008c 7B68     		ldr	r3, [r7, #4]
 13338 008e 0C2B     		cmp	r3, #12
 13339 0090 74D8     		bhi	.L948
 13340 0092 01A2     		adr	r2, .L935
 13341 0094 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13342              		.p2align 2
 13343              	.L935:
 13344 0098 CD000000 		.word	.L938+1
 13345 009c 7D010000 		.word	.L948+1
 13346 00a0 7D010000 		.word	.L948+1
 13347 00a4 7D010000 		.word	.L948+1
 13348 00a8 F9000000 		.word	.L937+1
 13349 00ac 7D010000 		.word	.L948+1
 13350 00b0 7D010000 		.word	.L948+1
 13351 00b4 7D010000 		.word	.L948+1
 13352 00b8 25010000 		.word	.L936+1
 13353 00bc 7D010000 		.word	.L948+1
 13354 00c0 7D010000 		.word	.L948+1
 13355 00c4 7D010000 		.word	.L948+1
 13356 00c8 51010000 		.word	.L934+1
 13357              		.p2align 1
 13358              	.L938:
5227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_1:
5229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
5230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
 13359              		.loc 1 5230 30
 13360 00cc BB68     		ldr	r3, [r7, #8]
 13361 00ce 1B68     		ldr	r3, [r3]
 13362              		.loc 1 5230 12
 13363 00d0 002B     		cmp	r3, #0
 13364 00d2 08D0     		beq	.L939
5231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
5232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Enable the OCREF clear feature for Channel 1 */
5233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           SET_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC1CE);
 13365              		.loc 1 5233 11
 13366 00d4 FB68     		ldr	r3, [r7, #12]
 13367 00d6 1B68     		ldr	r3, [r3]
 13368 00d8 9A69     		ldr	r2, [r3, #24]
 13369 00da FB68     		ldr	r3, [r7, #12]
 13370 00dc 1B68     		ldr	r3, [r3]
 13371 00de 42F08002 		orr	r2, r2, #128
 13372 00e2 9A61     		str	r2, [r3, #24]
5234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
5235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         else
5236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
5237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Disable the OCREF clear feature for Channel 1 */
5238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           CLEAR_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC1CE);
5239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
ARM GAS  /tmp//ccJMd58S.s 			page 326


5240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
 13373              		.loc 1 5240 9
 13374 00e4 4BE0     		b	.L932
 13375              	.L939:
5238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
 13376              		.loc 1 5238 11
 13377 00e6 FB68     		ldr	r3, [r7, #12]
 13378 00e8 1B68     		ldr	r3, [r3]
 13379 00ea 9A69     		ldr	r2, [r3, #24]
 13380 00ec FB68     		ldr	r3, [r7, #12]
 13381 00ee 1B68     		ldr	r3, [r3]
 13382 00f0 22F08002 		bic	r2, r2, #128
 13383 00f4 9A61     		str	r2, [r3, #24]
 13384              		.loc 1 5240 9
 13385 00f6 42E0     		b	.L932
 13386              	.L937:
5241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
5242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_2:
5243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
5244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
 13387              		.loc 1 5244 30
 13388 00f8 BB68     		ldr	r3, [r7, #8]
 13389 00fa 1B68     		ldr	r3, [r3]
 13390              		.loc 1 5244 12
 13391 00fc 002B     		cmp	r3, #0
 13392 00fe 08D0     		beq	.L941
5245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
5246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Enable the OCREF clear feature for Channel 2 */
5247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           SET_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC2CE);
 13393              		.loc 1 5247 11
 13394 0100 FB68     		ldr	r3, [r7, #12]
 13395 0102 1B68     		ldr	r3, [r3]
 13396 0104 9A69     		ldr	r2, [r3, #24]
 13397 0106 FB68     		ldr	r3, [r7, #12]
 13398 0108 1B68     		ldr	r3, [r3]
 13399 010a 42F40042 		orr	r2, r2, #32768
 13400 010e 9A61     		str	r2, [r3, #24]
5248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
5249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         else
5250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
5251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Disable the OCREF clear feature for Channel 2 */
5252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           CLEAR_BIT(htim->Instance->CCMR1, TIM_CCMR1_OC2CE);
5253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
5254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
 13401              		.loc 1 5254 9
 13402 0110 35E0     		b	.L932
 13403              	.L941:
5252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
 13404              		.loc 1 5252 11
 13405 0112 FB68     		ldr	r3, [r7, #12]
 13406 0114 1B68     		ldr	r3, [r3]
 13407 0116 9A69     		ldr	r2, [r3, #24]
 13408 0118 FB68     		ldr	r3, [r7, #12]
 13409 011a 1B68     		ldr	r3, [r3]
 13410 011c 22F40042 		bic	r2, r2, #32768
 13411 0120 9A61     		str	r2, [r3, #24]
 13412              		.loc 1 5254 9
ARM GAS  /tmp//ccJMd58S.s 			page 327


 13413 0122 2CE0     		b	.L932
 13414              	.L936:
5255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
5256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_3:
5257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
5258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
 13415              		.loc 1 5258 30
 13416 0124 BB68     		ldr	r3, [r7, #8]
 13417 0126 1B68     		ldr	r3, [r3]
 13418              		.loc 1 5258 12
 13419 0128 002B     		cmp	r3, #0
 13420 012a 08D0     		beq	.L943
5259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
5260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Enable the OCREF clear feature for Channel 3 */
5261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           SET_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC3CE);
 13421              		.loc 1 5261 11
 13422 012c FB68     		ldr	r3, [r7, #12]
 13423 012e 1B68     		ldr	r3, [r3]
 13424 0130 DA69     		ldr	r2, [r3, #28]
 13425 0132 FB68     		ldr	r3, [r7, #12]
 13426 0134 1B68     		ldr	r3, [r3]
 13427 0136 42F08002 		orr	r2, r2, #128
 13428 013a DA61     		str	r2, [r3, #28]
5262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
5263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         else
5264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
5265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Disable the OCREF clear feature for Channel 3 */
5266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           CLEAR_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC3CE);
5267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
5268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
 13429              		.loc 1 5268 9
 13430 013c 1FE0     		b	.L932
 13431              	.L943:
5266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
 13432              		.loc 1 5266 11
 13433 013e FB68     		ldr	r3, [r7, #12]
 13434 0140 1B68     		ldr	r3, [r3]
 13435 0142 DA69     		ldr	r2, [r3, #28]
 13436 0144 FB68     		ldr	r3, [r7, #12]
 13437 0146 1B68     		ldr	r3, [r3]
 13438 0148 22F08002 		bic	r2, r2, #128
 13439 014c DA61     		str	r2, [r3, #28]
 13440              		.loc 1 5268 9
 13441 014e 16E0     		b	.L932
 13442              	.L934:
5269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
5270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case TIM_CHANNEL_4:
5271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
5272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         if (sClearInputConfig->ClearInputState != (uint32_t)DISABLE)
 13443              		.loc 1 5272 30
 13444 0150 BB68     		ldr	r3, [r7, #8]
 13445 0152 1B68     		ldr	r3, [r3]
 13446              		.loc 1 5272 12
 13447 0154 002B     		cmp	r3, #0
 13448 0156 08D0     		beq	.L945
5273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
5274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Enable the OCREF clear feature for Channel 4 */
ARM GAS  /tmp//ccJMd58S.s 			page 328


5275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           SET_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC4CE);
 13449              		.loc 1 5275 11
 13450 0158 FB68     		ldr	r3, [r7, #12]
 13451 015a 1B68     		ldr	r3, [r3]
 13452 015c DA69     		ldr	r2, [r3, #28]
 13453 015e FB68     		ldr	r3, [r7, #12]
 13454 0160 1B68     		ldr	r3, [r3]
 13455 0162 42F40042 		orr	r2, r2, #32768
 13456 0166 DA61     		str	r2, [r3, #28]
5276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
5277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         else
5278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         {
5279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           /* Disable the OCREF clear feature for Channel 4 */
5280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****           CLEAR_BIT(htim->Instance->CCMR2, TIM_CCMR2_OC4CE);
5281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
5282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
 13457              		.loc 1 5282 9
 13458 0168 09E0     		b	.L932
 13459              	.L945:
5280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         }
 13460              		.loc 1 5280 11
 13461 016a FB68     		ldr	r3, [r7, #12]
 13462 016c 1B68     		ldr	r3, [r3]
 13463 016e DA69     		ldr	r2, [r3, #28]
 13464 0170 FB68     		ldr	r3, [r7, #12]
 13465 0172 1B68     		ldr	r3, [r3]
 13466 0174 22F40042 		bic	r2, r2, #32768
 13467 0178 DA61     		str	r2, [r3, #28]
 13468              		.loc 1 5282 9
 13469 017a 00E0     		b	.L932
 13470              	.L948:
5283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
5284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       default:
5285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
 13471              		.loc 1 5285 9
 13472 017c 00BF     		nop
 13473              	.L932:
5286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 13474              		.loc 1 5289 15
 13475 017e FB68     		ldr	r3, [r7, #12]
 13476 0180 0122     		movs	r2, #1
 13477 0182 83F83D20 		strb	r2, [r3, #61]
5290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 13478              		.loc 1 5291 3
 13479 0186 FB68     		ldr	r3, [r7, #12]
 13480 0188 0022     		movs	r2, #0
 13481 018a 83F83C20 		strb	r2, [r3, #60]
5292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 13482              		.loc 1 5293 10
 13483 018e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 13484              	.L926:
5294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
ARM GAS  /tmp//ccJMd58S.s 			page 329


 13485              		.loc 1 5294 1
 13486 0190 1846     		mov	r0, r3
 13487 0192 1837     		adds	r7, r7, #24
 13488              	.LCFI370:
 13489              		.cfi_def_cfa_offset 8
 13490 0194 BD46     		mov	sp, r7
 13491              	.LCFI371:
 13492              		.cfi_def_cfa_register 13
 13493              		@ sp needed
 13494 0196 80BD     		pop	{r7, pc}
 13495              		.cfi_endproc
 13496              	.LFE135:
 13498              		.section	.text.HAL_TIM_ConfigClockSource,"ax",%progbits
 13499              		.align	1
 13500              		.global	HAL_TIM_ConfigClockSource
 13501              		.syntax unified
 13502              		.thumb
 13503              		.thumb_func
 13505              	HAL_TIM_ConfigClockSource:
 13506              	.LFB136:
5295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief   Configures the clock source to be used
5298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
5300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         contains the clock source information for the TIM peripheral.
5301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
5302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *
5304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 13507              		.loc 1 5304 1
 13508              		.cfi_startproc
 13509              		@ args = 0, pretend = 0, frame = 16
 13510              		@ frame_needed = 1, uses_anonymous_args = 0
 13511 0000 80B5     		push	{r7, lr}
 13512              	.LCFI372:
 13513              		.cfi_def_cfa_offset 8
 13514              		.cfi_offset 7, -8
 13515              		.cfi_offset 14, -4
 13516 0002 84B0     		sub	sp, sp, #16
 13517              	.LCFI373:
 13518              		.cfi_def_cfa_offset 24
 13519 0004 00AF     		add	r7, sp, #0
 13520              	.LCFI374:
 13521              		.cfi_def_cfa_register 7
 13522 0006 7860     		str	r0, [r7, #4]
 13523 0008 3960     		str	r1, [r7]
5305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 13524              		.loc 1 5305 21
 13525 000a 0023     		movs	r3, #0
 13526 000c FB73     		strb	r3, [r7, #15]
5306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
5307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Process Locked */
5309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
 13527              		.loc 1 5309 3
 13528 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 330


 13529 0010 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 13530 0014 012B     		cmp	r3, #1
 13531 0016 01D1     		bne	.L950
 13532              		.loc 1 5309 3 is_stmt 0 discriminator 1
 13533 0018 0223     		movs	r3, #2
 13534              		.loc 1 5309 3
 13535 001a B4E0     		b	.L951
 13536              	.L950:
 13537              		.loc 1 5309 3 discriminator 2
 13538 001c 7B68     		ldr	r3, [r7, #4]
 13539 001e 0122     		movs	r2, #1
 13540 0020 83F83C20 		strb	r2, [r3, #60]
5310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 13541              		.loc 1 5311 15 is_stmt 1
 13542 0024 7B68     		ldr	r3, [r7, #4]
 13543 0026 0222     		movs	r2, #2
 13544 0028 83F83D20 		strb	r2, [r3, #61]
5312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
5314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));
5315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
5317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
 13545              		.loc 1 5317 17
 13546 002c 7B68     		ldr	r3, [r7, #4]
 13547 002e 1B68     		ldr	r3, [r3]
 13548              		.loc 1 5317 11
 13549 0030 9B68     		ldr	r3, [r3, #8]
 13550 0032 BB60     		str	r3, [r7, #8]
5318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 13551              		.loc 1 5318 11
 13552 0034 BB68     		ldr	r3, [r7, #8]
 13553 0036 23F07703 		bic	r3, r3, #119
 13554 003a BB60     		str	r3, [r7, #8]
5319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 13555              		.loc 1 5319 11
 13556 003c BB68     		ldr	r3, [r7, #8]
 13557 003e 23F47F43 		bic	r3, r3, #65280
 13558 0042 BB60     		str	r3, [r7, #8]
5320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 13559              		.loc 1 5320 7
 13560 0044 7B68     		ldr	r3, [r7, #4]
 13561 0046 1B68     		ldr	r3, [r3]
 13562              		.loc 1 5320 24
 13563 0048 BA68     		ldr	r2, [r7, #8]
 13564 004a 9A60     		str	r2, [r3, #8]
5321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (sClockSourceConfig->ClockSource)
 13565              		.loc 1 5322 29
 13566 004c 3B68     		ldr	r3, [r7]
 13567 004e 1B68     		ldr	r3, [r3]
 13568              		.loc 1 5322 3
 13569 0050 B3F5005F 		cmp	r3, #8192
 13570 0054 3ED0     		beq	.L952
 13571 0056 B3F5005F 		cmp	r3, #8192
 13572 005a 00F28780 		bhi	.L953
ARM GAS  /tmp//ccJMd58S.s 			page 331


 13573 005e B3F5805F 		cmp	r3, #4096
 13574 0062 00F08680 		beq	.L961
 13575 0066 B3F5805F 		cmp	r3, #4096
 13576 006a 7FD8     		bhi	.L953
 13577 006c 702B     		cmp	r3, #112
 13578 006e 1AD0     		beq	.L955
 13579 0070 702B     		cmp	r3, #112
 13580 0072 7BD8     		bhi	.L953
 13581 0074 602B     		cmp	r3, #96
 13582 0076 50D0     		beq	.L956
 13583 0078 602B     		cmp	r3, #96
 13584 007a 77D8     		bhi	.L953
 13585 007c 502B     		cmp	r3, #80
 13586 007e 3CD0     		beq	.L957
 13587 0080 502B     		cmp	r3, #80
 13588 0082 73D8     		bhi	.L953
 13589 0084 402B     		cmp	r3, #64
 13590 0086 58D0     		beq	.L958
 13591 0088 402B     		cmp	r3, #64
 13592 008a 6FD8     		bhi	.L953
 13593 008c 302B     		cmp	r3, #48
 13594 008e 64D0     		beq	.L959
 13595 0090 302B     		cmp	r3, #48
 13596 0092 6BD8     		bhi	.L953
 13597 0094 202B     		cmp	r3, #32
 13598 0096 60D0     		beq	.L959
 13599 0098 202B     		cmp	r3, #32
 13600 009a 67D8     		bhi	.L953
 13601 009c 002B     		cmp	r3, #0
 13602 009e 5CD0     		beq	.L959
 13603 00a0 102B     		cmp	r3, #16
 13604 00a2 5AD0     		beq	.L959
 13605 00a4 62E0     		b	.L953
 13606              	.L955:
5323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_INTERNAL:
5325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_INSTANCE(htim->Instance));
5327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
5328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ETRMODE1:
5331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 1 (ETRF)*/
5333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
5334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
5336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
5337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the ETR Clock source */
5341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
 13607              		.loc 1 5341 7
 13608 00a6 7B68     		ldr	r3, [r7, #4]
 13609 00a8 1868     		ldr	r0, [r3]
5342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
ARM GAS  /tmp//ccJMd58S.s 			page 332


 13610              		.loc 1 5342 43
 13611 00aa 3B68     		ldr	r3, [r7]
 13612 00ac 9968     		ldr	r1, [r3, #8]
5343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity,
 13613              		.loc 1 5343 43
 13614 00ae 3B68     		ldr	r3, [r7]
 13615 00b0 5A68     		ldr	r2, [r3, #4]
5344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
 13616              		.loc 1 5344 43
 13617 00b2 3B68     		ldr	r3, [r7]
 13618 00b4 DB68     		ldr	r3, [r3, #12]
5341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
 13619              		.loc 1 5341 7
 13620 00b6 FFF7FEFF 		bl	TIM_ETR_SetConfig
5345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Select the External clock mode1 and the ETRF trigger */
5347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR;
 13621              		.loc 1 5347 21
 13622 00ba 7B68     		ldr	r3, [r7, #4]
 13623 00bc 1B68     		ldr	r3, [r3]
 13624              		.loc 1 5347 15
 13625 00be 9B68     		ldr	r3, [r3, #8]
 13626 00c0 BB60     		str	r3, [r7, #8]
5348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 13627              		.loc 1 5348 15
 13628 00c2 BB68     		ldr	r3, [r7, #8]
 13629 00c4 43F07703 		orr	r3, r3, #119
 13630 00c8 BB60     		str	r3, [r7, #8]
5349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Write to TIMx SMCR */
5350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->SMCR = tmpsmcr;
 13631              		.loc 1 5350 11
 13632 00ca 7B68     		ldr	r3, [r7, #4]
 13633 00cc 1B68     		ldr	r3, [r3]
 13634              		.loc 1 5350 28
 13635 00ce BA68     		ldr	r2, [r7, #8]
 13636 00d0 9A60     		str	r2, [r3, #8]
5351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13637              		.loc 1 5351 7
 13638 00d2 4FE0     		b	.L960
 13639              	.L952:
5352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ETRMODE2:
5355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 2 (ETRF)*/
5357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(htim->Instance));
5358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
5360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
5361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the ETR Clock source */
5365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
 13640              		.loc 1 5365 7
 13641 00d4 7B68     		ldr	r3, [r7, #4]
 13642 00d6 1868     		ldr	r0, [r3]
ARM GAS  /tmp//ccJMd58S.s 			page 333


5366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
 13643              		.loc 1 5366 43
 13644 00d8 3B68     		ldr	r3, [r7]
 13645 00da 9968     		ldr	r1, [r3, #8]
5367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity,
 13646              		.loc 1 5367 43
 13647 00dc 3B68     		ldr	r3, [r7]
 13648 00de 5A68     		ldr	r2, [r3, #4]
5368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
 13649              		.loc 1 5368 43
 13650 00e0 3B68     		ldr	r3, [r7]
 13651 00e2 DB68     		ldr	r3, [r3, #12]
5365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
 13652              		.loc 1 5365 7
 13653 00e4 FFF7FEFF 		bl	TIM_ETR_SetConfig
5369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Enable the External clock mode2 */
5370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SMCR_ECE;
 13654              		.loc 1 5370 11
 13655 00e8 7B68     		ldr	r3, [r7, #4]
 13656 00ea 1B68     		ldr	r3, [r3]
 13657              		.loc 1 5370 21
 13658 00ec 9A68     		ldr	r2, [r3, #8]
 13659              		.loc 1 5370 11
 13660 00ee 7B68     		ldr	r3, [r7, #4]
 13661 00f0 1B68     		ldr	r3, [r3]
 13662              		.loc 1 5370 28
 13663 00f2 42F48042 		orr	r2, r2, #16384
 13664 00f6 9A60     		str	r2, [r3, #8]
5371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13665              		.loc 1 5371 7
 13666 00f8 3CE0     		b	.L960
 13667              	.L957:
5372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_TI1:
5375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
5377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
5378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
5380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
 13668              		.loc 1 5383 7
 13669 00fa 7B68     		ldr	r3, [r7, #4]
 13670 00fc 1868     		ldr	r0, [r3]
5384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
 13671              		.loc 1 5384 50
 13672 00fe 3B68     		ldr	r3, [r7]
 13673 0100 5968     		ldr	r1, [r3, #4]
5385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
 13674              		.loc 1 5385 50
 13675 0102 3B68     		ldr	r3, [r7]
 13676 0104 DB68     		ldr	r3, [r3, #12]
5383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
 13677              		.loc 1 5383 7
ARM GAS  /tmp//ccJMd58S.s 			page 334


 13678 0106 1A46     		mov	r2, r3
 13679 0108 FFF7FEFF 		bl	TIM_TI1_ConfigInputStage
5386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 13680              		.loc 1 5386 7
 13681 010c 7B68     		ldr	r3, [r7, #4]
 13682 010e 1B68     		ldr	r3, [r3]
 13683 0110 5021     		movs	r1, #80
 13684 0112 1846     		mov	r0, r3
 13685 0114 FFF7FEFF 		bl	TIM_ITRx_SetConfig
5387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13686              		.loc 1 5387 7
 13687 0118 2CE0     		b	.L960
 13688              	.L956:
5388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_TI2:
5391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 (ETRF)*/
5393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
5394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check TI2 input conditioning related parameters */
5396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
 13689              		.loc 1 5399 7
 13690 011a 7B68     		ldr	r3, [r7, #4]
 13691 011c 1868     		ldr	r0, [r3]
5400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
 13692              		.loc 1 5400 50
 13693 011e 3B68     		ldr	r3, [r7]
 13694 0120 5968     		ldr	r1, [r3, #4]
5401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
 13695              		.loc 1 5401 50
 13696 0122 3B68     		ldr	r3, [r7]
 13697 0124 DB68     		ldr	r3, [r3, #12]
5399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
 13698              		.loc 1 5399 7
 13699 0126 1A46     		mov	r2, r3
 13700 0128 FFF7FEFF 		bl	TIM_TI2_ConfigInputStage
5402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 13701              		.loc 1 5402 7
 13702 012c 7B68     		ldr	r3, [r7, #4]
 13703 012e 1B68     		ldr	r3, [r3]
 13704 0130 6021     		movs	r1, #96
 13705 0132 1846     		mov	r0, r3
 13706 0134 FFF7FEFF 		bl	TIM_ITRx_SetConfig
5403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13707              		.loc 1 5403 7
 13708 0138 1CE0     		b	.L960
 13709              	.L958:
5404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_TI1ED:
5407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
5409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
ARM GAS  /tmp//ccJMd58S.s 			page 335


5410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
5412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
5413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
5414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
 13710              		.loc 1 5415 7
 13711 013a 7B68     		ldr	r3, [r7, #4]
 13712 013c 1868     		ldr	r0, [r3]
5416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
 13713              		.loc 1 5416 50
 13714 013e 3B68     		ldr	r3, [r7]
 13715 0140 5968     		ldr	r1, [r3, #4]
5417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
 13716              		.loc 1 5417 50
 13717 0142 3B68     		ldr	r3, [r7]
 13718 0144 DB68     		ldr	r3, [r3, #12]
5415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
 13719              		.loc 1 5415 7
 13720 0146 1A46     		mov	r2, r3
 13721 0148 FFF7FEFF 		bl	TIM_TI1_ConfigInputStage
5418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 13722              		.loc 1 5418 7
 13723 014c 7B68     		ldr	r3, [r7, #4]
 13724 014e 1B68     		ldr	r3, [r3]
 13725 0150 4021     		movs	r1, #64
 13726 0152 1846     		mov	r0, r3
 13727 0154 FFF7FEFF 		bl	TIM_ITRx_SetConfig
5419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13728              		.loc 1 5419 7
 13729 0158 0CE0     		b	.L960
 13730              	.L959:
5420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR0:
5423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR1:
5424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR2:
5425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CLOCKSOURCE_ITR3:
5426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check whether or not the timer instance supports internal trigger input */
5428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
5429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 13731              		.loc 1 5430 7
 13732 015a 7B68     		ldr	r3, [r7, #4]
 13733 015c 1A68     		ldr	r2, [r3]
 13734              		.loc 1 5430 60
 13735 015e 3B68     		ldr	r3, [r7]
 13736 0160 1B68     		ldr	r3, [r3]
 13737              		.loc 1 5430 7
 13738 0162 1946     		mov	r1, r3
 13739 0164 1046     		mov	r0, r2
 13740 0166 FFF7FEFF 		bl	TIM_ITRx_SetConfig
5431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13741              		.loc 1 5431 7
 13742 016a 03E0     		b	.L960
 13743              	.L953:
ARM GAS  /tmp//ccJMd58S.s 			page 336


5432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
5435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 13744              		.loc 1 5435 14
 13745 016c 0123     		movs	r3, #1
 13746 016e FB73     		strb	r3, [r7, #15]
5436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 13747              		.loc 1 5436 7
 13748 0170 00E0     		b	.L960
 13749              	.L961:
5327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 13750              		.loc 1 5327 7
 13751 0172 00BF     		nop
 13752              	.L960:
5437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 13753              		.loc 1 5438 15
 13754 0174 7B68     		ldr	r3, [r7, #4]
 13755 0176 0122     		movs	r2, #1
 13756 0178 83F83D20 		strb	r2, [r3, #61]
5439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 13757              		.loc 1 5440 3
 13758 017c 7B68     		ldr	r3, [r7, #4]
 13759 017e 0022     		movs	r2, #0
 13760 0180 83F83C20 		strb	r2, [r3, #60]
5441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 13761              		.loc 1 5442 10
 13762 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 13763              	.L951:
5443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 13764              		.loc 1 5443 1
 13765 0186 1846     		mov	r0, r3
 13766 0188 1037     		adds	r7, r7, #16
 13767              	.LCFI375:
 13768              		.cfi_def_cfa_offset 8
 13769 018a BD46     		mov	sp, r7
 13770              	.LCFI376:
 13771              		.cfi_def_cfa_register 13
 13772              		@ sp needed
 13773 018c 80BD     		pop	{r7, pc}
 13774              		.cfi_endproc
 13775              	.LFE136:
 13777              		.section	.text.HAL_TIM_ConfigTI1Input,"ax",%progbits
 13778              		.align	1
 13779              		.global	HAL_TIM_ConfigTI1Input
 13780              		.syntax unified
 13781              		.thumb
 13782              		.thumb_func
 13784              	HAL_TIM_ConfigTI1Input:
 13785              	.LFB137:
5444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Selects the signal connected to the TI1 input: direct from CH1_input
5447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         or a XOR combination between CH1_input, CH2_input & CH3_input
ARM GAS  /tmp//ccJMd58S.s 			page 337


5448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle.
5449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TI1_Selection Indicate whether or not channel 1 is connected to the
5450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         output of a XOR gate.
5451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
5452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_CH1: The TIMx_CH1 pin is connected to TI1 input
5453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_XORCOMBINATION: The TIMx_CH1, CH2 and CH3
5454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            pins are connected to the TI1 input (XOR combination)
5455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
5456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigTI1Input(TIM_HandleTypeDef *htim, uint32_t TI1_Selection)
5458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 13786              		.loc 1 5458 1
 13787              		.cfi_startproc
 13788              		@ args = 0, pretend = 0, frame = 16
 13789              		@ frame_needed = 1, uses_anonymous_args = 0
 13790              		@ link register save eliminated.
 13791 0000 80B4     		push	{r7}
 13792              	.LCFI377:
 13793              		.cfi_def_cfa_offset 4
 13794              		.cfi_offset 7, -4
 13795 0002 85B0     		sub	sp, sp, #20
 13796              	.LCFI378:
 13797              		.cfi_def_cfa_offset 24
 13798 0004 00AF     		add	r7, sp, #0
 13799              	.LCFI379:
 13800              		.cfi_def_cfa_register 7
 13801 0006 7860     		str	r0, [r7, #4]
 13802 0008 3960     		str	r1, [r7]
5459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
5460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
5462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
5463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_TI1SELECTION(TI1_Selection));
5464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
5466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpcr2 = htim->Instance->CR2;
 13803              		.loc 1 5466 16
 13804 000a 7B68     		ldr	r3, [r7, #4]
 13805 000c 1B68     		ldr	r3, [r3]
 13806              		.loc 1 5466 10
 13807 000e 5B68     		ldr	r3, [r3, #4]
 13808 0010 FB60     		str	r3, [r7, #12]
5467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the TI1 selection */
5469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpcr2 &= ~TIM_CR2_TI1S;
 13809              		.loc 1 5469 10
 13810 0012 FB68     		ldr	r3, [r7, #12]
 13811 0014 23F08003 		bic	r3, r3, #128
 13812 0018 FB60     		str	r3, [r7, #12]
5470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the TI1 selection */
5472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpcr2 |= TI1_Selection;
 13813              		.loc 1 5472 10
 13814 001a FA68     		ldr	r2, [r7, #12]
 13815 001c 3B68     		ldr	r3, [r7]
 13816 001e 1343     		orrs	r3, r3, r2
 13817 0020 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 338


5473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMxCR2 */
5475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->CR2 = tmpcr2;
 13818              		.loc 1 5475 7
 13819 0022 7B68     		ldr	r3, [r7, #4]
 13820 0024 1B68     		ldr	r3, [r3]
 13821              		.loc 1 5475 23
 13822 0026 FA68     		ldr	r2, [r7, #12]
 13823 0028 5A60     		str	r2, [r3, #4]
5476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 13824              		.loc 1 5477 10
 13825 002a 0023     		movs	r3, #0
5478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 13826              		.loc 1 5478 1
 13827 002c 1846     		mov	r0, r3
 13828 002e 1437     		adds	r7, r7, #20
 13829              	.LCFI380:
 13830              		.cfi_def_cfa_offset 4
 13831 0030 BD46     		mov	sp, r7
 13832              	.LCFI381:
 13833              		.cfi_def_cfa_register 13
 13834              		@ sp needed
 13835 0032 80BC     		pop	{r7}
 13836              	.LCFI382:
 13837              		.cfi_restore 7
 13838              		.cfi_def_cfa_offset 0
 13839 0034 7047     		bx	lr
 13840              		.cfi_endproc
 13841              	.LFE137:
 13843              		.section	.text.HAL_TIM_SlaveConfigSynchro,"ax",%progbits
 13844              		.align	1
 13845              		.global	HAL_TIM_SlaveConfigSynchro
 13846              		.syntax unified
 13847              		.thumb
 13848              		.thumb_func
 13850              	HAL_TIM_SlaveConfigSynchro:
 13851              	.LFB138:
5479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode
5482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle.
5483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sSlaveConfig pointer to a TIM_SlaveConfigTypeDef structure that
5484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
5485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         timer input or external trigger input) and the Slave mode
5486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         (Disable, Reset, Gated, Trigger, External clock mode 1).
5487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
5488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchro(TIM_HandleTypeDef *htim, const TIM_SlaveConfigTypeDef 
5490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 13852              		.loc 1 5490 1
 13853              		.cfi_startproc
 13854              		@ args = 0, pretend = 0, frame = 8
 13855              		@ frame_needed = 1, uses_anonymous_args = 0
 13856 0000 80B5     		push	{r7, lr}
 13857              	.LCFI383:
 13858              		.cfi_def_cfa_offset 8
ARM GAS  /tmp//ccJMd58S.s 			page 339


 13859              		.cfi_offset 7, -8
 13860              		.cfi_offset 14, -4
 13861 0002 82B0     		sub	sp, sp, #8
 13862              	.LCFI384:
 13863              		.cfi_def_cfa_offset 16
 13864 0004 00AF     		add	r7, sp, #0
 13865              	.LCFI385:
 13866              		.cfi_def_cfa_register 7
 13867 0006 7860     		str	r0, [r7, #4]
 13868 0008 3960     		str	r1, [r7]
5491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
5492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
5493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
5494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
5495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
 13869              		.loc 1 5496 3
 13870 000a 7B68     		ldr	r3, [r7, #4]
 13871 000c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 13872 0010 012B     		cmp	r3, #1
 13873 0012 01D1     		bne	.L965
 13874              		.loc 1 5496 3 is_stmt 0 discriminator 1
 13875 0014 0223     		movs	r3, #2
 13876              		.loc 1 5496 3
 13877 0016 31E0     		b	.L966
 13878              	.L965:
 13879              		.loc 1 5496 3 discriminator 2
 13880 0018 7B68     		ldr	r3, [r7, #4]
 13881 001a 0122     		movs	r2, #1
 13882 001c 83F83C20 		strb	r2, [r3, #60]
5497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 13883              		.loc 1 5498 15 is_stmt 1
 13884 0020 7B68     		ldr	r3, [r7, #4]
 13885 0022 0222     		movs	r2, #2
 13886 0024 83F83D20 		strb	r2, [r3, #61]
5499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (TIM_SlaveTimer_SetConfig(htim, sSlaveConfig) != HAL_OK)
 13887              		.loc 1 5500 7
 13888 0028 3968     		ldr	r1, [r7]
 13889 002a 7868     		ldr	r0, [r7, #4]
 13890 002c FFF7FEFF 		bl	TIM_SlaveTimer_SetConfig
 13891 0030 0346     		mov	r3, r0
 13892              		.loc 1 5500 6 discriminator 1
 13893 0032 002B     		cmp	r3, #0
 13894 0034 09D0     		beq	.L967
5501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
 13895              		.loc 1 5502 17
 13896 0036 7B68     		ldr	r3, [r7, #4]
 13897 0038 0122     		movs	r2, #1
 13898 003a 83F83D20 		strb	r2, [r3, #61]
5503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_UNLOCK(htim);
 13899              		.loc 1 5503 5
 13900 003e 7B68     		ldr	r3, [r7, #4]
 13901 0040 0022     		movs	r2, #0
 13902 0042 83F83C20 		strb	r2, [r3, #60]
ARM GAS  /tmp//ccJMd58S.s 			page 340


5504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 13903              		.loc 1 5504 12
 13904 0046 0123     		movs	r3, #1
 13905 0048 18E0     		b	.L966
 13906              	.L967:
5505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable Trigger Interrupt */
5508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 13907              		.loc 1 5508 3
 13908 004a 7B68     		ldr	r3, [r7, #4]
 13909 004c 1B68     		ldr	r3, [r3]
 13910 004e DA68     		ldr	r2, [r3, #12]
 13911 0050 7B68     		ldr	r3, [r7, #4]
 13912 0052 1B68     		ldr	r3, [r3]
 13913 0054 22F04002 		bic	r2, r2, #64
 13914 0058 DA60     		str	r2, [r3, #12]
5509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable Trigger DMA request */
5511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 13915              		.loc 1 5511 3
 13916 005a 7B68     		ldr	r3, [r7, #4]
 13917 005c 1B68     		ldr	r3, [r3]
 13918 005e DA68     		ldr	r2, [r3, #12]
 13919 0060 7B68     		ldr	r3, [r7, #4]
 13920 0062 1B68     		ldr	r3, [r3]
 13921 0064 22F48042 		bic	r2, r2, #16384
 13922 0068 DA60     		str	r2, [r3, #12]
5512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 13923              		.loc 1 5513 15
 13924 006a 7B68     		ldr	r3, [r7, #4]
 13925 006c 0122     		movs	r2, #1
 13926 006e 83F83D20 		strb	r2, [r3, #61]
5514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 13927              		.loc 1 5515 3
 13928 0072 7B68     		ldr	r3, [r7, #4]
 13929 0074 0022     		movs	r2, #0
 13930 0076 83F83C20 		strb	r2, [r3, #60]
5516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 13931              		.loc 1 5517 10
 13932 007a 0023     		movs	r3, #0
 13933              	.L966:
5518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 13934              		.loc 1 5518 1
 13935 007c 1846     		mov	r0, r3
 13936 007e 0837     		adds	r7, r7, #8
 13937              	.LCFI386:
 13938              		.cfi_def_cfa_offset 8
 13939 0080 BD46     		mov	sp, r7
 13940              	.LCFI387:
 13941              		.cfi_def_cfa_register 13
 13942              		@ sp needed
 13943 0082 80BD     		pop	{r7, pc}
 13944              		.cfi_endproc
ARM GAS  /tmp//ccJMd58S.s 			page 341


 13945              	.LFE138:
 13947              		.section	.text.HAL_TIM_SlaveConfigSynchro_IT,"ax",%progbits
 13948              		.align	1
 13949              		.global	HAL_TIM_SlaveConfigSynchro_IT
 13950              		.syntax unified
 13951              		.thumb
 13952              		.thumb_func
 13954              	HAL_TIM_SlaveConfigSynchro_IT:
 13955              	.LFB139:
5519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode in interrupt mode
5522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle.
5523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sSlaveConfig pointer to a TIM_SlaveConfigTypeDef structure that
5524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
5525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         timer input or external trigger input) and the Slave mode
5526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         (Disable, Reset, Gated, Trigger, External clock mode 1).
5527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL status
5528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchro_IT(TIM_HandleTypeDef *htim,
5530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                                 const TIM_SlaveConfigTypeDef *sSlaveConfig)
5531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 13956              		.loc 1 5531 1
 13957              		.cfi_startproc
 13958              		@ args = 0, pretend = 0, frame = 8
 13959              		@ frame_needed = 1, uses_anonymous_args = 0
 13960 0000 80B5     		push	{r7, lr}
 13961              	.LCFI388:
 13962              		.cfi_def_cfa_offset 8
 13963              		.cfi_offset 7, -8
 13964              		.cfi_offset 14, -4
 13965 0002 82B0     		sub	sp, sp, #8
 13966              	.LCFI389:
 13967              		.cfi_def_cfa_offset 16
 13968 0004 00AF     		add	r7, sp, #0
 13969              	.LCFI390:
 13970              		.cfi_def_cfa_register 7
 13971 0006 7860     		str	r0, [r7, #4]
 13972 0008 3960     		str	r1, [r7]
5532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
5533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
5534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
5535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
5536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_LOCK(htim);
 13973              		.loc 1 5537 3
 13974 000a 7B68     		ldr	r3, [r7, #4]
 13975 000c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 13976 0010 012B     		cmp	r3, #1
 13977 0012 01D1     		bne	.L969
 13978              		.loc 1 5537 3 is_stmt 0 discriminator 1
 13979 0014 0223     		movs	r3, #2
 13980              		.loc 1 5537 3
 13981 0016 31E0     		b	.L970
 13982              	.L969:
 13983              		.loc 1 5537 3 discriminator 2
 13984 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 342


 13985 001a 0122     		movs	r2, #1
 13986 001c 83F83C20 		strb	r2, [r3, #60]
5538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 13987              		.loc 1 5539 15 is_stmt 1
 13988 0020 7B68     		ldr	r3, [r7, #4]
 13989 0022 0222     		movs	r2, #2
 13990 0024 83F83D20 		strb	r2, [r3, #61]
5540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (TIM_SlaveTimer_SetConfig(htim, sSlaveConfig) != HAL_OK)
 13991              		.loc 1 5541 7
 13992 0028 3968     		ldr	r1, [r7]
 13993 002a 7868     		ldr	r0, [r7, #4]
 13994 002c FFF7FEFF 		bl	TIM_SlaveTimer_SetConfig
 13995 0030 0346     		mov	r3, r0
 13996              		.loc 1 5541 6 discriminator 1
 13997 0032 002B     		cmp	r3, #0
 13998 0034 09D0     		beq	.L971
5542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
 13999              		.loc 1 5543 17
 14000 0036 7B68     		ldr	r3, [r7, #4]
 14001 0038 0122     		movs	r2, #1
 14002 003a 83F83D20 		strb	r2, [r3, #61]
5544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     __HAL_UNLOCK(htim);
 14003              		.loc 1 5544 5
 14004 003e 7B68     		ldr	r3, [r7, #4]
 14005 0040 0022     		movs	r2, #0
 14006 0042 83F83C20 		strb	r2, [r3, #60]
5545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
 14007              		.loc 1 5545 12
 14008 0046 0123     		movs	r3, #1
 14009 0048 18E0     		b	.L970
 14010              	.L971:
5546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Enable Trigger Interrupt */
5549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_TRIGGER);
 14011              		.loc 1 5549 3
 14012 004a 7B68     		ldr	r3, [r7, #4]
 14013 004c 1B68     		ldr	r3, [r3]
 14014 004e DA68     		ldr	r2, [r3, #12]
 14015 0050 7B68     		ldr	r3, [r7, #4]
 14016 0052 1B68     		ldr	r3, [r3]
 14017 0054 42F04002 		orr	r2, r2, #64
 14018 0058 DA60     		str	r2, [r3, #12]
5550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable Trigger DMA request */
5552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 14019              		.loc 1 5552 3
 14020 005a 7B68     		ldr	r3, [r7, #4]
 14021 005c 1B68     		ldr	r3, [r3]
 14022 005e DA68     		ldr	r2, [r3, #12]
 14023 0060 7B68     		ldr	r3, [r7, #4]
 14024 0062 1B68     		ldr	r3, [r3]
 14025 0064 22F48042 		bic	r2, r2, #16384
 14026 0068 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 343


5553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 14027              		.loc 1 5554 15
 14028 006a 7B68     		ldr	r3, [r7, #4]
 14029 006c 0122     		movs	r2, #1
 14030 006e 83F83D20 		strb	r2, [r3, #61]
5555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 14031              		.loc 1 5556 3
 14032 0072 7B68     		ldr	r3, [r7, #4]
 14033 0074 0022     		movs	r2, #0
 14034 0076 83F83C20 		strb	r2, [r3, #60]
5557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return HAL_OK;
 14035              		.loc 1 5558 10
 14036 007a 0023     		movs	r3, #0
 14037              	.L970:
5559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14038              		.loc 1 5559 1
 14039 007c 1846     		mov	r0, r3
 14040 007e 0837     		adds	r7, r7, #8
 14041              	.LCFI391:
 14042              		.cfi_def_cfa_offset 8
 14043 0080 BD46     		mov	sp, r7
 14044              	.LCFI392:
 14045              		.cfi_def_cfa_register 13
 14046              		@ sp needed
 14047 0082 80BD     		pop	{r7, pc}
 14048              		.cfi_endproc
 14049              	.LFE139:
 14051              		.section	.text.HAL_TIM_ReadCapturedValue,"ax",%progbits
 14052              		.align	1
 14053              		.global	HAL_TIM_ReadCapturedValue
 14054              		.syntax unified
 14055              		.thumb
 14056              		.thumb_func
 14058              	HAL_TIM_ReadCapturedValue:
 14059              	.LFB140:
5560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Read the captured value from Capture Compare unit
5563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle.
5564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channels to be enabled
5565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
5566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
5567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
5568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
5569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
5570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval Captured value
5571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** uint32_t HAL_TIM_ReadCapturedValue(const TIM_HandleTypeDef *htim, uint32_t Channel)
5573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14060              		.loc 1 5573 1
 14061              		.cfi_startproc
 14062              		@ args = 0, pretend = 0, frame = 16
 14063              		@ frame_needed = 1, uses_anonymous_args = 0
 14064              		@ link register save eliminated.
ARM GAS  /tmp//ccJMd58S.s 			page 344


 14065 0000 80B4     		push	{r7}
 14066              	.LCFI393:
 14067              		.cfi_def_cfa_offset 4
 14068              		.cfi_offset 7, -4
 14069 0002 85B0     		sub	sp, sp, #20
 14070              	.LCFI394:
 14071              		.cfi_def_cfa_offset 24
 14072 0004 00AF     		add	r7, sp, #0
 14073              	.LCFI395:
 14074              		.cfi_def_cfa_register 7
 14075 0006 7860     		str	r0, [r7, #4]
 14076 0008 3960     		str	r1, [r7]
5574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpreg = 0U;
 14077              		.loc 1 5574 12
 14078 000a 0023     		movs	r3, #0
 14079 000c FB60     		str	r3, [r7, #12]
5575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (Channel)
 14080              		.loc 1 5576 3
 14081 000e 3B68     		ldr	r3, [r7]
 14082 0010 0C2B     		cmp	r3, #12
 14083 0012 31D8     		bhi	.L981
 14084 0014 01A2     		adr	r2, .L975
 14085 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14086 001a 00BF     		.p2align 2
 14087              	.L975:
 14088 001c 51000000 		.word	.L978+1
 14089 0020 79000000 		.word	.L981+1
 14090 0024 79000000 		.word	.L981+1
 14091 0028 79000000 		.word	.L981+1
 14092 002c 5B000000 		.word	.L977+1
 14093 0030 79000000 		.word	.L981+1
 14094 0034 79000000 		.word	.L981+1
 14095 0038 79000000 		.word	.L981+1
 14096 003c 65000000 		.word	.L976+1
 14097 0040 79000000 		.word	.L981+1
 14098 0044 79000000 		.word	.L981+1
 14099 0048 79000000 		.word	.L981+1
 14100 004c 6F000000 		.word	.L974+1
 14101              		.p2align 1
 14102              	.L978:
5577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_1:
5579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
5581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
5582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Return the capture 1 value */
5584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpreg =  htim->Instance->CCR1;
 14103              		.loc 1 5584 21
 14104 0050 7B68     		ldr	r3, [r7, #4]
 14105 0052 1B68     		ldr	r3, [r3]
 14106              		.loc 1 5584 14
 14107 0054 5B6B     		ldr	r3, [r3, #52]
 14108 0056 FB60     		str	r3, [r7, #12]
5585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
ARM GAS  /tmp//ccJMd58S.s 			page 345


 14109              		.loc 1 5586 7
 14110 0058 0FE0     		b	.L979
 14111              	.L977:
5587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_2:
5589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
5591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
5592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Return the capture 2 value */
5594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR2;
 14112              		.loc 1 5594 22
 14113 005a 7B68     		ldr	r3, [r7, #4]
 14114 005c 1B68     		ldr	r3, [r3]
 14115              		.loc 1 5594 14
 14116 005e 9B6B     		ldr	r3, [r3, #56]
 14117 0060 FB60     		str	r3, [r7, #12]
5595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 14118              		.loc 1 5596 7
 14119 0062 0AE0     		b	.L979
 14120              	.L976:
5597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_3:
5600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
5602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
5603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Return the capture 3 value */
5605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR3;
 14121              		.loc 1 5605 22
 14122 0064 7B68     		ldr	r3, [r7, #4]
 14123 0066 1B68     		ldr	r3, [r3]
 14124              		.loc 1 5605 14
 14125 0068 DB6B     		ldr	r3, [r3, #60]
 14126 006a FB60     		str	r3, [r7, #12]
5606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 14127              		.loc 1 5607 7
 14128 006c 05E0     		b	.L979
 14129              	.L974:
5608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_CHANNEL_4:
5611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
5613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
5614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Return the capture 4 value */
5616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR4;
 14130              		.loc 1 5616 22
 14131 006e 7B68     		ldr	r3, [r7, #4]
 14132 0070 1B68     		ldr	r3, [r3]
 14133              		.loc 1 5616 14
 14134 0072 1B6C     		ldr	r3, [r3, #64]
 14135 0074 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 346


5617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 14136              		.loc 1 5618 7
 14137 0076 00E0     		b	.L979
 14138              	.L981:
5619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
5622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 14139              		.loc 1 5622 7
 14140 0078 00BF     		nop
 14141              	.L979:
5623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return tmpreg;
 14142              		.loc 1 5625 10
 14143 007a FB68     		ldr	r3, [r7, #12]
5626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14144              		.loc 1 5626 1
 14145 007c 1846     		mov	r0, r3
 14146 007e 1437     		adds	r7, r7, #20
 14147              	.LCFI396:
 14148              		.cfi_def_cfa_offset 4
 14149 0080 BD46     		mov	sp, r7
 14150              	.LCFI397:
 14151              		.cfi_def_cfa_register 13
 14152              		@ sp needed
 14153 0082 80BC     		pop	{r7}
 14154              	.LCFI398:
 14155              		.cfi_restore 7
 14156              		.cfi_def_cfa_offset 0
 14157 0084 7047     		bx	lr
 14158              		.cfi_endproc
 14159              	.LFE140:
 14161 0086 00BF     		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 14162              		.align	1
 14163              		.weak	HAL_TIM_PeriodElapsedCallback
 14164              		.syntax unified
 14165              		.thumb
 14166              		.thumb_func
 14168              	HAL_TIM_PeriodElapsedCallback:
 14169              	.LFB141:
5627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
5630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group9 TIM Callbacks functions
5633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief    TIM Callbacks functions
5634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
5635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
5636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
5637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         ##### TIM Callbacks functions #####
5638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
5639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****  [..]
5640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    This section provides TIM callback functions:
5641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) TIM Period elapsed callback
ARM GAS  /tmp//ccJMd58S.s 			page 347


5642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) TIM Output Compare callback
5643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) TIM Input capture callback
5644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) TIM Trigger callback
5645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    (+) TIM Error callback
5646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
5648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
5649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Period elapsed callback in non-blocking mode
5653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
5657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14170              		.loc 1 5657 1
 14171              		.cfi_startproc
 14172              		@ args = 0, pretend = 0, frame = 8
 14173              		@ frame_needed = 1, uses_anonymous_args = 0
 14174              		@ link register save eliminated.
 14175 0000 80B4     		push	{r7}
 14176              	.LCFI399:
 14177              		.cfi_def_cfa_offset 4
 14178              		.cfi_offset 7, -4
 14179 0002 83B0     		sub	sp, sp, #12
 14180              	.LCFI400:
 14181              		.cfi_def_cfa_offset 16
 14182 0004 00AF     		add	r7, sp, #0
 14183              	.LCFI401:
 14184              		.cfi_def_cfa_register 7
 14185 0006 7860     		str	r0, [r7, #4]
5658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
5663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14186              		.loc 1 5664 1
 14187 0008 00BF     		nop
 14188 000a 0C37     		adds	r7, r7, #12
 14189              	.LCFI402:
 14190              		.cfi_def_cfa_offset 4
 14191 000c BD46     		mov	sp, r7
 14192              	.LCFI403:
 14193              		.cfi_def_cfa_register 13
 14194              		@ sp needed
 14195 000e 80BC     		pop	{r7}
 14196              	.LCFI404:
 14197              		.cfi_restore 7
 14198              		.cfi_def_cfa_offset 0
 14199 0010 7047     		bx	lr
 14200              		.cfi_endproc
 14201              	.LFE141:
 14203              		.section	.text.HAL_TIM_PeriodElapsedHalfCpltCallback,"ax",%progbits
 14204              		.align	1
ARM GAS  /tmp//ccJMd58S.s 			page 348


 14205              		.weak	HAL_TIM_PeriodElapsedHalfCpltCallback
 14206              		.syntax unified
 14207              		.thumb
 14208              		.thumb_func
 14210              	HAL_TIM_PeriodElapsedHalfCpltCallback:
 14211              	.LFB142:
5665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Period elapsed half complete callback in non-blocking mode
5668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PeriodElapsedHalfCpltCallback(TIM_HandleTypeDef *htim)
5672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14212              		.loc 1 5672 1
 14213              		.cfi_startproc
 14214              		@ args = 0, pretend = 0, frame = 8
 14215              		@ frame_needed = 1, uses_anonymous_args = 0
 14216              		@ link register save eliminated.
 14217 0000 80B4     		push	{r7}
 14218              	.LCFI405:
 14219              		.cfi_def_cfa_offset 4
 14220              		.cfi_offset 7, -4
 14221 0002 83B0     		sub	sp, sp, #12
 14222              	.LCFI406:
 14223              		.cfi_def_cfa_offset 16
 14224 0004 00AF     		add	r7, sp, #0
 14225              	.LCFI407:
 14226              		.cfi_def_cfa_register 7
 14227 0006 7860     		str	r0, [r7, #4]
5673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PeriodElapsedHalfCpltCallback could be implemented in the user file
5678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14228              		.loc 1 5679 1
 14229 0008 00BF     		nop
 14230 000a 0C37     		adds	r7, r7, #12
 14231              	.LCFI408:
 14232              		.cfi_def_cfa_offset 4
 14233 000c BD46     		mov	sp, r7
 14234              	.LCFI409:
 14235              		.cfi_def_cfa_register 13
 14236              		@ sp needed
 14237 000e 80BC     		pop	{r7}
 14238              	.LCFI410:
 14239              		.cfi_restore 7
 14240              		.cfi_def_cfa_offset 0
 14241 0010 7047     		bx	lr
 14242              		.cfi_endproc
 14243              	.LFE142:
 14245              		.section	.text.HAL_TIM_OC_DelayElapsedCallback,"ax",%progbits
 14246              		.align	1
 14247              		.weak	HAL_TIM_OC_DelayElapsedCallback
 14248              		.syntax unified
ARM GAS  /tmp//ccJMd58S.s 			page 349


 14249              		.thumb
 14250              		.thumb_func
 14252              	HAL_TIM_OC_DelayElapsedCallback:
 14253              	.LFB143:
5680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Output Compare callback in non-blocking mode
5683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM OC handle
5684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
5687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14254              		.loc 1 5687 1
 14255              		.cfi_startproc
 14256              		@ args = 0, pretend = 0, frame = 8
 14257              		@ frame_needed = 1, uses_anonymous_args = 0
 14258              		@ link register save eliminated.
 14259 0000 80B4     		push	{r7}
 14260              	.LCFI411:
 14261              		.cfi_def_cfa_offset 4
 14262              		.cfi_offset 7, -4
 14263 0002 83B0     		sub	sp, sp, #12
 14264              	.LCFI412:
 14265              		.cfi_def_cfa_offset 16
 14266 0004 00AF     		add	r7, sp, #0
 14267              	.LCFI413:
 14268              		.cfi_def_cfa_register 7
 14269 0006 7860     		str	r0, [r7, #4]
5688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
5693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14270              		.loc 1 5694 1
 14271 0008 00BF     		nop
 14272 000a 0C37     		adds	r7, r7, #12
 14273              	.LCFI414:
 14274              		.cfi_def_cfa_offset 4
 14275 000c BD46     		mov	sp, r7
 14276              	.LCFI415:
 14277              		.cfi_def_cfa_register 13
 14278              		@ sp needed
 14279 000e 80BC     		pop	{r7}
 14280              	.LCFI416:
 14281              		.cfi_restore 7
 14282              		.cfi_def_cfa_offset 0
 14283 0010 7047     		bx	lr
 14284              		.cfi_endproc
 14285              	.LFE143:
 14287              		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
 14288              		.align	1
 14289              		.weak	HAL_TIM_IC_CaptureCallback
 14290              		.syntax unified
 14291              		.thumb
 14292              		.thumb_func
ARM GAS  /tmp//ccJMd58S.s 			page 350


 14294              	HAL_TIM_IC_CaptureCallback:
 14295              	.LFB144:
5695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Input Capture callback in non-blocking mode
5698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM IC handle
5699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
5702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14296              		.loc 1 5702 1
 14297              		.cfi_startproc
 14298              		@ args = 0, pretend = 0, frame = 8
 14299              		@ frame_needed = 1, uses_anonymous_args = 0
 14300              		@ link register save eliminated.
 14301 0000 80B4     		push	{r7}
 14302              	.LCFI417:
 14303              		.cfi_def_cfa_offset 4
 14304              		.cfi_offset 7, -4
 14305 0002 83B0     		sub	sp, sp, #12
 14306              	.LCFI418:
 14307              		.cfi_def_cfa_offset 16
 14308 0004 00AF     		add	r7, sp, #0
 14309              	.LCFI419:
 14310              		.cfi_def_cfa_register 7
 14311 0006 7860     		str	r0, [r7, #4]
5703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_IC_CaptureCallback could be implemented in the user file
5708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14312              		.loc 1 5709 1
 14313 0008 00BF     		nop
 14314 000a 0C37     		adds	r7, r7, #12
 14315              	.LCFI420:
 14316              		.cfi_def_cfa_offset 4
 14317 000c BD46     		mov	sp, r7
 14318              	.LCFI421:
 14319              		.cfi_def_cfa_register 13
 14320              		@ sp needed
 14321 000e 80BC     		pop	{r7}
 14322              	.LCFI422:
 14323              		.cfi_restore 7
 14324              		.cfi_def_cfa_offset 0
 14325 0010 7047     		bx	lr
 14326              		.cfi_endproc
 14327              	.LFE144:
 14329              		.section	.text.HAL_TIM_IC_CaptureHalfCpltCallback,"ax",%progbits
 14330              		.align	1
 14331              		.weak	HAL_TIM_IC_CaptureHalfCpltCallback
 14332              		.syntax unified
 14333              		.thumb
 14334              		.thumb_func
 14336              	HAL_TIM_IC_CaptureHalfCpltCallback:
 14337              	.LFB145:
ARM GAS  /tmp//ccJMd58S.s 			page 351


5710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Input Capture half complete callback in non-blocking mode
5713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM IC handle
5714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_IC_CaptureHalfCpltCallback(TIM_HandleTypeDef *htim)
5717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14338              		.loc 1 5717 1
 14339              		.cfi_startproc
 14340              		@ args = 0, pretend = 0, frame = 8
 14341              		@ frame_needed = 1, uses_anonymous_args = 0
 14342              		@ link register save eliminated.
 14343 0000 80B4     		push	{r7}
 14344              	.LCFI423:
 14345              		.cfi_def_cfa_offset 4
 14346              		.cfi_offset 7, -4
 14347 0002 83B0     		sub	sp, sp, #12
 14348              	.LCFI424:
 14349              		.cfi_def_cfa_offset 16
 14350 0004 00AF     		add	r7, sp, #0
 14351              	.LCFI425:
 14352              		.cfi_def_cfa_register 7
 14353 0006 7860     		str	r0, [r7, #4]
5718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_IC_CaptureHalfCpltCallback could be implemented in the user file
5723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14354              		.loc 1 5724 1
 14355 0008 00BF     		nop
 14356 000a 0C37     		adds	r7, r7, #12
 14357              	.LCFI426:
 14358              		.cfi_def_cfa_offset 4
 14359 000c BD46     		mov	sp, r7
 14360              	.LCFI427:
 14361              		.cfi_def_cfa_register 13
 14362              		@ sp needed
 14363 000e 80BC     		pop	{r7}
 14364              	.LCFI428:
 14365              		.cfi_restore 7
 14366              		.cfi_def_cfa_offset 0
 14367 0010 7047     		bx	lr
 14368              		.cfi_endproc
 14369              	.LFE145:
 14371              		.section	.text.HAL_TIM_PWM_PulseFinishedCallback,"ax",%progbits
 14372              		.align	1
 14373              		.weak	HAL_TIM_PWM_PulseFinishedCallback
 14374              		.syntax unified
 14375              		.thumb
 14376              		.thumb_func
 14378              	HAL_TIM_PWM_PulseFinishedCallback:
 14379              	.LFB146:
5725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
ARM GAS  /tmp//ccJMd58S.s 			page 352


5727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  PWM Pulse finished callback in non-blocking mode
5728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
5732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14380              		.loc 1 5732 1
 14381              		.cfi_startproc
 14382              		@ args = 0, pretend = 0, frame = 8
 14383              		@ frame_needed = 1, uses_anonymous_args = 0
 14384              		@ link register save eliminated.
 14385 0000 80B4     		push	{r7}
 14386              	.LCFI429:
 14387              		.cfi_def_cfa_offset 4
 14388              		.cfi_offset 7, -4
 14389 0002 83B0     		sub	sp, sp, #12
 14390              	.LCFI430:
 14391              		.cfi_def_cfa_offset 16
 14392 0004 00AF     		add	r7, sp, #0
 14393              	.LCFI431:
 14394              		.cfi_def_cfa_register 7
 14395 0006 7860     		str	r0, [r7, #4]
5733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
5738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14396              		.loc 1 5739 1
 14397 0008 00BF     		nop
 14398 000a 0C37     		adds	r7, r7, #12
 14399              	.LCFI432:
 14400              		.cfi_def_cfa_offset 4
 14401 000c BD46     		mov	sp, r7
 14402              	.LCFI433:
 14403              		.cfi_def_cfa_register 13
 14404              		@ sp needed
 14405 000e 80BC     		pop	{r7}
 14406              	.LCFI434:
 14407              		.cfi_restore 7
 14408              		.cfi_def_cfa_offset 0
 14409 0010 7047     		bx	lr
 14410              		.cfi_endproc
 14411              	.LFE146:
 14413              		.section	.text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback,"ax",%progbits
 14414              		.align	1
 14415              		.weak	HAL_TIM_PWM_PulseFinishedHalfCpltCallback
 14416              		.syntax unified
 14417              		.thumb
 14418              		.thumb_func
 14420              	HAL_TIM_PWM_PulseFinishedHalfCpltCallback:
 14421              	.LFB147:
5740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  PWM Pulse finished half complete callback in non-blocking mode
5743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
ARM GAS  /tmp//ccJMd58S.s 			page 353


5744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_PWM_PulseFinishedHalfCpltCallback(TIM_HandleTypeDef *htim)
5747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14422              		.loc 1 5747 1
 14423              		.cfi_startproc
 14424              		@ args = 0, pretend = 0, frame = 8
 14425              		@ frame_needed = 1, uses_anonymous_args = 0
 14426              		@ link register save eliminated.
 14427 0000 80B4     		push	{r7}
 14428              	.LCFI435:
 14429              		.cfi_def_cfa_offset 4
 14430              		.cfi_offset 7, -4
 14431 0002 83B0     		sub	sp, sp, #12
 14432              	.LCFI436:
 14433              		.cfi_def_cfa_offset 16
 14434 0004 00AF     		add	r7, sp, #0
 14435              	.LCFI437:
 14436              		.cfi_def_cfa_register 7
 14437 0006 7860     		str	r0, [r7, #4]
5748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_PWM_PulseFinishedHalfCpltCallback could be implemented in the user file
5753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14438              		.loc 1 5754 1
 14439 0008 00BF     		nop
 14440 000a 0C37     		adds	r7, r7, #12
 14441              	.LCFI438:
 14442              		.cfi_def_cfa_offset 4
 14443 000c BD46     		mov	sp, r7
 14444              	.LCFI439:
 14445              		.cfi_def_cfa_register 13
 14446              		@ sp needed
 14447 000e 80BC     		pop	{r7}
 14448              	.LCFI440:
 14449              		.cfi_restore 7
 14450              		.cfi_def_cfa_offset 0
 14451 0010 7047     		bx	lr
 14452              		.cfi_endproc
 14453              	.LFE147:
 14455              		.section	.text.HAL_TIM_TriggerCallback,"ax",%progbits
 14456              		.align	1
 14457              		.weak	HAL_TIM_TriggerCallback
 14458              		.syntax unified
 14459              		.thumb
 14460              		.thumb_func
 14462              	HAL_TIM_TriggerCallback:
 14463              	.LFB148:
5755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Hall Trigger detection callback in non-blocking mode
5758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
ARM GAS  /tmp//ccJMd58S.s 			page 354


5761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
5762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14464              		.loc 1 5762 1
 14465              		.cfi_startproc
 14466              		@ args = 0, pretend = 0, frame = 8
 14467              		@ frame_needed = 1, uses_anonymous_args = 0
 14468              		@ link register save eliminated.
 14469 0000 80B4     		push	{r7}
 14470              	.LCFI441:
 14471              		.cfi_def_cfa_offset 4
 14472              		.cfi_offset 7, -4
 14473 0002 83B0     		sub	sp, sp, #12
 14474              	.LCFI442:
 14475              		.cfi_def_cfa_offset 16
 14476 0004 00AF     		add	r7, sp, #0
 14477              	.LCFI443:
 14478              		.cfi_def_cfa_register 7
 14479 0006 7860     		str	r0, [r7, #4]
5763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_TriggerCallback could be implemented in the user file
5768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14480              		.loc 1 5769 1
 14481 0008 00BF     		nop
 14482 000a 0C37     		adds	r7, r7, #12
 14483              	.LCFI444:
 14484              		.cfi_def_cfa_offset 4
 14485 000c BD46     		mov	sp, r7
 14486              	.LCFI445:
 14487              		.cfi_def_cfa_register 13
 14488              		@ sp needed
 14489 000e 80BC     		pop	{r7}
 14490              	.LCFI446:
 14491              		.cfi_restore 7
 14492              		.cfi_def_cfa_offset 0
 14493 0010 7047     		bx	lr
 14494              		.cfi_endproc
 14495              	.LFE148:
 14497              		.section	.text.HAL_TIM_TriggerHalfCpltCallback,"ax",%progbits
 14498              		.align	1
 14499              		.weak	HAL_TIM_TriggerHalfCpltCallback
 14500              		.syntax unified
 14501              		.thumb
 14502              		.thumb_func
 14504              	HAL_TIM_TriggerHalfCpltCallback:
 14505              	.LFB149:
5770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Hall Trigger detection half complete callback in non-blocking mode
5773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_TriggerHalfCpltCallback(TIM_HandleTypeDef *htim)
5777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
ARM GAS  /tmp//ccJMd58S.s 			page 355


 14506              		.loc 1 5777 1
 14507              		.cfi_startproc
 14508              		@ args = 0, pretend = 0, frame = 8
 14509              		@ frame_needed = 1, uses_anonymous_args = 0
 14510              		@ link register save eliminated.
 14511 0000 80B4     		push	{r7}
 14512              	.LCFI447:
 14513              		.cfi_def_cfa_offset 4
 14514              		.cfi_offset 7, -4
 14515 0002 83B0     		sub	sp, sp, #12
 14516              	.LCFI448:
 14517              		.cfi_def_cfa_offset 16
 14518 0004 00AF     		add	r7, sp, #0
 14519              	.LCFI449:
 14520              		.cfi_def_cfa_register 7
 14521 0006 7860     		str	r0, [r7, #4]
5778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_TriggerHalfCpltCallback could be implemented in the user file
5783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14522              		.loc 1 5784 1
 14523 0008 00BF     		nop
 14524 000a 0C37     		adds	r7, r7, #12
 14525              	.LCFI450:
 14526              		.cfi_def_cfa_offset 4
 14527 000c BD46     		mov	sp, r7
 14528              	.LCFI451:
 14529              		.cfi_def_cfa_register 13
 14530              		@ sp needed
 14531 000e 80BC     		pop	{r7}
 14532              	.LCFI452:
 14533              		.cfi_restore 7
 14534              		.cfi_def_cfa_offset 0
 14535 0010 7047     		bx	lr
 14536              		.cfi_endproc
 14537              	.LFE149:
 14539              		.section	.text.HAL_TIM_ErrorCallback,"ax",%progbits
 14540              		.align	1
 14541              		.weak	HAL_TIM_ErrorCallback
 14542              		.syntax unified
 14543              		.thumb
 14544              		.thumb_func
 14546              	HAL_TIM_ErrorCallback:
 14547              	.LFB150:
5785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Timer error callback in non-blocking mode
5788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
5789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
5790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** __weak void HAL_TIM_ErrorCallback(TIM_HandleTypeDef *htim)
5792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14548              		.loc 1 5792 1
 14549              		.cfi_startproc
ARM GAS  /tmp//ccJMd58S.s 			page 356


 14550              		@ args = 0, pretend = 0, frame = 8
 14551              		@ frame_needed = 1, uses_anonymous_args = 0
 14552              		@ link register save eliminated.
 14553 0000 80B4     		push	{r7}
 14554              	.LCFI453:
 14555              		.cfi_def_cfa_offset 4
 14556              		.cfi_offset 7, -4
 14557 0002 83B0     		sub	sp, sp, #12
 14558              	.LCFI454:
 14559              		.cfi_def_cfa_offset 16
 14560 0004 00AF     		add	r7, sp, #0
 14561              	.LCFI455:
 14562              		.cfi_def_cfa_register 7
 14563 0006 7860     		str	r0, [r7, #4]
5793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
5794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   UNUSED(htim);
5795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****             the HAL_TIM_ErrorCallback could be implemented in the user file
5798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****    */
5799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14564              		.loc 1 5799 1
 14565 0008 00BF     		nop
 14566 000a 0C37     		adds	r7, r7, #12
 14567              	.LCFI456:
 14568              		.cfi_def_cfa_offset 4
 14569 000c BD46     		mov	sp, r7
 14570              	.LCFI457:
 14571              		.cfi_def_cfa_register 13
 14572              		@ sp needed
 14573 000e 80BC     		pop	{r7}
 14574              	.LCFI458:
 14575              		.cfi_restore 7
 14576              		.cfi_def_cfa_offset 0
 14577 0010 7047     		bx	lr
 14578              		.cfi_endproc
 14579              	.LFE150:
 14581              		.section	.text.HAL_TIM_Base_GetState,"ax",%progbits
 14582              		.align	1
 14583              		.global	HAL_TIM_Base_GetState
 14584              		.syntax unified
 14585              		.thumb
 14586              		.thumb_func
 14588              	HAL_TIM_Base_GetState:
 14589              	.LFB151:
5800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
5802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
5803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Register a User TIM callback to be used instead of the weak predefined callback
5804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param htim tim handle
5805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param CallbackID ID of the callback to be registered
5806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        This parameter can be one of the following values:
5807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPINIT_CB_ID Base MspInit Callback ID
5808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPDEINIT_CB_ID Base MspDeInit Callback ID
5809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPINIT_CB_ID IC MspInit Callback ID
5810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPDEINIT_CB_ID IC MspDeInit Callback ID
5811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPINIT_CB_ID OC MspInit Callback ID
ARM GAS  /tmp//ccJMd58S.s 			page 357


5812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPDEINIT_CB_ID OC MspDeInit Callback ID
5813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPINIT_CB_ID PWM MspInit Callback ID
5814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPDEINIT_CB_ID PWM MspDeInit Callback ID
5815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPINIT_CB_ID One Pulse MspInit Callback ID
5816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID One Pulse MspDeInit Callback ID
5817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPINIT_CB_ID Encoder MspInit Callback ID
5818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPDEINIT_CB_ID Encoder MspDeInit Callback ID
5819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID Hall Sensor MspInit Callback ID
5820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID Hall Sensor MspDeInit Callback ID
5821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_CB_ID Period Elapsed Callback ID
5822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID Period Elapsed half complete Callback ID
5823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_CB_ID Trigger Callback ID
5824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_HALF_CB_ID Trigger half complete Callback ID
5825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_CB_ID Input Capture Callback ID
5826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_HALF_CB_ID Input Capture half complete Callback ID
5827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_DELAY_ELAPSED_CB_ID Output Compare Delay Elapsed Callback ID
5828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_CB_ID PWM Pulse Finished Callback ID
5829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID PWM Pulse Finished half complete Callb
5830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ERROR_CB_ID Error Callback ID
5831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_CB_ID Commutation Callback ID
5832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_HALF_CB_ID Commutation half complete Callback ID
5833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BREAK_CB_ID Break Callback ID
5834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @param pCallback pointer to the callback function
5835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @retval status
5836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
5837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_RegisterCallback(TIM_HandleTypeDef *htim, HAL_TIM_CallbackIDTypeDef Callb
5838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                            pTIM_CallbackTypeDef pCallback)
5839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
5840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
5841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (pCallback == NULL)
5843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     return HAL_ERROR;
5845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_READY)
5848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     switch (CallbackID)
5850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
5852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Base_MspInitCallback                 = pCallback;
5853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
5856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Base_MspDeInitCallback               = pCallback;
5857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
5860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_MspInitCallback                   = pCallback;
5861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
5864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_MspDeInitCallback                 = pCallback;
5865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
5868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_MspInitCallback                   = pCallback;
ARM GAS  /tmp//ccJMd58S.s 			page 358


5869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
5872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_MspDeInitCallback                 = pCallback;
5873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
5876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_MspInitCallback                  = pCallback;
5877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
5880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_MspDeInitCallback                = pCallback;
5881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
5884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspInitCallback             = pCallback;
5885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
5888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback           = pCallback;
5889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
5892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspInitCallback              = pCallback;
5893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
5896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback            = pCallback;
5897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
5900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspInitCallback           = pCallback;
5901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
5904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback         = pCallback;
5905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_CB_ID :
5908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PeriodElapsedCallback                = pCallback;
5909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID :
5912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PeriodElapsedHalfCpltCallback        = pCallback;
5913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_TRIGGER_CB_ID :
5916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->TriggerCallback                      = pCallback;
5917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_TRIGGER_HALF_CB_ID :
5920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->TriggerHalfCpltCallback              = pCallback;
5921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_CB_ID :
5924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback                   = pCallback;
5925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
ARM GAS  /tmp//ccJMd58S.s 			page 359


5926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_HALF_CB_ID :
5928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureHalfCpltCallback           = pCallback;
5929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_DELAY_ELAPSED_CB_ID :
5932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback              = pCallback;
5933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_CB_ID :
5936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback            = pCallback;
5937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID :
5940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedHalfCpltCallback    = pCallback;
5941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ERROR_CB_ID :
5944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->ErrorCallback                        = pCallback;
5945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_CB_ID :
5948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->CommutationCallback                  = pCallback;
5949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_HALF_CB_ID :
5952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->CommutationHalfCpltCallback          = pCallback;
5953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BREAK_CB_ID :
5956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->BreakCallback                        = pCallback;
5957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       default :
5960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
5961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         status = HAL_ERROR;
5962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
5964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
5965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_RESET)
5966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
5967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     switch (CallbackID)
5968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
5969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
5970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Base_MspInitCallback         = pCallback;
5971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
5974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Base_MspDeInitCallback       = pCallback;
5975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
5978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_MspInitCallback           = pCallback;
5979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
5982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_MspDeInitCallback         = pCallback;
ARM GAS  /tmp//ccJMd58S.s 			page 360


5983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
5986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_MspInitCallback           = pCallback;
5987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
5990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_MspDeInitCallback         = pCallback;
5991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
5994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_MspInitCallback          = pCallback;
5995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
5996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
5997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
5998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_MspDeInitCallback        = pCallback;
5999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
6002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspInitCallback     = pCallback;
6003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
6006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback   = pCallback;
6007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
6010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspInitCallback      = pCallback;
6011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
6014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback    = pCallback;
6015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
6018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspInitCallback   = pCallback;
6019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
6022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback = pCallback;
6023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       default :
6026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
6027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         status = HAL_ERROR;
6028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
6032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Return error status */
6034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     status = HAL_ERROR;
6035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
6038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
6039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 361


6040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Unregister a TIM callback
6042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *         TIM callback is redirected to the weak predefined callback
6043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param htim tim handle
6044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param CallbackID ID of the callback to be unregistered
6045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        This parameter can be one of the following values:
6046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPINIT_CB_ID Base MspInit Callback ID
6047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BASE_MSPDEINIT_CB_ID Base MspDeInit Callback ID
6048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPINIT_CB_ID IC MspInit Callback ID
6049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_MSPDEINIT_CB_ID IC MspDeInit Callback ID
6050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPINIT_CB_ID OC MspInit Callback ID
6051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_MSPDEINIT_CB_ID OC MspDeInit Callback ID
6052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPINIT_CB_ID PWM MspInit Callback ID
6053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_MSPDEINIT_CB_ID PWM MspDeInit Callback ID
6054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPINIT_CB_ID One Pulse MspInit Callback ID
6055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID One Pulse MspDeInit Callback ID
6056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPINIT_CB_ID Encoder MspInit Callback ID
6057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ENCODER_MSPDEINIT_CB_ID Encoder MspDeInit Callback ID
6058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID Hall Sensor MspInit Callback ID
6059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID Hall Sensor MspDeInit Callback ID
6060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_CB_ID Period Elapsed Callback ID
6061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID Period Elapsed half complete Callback ID
6062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_CB_ID Trigger Callback ID
6063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_TRIGGER_HALF_CB_ID Trigger half complete Callback ID
6064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_CB_ID Input Capture Callback ID
6065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_IC_CAPTURE_HALF_CB_ID Input Capture half complete Callback ID
6066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_OC_DELAY_ELAPSED_CB_ID Output Compare Delay Elapsed Callback ID
6067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_CB_ID PWM Pulse Finished Callback ID
6068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID PWM Pulse Finished half complete Callb
6069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_ERROR_CB_ID Error Callback ID
6070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_CB_ID Commutation Callback ID
6071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_COMMUTATION_HALF_CB_ID Commutation half complete Callback ID
6072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @arg @ref HAL_TIM_BREAK_CB_ID Break Callback ID
6073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          @retval status
6074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_UnRegisterCallback(TIM_HandleTypeDef *htim, HAL_TIM_CallbackIDTypeDef Cal
6076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
6077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
6078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->State == HAL_TIM_STATE_READY)
6080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     switch (CallbackID)
6082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
6084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Base MspInit Callback */
6085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Base_MspInitCallback              = HAL_TIM_Base_MspInit;
6086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
6089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Base Msp DeInit Callback */
6090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Base_MspDeInitCallback            = HAL_TIM_Base_MspDeInit;
6091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
6094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak IC Msp Init Callback */
6095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_MspInitCallback                = HAL_TIM_IC_MspInit;
6096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
ARM GAS  /tmp//ccJMd58S.s 			page 362


6097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
6099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak IC Msp DeInit Callback */
6100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_MspDeInitCallback              = HAL_TIM_IC_MspDeInit;
6101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
6104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak OC Msp Init Callback */
6105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_MspInitCallback                = HAL_TIM_OC_MspInit;
6106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
6109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak OC Msp DeInit Callback */
6110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_MspDeInitCallback              = HAL_TIM_OC_MspDeInit;
6111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
6114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak PWM Msp Init Callback */
6115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_MspInitCallback               = HAL_TIM_PWM_MspInit;
6116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
6119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak PWM Msp DeInit Callback */
6120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_MspDeInitCallback             = HAL_TIM_PWM_MspDeInit;
6121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
6124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak One Pulse Msp Init Callback */
6125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspInitCallback          = HAL_TIM_OnePulse_MspInit;
6126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
6129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak One Pulse Msp DeInit Callback */
6130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback        = HAL_TIM_OnePulse_MspDeInit;
6131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
6134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Encoder Msp Init Callback */
6135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspInitCallback           = HAL_TIM_Encoder_MspInit;
6136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
6139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Encoder Msp DeInit Callback */
6140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback         = HAL_TIM_Encoder_MspDeInit;
6141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
6144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Hall Sensor Msp Init Callback */
6145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspInitCallback        = HAL_TIMEx_HallSensor_MspInit;
6146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
6149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Hall Sensor Msp DeInit Callback */
6150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback      = HAL_TIMEx_HallSensor_MspDeInit;
6151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_CB_ID :
ARM GAS  /tmp//ccJMd58S.s 			page 363


6154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Period Elapsed Callback */
6155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PeriodElapsedCallback             = HAL_TIM_PeriodElapsedCallback;
6156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PERIOD_ELAPSED_HALF_CB_ID :
6159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Period Elapsed half complete Callback */
6160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PeriodElapsedHalfCpltCallback     = HAL_TIM_PeriodElapsedHalfCpltCallback;
6161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_TRIGGER_CB_ID :
6164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Trigger Callback */
6165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->TriggerCallback                   = HAL_TIM_TriggerCallback;
6166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_TRIGGER_HALF_CB_ID :
6169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Trigger half complete Callback */
6170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->TriggerHalfCpltCallback           = HAL_TIM_TriggerHalfCpltCallback;
6171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_CB_ID :
6174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak IC Capture Callback */
6175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureCallback                = HAL_TIM_IC_CaptureCallback;
6176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_CAPTURE_HALF_CB_ID :
6179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak IC Capture half complete Callback */
6180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_CaptureHalfCpltCallback        = HAL_TIM_IC_CaptureHalfCpltCallback;
6181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_DELAY_ELAPSED_CB_ID :
6184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak OC Delay Elapsed Callback */
6185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_DelayElapsedCallback           = HAL_TIM_OC_DelayElapsedCallback;
6186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_CB_ID :
6189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak PWM Pulse Finished Callback */
6190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedCallback         = HAL_TIM_PWM_PulseFinishedCallback;
6191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_PULSE_FINISHED_HALF_CB_ID :
6194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak PWM Pulse Finished half complete Callback */
6195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_PulseFinishedHalfCpltCallback = HAL_TIM_PWM_PulseFinishedHalfCpltCallback;
6196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ERROR_CB_ID :
6199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Error Callback */
6200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->ErrorCallback                     = HAL_TIM_ErrorCallback;
6201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_CB_ID :
6204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Commutation Callback */
6205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->CommutationCallback               = HAL_TIMEx_CommutCallback;
6206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_COMMUTATION_HALF_CB_ID :
6209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Commutation half complete Callback */
6210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->CommutationHalfCpltCallback       = HAL_TIMEx_CommutHalfCpltCallback;
ARM GAS  /tmp//ccJMd58S.s 			page 364


6211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BREAK_CB_ID :
6214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Break Callback */
6215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->BreakCallback                     = HAL_TIMEx_BreakCallback;
6216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       default :
6219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
6220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         status = HAL_ERROR;
6221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (htim->State == HAL_TIM_STATE_RESET)
6225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     switch (CallbackID)
6227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPINIT_CB_ID :
6229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Base MspInit Callback */
6230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Base_MspInitCallback         = HAL_TIM_Base_MspInit;
6231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_BASE_MSPDEINIT_CB_ID :
6234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Base Msp DeInit Callback */
6235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Base_MspDeInitCallback       = HAL_TIM_Base_MspDeInit;
6236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPINIT_CB_ID :
6239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak IC Msp Init Callback */
6240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_MspInitCallback           = HAL_TIM_IC_MspInit;
6241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_IC_MSPDEINIT_CB_ID :
6244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak IC Msp DeInit Callback */
6245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->IC_MspDeInitCallback         = HAL_TIM_IC_MspDeInit;
6246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPINIT_CB_ID :
6249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak OC Msp Init Callback */
6250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_MspInitCallback           = HAL_TIM_OC_MspInit;
6251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_OC_MSPDEINIT_CB_ID :
6254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak OC Msp DeInit Callback */
6255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OC_MspDeInitCallback         = HAL_TIM_OC_MspDeInit;
6256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPINIT_CB_ID :
6259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak PWM Msp Init Callback */
6260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_MspInitCallback          = HAL_TIM_PWM_MspInit;
6261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_PWM_MSPDEINIT_CB_ID :
6264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak PWM Msp DeInit Callback */
6265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->PWM_MspDeInitCallback        = HAL_TIM_PWM_MspDeInit;
6266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 365


6268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPINIT_CB_ID :
6269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak One Pulse Msp Init Callback */
6270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspInitCallback     = HAL_TIM_OnePulse_MspInit;
6271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ONE_PULSE_MSPDEINIT_CB_ID :
6274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak One Pulse Msp DeInit Callback */
6275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->OnePulse_MspDeInitCallback   = HAL_TIM_OnePulse_MspDeInit;
6276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPINIT_CB_ID :
6279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Encoder Msp Init Callback */
6280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspInitCallback      = HAL_TIM_Encoder_MspInit;
6281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_ENCODER_MSPDEINIT_CB_ID :
6284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Encoder Msp DeInit Callback */
6285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->Encoder_MspDeInitCallback    = HAL_TIM_Encoder_MspDeInit;
6286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPINIT_CB_ID :
6289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Hall Sensor Msp Init Callback */
6290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspInitCallback   = HAL_TIMEx_HallSensor_MspInit;
6291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       case HAL_TIM_HALL_SENSOR_MSPDEINIT_CB_ID :
6294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Legacy weak Hall Sensor Msp DeInit Callback */
6295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         htim->HallSensor_MspDeInitCallback = HAL_TIMEx_HallSensor_MspDeInit;
6296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       default :
6299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         /* Return error status */
6300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         status = HAL_ERROR;
6301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         break;
6302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
6305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Return error status */
6307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     status = HAL_ERROR;
6308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
6311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
6312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
6316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group10 TIM Peripheral State functions
6319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *  @brief   TIM Peripheral State functions
6320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *
6321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @verbatim
6322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
6323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         ##### Peripheral State functions #####
6324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   ==============================================================================
ARM GAS  /tmp//ccJMd58S.s 			page 366


6325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     [..]
6326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     This subsection permits to get in run-time the status of the peripheral
6327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     and the data flow.
6328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** @endverbatim
6330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
6331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM Base handle state.
6335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Base handle
6336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL state
6337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Base_GetState(const TIM_HandleTypeDef *htim)
6339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14590              		.loc 1 6339 1
 14591              		.cfi_startproc
 14592              		@ args = 0, pretend = 0, frame = 8
 14593              		@ frame_needed = 1, uses_anonymous_args = 0
 14594              		@ link register save eliminated.
 14595 0000 80B4     		push	{r7}
 14596              	.LCFI459:
 14597              		.cfi_def_cfa_offset 4
 14598              		.cfi_offset 7, -4
 14599 0002 83B0     		sub	sp, sp, #12
 14600              	.LCFI460:
 14601              		.cfi_def_cfa_offset 16
 14602 0004 00AF     		add	r7, sp, #0
 14603              	.LCFI461:
 14604              		.cfi_def_cfa_register 7
 14605 0006 7860     		str	r0, [r7, #4]
6340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return htim->State;
 14606              		.loc 1 6340 14
 14607 0008 7B68     		ldr	r3, [r7, #4]
 14608 000a 93F83D30 		ldrb	r3, [r3, #61]
 14609 000e DBB2     		uxtb	r3, r3
6341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14610              		.loc 1 6341 1
 14611 0010 1846     		mov	r0, r3
 14612 0012 0C37     		adds	r7, r7, #12
 14613              	.LCFI462:
 14614              		.cfi_def_cfa_offset 4
 14615 0014 BD46     		mov	sp, r7
 14616              	.LCFI463:
 14617              		.cfi_def_cfa_register 13
 14618              		@ sp needed
 14619 0016 80BC     		pop	{r7}
 14620              	.LCFI464:
 14621              		.cfi_restore 7
 14622              		.cfi_def_cfa_offset 0
 14623 0018 7047     		bx	lr
 14624              		.cfi_endproc
 14625              	.LFE151:
 14627              		.section	.text.HAL_TIM_OC_GetState,"ax",%progbits
 14628              		.align	1
 14629              		.global	HAL_TIM_OC_GetState
 14630              		.syntax unified
ARM GAS  /tmp//ccJMd58S.s 			page 367


 14631              		.thumb
 14632              		.thumb_func
 14634              	HAL_TIM_OC_GetState:
 14635              	.LFB152:
6342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM OC handle state.
6345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Output Compare handle
6346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL state
6347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OC_GetState(const TIM_HandleTypeDef *htim)
6349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14636              		.loc 1 6349 1
 14637              		.cfi_startproc
 14638              		@ args = 0, pretend = 0, frame = 8
 14639              		@ frame_needed = 1, uses_anonymous_args = 0
 14640              		@ link register save eliminated.
 14641 0000 80B4     		push	{r7}
 14642              	.LCFI465:
 14643              		.cfi_def_cfa_offset 4
 14644              		.cfi_offset 7, -4
 14645 0002 83B0     		sub	sp, sp, #12
 14646              	.LCFI466:
 14647              		.cfi_def_cfa_offset 16
 14648 0004 00AF     		add	r7, sp, #0
 14649              	.LCFI467:
 14650              		.cfi_def_cfa_register 7
 14651 0006 7860     		str	r0, [r7, #4]
6350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return htim->State;
 14652              		.loc 1 6350 14
 14653 0008 7B68     		ldr	r3, [r7, #4]
 14654 000a 93F83D30 		ldrb	r3, [r3, #61]
 14655 000e DBB2     		uxtb	r3, r3
6351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14656              		.loc 1 6351 1
 14657 0010 1846     		mov	r0, r3
 14658 0012 0C37     		adds	r7, r7, #12
 14659              	.LCFI468:
 14660              		.cfi_def_cfa_offset 4
 14661 0014 BD46     		mov	sp, r7
 14662              	.LCFI469:
 14663              		.cfi_def_cfa_register 13
 14664              		@ sp needed
 14665 0016 80BC     		pop	{r7}
 14666              	.LCFI470:
 14667              		.cfi_restore 7
 14668              		.cfi_def_cfa_offset 0
 14669 0018 7047     		bx	lr
 14670              		.cfi_endproc
 14671              	.LFE152:
 14673              		.section	.text.HAL_TIM_PWM_GetState,"ax",%progbits
 14674              		.align	1
 14675              		.global	HAL_TIM_PWM_GetState
 14676              		.syntax unified
 14677              		.thumb
 14678              		.thumb_func
 14680              	HAL_TIM_PWM_GetState:
ARM GAS  /tmp//ccJMd58S.s 			page 368


 14681              	.LFB153:
6352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM PWM handle state.
6355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
6356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL state
6357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_PWM_GetState(const TIM_HandleTypeDef *htim)
6359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14682              		.loc 1 6359 1
 14683              		.cfi_startproc
 14684              		@ args = 0, pretend = 0, frame = 8
 14685              		@ frame_needed = 1, uses_anonymous_args = 0
 14686              		@ link register save eliminated.
 14687 0000 80B4     		push	{r7}
 14688              	.LCFI471:
 14689              		.cfi_def_cfa_offset 4
 14690              		.cfi_offset 7, -4
 14691 0002 83B0     		sub	sp, sp, #12
 14692              	.LCFI472:
 14693              		.cfi_def_cfa_offset 16
 14694 0004 00AF     		add	r7, sp, #0
 14695              	.LCFI473:
 14696              		.cfi_def_cfa_register 7
 14697 0006 7860     		str	r0, [r7, #4]
6360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return htim->State;
 14698              		.loc 1 6360 14
 14699 0008 7B68     		ldr	r3, [r7, #4]
 14700 000a 93F83D30 		ldrb	r3, [r3, #61]
 14701 000e DBB2     		uxtb	r3, r3
6361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14702              		.loc 1 6361 1
 14703 0010 1846     		mov	r0, r3
 14704 0012 0C37     		adds	r7, r7, #12
 14705              	.LCFI474:
 14706              		.cfi_def_cfa_offset 4
 14707 0014 BD46     		mov	sp, r7
 14708              	.LCFI475:
 14709              		.cfi_def_cfa_register 13
 14710              		@ sp needed
 14711 0016 80BC     		pop	{r7}
 14712              	.LCFI476:
 14713              		.cfi_restore 7
 14714              		.cfi_def_cfa_offset 0
 14715 0018 7047     		bx	lr
 14716              		.cfi_endproc
 14717              	.LFE153:
 14719              		.section	.text.HAL_TIM_IC_GetState,"ax",%progbits
 14720              		.align	1
 14721              		.global	HAL_TIM_IC_GetState
 14722              		.syntax unified
 14723              		.thumb
 14724              		.thumb_func
 14726              	HAL_TIM_IC_GetState:
 14727              	.LFB154:
6362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
ARM GAS  /tmp//ccJMd58S.s 			page 369


6364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM Input Capture handle state.
6365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM IC handle
6366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL state
6367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_IC_GetState(const TIM_HandleTypeDef *htim)
6369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14728              		.loc 1 6369 1
 14729              		.cfi_startproc
 14730              		@ args = 0, pretend = 0, frame = 8
 14731              		@ frame_needed = 1, uses_anonymous_args = 0
 14732              		@ link register save eliminated.
 14733 0000 80B4     		push	{r7}
 14734              	.LCFI477:
 14735              		.cfi_def_cfa_offset 4
 14736              		.cfi_offset 7, -4
 14737 0002 83B0     		sub	sp, sp, #12
 14738              	.LCFI478:
 14739              		.cfi_def_cfa_offset 16
 14740 0004 00AF     		add	r7, sp, #0
 14741              	.LCFI479:
 14742              		.cfi_def_cfa_register 7
 14743 0006 7860     		str	r0, [r7, #4]
6370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return htim->State;
 14744              		.loc 1 6370 14
 14745 0008 7B68     		ldr	r3, [r7, #4]
 14746 000a 93F83D30 		ldrb	r3, [r3, #61]
 14747 000e DBB2     		uxtb	r3, r3
6371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14748              		.loc 1 6371 1
 14749 0010 1846     		mov	r0, r3
 14750 0012 0C37     		adds	r7, r7, #12
 14751              	.LCFI480:
 14752              		.cfi_def_cfa_offset 4
 14753 0014 BD46     		mov	sp, r7
 14754              	.LCFI481:
 14755              		.cfi_def_cfa_register 13
 14756              		@ sp needed
 14757 0016 80BC     		pop	{r7}
 14758              	.LCFI482:
 14759              		.cfi_restore 7
 14760              		.cfi_def_cfa_offset 0
 14761 0018 7047     		bx	lr
 14762              		.cfi_endproc
 14763              	.LFE154:
 14765              		.section	.text.HAL_TIM_OnePulse_GetState,"ax",%progbits
 14766              		.align	1
 14767              		.global	HAL_TIM_OnePulse_GetState
 14768              		.syntax unified
 14769              		.thumb
 14770              		.thumb_func
 14772              	HAL_TIM_OnePulse_GetState:
 14773              	.LFB155:
6372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM One Pulse Mode handle state.
6375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM OPM handle
6376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL state
ARM GAS  /tmp//ccJMd58S.s 			page 370


6377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OnePulse_GetState(const TIM_HandleTypeDef *htim)
6379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14774              		.loc 1 6379 1
 14775              		.cfi_startproc
 14776              		@ args = 0, pretend = 0, frame = 8
 14777              		@ frame_needed = 1, uses_anonymous_args = 0
 14778              		@ link register save eliminated.
 14779 0000 80B4     		push	{r7}
 14780              	.LCFI483:
 14781              		.cfi_def_cfa_offset 4
 14782              		.cfi_offset 7, -4
 14783 0002 83B0     		sub	sp, sp, #12
 14784              	.LCFI484:
 14785              		.cfi_def_cfa_offset 16
 14786 0004 00AF     		add	r7, sp, #0
 14787              	.LCFI485:
 14788              		.cfi_def_cfa_register 7
 14789 0006 7860     		str	r0, [r7, #4]
6380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return htim->State;
 14790              		.loc 1 6380 14
 14791 0008 7B68     		ldr	r3, [r7, #4]
 14792 000a 93F83D30 		ldrb	r3, [r3, #61]
 14793 000e DBB2     		uxtb	r3, r3
6381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14794              		.loc 1 6381 1
 14795 0010 1846     		mov	r0, r3
 14796 0012 0C37     		adds	r7, r7, #12
 14797              	.LCFI486:
 14798              		.cfi_def_cfa_offset 4
 14799 0014 BD46     		mov	sp, r7
 14800              	.LCFI487:
 14801              		.cfi_def_cfa_register 13
 14802              		@ sp needed
 14803 0016 80BC     		pop	{r7}
 14804              	.LCFI488:
 14805              		.cfi_restore 7
 14806              		.cfi_def_cfa_offset 0
 14807 0018 7047     		bx	lr
 14808              		.cfi_endproc
 14809              	.LFE155:
 14811              		.section	.text.HAL_TIM_Encoder_GetState,"ax",%progbits
 14812              		.align	1
 14813              		.global	HAL_TIM_Encoder_GetState
 14814              		.syntax unified
 14815              		.thumb
 14816              		.thumb_func
 14818              	HAL_TIM_Encoder_GetState:
 14819              	.LFB156:
6382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM Encoder Mode handle state.
6385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM Encoder Interface handle
6386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval HAL state
6387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Encoder_GetState(const TIM_HandleTypeDef *htim)
6389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
ARM GAS  /tmp//ccJMd58S.s 			page 371


 14820              		.loc 1 6389 1
 14821              		.cfi_startproc
 14822              		@ args = 0, pretend = 0, frame = 8
 14823              		@ frame_needed = 1, uses_anonymous_args = 0
 14824              		@ link register save eliminated.
 14825 0000 80B4     		push	{r7}
 14826              	.LCFI489:
 14827              		.cfi_def_cfa_offset 4
 14828              		.cfi_offset 7, -4
 14829 0002 83B0     		sub	sp, sp, #12
 14830              	.LCFI490:
 14831              		.cfi_def_cfa_offset 16
 14832 0004 00AF     		add	r7, sp, #0
 14833              	.LCFI491:
 14834              		.cfi_def_cfa_register 7
 14835 0006 7860     		str	r0, [r7, #4]
6390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return htim->State;
 14836              		.loc 1 6390 14
 14837 0008 7B68     		ldr	r3, [r7, #4]
 14838 000a 93F83D30 		ldrb	r3, [r3, #61]
 14839 000e DBB2     		uxtb	r3, r3
6391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14840              		.loc 1 6391 1
 14841 0010 1846     		mov	r0, r3
 14842 0012 0C37     		adds	r7, r7, #12
 14843              	.LCFI492:
 14844              		.cfi_def_cfa_offset 4
 14845 0014 BD46     		mov	sp, r7
 14846              	.LCFI493:
 14847              		.cfi_def_cfa_register 13
 14848              		@ sp needed
 14849 0016 80BC     		pop	{r7}
 14850              	.LCFI494:
 14851              		.cfi_restore 7
 14852              		.cfi_def_cfa_offset 0
 14853 0018 7047     		bx	lr
 14854              		.cfi_endproc
 14855              	.LFE156:
 14857              		.section	.text.HAL_TIM_GetActiveChannel,"ax",%progbits
 14858              		.align	1
 14859              		.global	HAL_TIM_GetActiveChannel
 14860              		.syntax unified
 14861              		.thumb
 14862              		.thumb_func
 14864              	HAL_TIM_GetActiveChannel:
 14865              	.LFB157:
6392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Return the TIM Encoder Mode handle state.
6395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
6396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval Active channel
6397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_TIM_ActiveChannel HAL_TIM_GetActiveChannel(const TIM_HandleTypeDef *htim)
6399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14866              		.loc 1 6399 1
 14867              		.cfi_startproc
 14868              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp//ccJMd58S.s 			page 372


 14869              		@ frame_needed = 1, uses_anonymous_args = 0
 14870              		@ link register save eliminated.
 14871 0000 80B4     		push	{r7}
 14872              	.LCFI495:
 14873              		.cfi_def_cfa_offset 4
 14874              		.cfi_offset 7, -4
 14875 0002 83B0     		sub	sp, sp, #12
 14876              	.LCFI496:
 14877              		.cfi_def_cfa_offset 16
 14878 0004 00AF     		add	r7, sp, #0
 14879              	.LCFI497:
 14880              		.cfi_def_cfa_register 7
 14881 0006 7860     		str	r0, [r7, #4]
6400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return htim->Channel;
 14882              		.loc 1 6400 14
 14883 0008 7B68     		ldr	r3, [r7, #4]
 14884 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
6401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14885              		.loc 1 6401 1
 14886 000c 1846     		mov	r0, r3
 14887 000e 0C37     		adds	r7, r7, #12
 14888              	.LCFI498:
 14889              		.cfi_def_cfa_offset 4
 14890 0010 BD46     		mov	sp, r7
 14891              	.LCFI499:
 14892              		.cfi_def_cfa_register 13
 14893              		@ sp needed
 14894 0012 80BC     		pop	{r7}
 14895              	.LCFI500:
 14896              		.cfi_restore 7
 14897              		.cfi_def_cfa_offset 0
 14898 0014 7047     		bx	lr
 14899              		.cfi_endproc
 14900              	.LFE157:
 14902              		.section	.text.HAL_TIM_GetChannelState,"ax",%progbits
 14903              		.align	1
 14904              		.global	HAL_TIM_GetChannelState
 14905              		.syntax unified
 14906              		.thumb
 14907              		.thumb_func
 14909              	HAL_TIM_GetChannelState:
 14910              	.LFB158:
6402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Return actual state of the TIM channel.
6405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
6406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel TIM Channel
6407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
6408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
6409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
6410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
6411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
6412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_5: TIM Channel 5
6413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_6: TIM Channel 6
6414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval TIM Channel state
6415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_TIM_ChannelStateTypeDef HAL_TIM_GetChannelState(const TIM_HandleTypeDef *htim,  uint32_t Channe
ARM GAS  /tmp//ccJMd58S.s 			page 373


6417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14911              		.loc 1 6417 1
 14912              		.cfi_startproc
 14913              		@ args = 0, pretend = 0, frame = 16
 14914              		@ frame_needed = 1, uses_anonymous_args = 0
 14915              		@ link register save eliminated.
 14916 0000 80B4     		push	{r7}
 14917              	.LCFI501:
 14918              		.cfi_def_cfa_offset 4
 14919              		.cfi_offset 7, -4
 14920 0002 85B0     		sub	sp, sp, #20
 14921              	.LCFI502:
 14922              		.cfi_def_cfa_offset 24
 14923 0004 00AF     		add	r7, sp, #0
 14924              	.LCFI503:
 14925              		.cfi_def_cfa_register 7
 14926 0006 7860     		str	r0, [r7, #4]
 14927 0008 3960     		str	r1, [r7]
6418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ChannelStateTypeDef channel_state;
6419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
6421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
6422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   channel_state = TIM_CHANNEL_STATE_GET(htim, Channel);
 14928              		.loc 1 6423 19
 14929 000a 3B68     		ldr	r3, [r7]
 14930 000c 002B     		cmp	r3, #0
 14931 000e 04D1     		bne	.L1007
 14932              		.loc 1 6423 19 is_stmt 0 discriminator 1
 14933 0010 7B68     		ldr	r3, [r7, #4]
 14934 0012 93F83E30 		ldrb	r3, [r3, #62]
 14935 0016 DBB2     		uxtb	r3, r3
 14936 0018 13E0     		b	.L1008
 14937              	.L1007:
 14938              		.loc 1 6423 19 discriminator 2
 14939 001a 3B68     		ldr	r3, [r7]
 14940 001c 042B     		cmp	r3, #4
 14941 001e 04D1     		bne	.L1009
 14942              		.loc 1 6423 19 discriminator 4
 14943 0020 7B68     		ldr	r3, [r7, #4]
 14944 0022 93F83F30 		ldrb	r3, [r3, #63]
 14945 0026 DBB2     		uxtb	r3, r3
 14946 0028 0BE0     		b	.L1008
 14947              	.L1009:
 14948              		.loc 1 6423 19 discriminator 5
 14949 002a 3B68     		ldr	r3, [r7]
 14950 002c 082B     		cmp	r3, #8
 14951 002e 04D1     		bne	.L1011
 14952              		.loc 1 6423 19 discriminator 7
 14953 0030 7B68     		ldr	r3, [r7, #4]
 14954 0032 93F84030 		ldrb	r3, [r3, #64]
 14955 0036 DBB2     		uxtb	r3, r3
 14956 0038 03E0     		b	.L1008
 14957              	.L1011:
 14958              		.loc 1 6423 19 discriminator 8
 14959 003a 7B68     		ldr	r3, [r7, #4]
 14960 003c 93F84130 		ldrb	r3, [r3, #65]
ARM GAS  /tmp//ccJMd58S.s 			page 374


 14961 0040 DBB2     		uxtb	r3, r3
 14962              	.L1008:
 14963              		.loc 1 6423 17 is_stmt 1 discriminator 12
 14964 0042 FB73     		strb	r3, [r7, #15]
6424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return channel_state;
 14965              		.loc 1 6425 10
 14966 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
6426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 14967              		.loc 1 6426 1
 14968 0046 1846     		mov	r0, r3
 14969 0048 1437     		adds	r7, r7, #20
 14970              	.LCFI504:
 14971              		.cfi_def_cfa_offset 4
 14972 004a BD46     		mov	sp, r7
 14973              	.LCFI505:
 14974              		.cfi_def_cfa_register 13
 14975              		@ sp needed
 14976 004c 80BC     		pop	{r7}
 14977              	.LCFI506:
 14978              		.cfi_restore 7
 14979              		.cfi_def_cfa_offset 0
 14980 004e 7047     		bx	lr
 14981              		.cfi_endproc
 14982              	.LFE158:
 14984              		.section	.text.HAL_TIM_DMABurstState,"ax",%progbits
 14985              		.align	1
 14986              		.global	HAL_TIM_DMABurstState
 14987              		.syntax unified
 14988              		.thumb
 14989              		.thumb_func
 14991              	HAL_TIM_DMABurstState:
 14992              	.LFB159:
6427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Return actual state of a DMA burst operation.
6430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
6431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval DMA burst state
6432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** HAL_TIM_DMABurstStateTypeDef HAL_TIM_DMABurstState(const TIM_HandleTypeDef *htim)
6434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 14993              		.loc 1 6434 1
 14994              		.cfi_startproc
 14995              		@ args = 0, pretend = 0, frame = 8
 14996              		@ frame_needed = 1, uses_anonymous_args = 0
 14997              		@ link register save eliminated.
 14998 0000 80B4     		push	{r7}
 14999              	.LCFI507:
 15000              		.cfi_def_cfa_offset 4
 15001              		.cfi_offset 7, -4
 15002 0002 83B0     		sub	sp, sp, #12
 15003              	.LCFI508:
 15004              		.cfi_def_cfa_offset 16
 15005 0004 00AF     		add	r7, sp, #0
 15006              	.LCFI509:
 15007              		.cfi_def_cfa_register 7
 15008 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 375


6435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
6436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
6437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return htim->DMABurstState;
 15009              		.loc 1 6438 14
 15010 0008 7B68     		ldr	r3, [r7, #4]
 15011 000a 93F84630 		ldrb	r3, [r3, #70]
 15012 000e DBB2     		uxtb	r3, r3
6439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15013              		.loc 1 6439 1
 15014 0010 1846     		mov	r0, r3
 15015 0012 0C37     		adds	r7, r7, #12
 15016              	.LCFI510:
 15017              		.cfi_def_cfa_offset 4
 15018 0014 BD46     		mov	sp, r7
 15019              	.LCFI511:
 15020              		.cfi_def_cfa_register 13
 15021              		@ sp needed
 15022 0016 80BC     		pop	{r7}
 15023              	.LCFI512:
 15024              		.cfi_restore 7
 15025              		.cfi_def_cfa_offset 0
 15026 0018 7047     		bx	lr
 15027              		.cfi_endproc
 15028              	.LFE159:
 15030              		.section	.text.TIM_DMAError,"ax",%progbits
 15031              		.align	1
 15032              		.global	TIM_DMAError
 15033              		.syntax unified
 15034              		.thumb
 15035              		.thumb_func
 15037              	TIM_DMAError:
 15038              	.LFB160:
6440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
6443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @}
6447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /** @defgroup TIM_Private_Functions TIM Private Functions
6450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @{
6451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA error callback
6455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void TIM_DMAError(DMA_HandleTypeDef *hdma)
6459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15039              		.loc 1 6459 1
 15040              		.cfi_startproc
 15041              		@ args = 0, pretend = 0, frame = 16
 15042              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp//ccJMd58S.s 			page 376


 15043 0000 80B5     		push	{r7, lr}
 15044              	.LCFI513:
 15045              		.cfi_def_cfa_offset 8
 15046              		.cfi_offset 7, -8
 15047              		.cfi_offset 14, -4
 15048 0002 84B0     		sub	sp, sp, #16
 15049              	.LCFI514:
 15050              		.cfi_def_cfa_offset 24
 15051 0004 00AF     		add	r7, sp, #0
 15052              	.LCFI515:
 15053              		.cfi_def_cfa_register 7
 15054 0006 7860     		str	r0, [r7, #4]
6460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 15055              		.loc 1 6460 22
 15056 0008 7B68     		ldr	r3, [r7, #4]
 15057 000a 5B6A     		ldr	r3, [r3, #36]
 15058 000c FB60     		str	r3, [r7, #12]
6461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 15059              		.loc 1 6462 25
 15060 000e FB68     		ldr	r3, [r7, #12]
 15061 0010 5B6A     		ldr	r3, [r3, #36]
 15062              		.loc 1 6462 6
 15063 0012 7A68     		ldr	r2, [r7, #4]
 15064 0014 9A42     		cmp	r2, r3
 15065 0016 07D1     		bne	.L1017
6463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 15066              		.loc 1 6464 19
 15067 0018 FB68     		ldr	r3, [r7, #12]
 15068 001a 0122     		movs	r2, #1
 15069 001c 1A77     		strb	r2, [r3, #28]
6465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 15070              		.loc 1 6465 5
 15071 001e FB68     		ldr	r3, [r7, #12]
 15072 0020 0122     		movs	r2, #1
 15073 0022 83F83E20 		strb	r2, [r3, #62]
 15074 0026 2AE0     		b	.L1018
 15075              	.L1017:
6466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 15076              		.loc 1 6467 30
 15077 0028 FB68     		ldr	r3, [r7, #12]
 15078 002a 9B6A     		ldr	r3, [r3, #40]
 15079              		.loc 1 6467 11
 15080 002c 7A68     		ldr	r2, [r7, #4]
 15081 002e 9A42     		cmp	r2, r3
 15082 0030 07D1     		bne	.L1019
6468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 15083              		.loc 1 6469 19
 15084 0032 FB68     		ldr	r3, [r7, #12]
 15085 0034 0222     		movs	r2, #2
 15086 0036 1A77     		strb	r2, [r3, #28]
6470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 15087              		.loc 1 6470 5
 15088 0038 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 377


 15089 003a 0122     		movs	r2, #1
 15090 003c 83F83F20 		strb	r2, [r3, #63]
 15091 0040 1DE0     		b	.L1018
 15092              	.L1019:
6471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 15093              		.loc 1 6472 30
 15094 0042 FB68     		ldr	r3, [r7, #12]
 15095 0044 DB6A     		ldr	r3, [r3, #44]
 15096              		.loc 1 6472 11
 15097 0046 7A68     		ldr	r2, [r7, #4]
 15098 0048 9A42     		cmp	r2, r3
 15099 004a 07D1     		bne	.L1020
6473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 15100              		.loc 1 6474 19
 15101 004c FB68     		ldr	r3, [r7, #12]
 15102 004e 0422     		movs	r2, #4
 15103 0050 1A77     		strb	r2, [r3, #28]
6475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
 15104              		.loc 1 6475 5
 15105 0052 FB68     		ldr	r3, [r7, #12]
 15106 0054 0122     		movs	r2, #1
 15107 0056 83F84020 		strb	r2, [r3, #64]
 15108 005a 10E0     		b	.L1018
 15109              	.L1020:
6476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 15110              		.loc 1 6477 30
 15111 005c FB68     		ldr	r3, [r7, #12]
 15112 005e 1B6B     		ldr	r3, [r3, #48]
 15113              		.loc 1 6477 11
 15114 0060 7A68     		ldr	r2, [r7, #4]
 15115 0062 9A42     		cmp	r2, r3
 15116 0064 07D1     		bne	.L1021
6478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 15117              		.loc 1 6479 19
 15118 0066 FB68     		ldr	r3, [r7, #12]
 15119 0068 0822     		movs	r2, #8
 15120 006a 1A77     		strb	r2, [r3, #28]
6480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
 15121              		.loc 1 6480 5
 15122 006c FB68     		ldr	r3, [r7, #12]
 15123 006e 0122     		movs	r2, #1
 15124 0070 83F84120 		strb	r2, [r3, #65]
 15125 0074 03E0     		b	.L1018
 15126              	.L1021:
6481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
6483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
 15127              		.loc 1 6484 17
 15128 0076 FB68     		ldr	r3, [r7, #12]
 15129 0078 0122     		movs	r2, #1
 15130 007a 83F83D20 		strb	r2, [r3, #61]
 15131              	.L1018:
ARM GAS  /tmp//ccJMd58S.s 			page 378


6485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->ErrorCallback(htim);
6489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
6490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_ErrorCallback(htim);
 15132              		.loc 1 6490 3
 15133 007e F868     		ldr	r0, [r7, #12]
 15134 0080 FFF7FEFF 		bl	HAL_TIM_ErrorCallback
6491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 15135              		.loc 1 6493 17
 15136 0084 FB68     		ldr	r3, [r7, #12]
 15137 0086 0022     		movs	r2, #0
 15138 0088 1A77     		strb	r2, [r3, #28]
6494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15139              		.loc 1 6494 1
 15140 008a 00BF     		nop
 15141 008c 1037     		adds	r7, r7, #16
 15142              	.LCFI516:
 15143              		.cfi_def_cfa_offset 8
 15144 008e BD46     		mov	sp, r7
 15145              	.LCFI517:
 15146              		.cfi_def_cfa_register 13
 15147              		@ sp needed
 15148 0090 80BD     		pop	{r7, pc}
 15149              		.cfi_endproc
 15150              	.LFE160:
 15152              		.section	.text.TIM_DMADelayPulseCplt,"ax",%progbits
 15153              		.align	1
 15154              		.syntax unified
 15155              		.thumb
 15156              		.thumb_func
 15158              	TIM_DMADelayPulseCplt:
 15159              	.LFB161:
6495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Delay Pulse complete callback.
6498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMADelayPulseCplt(DMA_HandleTypeDef *hdma)
6502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15160              		.loc 1 6502 1
 15161              		.cfi_startproc
 15162              		@ args = 0, pretend = 0, frame = 16
 15163              		@ frame_needed = 1, uses_anonymous_args = 0
 15164 0000 80B5     		push	{r7, lr}
 15165              	.LCFI518:
 15166              		.cfi_def_cfa_offset 8
 15167              		.cfi_offset 7, -8
 15168              		.cfi_offset 14, -4
 15169 0002 84B0     		sub	sp, sp, #16
 15170              	.LCFI519:
 15171              		.cfi_def_cfa_offset 24
 15172 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp//ccJMd58S.s 			page 379


 15173              	.LCFI520:
 15174              		.cfi_def_cfa_register 7
 15175 0006 7860     		str	r0, [r7, #4]
6503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 15176              		.loc 1 6503 22
 15177 0008 7B68     		ldr	r3, [r7, #4]
 15178 000a 5B6A     		ldr	r3, [r3, #36]
 15179 000c FB60     		str	r3, [r7, #12]
6504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 15180              		.loc 1 6505 25
 15181 000e FB68     		ldr	r3, [r7, #12]
 15182 0010 5B6A     		ldr	r3, [r3, #36]
 15183              		.loc 1 6505 6
 15184 0012 7A68     		ldr	r2, [r7, #4]
 15185 0014 9A42     		cmp	r2, r3
 15186 0016 0BD1     		bne	.L1023
6506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 15187              		.loc 1 6507 19
 15188 0018 FB68     		ldr	r3, [r7, #12]
 15189 001a 0122     		movs	r2, #1
 15190 001c 1A77     		strb	r2, [r3, #28]
6508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
 15191              		.loc 1 6509 19
 15192 001e 7B68     		ldr	r3, [r7, #4]
 15193 0020 9B69     		ldr	r3, [r3, #24]
 15194              		.loc 1 6509 8
 15195 0022 002B     		cmp	r3, #0
 15196 0024 36D1     		bne	.L1024
6510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 15197              		.loc 1 6511 7
 15198 0026 FB68     		ldr	r3, [r7, #12]
 15199 0028 0122     		movs	r2, #1
 15200 002a 83F83E20 		strb	r2, [r3, #62]
 15201 002e 31E0     		b	.L1024
 15202              	.L1023:
6512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 15203              		.loc 1 6514 30
 15204 0030 FB68     		ldr	r3, [r7, #12]
 15205 0032 9B6A     		ldr	r3, [r3, #40]
 15206              		.loc 1 6514 11
 15207 0034 7A68     		ldr	r2, [r7, #4]
 15208 0036 9A42     		cmp	r2, r3
 15209 0038 0BD1     		bne	.L1025
6515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 15210              		.loc 1 6516 19
 15211 003a FB68     		ldr	r3, [r7, #12]
 15212 003c 0222     		movs	r2, #2
 15213 003e 1A77     		strb	r2, [r3, #28]
6517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
ARM GAS  /tmp//ccJMd58S.s 			page 380


 15214              		.loc 1 6518 19
 15215 0040 7B68     		ldr	r3, [r7, #4]
 15216 0042 9B69     		ldr	r3, [r3, #24]
 15217              		.loc 1 6518 8
 15218 0044 002B     		cmp	r3, #0
 15219 0046 25D1     		bne	.L1024
6519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 15220              		.loc 1 6520 7
 15221 0048 FB68     		ldr	r3, [r7, #12]
 15222 004a 0122     		movs	r2, #1
 15223 004c 83F83F20 		strb	r2, [r3, #63]
 15224 0050 20E0     		b	.L1024
 15225              	.L1025:
6521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 15226              		.loc 1 6523 30
 15227 0052 FB68     		ldr	r3, [r7, #12]
 15228 0054 DB6A     		ldr	r3, [r3, #44]
 15229              		.loc 1 6523 11
 15230 0056 7A68     		ldr	r2, [r7, #4]
 15231 0058 9A42     		cmp	r2, r3
 15232 005a 0BD1     		bne	.L1026
6524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 15233              		.loc 1 6525 19
 15234 005c FB68     		ldr	r3, [r7, #12]
 15235 005e 0422     		movs	r2, #4
 15236 0060 1A77     		strb	r2, [r3, #28]
6526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
 15237              		.loc 1 6527 19
 15238 0062 7B68     		ldr	r3, [r7, #4]
 15239 0064 9B69     		ldr	r3, [r3, #24]
 15240              		.loc 1 6527 8
 15241 0066 002B     		cmp	r3, #0
 15242 0068 14D1     		bne	.L1024
6528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
 15243              		.loc 1 6529 7
 15244 006a FB68     		ldr	r3, [r7, #12]
 15245 006c 0122     		movs	r2, #1
 15246 006e 83F84020 		strb	r2, [r3, #64]
 15247 0072 0FE0     		b	.L1024
 15248              	.L1026:
6530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 15249              		.loc 1 6532 30
 15250 0074 FB68     		ldr	r3, [r7, #12]
 15251 0076 1B6B     		ldr	r3, [r3, #48]
 15252              		.loc 1 6532 11
 15253 0078 7A68     		ldr	r2, [r7, #4]
 15254 007a 9A42     		cmp	r2, r3
 15255 007c 0AD1     		bne	.L1024
6533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
ARM GAS  /tmp//ccJMd58S.s 			page 381


6534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 15256              		.loc 1 6534 19
 15257 007e FB68     		ldr	r3, [r7, #12]
 15258 0080 0822     		movs	r2, #8
 15259 0082 1A77     		strb	r2, [r3, #28]
6535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
 15260              		.loc 1 6536 19
 15261 0084 7B68     		ldr	r3, [r7, #4]
 15262 0086 9B69     		ldr	r3, [r3, #24]
 15263              		.loc 1 6536 8
 15264 0088 002B     		cmp	r3, #0
 15265 008a 03D1     		bne	.L1024
6537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
 15266              		.loc 1 6538 7
 15267 008c FB68     		ldr	r3, [r7, #12]
 15268 008e 0122     		movs	r2, #1
 15269 0090 83F84120 		strb	r2, [r3, #65]
 15270              	.L1024:
6539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
6542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* nothing to do */
6544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->PWM_PulseFinishedCallback(htim);
6548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
6549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedCallback(htim);
 15271              		.loc 1 6549 3
 15272 0094 F868     		ldr	r0, [r7, #12]
 15273 0096 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
6550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 15274              		.loc 1 6552 17
 15275 009a FB68     		ldr	r3, [r7, #12]
 15276 009c 0022     		movs	r2, #0
 15277 009e 1A77     		strb	r2, [r3, #28]
6553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15278              		.loc 1 6553 1
 15279 00a0 00BF     		nop
 15280 00a2 1037     		adds	r7, r7, #16
 15281              	.LCFI521:
 15282              		.cfi_def_cfa_offset 8
 15283 00a4 BD46     		mov	sp, r7
 15284              	.LCFI522:
 15285              		.cfi_def_cfa_register 13
 15286              		@ sp needed
 15287 00a6 80BD     		pop	{r7, pc}
 15288              		.cfi_endproc
 15289              	.LFE161:
 15291              		.section	.text.TIM_DMADelayPulseHalfCplt,"ax",%progbits
 15292              		.align	1
 15293              		.global	TIM_DMADelayPulseHalfCplt
ARM GAS  /tmp//ccJMd58S.s 			page 382


 15294              		.syntax unified
 15295              		.thumb
 15296              		.thumb_func
 15298              	TIM_DMADelayPulseHalfCplt:
 15299              	.LFB162:
6554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Delay Pulse half complete callback.
6557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void TIM_DMADelayPulseHalfCplt(DMA_HandleTypeDef *hdma)
6561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15300              		.loc 1 6561 1
 15301              		.cfi_startproc
 15302              		@ args = 0, pretend = 0, frame = 16
 15303              		@ frame_needed = 1, uses_anonymous_args = 0
 15304 0000 80B5     		push	{r7, lr}
 15305              	.LCFI523:
 15306              		.cfi_def_cfa_offset 8
 15307              		.cfi_offset 7, -8
 15308              		.cfi_offset 14, -4
 15309 0002 84B0     		sub	sp, sp, #16
 15310              	.LCFI524:
 15311              		.cfi_def_cfa_offset 24
 15312 0004 00AF     		add	r7, sp, #0
 15313              	.LCFI525:
 15314              		.cfi_def_cfa_register 7
 15315 0006 7860     		str	r0, [r7, #4]
6562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 15316              		.loc 1 6562 22
 15317 0008 7B68     		ldr	r3, [r7, #4]
 15318 000a 5B6A     		ldr	r3, [r3, #36]
 15319 000c FB60     		str	r3, [r7, #12]
6563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 15320              		.loc 1 6564 25
 15321 000e FB68     		ldr	r3, [r7, #12]
 15322 0010 5B6A     		ldr	r3, [r3, #36]
 15323              		.loc 1 6564 6
 15324 0012 7A68     		ldr	r2, [r7, #4]
 15325 0014 9A42     		cmp	r2, r3
 15326 0016 03D1     		bne	.L1028
6565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 15327              		.loc 1 6566 19
 15328 0018 FB68     		ldr	r3, [r7, #12]
 15329 001a 0122     		movs	r2, #1
 15330 001c 1A77     		strb	r2, [r3, #28]
 15331 001e 19E0     		b	.L1029
 15332              	.L1028:
6567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 15333              		.loc 1 6568 30
 15334 0020 FB68     		ldr	r3, [r7, #12]
 15335 0022 9B6A     		ldr	r3, [r3, #40]
 15336              		.loc 1 6568 11
ARM GAS  /tmp//ccJMd58S.s 			page 383


 15337 0024 7A68     		ldr	r2, [r7, #4]
 15338 0026 9A42     		cmp	r2, r3
 15339 0028 03D1     		bne	.L1030
6569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 15340              		.loc 1 6570 19
 15341 002a FB68     		ldr	r3, [r7, #12]
 15342 002c 0222     		movs	r2, #2
 15343 002e 1A77     		strb	r2, [r3, #28]
 15344 0030 10E0     		b	.L1029
 15345              	.L1030:
6571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 15346              		.loc 1 6572 30
 15347 0032 FB68     		ldr	r3, [r7, #12]
 15348 0034 DB6A     		ldr	r3, [r3, #44]
 15349              		.loc 1 6572 11
 15350 0036 7A68     		ldr	r2, [r7, #4]
 15351 0038 9A42     		cmp	r2, r3
 15352 003a 03D1     		bne	.L1031
6573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 15353              		.loc 1 6574 19
 15354 003c FB68     		ldr	r3, [r7, #12]
 15355 003e 0422     		movs	r2, #4
 15356 0040 1A77     		strb	r2, [r3, #28]
 15357 0042 07E0     		b	.L1029
 15358              	.L1031:
6575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 15359              		.loc 1 6576 30
 15360 0044 FB68     		ldr	r3, [r7, #12]
 15361 0046 1B6B     		ldr	r3, [r3, #48]
 15362              		.loc 1 6576 11
 15363 0048 7A68     		ldr	r2, [r7, #4]
 15364 004a 9A42     		cmp	r2, r3
 15365 004c 02D1     		bne	.L1029
6577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 15366              		.loc 1 6578 19
 15367 004e FB68     		ldr	r3, [r7, #12]
 15368 0050 0822     		movs	r2, #8
 15369 0052 1A77     		strb	r2, [r3, #28]
 15370              	.L1029:
6579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
6581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* nothing to do */
6583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->PWM_PulseFinishedHalfCpltCallback(htim);
6587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
6588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedHalfCpltCallback(htim);
 15371              		.loc 1 6588 3
 15372 0054 F868     		ldr	r0, [r7, #12]
 15373 0056 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedHalfCpltCallback
ARM GAS  /tmp//ccJMd58S.s 			page 384


6589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 15374              		.loc 1 6591 17
 15375 005a FB68     		ldr	r3, [r7, #12]
 15376 005c 0022     		movs	r2, #0
 15377 005e 1A77     		strb	r2, [r3, #28]
6592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15378              		.loc 1 6592 1
 15379 0060 00BF     		nop
 15380 0062 1037     		adds	r7, r7, #16
 15381              	.LCFI526:
 15382              		.cfi_def_cfa_offset 8
 15383 0064 BD46     		mov	sp, r7
 15384              	.LCFI527:
 15385              		.cfi_def_cfa_register 13
 15386              		@ sp needed
 15387 0066 80BD     		pop	{r7, pc}
 15388              		.cfi_endproc
 15389              	.LFE162:
 15391              		.section	.text.TIM_DMACaptureCplt,"ax",%progbits
 15392              		.align	1
 15393              		.global	TIM_DMACaptureCplt
 15394              		.syntax unified
 15395              		.thumb
 15396              		.thumb_func
 15398              	TIM_DMACaptureCplt:
 15399              	.LFB163:
6593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Capture complete callback.
6596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void TIM_DMACaptureCplt(DMA_HandleTypeDef *hdma)
6600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15400              		.loc 1 6600 1
 15401              		.cfi_startproc
 15402              		@ args = 0, pretend = 0, frame = 16
 15403              		@ frame_needed = 1, uses_anonymous_args = 0
 15404 0000 80B5     		push	{r7, lr}
 15405              	.LCFI528:
 15406              		.cfi_def_cfa_offset 8
 15407              		.cfi_offset 7, -8
 15408              		.cfi_offset 14, -4
 15409 0002 84B0     		sub	sp, sp, #16
 15410              	.LCFI529:
 15411              		.cfi_def_cfa_offset 24
 15412 0004 00AF     		add	r7, sp, #0
 15413              	.LCFI530:
 15414              		.cfi_def_cfa_register 7
 15415 0006 7860     		str	r0, [r7, #4]
6601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 15416              		.loc 1 6601 22
 15417 0008 7B68     		ldr	r3, [r7, #4]
 15418 000a 5B6A     		ldr	r3, [r3, #36]
 15419 000c FB60     		str	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 385


6602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 15420              		.loc 1 6603 25
 15421 000e FB68     		ldr	r3, [r7, #12]
 15422 0010 5B6A     		ldr	r3, [r3, #36]
 15423              		.loc 1 6603 6
 15424 0012 7A68     		ldr	r2, [r7, #4]
 15425 0014 9A42     		cmp	r2, r3
 15426 0016 0FD1     		bne	.L1033
6604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 15427              		.loc 1 6605 19
 15428 0018 FB68     		ldr	r3, [r7, #12]
 15429 001a 0122     		movs	r2, #1
 15430 001c 1A77     		strb	r2, [r3, #28]
6606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
 15431              		.loc 1 6607 19
 15432 001e 7B68     		ldr	r3, [r7, #4]
 15433 0020 9B69     		ldr	r3, [r3, #24]
 15434              		.loc 1 6607 8
 15435 0022 002B     		cmp	r3, #0
 15436 0024 46D1     		bne	.L1034
6608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 15437              		.loc 1 6609 7
 15438 0026 FB68     		ldr	r3, [r7, #12]
 15439 0028 0122     		movs	r2, #1
 15440 002a 83F83E20 		strb	r2, [r3, #62]
6610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_1, HAL_TIM_CHANNEL_STATE_READY);
 15441              		.loc 1 6610 7
 15442 002e FB68     		ldr	r3, [r7, #12]
 15443 0030 0122     		movs	r2, #1
 15444 0032 83F84220 		strb	r2, [r3, #66]
 15445 0036 3DE0     		b	.L1034
 15446              	.L1033:
6611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 15447              		.loc 1 6613 30
 15448 0038 FB68     		ldr	r3, [r7, #12]
 15449 003a 9B6A     		ldr	r3, [r3, #40]
 15450              		.loc 1 6613 11
 15451 003c 7A68     		ldr	r2, [r7, #4]
 15452 003e 9A42     		cmp	r2, r3
 15453 0040 0FD1     		bne	.L1035
6614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 15454              		.loc 1 6615 19
 15455 0042 FB68     		ldr	r3, [r7, #12]
 15456 0044 0222     		movs	r2, #2
 15457 0046 1A77     		strb	r2, [r3, #28]
6616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
 15458              		.loc 1 6617 19
 15459 0048 7B68     		ldr	r3, [r7, #4]
 15460 004a 9B69     		ldr	r3, [r3, #24]
ARM GAS  /tmp//ccJMd58S.s 			page 386


 15461              		.loc 1 6617 8
 15462 004c 002B     		cmp	r3, #0
 15463 004e 31D1     		bne	.L1034
6618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 15464              		.loc 1 6619 7
 15465 0050 FB68     		ldr	r3, [r7, #12]
 15466 0052 0122     		movs	r2, #1
 15467 0054 83F83F20 		strb	r2, [r3, #63]
6620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_2, HAL_TIM_CHANNEL_STATE_READY);
 15468              		.loc 1 6620 7
 15469 0058 FB68     		ldr	r3, [r7, #12]
 15470 005a 0122     		movs	r2, #1
 15471 005c 83F84320 		strb	r2, [r3, #67]
 15472 0060 28E0     		b	.L1034
 15473              	.L1035:
6621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 15474              		.loc 1 6623 30
 15475 0062 FB68     		ldr	r3, [r7, #12]
 15476 0064 DB6A     		ldr	r3, [r3, #44]
 15477              		.loc 1 6623 11
 15478 0066 7A68     		ldr	r2, [r7, #4]
 15479 0068 9A42     		cmp	r2, r3
 15480 006a 0FD1     		bne	.L1036
6624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 15481              		.loc 1 6625 19
 15482 006c FB68     		ldr	r3, [r7, #12]
 15483 006e 0422     		movs	r2, #4
 15484 0070 1A77     		strb	r2, [r3, #28]
6626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
 15485              		.loc 1 6627 19
 15486 0072 7B68     		ldr	r3, [r7, #4]
 15487 0074 9B69     		ldr	r3, [r3, #24]
 15488              		.loc 1 6627 8
 15489 0076 002B     		cmp	r3, #0
 15490 0078 1CD1     		bne	.L1034
6628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
 15491              		.loc 1 6629 7
 15492 007a FB68     		ldr	r3, [r7, #12]
 15493 007c 0122     		movs	r2, #1
 15494 007e 83F84020 		strb	r2, [r3, #64]
6630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_3, HAL_TIM_CHANNEL_STATE_READY);
 15495              		.loc 1 6630 7
 15496 0082 FB68     		ldr	r3, [r7, #12]
 15497 0084 0122     		movs	r2, #1
 15498 0086 83F84420 		strb	r2, [r3, #68]
 15499 008a 13E0     		b	.L1034
 15500              	.L1036:
6631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 15501              		.loc 1 6633 30
ARM GAS  /tmp//ccJMd58S.s 			page 387


 15502 008c FB68     		ldr	r3, [r7, #12]
 15503 008e 1B6B     		ldr	r3, [r3, #48]
 15504              		.loc 1 6633 11
 15505 0090 7A68     		ldr	r2, [r7, #4]
 15506 0092 9A42     		cmp	r2, r3
 15507 0094 0ED1     		bne	.L1034
6634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 15508              		.loc 1 6635 19
 15509 0096 FB68     		ldr	r3, [r7, #12]
 15510 0098 0822     		movs	r2, #8
 15511 009a 1A77     		strb	r2, [r3, #28]
6636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     if (hdma->Init.Mode == DMA_NORMAL)
 15512              		.loc 1 6637 19
 15513 009c 7B68     		ldr	r3, [r7, #4]
 15514 009e 9B69     		ldr	r3, [r3, #24]
 15515              		.loc 1 6637 8
 15516 00a0 002B     		cmp	r3, #0
 15517 00a2 07D1     		bne	.L1034
6638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
6639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
 15518              		.loc 1 6639 7
 15519 00a4 FB68     		ldr	r3, [r7, #12]
 15520 00a6 0122     		movs	r2, #1
 15521 00a8 83F84120 		strb	r2, [r3, #65]
6640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_CHANNEL_N_STATE_SET(htim, TIM_CHANNEL_4, HAL_TIM_CHANNEL_STATE_READY);
 15522              		.loc 1 6640 7
 15523 00ac FB68     		ldr	r3, [r7, #12]
 15524 00ae 0122     		movs	r2, #1
 15525 00b0 83F84520 		strb	r2, [r3, #69]
 15526              	.L1034:
6641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
6642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
6644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* nothing to do */
6646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->IC_CaptureCallback(htim);
6650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
6651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_IC_CaptureCallback(htim);
 15527              		.loc 1 6651 3
 15528 00b4 F868     		ldr	r0, [r7, #12]
 15529 00b6 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
6652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 15530              		.loc 1 6654 17
 15531 00ba FB68     		ldr	r3, [r7, #12]
 15532 00bc 0022     		movs	r2, #0
 15533 00be 1A77     		strb	r2, [r3, #28]
6655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15534              		.loc 1 6655 1
 15535 00c0 00BF     		nop
 15536 00c2 1037     		adds	r7, r7, #16
ARM GAS  /tmp//ccJMd58S.s 			page 388


 15537              	.LCFI531:
 15538              		.cfi_def_cfa_offset 8
 15539 00c4 BD46     		mov	sp, r7
 15540              	.LCFI532:
 15541              		.cfi_def_cfa_register 13
 15542              		@ sp needed
 15543 00c6 80BD     		pop	{r7, pc}
 15544              		.cfi_endproc
 15545              	.LFE163:
 15547              		.section	.text.TIM_DMACaptureHalfCplt,"ax",%progbits
 15548              		.align	1
 15549              		.global	TIM_DMACaptureHalfCplt
 15550              		.syntax unified
 15551              		.thumb
 15552              		.thumb_func
 15554              	TIM_DMACaptureHalfCplt:
 15555              	.LFB164:
6656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Capture half complete callback.
6659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void TIM_DMACaptureHalfCplt(DMA_HandleTypeDef *hdma)
6663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15556              		.loc 1 6663 1
 15557              		.cfi_startproc
 15558              		@ args = 0, pretend = 0, frame = 16
 15559              		@ frame_needed = 1, uses_anonymous_args = 0
 15560 0000 80B5     		push	{r7, lr}
 15561              	.LCFI533:
 15562              		.cfi_def_cfa_offset 8
 15563              		.cfi_offset 7, -8
 15564              		.cfi_offset 14, -4
 15565 0002 84B0     		sub	sp, sp, #16
 15566              	.LCFI534:
 15567              		.cfi_def_cfa_offset 24
 15568 0004 00AF     		add	r7, sp, #0
 15569              	.LCFI535:
 15570              		.cfi_def_cfa_register 7
 15571 0006 7860     		str	r0, [r7, #4]
6664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 15572              		.loc 1 6664 22
 15573 0008 7B68     		ldr	r3, [r7, #4]
 15574 000a 5B6A     		ldr	r3, [r3, #36]
 15575 000c FB60     		str	r3, [r7, #12]
6665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 15576              		.loc 1 6666 25
 15577 000e FB68     		ldr	r3, [r7, #12]
 15578 0010 5B6A     		ldr	r3, [r3, #36]
 15579              		.loc 1 6666 6
 15580 0012 7A68     		ldr	r2, [r7, #4]
 15581 0014 9A42     		cmp	r2, r3
 15582 0016 03D1     		bne	.L1038
6667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
ARM GAS  /tmp//ccJMd58S.s 			page 389


 15583              		.loc 1 6668 19
 15584 0018 FB68     		ldr	r3, [r7, #12]
 15585 001a 0122     		movs	r2, #1
 15586 001c 1A77     		strb	r2, [r3, #28]
 15587 001e 19E0     		b	.L1039
 15588              	.L1038:
6669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 15589              		.loc 1 6670 30
 15590 0020 FB68     		ldr	r3, [r7, #12]
 15591 0022 9B6A     		ldr	r3, [r3, #40]
 15592              		.loc 1 6670 11
 15593 0024 7A68     		ldr	r2, [r7, #4]
 15594 0026 9A42     		cmp	r2, r3
 15595 0028 03D1     		bne	.L1040
6671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 15596              		.loc 1 6672 19
 15597 002a FB68     		ldr	r3, [r7, #12]
 15598 002c 0222     		movs	r2, #2
 15599 002e 1A77     		strb	r2, [r3, #28]
 15600 0030 10E0     		b	.L1039
 15601              	.L1040:
6673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 15602              		.loc 1 6674 30
 15603 0032 FB68     		ldr	r3, [r7, #12]
 15604 0034 DB6A     		ldr	r3, [r3, #44]
 15605              		.loc 1 6674 11
 15606 0036 7A68     		ldr	r2, [r7, #4]
 15607 0038 9A42     		cmp	r2, r3
 15608 003a 03D1     		bne	.L1041
6675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 15609              		.loc 1 6676 19
 15610 003c FB68     		ldr	r3, [r7, #12]
 15611 003e 0422     		movs	r2, #4
 15612 0040 1A77     		strb	r2, [r3, #28]
 15613 0042 07E0     		b	.L1039
 15614              	.L1041:
6677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 15615              		.loc 1 6678 30
 15616 0044 FB68     		ldr	r3, [r7, #12]
 15617 0046 1B6B     		ldr	r3, [r3, #48]
 15618              		.loc 1 6678 11
 15619 0048 7A68     		ldr	r2, [r7, #4]
 15620 004a 9A42     		cmp	r2, r3
 15621 004c 02D1     		bne	.L1039
6679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 15622              		.loc 1 6680 19
 15623 004e FB68     		ldr	r3, [r7, #12]
 15624 0050 0822     		movs	r2, #8
 15625 0052 1A77     		strb	r2, [r3, #28]
 15626              	.L1039:
6681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
ARM GAS  /tmp//ccJMd58S.s 			page 390


6682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
6683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* nothing to do */
6685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->IC_CaptureHalfCpltCallback(htim);
6689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
6690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_IC_CaptureHalfCpltCallback(htim);
 15627              		.loc 1 6690 3
 15628 0054 F868     		ldr	r0, [r7, #12]
 15629 0056 FFF7FEFF 		bl	HAL_TIM_IC_CaptureHalfCpltCallback
6691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 15630              		.loc 1 6693 17
 15631 005a FB68     		ldr	r3, [r7, #12]
 15632 005c 0022     		movs	r2, #0
 15633 005e 1A77     		strb	r2, [r3, #28]
6694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15634              		.loc 1 6694 1
 15635 0060 00BF     		nop
 15636 0062 1037     		adds	r7, r7, #16
 15637              	.LCFI536:
 15638              		.cfi_def_cfa_offset 8
 15639 0064 BD46     		mov	sp, r7
 15640              	.LCFI537:
 15641              		.cfi_def_cfa_register 13
 15642              		@ sp needed
 15643 0066 80BD     		pop	{r7, pc}
 15644              		.cfi_endproc
 15645              	.LFE164:
 15647              		.section	.text.TIM_DMAPeriodElapsedCplt,"ax",%progbits
 15648              		.align	1
 15649              		.syntax unified
 15650              		.thumb
 15651              		.thumb_func
 15653              	TIM_DMAPeriodElapsedCplt:
 15654              	.LFB165:
6695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Period Elapse complete callback.
6698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma)
6702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15655              		.loc 1 6702 1
 15656              		.cfi_startproc
 15657              		@ args = 0, pretend = 0, frame = 16
 15658              		@ frame_needed = 1, uses_anonymous_args = 0
 15659 0000 80B5     		push	{r7, lr}
 15660              	.LCFI538:
 15661              		.cfi_def_cfa_offset 8
 15662              		.cfi_offset 7, -8
 15663              		.cfi_offset 14, -4
 15664 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp//ccJMd58S.s 			page 391


 15665              	.LCFI539:
 15666              		.cfi_def_cfa_offset 24
 15667 0004 00AF     		add	r7, sp, #0
 15668              	.LCFI540:
 15669              		.cfi_def_cfa_register 7
 15670 0006 7860     		str	r0, [r7, #4]
6703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 15671              		.loc 1 6703 22
 15672 0008 7B68     		ldr	r3, [r7, #4]
 15673 000a 5B6A     		ldr	r3, [r3, #36]
 15674 000c FB60     		str	r3, [r7, #12]
6704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->hdma[TIM_DMA_ID_UPDATE]->Init.Mode == DMA_NORMAL)
 15675              		.loc 1 6705 17
 15676 000e FB68     		ldr	r3, [r7, #12]
 15677 0010 1B6A     		ldr	r3, [r3, #32]
 15678              		.loc 1 6705 42
 15679 0012 9B69     		ldr	r3, [r3, #24]
 15680              		.loc 1 6705 6
 15681 0014 002B     		cmp	r3, #0
 15682 0016 03D1     		bne	.L1043
6706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
 15683              		.loc 1 6707 17
 15684 0018 FB68     		ldr	r3, [r7, #12]
 15685 001a 0122     		movs	r2, #1
 15686 001c 83F83D20 		strb	r2, [r3, #61]
 15687              	.L1043:
6708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->PeriodElapsedCallback(htim);
6712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
6713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_PeriodElapsedCallback(htim);
 15688              		.loc 1 6713 3
 15689 0020 F868     		ldr	r0, [r7, #12]
 15690 0022 FFF7FEFF 		bl	HAL_TIM_PeriodElapsedCallback
6714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15691              		.loc 1 6715 1
 15692 0026 00BF     		nop
 15693 0028 1037     		adds	r7, r7, #16
 15694              	.LCFI541:
 15695              		.cfi_def_cfa_offset 8
 15696 002a BD46     		mov	sp, r7
 15697              	.LCFI542:
 15698              		.cfi_def_cfa_register 13
 15699              		@ sp needed
 15700 002c 80BD     		pop	{r7, pc}
 15701              		.cfi_endproc
 15702              	.LFE165:
 15704              		.section	.text.TIM_DMAPeriodElapsedHalfCplt,"ax",%progbits
 15705              		.align	1
 15706              		.syntax unified
 15707              		.thumb
 15708              		.thumb_func
 15710              	TIM_DMAPeriodElapsedHalfCplt:
ARM GAS  /tmp//ccJMd58S.s 			page 392


 15711              	.LFB166:
6716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Period Elapse half complete callback.
6719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMAPeriodElapsedHalfCplt(DMA_HandleTypeDef *hdma)
6723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15712              		.loc 1 6723 1
 15713              		.cfi_startproc
 15714              		@ args = 0, pretend = 0, frame = 16
 15715              		@ frame_needed = 1, uses_anonymous_args = 0
 15716 0000 80B5     		push	{r7, lr}
 15717              	.LCFI543:
 15718              		.cfi_def_cfa_offset 8
 15719              		.cfi_offset 7, -8
 15720              		.cfi_offset 14, -4
 15721 0002 84B0     		sub	sp, sp, #16
 15722              	.LCFI544:
 15723              		.cfi_def_cfa_offset 24
 15724 0004 00AF     		add	r7, sp, #0
 15725              	.LCFI545:
 15726              		.cfi_def_cfa_register 7
 15727 0006 7860     		str	r0, [r7, #4]
6724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 15728              		.loc 1 6724 22
 15729 0008 7B68     		ldr	r3, [r7, #4]
 15730 000a 5B6A     		ldr	r3, [r3, #36]
 15731 000c FB60     		str	r3, [r7, #12]
6725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->PeriodElapsedHalfCpltCallback(htim);
6728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
6729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_PeriodElapsedHalfCpltCallback(htim);
 15732              		.loc 1 6729 3
 15733 000e F868     		ldr	r0, [r7, #12]
 15734 0010 FFF7FEFF 		bl	HAL_TIM_PeriodElapsedHalfCpltCallback
6730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15735              		.loc 1 6731 1
 15736 0014 00BF     		nop
 15737 0016 1037     		adds	r7, r7, #16
 15738              	.LCFI546:
 15739              		.cfi_def_cfa_offset 8
 15740 0018 BD46     		mov	sp, r7
 15741              	.LCFI547:
 15742              		.cfi_def_cfa_register 13
 15743              		@ sp needed
 15744 001a 80BD     		pop	{r7, pc}
 15745              		.cfi_endproc
 15746              	.LFE166:
 15748              		.section	.text.TIM_DMATriggerCplt,"ax",%progbits
 15749              		.align	1
 15750              		.syntax unified
 15751              		.thumb
 15752              		.thumb_func
ARM GAS  /tmp//ccJMd58S.s 			page 393


 15754              	TIM_DMATriggerCplt:
 15755              	.LFB167:
6732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Trigger callback.
6735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma)
6739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15756              		.loc 1 6739 1
 15757              		.cfi_startproc
 15758              		@ args = 0, pretend = 0, frame = 16
 15759              		@ frame_needed = 1, uses_anonymous_args = 0
 15760 0000 80B5     		push	{r7, lr}
 15761              	.LCFI548:
 15762              		.cfi_def_cfa_offset 8
 15763              		.cfi_offset 7, -8
 15764              		.cfi_offset 14, -4
 15765 0002 84B0     		sub	sp, sp, #16
 15766              	.LCFI549:
 15767              		.cfi_def_cfa_offset 24
 15768 0004 00AF     		add	r7, sp, #0
 15769              	.LCFI550:
 15770              		.cfi_def_cfa_register 7
 15771 0006 7860     		str	r0, [r7, #4]
6740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 15772              		.loc 1 6740 22
 15773 0008 7B68     		ldr	r3, [r7, #4]
 15774 000a 5B6A     		ldr	r3, [r3, #36]
 15775 000c FB60     		str	r3, [r7, #12]
6741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (htim->hdma[TIM_DMA_ID_TRIGGER]->Init.Mode == DMA_NORMAL)
 15776              		.loc 1 6742 17
 15777 000e FB68     		ldr	r3, [r7, #12]
 15778 0010 9B6B     		ldr	r3, [r3, #56]
 15779              		.loc 1 6742 43
 15780 0012 9B69     		ldr	r3, [r3, #24]
 15781              		.loc 1 6742 6
 15782 0014 002B     		cmp	r3, #0
 15783 0016 03D1     		bne	.L1046
6743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     htim->State = HAL_TIM_STATE_READY;
 15784              		.loc 1 6744 17
 15785 0018 FB68     		ldr	r3, [r7, #12]
 15786 001a 0122     		movs	r2, #1
 15787 001c 83F83D20 		strb	r2, [r3, #61]
 15788              	.L1046:
6745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->TriggerCallback(htim);
6749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
6750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_TriggerCallback(htim);
 15789              		.loc 1 6750 3
 15790 0020 F868     		ldr	r0, [r7, #12]
 15791 0022 FFF7FEFF 		bl	HAL_TIM_TriggerCallback
ARM GAS  /tmp//ccJMd58S.s 			page 394


6751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15792              		.loc 1 6752 1
 15793 0026 00BF     		nop
 15794 0028 1037     		adds	r7, r7, #16
 15795              	.LCFI551:
 15796              		.cfi_def_cfa_offset 8
 15797 002a BD46     		mov	sp, r7
 15798              	.LCFI552:
 15799              		.cfi_def_cfa_register 13
 15800              		@ sp needed
 15801 002c 80BD     		pop	{r7, pc}
 15802              		.cfi_endproc
 15803              	.LFE167:
 15805              		.section	.text.TIM_DMATriggerHalfCplt,"ax",%progbits
 15806              		.align	1
 15807              		.syntax unified
 15808              		.thumb
 15809              		.thumb_func
 15811              	TIM_DMATriggerHalfCplt:
 15812              	.LFB168:
6753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  TIM DMA Trigger half complete callback.
6756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  hdma pointer to DMA handle.
6757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_DMATriggerHalfCplt(DMA_HandleTypeDef *hdma)
6760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15813              		.loc 1 6760 1
 15814              		.cfi_startproc
 15815              		@ args = 0, pretend = 0, frame = 16
 15816              		@ frame_needed = 1, uses_anonymous_args = 0
 15817 0000 80B5     		push	{r7, lr}
 15818              	.LCFI553:
 15819              		.cfi_def_cfa_offset 8
 15820              		.cfi_offset 7, -8
 15821              		.cfi_offset 14, -4
 15822 0002 84B0     		sub	sp, sp, #16
 15823              	.LCFI554:
 15824              		.cfi_def_cfa_offset 24
 15825 0004 00AF     		add	r7, sp, #0
 15826              	.LCFI555:
 15827              		.cfi_def_cfa_register 7
 15828 0006 7860     		str	r0, [r7, #4]
6761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIM_HandleTypeDef *htim = (TIM_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 15829              		.loc 1 6761 22
 15830 0008 7B68     		ldr	r3, [r7, #4]
 15831 000a 5B6A     		ldr	r3, [r3, #36]
 15832 000c FB60     		str	r3, [r7, #12]
6762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
6764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->TriggerHalfCpltCallback(htim);
6765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #else
6766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_TIM_TriggerHalfCpltCallback(htim);
 15833              		.loc 1 6766 3
 15834 000e F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 395


 15835 0010 FFF7FEFF 		bl	HAL_TIM_TriggerHalfCpltCallback
6767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
6768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 15836              		.loc 1 6768 1
 15837 0014 00BF     		nop
 15838 0016 1037     		adds	r7, r7, #16
 15839              	.LCFI556:
 15840              		.cfi_def_cfa_offset 8
 15841 0018 BD46     		mov	sp, r7
 15842              	.LCFI557:
 15843              		.cfi_def_cfa_register 13
 15844              		@ sp needed
 15845 001a 80BD     		pop	{r7, pc}
 15846              		.cfi_endproc
 15847              	.LFE168:
 15849              		.section	.text.TIM_Base_SetConfig,"ax",%progbits
 15850              		.align	1
 15851              		.global	TIM_Base_SetConfig
 15852              		.syntax unified
 15853              		.thumb
 15854              		.thumb_func
 15856              	TIM_Base_SetConfig:
 15857              	.LFB169:
6769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Time Base configuration
6772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx TIM peripheral
6773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Structure TIM Base configuration structure
6774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
6777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 15858              		.loc 1 6777 1
 15859              		.cfi_startproc
 15860              		@ args = 0, pretend = 0, frame = 16
 15861              		@ frame_needed = 1, uses_anonymous_args = 0
 15862              		@ link register save eliminated.
 15863 0000 80B4     		push	{r7}
 15864              	.LCFI558:
 15865              		.cfi_def_cfa_offset 4
 15866              		.cfi_offset 7, -4
 15867 0002 85B0     		sub	sp, sp, #20
 15868              	.LCFI559:
 15869              		.cfi_def_cfa_offset 24
 15870 0004 00AF     		add	r7, sp, #0
 15871              	.LCFI560:
 15872              		.cfi_def_cfa_register 7
 15873 0006 7860     		str	r0, [r7, #4]
 15874 0008 3960     		str	r1, [r7]
6778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr1;
6779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpcr1 = TIMx->CR1;
 15875              		.loc 1 6779 10
 15876 000a 7B68     		ldr	r3, [r7, #4]
 15877 000c 1B68     		ldr	r3, [r3]
 15878 000e FB60     		str	r3, [r7, #12]
6780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set TIM Time Base Unit parameters ---------------------------------------*/
ARM GAS  /tmp//ccJMd58S.s 			page 396


6782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 15879              		.loc 1 6782 6
 15880 0010 7B68     		ldr	r3, [r7, #4]
 15881 0012 394A     		ldr	r2, .L1057
 15882 0014 9342     		cmp	r3, r2
 15883 0016 13D0     		beq	.L1049
 15884              		.loc 1 6782 7 discriminator 1
 15885 0018 7B68     		ldr	r3, [r7, #4]
 15886 001a 384A     		ldr	r2, .L1057+4
 15887 001c 9342     		cmp	r3, r2
 15888 001e 0FD0     		beq	.L1049
 15889              		.loc 1 6782 7 is_stmt 0 discriminator 2
 15890 0020 7B68     		ldr	r3, [r7, #4]
 15891 0022 B3F1804F 		cmp	r3, #1073741824
 15892 0026 0BD0     		beq	.L1049
 15893              		.loc 1 6782 7 discriminator 3
 15894 0028 7B68     		ldr	r3, [r7, #4]
 15895 002a 354A     		ldr	r2, .L1057+8
 15896 002c 9342     		cmp	r3, r2
 15897 002e 07D0     		beq	.L1049
 15898              		.loc 1 6782 7 discriminator 4
 15899 0030 7B68     		ldr	r3, [r7, #4]
 15900 0032 344A     		ldr	r2, .L1057+12
 15901 0034 9342     		cmp	r3, r2
 15902 0036 03D0     		beq	.L1049
 15903              		.loc 1 6782 7 discriminator 5
 15904 0038 7B68     		ldr	r3, [r7, #4]
 15905 003a 334A     		ldr	r2, .L1057+16
 15906 003c 9342     		cmp	r3, r2
 15907 003e 08D1     		bne	.L1050
 15908              	.L1049:
6783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Select the Counter Mode */
6785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 15909              		.loc 1 6785 12 is_stmt 1
 15910 0040 FB68     		ldr	r3, [r7, #12]
 15911 0042 23F07003 		bic	r3, r3, #112
 15912 0046 FB60     		str	r3, [r7, #12]
6786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr1 |= Structure->CounterMode;
 15913              		.loc 1 6786 24
 15914 0048 3B68     		ldr	r3, [r7]
 15915 004a 5B68     		ldr	r3, [r3, #4]
 15916              		.loc 1 6786 12
 15917 004c FA68     		ldr	r2, [r7, #12]
 15918 004e 1343     		orrs	r3, r3, r2
 15919 0050 FB60     		str	r3, [r7, #12]
 15920              	.L1050:
6787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 15921              		.loc 1 6789 6
 15922 0052 7B68     		ldr	r3, [r7, #4]
 15923 0054 284A     		ldr	r2, .L1057
 15924 0056 9342     		cmp	r3, r2
 15925 0058 13D0     		beq	.L1051
 15926              		.loc 1 6789 7 discriminator 1
 15927 005a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 397


 15928 005c 274A     		ldr	r2, .L1057+4
 15929 005e 9342     		cmp	r3, r2
 15930 0060 0FD0     		beq	.L1051
 15931              		.loc 1 6789 7 is_stmt 0 discriminator 2
 15932 0062 7B68     		ldr	r3, [r7, #4]
 15933 0064 B3F1804F 		cmp	r3, #1073741824
 15934 0068 0BD0     		beq	.L1051
 15935              		.loc 1 6789 7 discriminator 3
 15936 006a 7B68     		ldr	r3, [r7, #4]
 15937 006c 244A     		ldr	r2, .L1057+8
 15938 006e 9342     		cmp	r3, r2
 15939 0070 07D0     		beq	.L1051
 15940              		.loc 1 6789 7 discriminator 4
 15941 0072 7B68     		ldr	r3, [r7, #4]
 15942 0074 234A     		ldr	r2, .L1057+12
 15943 0076 9342     		cmp	r3, r2
 15944 0078 03D0     		beq	.L1051
 15945              		.loc 1 6789 7 discriminator 5
 15946 007a 7B68     		ldr	r3, [r7, #4]
 15947 007c 224A     		ldr	r2, .L1057+16
 15948 007e 9342     		cmp	r3, r2
 15949 0080 08D1     		bne	.L1052
 15950              	.L1051:
6790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the clock division */
6792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr1 &= ~TIM_CR1_CKD;
 15951              		.loc 1 6792 12 is_stmt 1
 15952 0082 FB68     		ldr	r3, [r7, #12]
 15953 0084 23F44073 		bic	r3, r3, #768
 15954 0088 FB60     		str	r3, [r7, #12]
6793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr1 |= (uint32_t)Structure->ClockDivision;
 15955              		.loc 1 6793 34
 15956 008a 3B68     		ldr	r3, [r7]
 15957 008c DB68     		ldr	r3, [r3, #12]
 15958              		.loc 1 6793 12
 15959 008e FA68     		ldr	r2, [r7, #12]
 15960 0090 1343     		orrs	r3, r3, r2
 15961 0092 FB60     		str	r3, [r7, #12]
 15962              	.L1052:
6794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the auto-reload preload */
6797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 15963              		.loc 1 6797 3
 15964 0094 FB68     		ldr	r3, [r7, #12]
 15965 0096 23F08002 		bic	r2, r3, #128
 15966 009a 3B68     		ldr	r3, [r7]
 15967 009c 5B69     		ldr	r3, [r3, #20]
 15968 009e 1343     		orrs	r3, r3, r2
 15969 00a0 FB60     		str	r3, [r7, #12]
6798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CR1 = tmpcr1;
 15970              		.loc 1 6799 13
 15971 00a2 7B68     		ldr	r3, [r7, #4]
 15972 00a4 FA68     		ldr	r2, [r7, #12]
 15973 00a6 1A60     		str	r2, [r3]
6800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 398


6801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Autoreload value */
6802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->ARR = (uint32_t)Structure->Period ;
 15974              		.loc 1 6802 34
 15975 00a8 3B68     		ldr	r3, [r7]
 15976 00aa 9A68     		ldr	r2, [r3, #8]
 15977              		.loc 1 6802 13
 15978 00ac 7B68     		ldr	r3, [r7, #4]
 15979 00ae DA62     		str	r2, [r3, #44]
6803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Prescaler value */
6805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->PSC = Structure->Prescaler;
 15980              		.loc 1 6805 24
 15981 00b0 3B68     		ldr	r3, [r7]
 15982 00b2 1A68     		ldr	r2, [r3]
 15983              		.loc 1 6805 13
 15984 00b4 7B68     		ldr	r3, [r7, #4]
 15985 00b6 9A62     		str	r2, [r3, #40]
6806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 15986              		.loc 1 6807 6
 15987 00b8 7B68     		ldr	r3, [r7, #4]
 15988 00ba 0F4A     		ldr	r2, .L1057
 15989 00bc 9342     		cmp	r3, r2
 15990 00be 03D0     		beq	.L1053
 15991              		.loc 1 6807 7 discriminator 1
 15992 00c0 7B68     		ldr	r3, [r7, #4]
 15993 00c2 0E4A     		ldr	r2, .L1057+4
 15994 00c4 9342     		cmp	r3, r2
 15995 00c6 03D1     		bne	.L1054
 15996              	.L1053:
6808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Repetition Counter value */
6810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     TIMx->RCR = Structure->RepetitionCounter;
 15997              		.loc 1 6810 26
 15998 00c8 3B68     		ldr	r3, [r7]
 15999 00ca 1A69     		ldr	r2, [r3, #16]
 16000              		.loc 1 6810 15
 16001 00cc 7B68     		ldr	r3, [r7, #4]
 16002 00ce 1A63     		str	r2, [r3, #48]
 16003              	.L1054:
6811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Generate an update event to reload the Prescaler
6814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****      and the repetition counter (only for advanced timer) value immediately */
6815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->EGR = TIM_EGR_UG;
 16004              		.loc 1 6815 13
 16005 00d0 7B68     		ldr	r3, [r7, #4]
 16006 00d2 0122     		movs	r2, #1
 16007 00d4 5A61     		str	r2, [r3, #20]
6816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
6818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 16008              		.loc 1 6818 7
 16009 00d6 7B68     		ldr	r3, [r7, #4]
 16010 00d8 1B69     		ldr	r3, [r3, #16]
 16011 00da 03F00103 		and	r3, r3, #1
 16012              		.loc 1 6818 6
ARM GAS  /tmp//ccJMd58S.s 			page 399


 16013 00de 002B     		cmp	r3, #0
 16014 00e0 05D0     		beq	.L1056
6819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Clear the update flag */
6821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 16015              		.loc 1 6821 5
 16016 00e2 7B68     		ldr	r3, [r7, #4]
 16017 00e4 1B69     		ldr	r3, [r3, #16]
 16018 00e6 23F00102 		bic	r2, r3, #1
 16019 00ea 7B68     		ldr	r3, [r7, #4]
 16020 00ec 1A61     		str	r2, [r3, #16]
 16021              	.L1056:
6822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 16022              		.loc 1 6823 1
 16023 00ee 00BF     		nop
 16024 00f0 1437     		adds	r7, r7, #20
 16025              	.LCFI561:
 16026              		.cfi_def_cfa_offset 4
 16027 00f2 BD46     		mov	sp, r7
 16028              	.LCFI562:
 16029              		.cfi_def_cfa_register 13
 16030              		@ sp needed
 16031 00f4 80BC     		pop	{r7}
 16032              	.LCFI563:
 16033              		.cfi_restore 7
 16034              		.cfi_def_cfa_offset 0
 16035 00f6 7047     		bx	lr
 16036              	.L1058:
 16037              		.align	2
 16038              	.L1057:
 16039 00f8 002C0140 		.word	1073818624
 16040 00fc 00340140 		.word	1073820672
 16041 0100 00040040 		.word	1073742848
 16042 0104 00080040 		.word	1073743872
 16043 0108 000C0040 		.word	1073744896
 16044              		.cfi_endproc
 16045              	.LFE169:
 16047              		.section	.text.TIM_OC1_SetConfig,"ax",%progbits
 16048              		.align	1
 16049              		.syntax unified
 16050              		.thumb
 16051              		.thumb_func
 16053              	TIM_OC1_SetConfig:
 16054              	.LFB170:
6824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Timer Output Compare 1 configuration
6827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OC_Config The output configuration structure
6829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
6832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 16055              		.loc 1 6832 1
 16056              		.cfi_startproc
 16057              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp//ccJMd58S.s 			page 400


 16058              		@ frame_needed = 1, uses_anonymous_args = 0
 16059              		@ link register save eliminated.
 16060 0000 80B4     		push	{r7}
 16061              	.LCFI564:
 16062              		.cfi_def_cfa_offset 4
 16063              		.cfi_offset 7, -4
 16064 0002 87B0     		sub	sp, sp, #28
 16065              	.LCFI565:
 16066              		.cfi_def_cfa_offset 32
 16067 0004 00AF     		add	r7, sp, #0
 16068              	.LCFI566:
 16069              		.cfi_def_cfa_register 7
 16070 0006 7860     		str	r0, [r7, #4]
 16071 0008 3960     		str	r1, [r7]
6833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
6834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
6836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
6838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 16072              		.loc 1 6838 11
 16073 000a 7B68     		ldr	r3, [r7, #4]
 16074 000c 1B6A     		ldr	r3, [r3, #32]
 16075 000e 7B61     		str	r3, [r7, #20]
6839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
6841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 16076              		.loc 1 6841 7
 16077 0010 7B68     		ldr	r3, [r7, #4]
 16078 0012 1B6A     		ldr	r3, [r3, #32]
 16079              		.loc 1 6841 14
 16080 0014 23F00102 		bic	r2, r3, #1
 16081 0018 7B68     		ldr	r3, [r7, #4]
 16082 001a 1A62     		str	r2, [r3, #32]
6842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
6844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 16083              		.loc 1 6844 10
 16084 001c 7B68     		ldr	r3, [r7, #4]
 16085 001e 5B68     		ldr	r3, [r3, #4]
 16086 0020 3B61     		str	r3, [r7, #16]
6845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
6847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
 16087              		.loc 1 6847 12
 16088 0022 7B68     		ldr	r3, [r7, #4]
 16089 0024 9B69     		ldr	r3, [r3, #24]
 16090 0026 FB60     		str	r3, [r7, #12]
6848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the Output Compare Mode Bits */
6850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC1M;
 16091              		.loc 1 6850 12
 16092 0028 FB68     		ldr	r3, [r7, #12]
 16093 002a 23F07003 		bic	r3, r3, #112
 16094 002e FB60     		str	r3, [r7, #12]
6851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC1S;
 16095              		.loc 1 6851 12
ARM GAS  /tmp//ccJMd58S.s 			page 401


 16096 0030 FB68     		ldr	r3, [r7, #12]
 16097 0032 23F00303 		bic	r3, r3, #3
 16098 0036 FB60     		str	r3, [r7, #12]
6852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
6853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
 16099              		.loc 1 6853 24
 16100 0038 3B68     		ldr	r3, [r7]
 16101 003a 1B68     		ldr	r3, [r3]
 16102              		.loc 1 6853 12
 16103 003c FA68     		ldr	r2, [r7, #12]
 16104 003e 1343     		orrs	r3, r3, r2
 16105 0040 FB60     		str	r3, [r7, #12]
6854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the Output Polarity level */
6856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC1P;
 16106              		.loc 1 6856 11
 16107 0042 7B69     		ldr	r3, [r7, #20]
 16108 0044 23F00203 		bic	r3, r3, #2
 16109 0048 7B61     		str	r3, [r7, #20]
6857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
6858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= OC_Config->OCPolarity;
 16110              		.loc 1 6858 23
 16111 004a 3B68     		ldr	r3, [r7]
 16112 004c 9B68     		ldr	r3, [r3, #8]
 16113              		.loc 1 6858 11
 16114 004e 7A69     		ldr	r2, [r7, #20]
 16115 0050 1343     		orrs	r3, r3, r2
 16116 0052 7B61     		str	r3, [r7, #20]
6859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 16117              		.loc 1 6860 6
 16118 0054 7B68     		ldr	r3, [r7, #4]
 16119 0056 204A     		ldr	r2, .L1064
 16120 0058 9342     		cmp	r3, r2
 16121 005a 03D0     		beq	.L1060
 16122              		.loc 1 6860 7 discriminator 1
 16123 005c 7B68     		ldr	r3, [r7, #4]
 16124 005e 1F4A     		ldr	r2, .L1064+4
 16125 0060 9342     		cmp	r3, r2
 16126 0062 0CD1     		bne	.L1061
 16127              	.L1060:
6861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Check parameters */
6863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
6864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output N Polarity level */
6866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NP;
 16128              		.loc 1 6866 13
 16129 0064 7B69     		ldr	r3, [r7, #20]
 16130 0066 23F00803 		bic	r3, r3, #8
 16131 006a 7B61     		str	r3, [r7, #20]
6867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output N Polarity */
6868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccer |= OC_Config->OCNPolarity;
 16132              		.loc 1 6868 25
 16133 006c 3B68     		ldr	r3, [r7]
 16134 006e DB68     		ldr	r3, [r3, #12]
 16135              		.loc 1 6868 13
ARM GAS  /tmp//ccJMd58S.s 			page 402


 16136 0070 7A69     		ldr	r2, [r7, #20]
 16137 0072 1343     		orrs	r3, r3, r2
 16138 0074 7B61     		str	r3, [r7, #20]
6869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output N State */
6870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NE;
 16139              		.loc 1 6870 13
 16140 0076 7B69     		ldr	r3, [r7, #20]
 16141 0078 23F00403 		bic	r3, r3, #4
 16142 007c 7B61     		str	r3, [r7, #20]
 16143              	.L1061:
6871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
 16144              		.loc 1 6873 6
 16145 007e 7B68     		ldr	r3, [r7, #4]
 16146 0080 154A     		ldr	r2, .L1064
 16147 0082 9342     		cmp	r3, r2
 16148 0084 03D0     		beq	.L1062
 16149              		.loc 1 6873 7 discriminator 1
 16150 0086 7B68     		ldr	r3, [r7, #4]
 16151 0088 144A     		ldr	r2, .L1064+4
 16152 008a 9342     		cmp	r3, r2
 16153 008c 11D1     		bne	.L1063
 16154              	.L1062:
6874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Check parameters */
6876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
6877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
6878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
6880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1;
 16155              		.loc 1 6880 12
 16156 008e 3B69     		ldr	r3, [r7, #16]
 16157 0090 23F48073 		bic	r3, r3, #256
 16158 0094 3B61     		str	r3, [r7, #16]
6881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1N;
 16159              		.loc 1 6881 12
 16160 0096 3B69     		ldr	r3, [r7, #16]
 16161 0098 23F40073 		bic	r3, r3, #512
 16162 009c 3B61     		str	r3, [r7, #16]
6882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
6883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCIdleState;
 16163              		.loc 1 6883 24
 16164 009e 3B68     		ldr	r3, [r7]
 16165 00a0 5B69     		ldr	r3, [r3, #20]
 16166              		.loc 1 6883 12
 16167 00a2 3A69     		ldr	r2, [r7, #16]
 16168 00a4 1343     		orrs	r3, r3, r2
 16169 00a6 3B61     		str	r3, [r7, #16]
6884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output N Idle state */
6885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCNIdleState;
 16170              		.loc 1 6885 24
 16171 00a8 3B68     		ldr	r3, [r7]
 16172 00aa 9B69     		ldr	r3, [r3, #24]
 16173              		.loc 1 6885 12
 16174 00ac 3A69     		ldr	r2, [r7, #16]
 16175 00ae 1343     		orrs	r3, r3, r2
ARM GAS  /tmp//ccJMd58S.s 			page 403


 16176 00b0 3B61     		str	r3, [r7, #16]
 16177              	.L1063:
6886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CR2 */
6889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 16178              		.loc 1 6889 13
 16179 00b2 7B68     		ldr	r3, [r7, #4]
 16180 00b4 3A69     		ldr	r2, [r7, #16]
 16181 00b6 5A60     		str	r2, [r3, #4]
6890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
6892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 16182              		.loc 1 6892 15
 16183 00b8 7B68     		ldr	r3, [r7, #4]
 16184 00ba FA68     		ldr	r2, [r7, #12]
 16185 00bc 9A61     		str	r2, [r3, #24]
6893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare Register value */
6895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCR1 = OC_Config->Pulse;
 16186              		.loc 1 6895 25
 16187 00be 3B68     		ldr	r3, [r7]
 16188 00c0 5A68     		ldr	r2, [r3, #4]
 16189              		.loc 1 6895 14
 16190 00c2 7B68     		ldr	r3, [r7, #4]
 16191 00c4 5A63     		str	r2, [r3, #52]
6896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
6898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 16192              		.loc 1 6898 14
 16193 00c6 7B68     		ldr	r3, [r7, #4]
 16194 00c8 7A69     		ldr	r2, [r7, #20]
 16195 00ca 1A62     		str	r2, [r3, #32]
6899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 16196              		.loc 1 6899 1
 16197 00cc 00BF     		nop
 16198 00ce 1C37     		adds	r7, r7, #28
 16199              	.LCFI567:
 16200              		.cfi_def_cfa_offset 4
 16201 00d0 BD46     		mov	sp, r7
 16202              	.LCFI568:
 16203              		.cfi_def_cfa_register 13
 16204              		@ sp needed
 16205 00d2 80BC     		pop	{r7}
 16206              	.LCFI569:
 16207              		.cfi_restore 7
 16208              		.cfi_def_cfa_offset 0
 16209 00d4 7047     		bx	lr
 16210              	.L1065:
 16211 00d6 00BF     		.align	2
 16212              	.L1064:
 16213 00d8 002C0140 		.word	1073818624
 16214 00dc 00340140 		.word	1073820672
 16215              		.cfi_endproc
 16216              	.LFE170:
 16218              		.section	.text.TIM_OC2_SetConfig,"ax",%progbits
 16219              		.align	1
ARM GAS  /tmp//ccJMd58S.s 			page 404


 16220              		.global	TIM_OC2_SetConfig
 16221              		.syntax unified
 16222              		.thumb
 16223              		.thumb_func
 16225              	TIM_OC2_SetConfig:
 16226              	.LFB171:
6900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Timer Output Compare 2 configuration
6903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OC_Config The output configuration structure
6905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
6908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 16227              		.loc 1 6908 1
 16228              		.cfi_startproc
 16229              		@ args = 0, pretend = 0, frame = 24
 16230              		@ frame_needed = 1, uses_anonymous_args = 0
 16231              		@ link register save eliminated.
 16232 0000 80B4     		push	{r7}
 16233              	.LCFI570:
 16234              		.cfi_def_cfa_offset 4
 16235              		.cfi_offset 7, -4
 16236 0002 87B0     		sub	sp, sp, #28
 16237              	.LCFI571:
 16238              		.cfi_def_cfa_offset 32
 16239 0004 00AF     		add	r7, sp, #0
 16240              	.LCFI572:
 16241              		.cfi_def_cfa_register 7
 16242 0006 7860     		str	r0, [r7, #4]
 16243 0008 3960     		str	r1, [r7]
6909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
6910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
6912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
6914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 16244              		.loc 1 6914 11
 16245 000a 7B68     		ldr	r3, [r7, #4]
 16246 000c 1B6A     		ldr	r3, [r3, #32]
 16247 000e 7B61     		str	r3, [r7, #20]
6915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
6917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 16248              		.loc 1 6917 7
 16249 0010 7B68     		ldr	r3, [r7, #4]
 16250 0012 1B6A     		ldr	r3, [r3, #32]
 16251              		.loc 1 6917 14
 16252 0014 23F01002 		bic	r2, r3, #16
 16253 0018 7B68     		ldr	r3, [r7, #4]
 16254 001a 1A62     		str	r2, [r3, #32]
6918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
6920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 16255              		.loc 1 6920 10
 16256 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccJMd58S.s 			page 405


 16257 001e 5B68     		ldr	r3, [r3, #4]
 16258 0020 3B61     		str	r3, [r7, #16]
6921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
6923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
 16259              		.loc 1 6923 12
 16260 0022 7B68     		ldr	r3, [r7, #4]
 16261 0024 9B69     		ldr	r3, [r3, #24]
 16262 0026 FB60     		str	r3, [r7, #12]
6924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
6926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC2M;
 16263              		.loc 1 6926 12
 16264 0028 FB68     		ldr	r3, [r7, #12]
 16265 002a 23F4E043 		bic	r3, r3, #28672
 16266 002e FB60     		str	r3, [r7, #12]
6927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC2S;
 16267              		.loc 1 6927 12
 16268 0030 FB68     		ldr	r3, [r7, #12]
 16269 0032 23F44073 		bic	r3, r3, #768
 16270 0036 FB60     		str	r3, [r7, #12]
6928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
6930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
 16271              		.loc 1 6930 25
 16272 0038 3B68     		ldr	r3, [r7]
 16273 003a 1B68     		ldr	r3, [r3]
 16274              		.loc 1 6930 34
 16275 003c 1B02     		lsls	r3, r3, #8
 16276              		.loc 1 6930 12
 16277 003e FA68     		ldr	r2, [r7, #12]
 16278 0040 1343     		orrs	r3, r3, r2
 16279 0042 FB60     		str	r3, [r7, #12]
6931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the Output Polarity level */
6933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC2P;
 16280              		.loc 1 6933 11
 16281 0044 7B69     		ldr	r3, [r7, #20]
 16282 0046 23F02003 		bic	r3, r3, #32
 16283 004a 7B61     		str	r3, [r7, #20]
6934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
6935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 4U);
 16284              		.loc 1 6935 24
 16285 004c 3B68     		ldr	r3, [r7]
 16286 004e 9B68     		ldr	r3, [r3, #8]
 16287              		.loc 1 6935 37
 16288 0050 1B01     		lsls	r3, r3, #4
 16289              		.loc 1 6935 11
 16290 0052 7A69     		ldr	r2, [r7, #20]
 16291 0054 1343     		orrs	r3, r3, r2
 16292 0056 7B61     		str	r3, [r7, #20]
6936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 16293              		.loc 1 6937 6
 16294 0058 7B68     		ldr	r3, [r7, #4]
 16295 005a 214A     		ldr	r2, .L1071
 16296 005c 9342     		cmp	r3, r2
ARM GAS  /tmp//ccJMd58S.s 			page 406


 16297 005e 03D0     		beq	.L1067
 16298              		.loc 1 6937 7 discriminator 1
 16299 0060 7B68     		ldr	r3, [r7, #4]
 16300 0062 204A     		ldr	r2, .L1071+4
 16301 0064 9342     		cmp	r3, r2
 16302 0066 0DD1     		bne	.L1068
 16303              	.L1067:
6938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
6940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output N Polarity level */
6942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NP;
 16304              		.loc 1 6942 13
 16305 0068 7B69     		ldr	r3, [r7, #20]
 16306 006a 23F08003 		bic	r3, r3, #128
 16307 006e 7B61     		str	r3, [r7, #20]
6943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output N Polarity */
6944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 4U);
 16308              		.loc 1 6944 26
 16309 0070 3B68     		ldr	r3, [r7]
 16310 0072 DB68     		ldr	r3, [r3, #12]
 16311              		.loc 1 6944 40
 16312 0074 1B01     		lsls	r3, r3, #4
 16313              		.loc 1 6944 13
 16314 0076 7A69     		ldr	r2, [r7, #20]
 16315 0078 1343     		orrs	r3, r3, r2
 16316 007a 7B61     		str	r3, [r7, #20]
6945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output N State */
6946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NE;
 16317              		.loc 1 6946 13
 16318 007c 7B69     		ldr	r3, [r7, #20]
 16319 007e 23F04003 		bic	r3, r3, #64
 16320 0082 7B61     		str	r3, [r7, #20]
 16321              	.L1068:
6947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
 16322              		.loc 1 6949 6
 16323 0084 7B68     		ldr	r3, [r7, #4]
 16324 0086 164A     		ldr	r2, .L1071
 16325 0088 9342     		cmp	r3, r2
 16326 008a 03D0     		beq	.L1069
 16327              		.loc 1 6949 7 discriminator 1
 16328 008c 7B68     		ldr	r3, [r7, #4]
 16329 008e 154A     		ldr	r2, .L1071+4
 16330 0090 9342     		cmp	r3, r2
 16331 0092 13D1     		bne	.L1070
 16332              	.L1069:
6950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
6951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Check parameters */
6952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
6953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
6954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
6956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2;
 16333              		.loc 1 6956 12
 16334 0094 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp//ccJMd58S.s 			page 407


 16335 0096 23F48063 		bic	r3, r3, #1024
 16336 009a 3B61     		str	r3, [r7, #16]
6957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2N;
 16337              		.loc 1 6957 12
 16338 009c 3B69     		ldr	r3, [r7, #16]
 16339 009e 23F40063 		bic	r3, r3, #2048
 16340 00a2 3B61     		str	r3, [r7, #16]
6958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
6959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 2U);
 16341              		.loc 1 6959 25
 16342 00a4 3B68     		ldr	r3, [r7]
 16343 00a6 5B69     		ldr	r3, [r3, #20]
 16344              		.loc 1 6959 39
 16345 00a8 9B00     		lsls	r3, r3, #2
 16346              		.loc 1 6959 12
 16347 00aa 3A69     		ldr	r2, [r7, #16]
 16348 00ac 1343     		orrs	r3, r3, r2
 16349 00ae 3B61     		str	r3, [r7, #16]
6960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output N Idle state */
6961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 16350              		.loc 1 6961 25
 16351 00b0 3B68     		ldr	r3, [r7]
 16352 00b2 9B69     		ldr	r3, [r3, #24]
 16353              		.loc 1 6961 40
 16354 00b4 9B00     		lsls	r3, r3, #2
 16355              		.loc 1 6961 12
 16356 00b6 3A69     		ldr	r2, [r7, #16]
 16357 00b8 1343     		orrs	r3, r3, r2
 16358 00ba 3B61     		str	r3, [r7, #16]
 16359              	.L1070:
6962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
6963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CR2 */
6965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 16360              		.loc 1 6965 13
 16361 00bc 7B68     		ldr	r3, [r7, #4]
 16362 00be 3A69     		ldr	r2, [r7, #16]
 16363 00c0 5A60     		str	r2, [r3, #4]
6966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
6968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 16364              		.loc 1 6968 15
 16365 00c2 7B68     		ldr	r3, [r7, #4]
 16366 00c4 FA68     		ldr	r2, [r7, #12]
 16367 00c6 9A61     		str	r2, [r3, #24]
6969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare Register value */
6971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCR2 = OC_Config->Pulse;
 16368              		.loc 1 6971 25
 16369 00c8 3B68     		ldr	r3, [r7]
 16370 00ca 5A68     		ldr	r2, [r3, #4]
 16371              		.loc 1 6971 14
 16372 00cc 7B68     		ldr	r3, [r7, #4]
 16373 00ce 9A63     		str	r2, [r3, #56]
6972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
6974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
ARM GAS  /tmp//ccJMd58S.s 			page 408


 16374              		.loc 1 6974 14
 16375 00d0 7B68     		ldr	r3, [r7, #4]
 16376 00d2 7A69     		ldr	r2, [r7, #20]
 16377 00d4 1A62     		str	r2, [r3, #32]
6975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 16378              		.loc 1 6975 1
 16379 00d6 00BF     		nop
 16380 00d8 1C37     		adds	r7, r7, #28
 16381              	.LCFI573:
 16382              		.cfi_def_cfa_offset 4
 16383 00da BD46     		mov	sp, r7
 16384              	.LCFI574:
 16385              		.cfi_def_cfa_register 13
 16386              		@ sp needed
 16387 00dc 80BC     		pop	{r7}
 16388              	.LCFI575:
 16389              		.cfi_restore 7
 16390              		.cfi_def_cfa_offset 0
 16391 00de 7047     		bx	lr
 16392              	.L1072:
 16393              		.align	2
 16394              	.L1071:
 16395 00e0 002C0140 		.word	1073818624
 16396 00e4 00340140 		.word	1073820672
 16397              		.cfi_endproc
 16398              	.LFE171:
 16400              		.section	.text.TIM_OC3_SetConfig,"ax",%progbits
 16401              		.align	1
 16402              		.syntax unified
 16403              		.thumb
 16404              		.thumb_func
 16406              	TIM_OC3_SetConfig:
 16407              	.LFB172:
6976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
6978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Timer Output Compare 3 configuration
6979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
6980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OC_Config The output configuration structure
6981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
6982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
6983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
6984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 16408              		.loc 1 6984 1
 16409              		.cfi_startproc
 16410              		@ args = 0, pretend = 0, frame = 24
 16411              		@ frame_needed = 1, uses_anonymous_args = 0
 16412              		@ link register save eliminated.
 16413 0000 80B4     		push	{r7}
 16414              	.LCFI576:
 16415              		.cfi_def_cfa_offset 4
 16416              		.cfi_offset 7, -4
 16417 0002 87B0     		sub	sp, sp, #28
 16418              	.LCFI577:
 16419              		.cfi_def_cfa_offset 32
 16420 0004 00AF     		add	r7, sp, #0
 16421              	.LCFI578:
 16422              		.cfi_def_cfa_register 7
ARM GAS  /tmp//ccJMd58S.s 			page 409


 16423 0006 7860     		str	r0, [r7, #4]
 16424 0008 3960     		str	r1, [r7]
6985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
6986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
6987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
6988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
6990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 16425              		.loc 1 6990 11
 16426 000a 7B68     		ldr	r3, [r7, #4]
 16427 000c 1B6A     		ldr	r3, [r3, #32]
 16428 000e 7B61     		str	r3, [r7, #20]
6991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
6993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
 16429              		.loc 1 6993 7
 16430 0010 7B68     		ldr	r3, [r7, #4]
 16431 0012 1B6A     		ldr	r3, [r3, #32]
 16432              		.loc 1 6993 14
 16433 0014 23F48072 		bic	r2, r3, #256
 16434 0018 7B68     		ldr	r3, [r7, #4]
 16435 001a 1A62     		str	r2, [r3, #32]
6994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
6996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 16436              		.loc 1 6996 10
 16437 001c 7B68     		ldr	r3, [r7, #4]
 16438 001e 5B68     		ldr	r3, [r3, #4]
 16439 0020 3B61     		str	r3, [r7, #16]
6997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
6998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
6999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 16440              		.loc 1 6999 12
 16441 0022 7B68     		ldr	r3, [r7, #4]
 16442 0024 DB69     		ldr	r3, [r3, #28]
 16443 0026 FB60     		str	r3, [r7, #12]
7000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
7002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC3M;
 16444              		.loc 1 7002 12
 16445 0028 FB68     		ldr	r3, [r7, #12]
 16446 002a 23F07003 		bic	r3, r3, #112
 16447 002e FB60     		str	r3, [r7, #12]
7003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC3S;
 16448              		.loc 1 7003 12
 16449 0030 FB68     		ldr	r3, [r7, #12]
 16450 0032 23F00303 		bic	r3, r3, #3
 16451 0036 FB60     		str	r3, [r7, #12]
7004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
7005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
 16452              		.loc 1 7005 24
 16453 0038 3B68     		ldr	r3, [r7]
 16454 003a 1B68     		ldr	r3, [r3]
 16455              		.loc 1 7005 12
 16456 003c FA68     		ldr	r2, [r7, #12]
 16457 003e 1343     		orrs	r3, r3, r2
 16458 0040 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 410


7006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the Output Polarity level */
7008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC3P;
 16459              		.loc 1 7008 11
 16460 0042 7B69     		ldr	r3, [r7, #20]
 16461 0044 23F40073 		bic	r3, r3, #512
 16462 0048 7B61     		str	r3, [r7, #20]
7009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
7010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 8U);
 16463              		.loc 1 7010 24
 16464 004a 3B68     		ldr	r3, [r7]
 16465 004c 9B68     		ldr	r3, [r3, #8]
 16466              		.loc 1 7010 37
 16467 004e 1B02     		lsls	r3, r3, #8
 16468              		.loc 1 7010 11
 16469 0050 7A69     		ldr	r2, [r7, #20]
 16470 0052 1343     		orrs	r3, r3, r2
 16471 0054 7B61     		str	r3, [r7, #20]
7011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 16472              		.loc 1 7012 6
 16473 0056 7B68     		ldr	r3, [r7, #4]
 16474 0058 214A     		ldr	r2, .L1078
 16475 005a 9342     		cmp	r3, r2
 16476 005c 03D0     		beq	.L1074
 16477              		.loc 1 7012 7 discriminator 1
 16478 005e 7B68     		ldr	r3, [r7, #4]
 16479 0060 204A     		ldr	r2, .L1078+4
 16480 0062 9342     		cmp	r3, r2
 16481 0064 0DD1     		bne	.L1075
 16482              	.L1074:
7013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
7014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
7015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output N Polarity level */
7017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NP;
 16483              		.loc 1 7017 13
 16484 0066 7B69     		ldr	r3, [r7, #20]
 16485 0068 23F40063 		bic	r3, r3, #2048
 16486 006c 7B61     		str	r3, [r7, #20]
7018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output N Polarity */
7019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 8U);
 16487              		.loc 1 7019 26
 16488 006e 3B68     		ldr	r3, [r7]
 16489 0070 DB68     		ldr	r3, [r3, #12]
 16490              		.loc 1 7019 40
 16491 0072 1B02     		lsls	r3, r3, #8
 16492              		.loc 1 7019 13
 16493 0074 7A69     		ldr	r2, [r7, #20]
 16494 0076 1343     		orrs	r3, r3, r2
 16495 0078 7B61     		str	r3, [r7, #20]
7020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output N State */
7021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NE;
 16496              		.loc 1 7021 13
 16497 007a 7B69     		ldr	r3, [r7, #20]
 16498 007c 23F48063 		bic	r3, r3, #1024
 16499 0080 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp//ccJMd58S.s 			page 411


 16500              	.L1075:
7022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
7023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
 16501              		.loc 1 7024 6
 16502 0082 7B68     		ldr	r3, [r7, #4]
 16503 0084 164A     		ldr	r2, .L1078
 16504 0086 9342     		cmp	r3, r2
 16505 0088 03D0     		beq	.L1076
 16506              		.loc 1 7024 7 discriminator 1
 16507 008a 7B68     		ldr	r3, [r7, #4]
 16508 008c 154A     		ldr	r2, .L1078+4
 16509 008e 9342     		cmp	r3, r2
 16510 0090 13D1     		bne	.L1077
 16511              	.L1076:
7025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
7026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Check parameters */
7027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
7028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
7029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
7031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3;
 16512              		.loc 1 7031 12
 16513 0092 3B69     		ldr	r3, [r7, #16]
 16514 0094 23F48053 		bic	r3, r3, #4096
 16515 0098 3B61     		str	r3, [r7, #16]
7032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3N;
 16516              		.loc 1 7032 12
 16517 009a 3B69     		ldr	r3, [r7, #16]
 16518 009c 23F40053 		bic	r3, r3, #8192
 16519 00a0 3B61     		str	r3, [r7, #16]
7033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
7034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 4U);
 16520              		.loc 1 7034 25
 16521 00a2 3B68     		ldr	r3, [r7]
 16522 00a4 5B69     		ldr	r3, [r3, #20]
 16523              		.loc 1 7034 39
 16524 00a6 1B01     		lsls	r3, r3, #4
 16525              		.loc 1 7034 12
 16526 00a8 3A69     		ldr	r2, [r7, #16]
 16527 00aa 1343     		orrs	r3, r3, r2
 16528 00ac 3B61     		str	r3, [r7, #16]
7035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output N Idle state */
7036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 16529              		.loc 1 7036 25
 16530 00ae 3B68     		ldr	r3, [r7]
 16531 00b0 9B69     		ldr	r3, [r3, #24]
 16532              		.loc 1 7036 40
 16533 00b2 1B01     		lsls	r3, r3, #4
 16534              		.loc 1 7036 12
 16535 00b4 3A69     		ldr	r2, [r7, #16]
 16536 00b6 1343     		orrs	r3, r3, r2
 16537 00b8 3B61     		str	r3, [r7, #16]
 16538              	.L1077:
7037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
7038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CR2 */
ARM GAS  /tmp//ccJMd58S.s 			page 412


7040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 16539              		.loc 1 7040 13
 16540 00ba 7B68     		ldr	r3, [r7, #4]
 16541 00bc 3A69     		ldr	r2, [r7, #16]
 16542 00be 5A60     		str	r2, [r3, #4]
7041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
7043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 16543              		.loc 1 7043 15
 16544 00c0 7B68     		ldr	r3, [r7, #4]
 16545 00c2 FA68     		ldr	r2, [r7, #12]
 16546 00c4 DA61     		str	r2, [r3, #28]
7044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare Register value */
7046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCR3 = OC_Config->Pulse;
 16547              		.loc 1 7046 25
 16548 00c6 3B68     		ldr	r3, [r7]
 16549 00c8 5A68     		ldr	r2, [r3, #4]
 16550              		.loc 1 7046 14
 16551 00ca 7B68     		ldr	r3, [r7, #4]
 16552 00cc DA63     		str	r2, [r3, #60]
7047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
7049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 16553              		.loc 1 7049 14
 16554 00ce 7B68     		ldr	r3, [r7, #4]
 16555 00d0 7A69     		ldr	r2, [r7, #20]
 16556 00d2 1A62     		str	r2, [r3, #32]
7050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 16557              		.loc 1 7050 1
 16558 00d4 00BF     		nop
 16559 00d6 1C37     		adds	r7, r7, #28
 16560              	.LCFI579:
 16561              		.cfi_def_cfa_offset 4
 16562 00d8 BD46     		mov	sp, r7
 16563              	.LCFI580:
 16564              		.cfi_def_cfa_register 13
 16565              		@ sp needed
 16566 00da 80BC     		pop	{r7}
 16567              	.LCFI581:
 16568              		.cfi_restore 7
 16569              		.cfi_def_cfa_offset 0
 16570 00dc 7047     		bx	lr
 16571              	.L1079:
 16572 00de 00BF     		.align	2
 16573              	.L1078:
 16574 00e0 002C0140 		.word	1073818624
 16575 00e4 00340140 		.word	1073820672
 16576              		.cfi_endproc
 16577              	.LFE172:
 16579              		.section	.text.TIM_OC4_SetConfig,"ax",%progbits
 16580              		.align	1
 16581              		.syntax unified
 16582              		.thumb
 16583              		.thumb_func
 16585              	TIM_OC4_SetConfig:
 16586              	.LFB173:
ARM GAS  /tmp//ccJMd58S.s 			page 413


7051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Timer Output Compare 4 configuration
7054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  OC_Config The output configuration structure
7056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
7059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 16587              		.loc 1 7059 1
 16588              		.cfi_startproc
 16589              		@ args = 0, pretend = 0, frame = 24
 16590              		@ frame_needed = 1, uses_anonymous_args = 0
 16591              		@ link register save eliminated.
 16592 0000 80B4     		push	{r7}
 16593              	.LCFI582:
 16594              		.cfi_def_cfa_offset 4
 16595              		.cfi_offset 7, -4
 16596 0002 87B0     		sub	sp, sp, #28
 16597              	.LCFI583:
 16598              		.cfi_def_cfa_offset 32
 16599 0004 00AF     		add	r7, sp, #0
 16600              	.LCFI584:
 16601              		.cfi_def_cfa_register 7
 16602 0006 7860     		str	r0, [r7, #4]
 16603 0008 3960     		str	r1, [r7]
7060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmrx;
7061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
7062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpcr2;
7063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCER register value */
7065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 16604              		.loc 1 7065 11
 16605 000a 7B68     		ldr	r3, [r7, #4]
 16606 000c 1B6A     		ldr	r3, [r3, #32]
 16607 000e 3B61     		str	r3, [r7, #16]
7066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
7068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
 16608              		.loc 1 7068 7
 16609 0010 7B68     		ldr	r3, [r7, #4]
 16610 0012 1B6A     		ldr	r3, [r3, #32]
 16611              		.loc 1 7068 14
 16612 0014 23F48052 		bic	r2, r3, #4096
 16613 0018 7B68     		ldr	r3, [r7, #4]
 16614 001a 1A62     		str	r2, [r3, #32]
7069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
7071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 16615              		.loc 1 7071 10
 16616 001c 7B68     		ldr	r3, [r7, #4]
 16617 001e 5B68     		ldr	r3, [r3, #4]
 16618 0020 7B61     		str	r3, [r7, #20]
7072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
7074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 16619              		.loc 1 7074 12
ARM GAS  /tmp//ccJMd58S.s 			page 414


 16620 0022 7B68     		ldr	r3, [r7, #4]
 16621 0024 DB69     		ldr	r3, [r3, #28]
 16622 0026 FB60     		str	r3, [r7, #12]
7075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
7077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC4M;
 16623              		.loc 1 7077 12
 16624 0028 FB68     		ldr	r3, [r7, #12]
 16625 002a 23F4E043 		bic	r3, r3, #28672
 16626 002e FB60     		str	r3, [r7, #12]
7078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC4S;
 16627              		.loc 1 7078 12
 16628 0030 FB68     		ldr	r3, [r7, #12]
 16629 0032 23F44073 		bic	r3, r3, #768
 16630 0036 FB60     		str	r3, [r7, #12]
7079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Output Compare Mode */
7081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
 16631              		.loc 1 7081 25
 16632 0038 3B68     		ldr	r3, [r7]
 16633 003a 1B68     		ldr	r3, [r3]
 16634              		.loc 1 7081 34
 16635 003c 1B02     		lsls	r3, r3, #8
 16636              		.loc 1 7081 12
 16637 003e FA68     		ldr	r2, [r7, #12]
 16638 0040 1343     		orrs	r3, r3, r2
 16639 0042 FB60     		str	r3, [r7, #12]
7082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the Output Polarity level */
7084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC4P;
 16640              		.loc 1 7084 11
 16641 0044 3B69     		ldr	r3, [r7, #16]
 16642 0046 23F40053 		bic	r3, r3, #8192
 16643 004a 3B61     		str	r3, [r7, #16]
7085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Output Compare Polarity */
7086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 12U);
 16644              		.loc 1 7086 24
 16645 004c 3B68     		ldr	r3, [r7]
 16646 004e 9B68     		ldr	r3, [r3, #8]
 16647              		.loc 1 7086 37
 16648 0050 1B03     		lsls	r3, r3, #12
 16649              		.loc 1 7086 11
 16650 0052 3A69     		ldr	r2, [r7, #16]
 16651 0054 1343     		orrs	r3, r3, r2
 16652 0056 3B61     		str	r3, [r7, #16]
7087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_BREAK_INSTANCE(TIMx))
 16653              		.loc 1 7088 6
 16654 0058 7B68     		ldr	r3, [r7, #4]
 16655 005a 114A     		ldr	r2, .L1083
 16656 005c 9342     		cmp	r3, r2
 16657 005e 03D0     		beq	.L1081
 16658              		.loc 1 7088 7 discriminator 1
 16659 0060 7B68     		ldr	r3, [r7, #4]
 16660 0062 104A     		ldr	r2, .L1083+4
 16661 0064 9342     		cmp	r3, r2
 16662 0066 09D1     		bne	.L1082
ARM GAS  /tmp//ccJMd58S.s 			page 415


 16663              	.L1081:
7089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
7090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Check parameters */
7091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
7092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Reset the Output Compare IDLE State */
7094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS4;
 16664              		.loc 1 7094 12
 16665 0068 7B69     		ldr	r3, [r7, #20]
 16666 006a 23F48043 		bic	r3, r3, #16384
 16667 006e 7B61     		str	r3, [r7, #20]
7095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     /* Set the Output Idle state */
7097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 6U);
 16668              		.loc 1 7097 25
 16669 0070 3B68     		ldr	r3, [r7]
 16670 0072 5B69     		ldr	r3, [r3, #20]
 16671              		.loc 1 7097 39
 16672 0074 9B01     		lsls	r3, r3, #6
 16673              		.loc 1 7097 12
 16674 0076 7A69     		ldr	r2, [r7, #20]
 16675 0078 1343     		orrs	r3, r3, r2
 16676 007a 7B61     		str	r3, [r7, #20]
 16677              	.L1082:
7098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
7099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CR2 */
7101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 16678              		.loc 1 7101 13
 16679 007c 7B68     		ldr	r3, [r7, #4]
 16680 007e 7A69     		ldr	r2, [r7, #20]
 16681 0080 5A60     		str	r2, [r3, #4]
7102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
7104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 16682              		.loc 1 7104 15
 16683 0082 7B68     		ldr	r3, [r7, #4]
 16684 0084 FA68     		ldr	r2, [r7, #12]
 16685 0086 DA61     		str	r2, [r3, #28]
7105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Capture Compare Register value */
7107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCR4 = OC_Config->Pulse;
 16686              		.loc 1 7107 25
 16687 0088 3B68     		ldr	r3, [r7]
 16688 008a 5A68     		ldr	r2, [r3, #4]
 16689              		.loc 1 7107 14
 16690 008c 7B68     		ldr	r3, [r7, #4]
 16691 008e 1A64     		str	r2, [r3, #64]
7108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCER */
7110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 16692              		.loc 1 7110 14
 16693 0090 7B68     		ldr	r3, [r7, #4]
 16694 0092 3A69     		ldr	r2, [r7, #16]
 16695 0094 1A62     		str	r2, [r3, #32]
7111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 16696              		.loc 1 7111 1
ARM GAS  /tmp//ccJMd58S.s 			page 416


 16697 0096 00BF     		nop
 16698 0098 1C37     		adds	r7, r7, #28
 16699              	.LCFI585:
 16700              		.cfi_def_cfa_offset 4
 16701 009a BD46     		mov	sp, r7
 16702              	.LCFI586:
 16703              		.cfi_def_cfa_register 13
 16704              		@ sp needed
 16705 009c 80BC     		pop	{r7}
 16706              	.LCFI587:
 16707              		.cfi_restore 7
 16708              		.cfi_def_cfa_offset 0
 16709 009e 7047     		bx	lr
 16710              	.L1084:
 16711              		.align	2
 16712              	.L1083:
 16713 00a0 002C0140 		.word	1073818624
 16714 00a4 00340140 		.word	1073820672
 16715              		.cfi_endproc
 16716              	.LFE173:
 16718              		.section	.text.TIM_SlaveTimer_SetConfig,"ax",%progbits
 16719              		.align	1
 16720              		.syntax unified
 16721              		.thumb
 16722              		.thumb_func
 16724              	TIM_SlaveTimer_SetConfig:
 16725              	.LFB174:
7112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Slave Timer configuration function
7115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  htim TIM handle
7116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  sSlaveConfig Slave timer configuration
7117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static HAL_StatusTypeDef TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
7120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                                   const TIM_SlaveConfigTypeDef *sSlaveConfig)
7121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 16726              		.loc 1 7121 1
 16727              		.cfi_startproc
 16728              		@ args = 0, pretend = 0, frame = 24
 16729              		@ frame_needed = 1, uses_anonymous_args = 0
 16730 0000 80B5     		push	{r7, lr}
 16731              	.LCFI588:
 16732              		.cfi_def_cfa_offset 8
 16733              		.cfi_offset 7, -8
 16734              		.cfi_offset 14, -4
 16735 0002 86B0     		sub	sp, sp, #24
 16736              	.LCFI589:
 16737              		.cfi_def_cfa_offset 32
 16738 0004 00AF     		add	r7, sp, #0
 16739              	.LCFI590:
 16740              		.cfi_def_cfa_register 7
 16741 0006 7860     		str	r0, [r7, #4]
 16742 0008 3960     		str	r1, [r7]
7122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   HAL_StatusTypeDef status = HAL_OK;
 16743              		.loc 1 7122 21
 16744 000a 0023     		movs	r3, #0
ARM GAS  /tmp//ccJMd58S.s 			page 417


 16745 000c FB75     		strb	r3, [r7, #23]
7123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
7124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
7125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
7126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
7128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
 16746              		.loc 1 7128 17
 16747 000e 7B68     		ldr	r3, [r7, #4]
 16748 0010 1B68     		ldr	r3, [r3]
 16749              		.loc 1 7128 11
 16750 0012 9B68     		ldr	r3, [r3, #8]
 16751 0014 3B61     		str	r3, [r7, #16]
7129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the Trigger Selection Bits */
7131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
 16752              		.loc 1 7131 11
 16753 0016 3B69     		ldr	r3, [r7, #16]
 16754 0018 23F07003 		bic	r3, r3, #112
 16755 001c 3B61     		str	r3, [r7, #16]
7132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Input Trigger source */
7133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->InputTrigger;
 16756              		.loc 1 7133 26
 16757 001e 3B68     		ldr	r3, [r7]
 16758 0020 5B68     		ldr	r3, [r3, #4]
 16759              		.loc 1 7133 11
 16760 0022 3A69     		ldr	r2, [r7, #16]
 16761 0024 1343     		orrs	r3, r3, r2
 16762 0026 3B61     		str	r3, [r7, #16]
7134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the slave mode Bits */
7136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_SMS;
 16763              		.loc 1 7136 11
 16764 0028 3B69     		ldr	r3, [r7, #16]
 16765 002a 23F00703 		bic	r3, r3, #7
 16766 002e 3B61     		str	r3, [r7, #16]
7137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the slave mode */
7138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->SlaveMode;
 16767              		.loc 1 7138 26
 16768 0030 3B68     		ldr	r3, [r7]
 16769 0032 1B68     		ldr	r3, [r3]
 16770              		.loc 1 7138 11
 16771 0034 3A69     		ldr	r2, [r7, #16]
 16772 0036 1343     		orrs	r3, r3, r2
 16773 0038 3B61     		str	r3, [r7, #16]
7139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
7141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 16774              		.loc 1 7141 7
 16775 003a 7B68     		ldr	r3, [r7, #4]
 16776 003c 1B68     		ldr	r3, [r3]
 16777              		.loc 1 7141 24
 16778 003e 3A69     		ldr	r2, [r7, #16]
 16779 0040 9A60     		str	r2, [r3, #8]
7142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Configure the trigger prescaler, filter, and polarity */
7144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   switch (sSlaveConfig->InputTrigger)
ARM GAS  /tmp//ccJMd58S.s 			page 418


 16780              		.loc 1 7144 23
 16781 0042 3B68     		ldr	r3, [r7]
 16782 0044 5B68     		ldr	r3, [r3, #4]
 16783              		.loc 1 7144 3
 16784 0046 702B     		cmp	r3, #112
 16785 0048 1AD0     		beq	.L1086
 16786 004a 702B     		cmp	r3, #112
 16787 004c 60D8     		bhi	.L1087
 16788 004e 602B     		cmp	r3, #96
 16789 0050 54D0     		beq	.L1088
 16790 0052 602B     		cmp	r3, #96
 16791 0054 5CD8     		bhi	.L1087
 16792 0056 502B     		cmp	r3, #80
 16793 0058 46D0     		beq	.L1089
 16794 005a 502B     		cmp	r3, #80
 16795 005c 58D8     		bhi	.L1087
 16796 005e 402B     		cmp	r3, #64
 16797 0060 19D0     		beq	.L1090
 16798 0062 402B     		cmp	r3, #64
 16799 0064 54D8     		bhi	.L1087
 16800 0066 302B     		cmp	r3, #48
 16801 0068 55D0     		beq	.L1095
 16802 006a 302B     		cmp	r3, #48
 16803 006c 50D8     		bhi	.L1087
 16804 006e 202B     		cmp	r3, #32
 16805 0070 51D0     		beq	.L1095
 16806 0072 202B     		cmp	r3, #32
 16807 0074 4CD8     		bhi	.L1087
 16808 0076 002B     		cmp	r3, #0
 16809 0078 4DD0     		beq	.L1095
 16810 007a 102B     		cmp	r3, #16
 16811 007c 4BD0     		beq	.L1095
 16812 007e 47E0     		b	.L1087
 16813              	.L1086:
7145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
7146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_TS_ETRF:
7147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
7148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
7149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
7150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPRESCALER(sSlaveConfig->TriggerPrescaler));
7151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
7152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
7153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure the ETR Trigger source */
7154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
 16814              		.loc 1 7154 7
 16815 0080 7B68     		ldr	r3, [r7, #4]
 16816 0082 1868     		ldr	r0, [r3]
7155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sSlaveConfig->TriggerPrescaler,
 16817              		.loc 1 7155 37
 16818 0084 3B68     		ldr	r3, [r7]
 16819 0086 D968     		ldr	r1, [r3, #12]
7156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sSlaveConfig->TriggerPolarity,
 16820              		.loc 1 7156 37
 16821 0088 3B68     		ldr	r3, [r7]
 16822 008a 9A68     		ldr	r2, [r3, #8]
7157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sSlaveConfig->TriggerFilter);
 16823              		.loc 1 7157 37
ARM GAS  /tmp//ccJMd58S.s 			page 419


 16824 008c 3B68     		ldr	r3, [r7]
 16825 008e 1B69     		ldr	r3, [r3, #16]
7154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                         sSlaveConfig->TriggerPrescaler,
 16826              		.loc 1 7154 7
 16827 0090 FFF7FEFF 		bl	TIM_ETR_SetConfig
7158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 16828              		.loc 1 7158 7
 16829 0094 40E0     		b	.L1092
 16830              	.L1090:
7159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
7160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_TS_TI1F_ED:
7162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
7163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
7164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
7165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
7166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 16831              		.loc 1 7167 23
 16832 0096 3B68     		ldr	r3, [r7]
 16833 0098 1B68     		ldr	r3, [r3]
 16834              		.loc 1 7167 10
 16835 009a 052B     		cmp	r3, #5
 16836 009c 01D1     		bne	.L1093
7168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       {
7169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****         return HAL_ERROR;
 16837              		.loc 1 7169 16
 16838 009e 0123     		movs	r3, #1
 16839 00a0 3BE0     		b	.L1094
 16840              	.L1093:
7170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       }
7171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Disable the Channel 1: Reset the CC1E Bit */
7173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpccer = htim->Instance->CCER;
 16841              		.loc 1 7173 21
 16842 00a2 7B68     		ldr	r3, [r7, #4]
 16843 00a4 1B68     		ldr	r3, [r3]
 16844              		.loc 1 7173 15
 16845 00a6 1B6A     		ldr	r3, [r3, #32]
 16846 00a8 FB60     		str	r3, [r7, #12]
7174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCER &= ~TIM_CCER_CC1E;
 16847              		.loc 1 7174 11
 16848 00aa 7B68     		ldr	r3, [r7, #4]
 16849 00ac 1B68     		ldr	r3, [r3]
 16850              		.loc 1 7174 21
 16851 00ae 1A6A     		ldr	r2, [r3, #32]
 16852              		.loc 1 7174 11
 16853 00b0 7B68     		ldr	r3, [r7, #4]
 16854 00b2 1B68     		ldr	r3, [r3]
 16855              		.loc 1 7174 28
 16856 00b4 22F00102 		bic	r2, r2, #1
 16857 00b8 1A62     		str	r2, [r3, #32]
7175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpccmr1 = htim->Instance->CCMR1;
 16858              		.loc 1 7175 22
 16859 00ba 7B68     		ldr	r3, [r7, #4]
 16860 00bc 1B68     		ldr	r3, [r3]
 16861              		.loc 1 7175 16
ARM GAS  /tmp//ccJMd58S.s 			page 420


 16862 00be 9B69     		ldr	r3, [r3, #24]
 16863 00c0 BB60     		str	r3, [r7, #8]
7176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Set the filter */
7178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpccmr1 &= ~TIM_CCMR1_IC1F;
 16864              		.loc 1 7178 16
 16865 00c2 BB68     		ldr	r3, [r7, #8]
 16866 00c4 23F0F003 		bic	r3, r3, #240
 16867 00c8 BB60     		str	r3, [r7, #8]
7179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 16868              		.loc 1 7179 33
 16869 00ca 3B68     		ldr	r3, [r7]
 16870 00cc 1B69     		ldr	r3, [r3, #16]
 16871              		.loc 1 7179 50
 16872 00ce 1B01     		lsls	r3, r3, #4
 16873              		.loc 1 7179 16
 16874 00d0 BA68     		ldr	r2, [r7, #8]
 16875 00d2 1343     		orrs	r3, r3, r2
 16876 00d4 BB60     		str	r3, [r7, #8]
7180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Write to TIMx CCMR1 and CCER registers */
7182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCMR1 = tmpccmr1;
 16877              		.loc 1 7182 11
 16878 00d6 7B68     		ldr	r3, [r7, #4]
 16879 00d8 1B68     		ldr	r3, [r3]
 16880              		.loc 1 7182 29
 16881 00da BA68     		ldr	r2, [r7, #8]
 16882 00dc 9A61     		str	r2, [r3, #24]
7183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       htim->Instance->CCER = tmpccer;
 16883              		.loc 1 7183 11
 16884 00de 7B68     		ldr	r3, [r7, #4]
 16885 00e0 1B68     		ldr	r3, [r3]
 16886              		.loc 1 7183 28
 16887 00e2 FA68     		ldr	r2, [r7, #12]
 16888 00e4 1A62     		str	r2, [r3, #32]
7184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 16889              		.loc 1 7184 7
 16890 00e6 17E0     		b	.L1092
 16891              	.L1089:
7185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
7186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_TS_TI1FP1:
7188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
7189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
7190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
7191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
7192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
7193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure TI1 Filter and Polarity */
7195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
 16892              		.loc 1 7195 7
 16893 00e8 7B68     		ldr	r3, [r7, #4]
 16894 00ea 1868     		ldr	r0, [r3]
7196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
 16895              		.loc 1 7196 44
 16896 00ec 3B68     		ldr	r3, [r7]
 16897 00ee 9968     		ldr	r1, [r3, #8]
ARM GAS  /tmp//ccJMd58S.s 			page 421


7197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerFilter);
 16898              		.loc 1 7197 44
 16899 00f0 3B68     		ldr	r3, [r7]
 16900 00f2 1B69     		ldr	r3, [r3, #16]
7195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
 16901              		.loc 1 7195 7
 16902 00f4 1A46     		mov	r2, r3
 16903 00f6 FFF7FEFF 		bl	TIM_TI1_ConfigInputStage
7198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 16904              		.loc 1 7198 7
 16905 00fa 0DE0     		b	.L1092
 16906              	.L1088:
7199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
7200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_TS_TI2FP2:
7202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
7203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameters */
7204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
7205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
7206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
7207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Configure TI2 Filter and Polarity */
7209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
 16907              		.loc 1 7209 7
 16908 00fc 7B68     		ldr	r3, [r7, #4]
 16909 00fe 1868     		ldr	r0, [r3]
7210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
 16910              		.loc 1 7210 44
 16911 0100 3B68     		ldr	r3, [r7]
 16912 0102 9968     		ldr	r1, [r3, #8]
7211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerFilter);
 16913              		.loc 1 7211 44
 16914 0104 3B68     		ldr	r3, [r7]
 16915 0106 1B69     		ldr	r3, [r3, #16]
7209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
 16916              		.loc 1 7209 7
 16917 0108 1A46     		mov	r2, r3
 16918 010a FFF7FEFF 		bl	TIM_TI2_ConfigInputStage
7212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 16919              		.loc 1 7212 7
 16920 010e 03E0     		b	.L1092
 16921              	.L1087:
7213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
7214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_TS_ITR0:
7216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_TS_ITR1:
7217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_TS_ITR2:
7218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     case TIM_TS_ITR3:
7219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     {
7220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       /* Check the parameter */
7221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
7222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
7223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
7224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     default:
7226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       status = HAL_ERROR;
 16922              		.loc 1 7226 14
ARM GAS  /tmp//ccJMd58S.s 			page 422


 16923 0110 0123     		movs	r3, #1
 16924 0112 FB75     		strb	r3, [r7, #23]
7227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****       break;
 16925              		.loc 1 7227 7
 16926 0114 00E0     		b	.L1092
 16927              	.L1095:
7222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     }
 16928              		.loc 1 7222 7
 16929 0116 00BF     		nop
 16930              	.L1092:
7228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
7229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   return status;
 16931              		.loc 1 7230 10
 16932 0118 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 16933              	.L1094:
7231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 16934              		.loc 1 7231 1
 16935 011a 1846     		mov	r0, r3
 16936 011c 1837     		adds	r7, r7, #24
 16937              	.LCFI591:
 16938              		.cfi_def_cfa_offset 8
 16939 011e BD46     		mov	sp, r7
 16940              	.LCFI592:
 16941              		.cfi_def_cfa_register 13
 16942              		@ sp needed
 16943 0120 80BD     		pop	{r7, pc}
 16944              		.cfi_endproc
 16945              	.LFE174:
 16947              		.section	.text.TIM_TI1_SetConfig,"ax",%progbits
 16948              		.align	1
 16949              		.global	TIM_TI1_SetConfig
 16950              		.syntax unified
 16951              		.thumb
 16952              		.thumb_func
 16954              	TIM_TI1_SetConfig:
 16955              	.LFB175:
7232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the TI1 as Input.
7235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
7236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
7242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 1 is selected to be connected to IC1.
7244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 1 is selected to be connected to IC2.
7245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 1 is selected to be connected to TRC.
7246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI2FP1
7250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *       (on channel2 path) is used as the input signal. Therefore CCMR1 must be
7251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
ARM GAS  /tmp//ccJMd58S.s 			page 423


7252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void TIM_TI1_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
7254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
7255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 16956              		.loc 1 7255 1
 16957              		.cfi_startproc
 16958              		@ args = 0, pretend = 0, frame = 24
 16959              		@ frame_needed = 1, uses_anonymous_args = 0
 16960              		@ link register save eliminated.
 16961 0000 80B4     		push	{r7}
 16962              	.LCFI593:
 16963              		.cfi_def_cfa_offset 4
 16964              		.cfi_offset 7, -4
 16965 0002 87B0     		sub	sp, sp, #28
 16966              	.LCFI594:
 16967              		.cfi_def_cfa_offset 32
 16968 0004 00AF     		add	r7, sp, #0
 16969              	.LCFI595:
 16970              		.cfi_def_cfa_register 7
 16971 0006 F860     		str	r0, [r7, #12]
 16972 0008 B960     		str	r1, [r7, #8]
 16973 000a 7A60     		str	r2, [r7, #4]
 16974 000c 3B60     		str	r3, [r7]
7256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
7257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
7258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
7260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 16975              		.loc 1 7260 11
 16976 000e FB68     		ldr	r3, [r7, #12]
 16977 0010 1B6A     		ldr	r3, [r3, #32]
 16978 0012 3B61     		str	r3, [r7, #16]
7261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 16979              		.loc 1 7261 7
 16980 0014 FB68     		ldr	r3, [r7, #12]
 16981 0016 1B6A     		ldr	r3, [r3, #32]
 16982              		.loc 1 7261 14
 16983 0018 23F00102 		bic	r2, r3, #1
 16984 001c FB68     		ldr	r3, [r7, #12]
 16985 001e 1A62     		str	r2, [r3, #32]
7262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 16986              		.loc 1 7262 12
 16987 0020 FB68     		ldr	r3, [r7, #12]
 16988 0022 9B69     		ldr	r3, [r3, #24]
 16989 0024 7B61     		str	r3, [r7, #20]
7263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Input */
7265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   if (IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 16990              		.loc 1 7265 7
 16991 0026 FB68     		ldr	r3, [r7, #12]
 16992 0028 234A     		ldr	r2, .L1102
 16993 002a 9342     		cmp	r3, r2
 16994 002c 13D0     		beq	.L1097
 16995              		.loc 1 7265 7 is_stmt 0 discriminator 2
 16996 002e FB68     		ldr	r3, [r7, #12]
 16997 0030 224A     		ldr	r2, .L1102+4
 16998 0032 9342     		cmp	r3, r2
ARM GAS  /tmp//ccJMd58S.s 			page 424


 16999 0034 0FD0     		beq	.L1097
 17000              		.loc 1 7265 7 discriminator 4
 17001 0036 FB68     		ldr	r3, [r7, #12]
 17002 0038 B3F1804F 		cmp	r3, #1073741824
 17003 003c 0BD0     		beq	.L1097
 17004              		.loc 1 7265 7 discriminator 6
 17005 003e FB68     		ldr	r3, [r7, #12]
 17006 0040 1F4A     		ldr	r2, .L1102+8
 17007 0042 9342     		cmp	r3, r2
 17008 0044 07D0     		beq	.L1097
 17009              		.loc 1 7265 7 discriminator 8
 17010 0046 FB68     		ldr	r3, [r7, #12]
 17011 0048 1E4A     		ldr	r2, .L1102+12
 17012 004a 9342     		cmp	r3, r2
 17013 004c 03D0     		beq	.L1097
 17014              		.loc 1 7265 7 discriminator 10
 17015 004e FB68     		ldr	r3, [r7, #12]
 17016 0050 1D4A     		ldr	r2, .L1102+16
 17017 0052 9342     		cmp	r3, r2
 17018 0054 01D1     		bne	.L1098
 17019              	.L1097:
 17020              		.loc 1 7265 7 discriminator 11
 17021 0056 0123     		movs	r3, #1
 17022              		.loc 1 7265 7
 17023 0058 00E0     		b	.L1099
 17024              	.L1098:
 17025              		.loc 1 7265 7 discriminator 12
 17026 005a 0023     		movs	r3, #0
 17027              	.L1099:
 17028              		.loc 1 7265 6 is_stmt 1 discriminator 14
 17029 005c 002B     		cmp	r3, #0
 17030 005e 08D0     		beq	.L1100
7266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
7267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccmr1 &= ~TIM_CCMR1_CC1S;
 17031              		.loc 1 7267 14
 17032 0060 7B69     		ldr	r3, [r7, #20]
 17033 0062 23F00303 		bic	r3, r3, #3
 17034 0066 7B61     		str	r3, [r7, #20]
7268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccmr1 |= TIM_ICSelection;
 17035              		.loc 1 7268 14
 17036 0068 7A69     		ldr	r2, [r7, #20]
 17037 006a 7B68     		ldr	r3, [r7, #4]
 17038 006c 1343     		orrs	r3, r3, r2
 17039 006e 7B61     		str	r3, [r7, #20]
 17040 0070 03E0     		b	.L1101
 17041              	.L1100:
7269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
7270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   else
7271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   {
7272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****     tmpccmr1 |= TIM_CCMR1_CC1S_0;
 17042              		.loc 1 7272 14
 17043 0072 7B69     		ldr	r3, [r7, #20]
 17044 0074 43F00103 		orr	r3, r3, #1
 17045 0078 7B61     		str	r3, [r7, #20]
 17046              	.L1101:
7273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   }
7274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 425


7275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the filter */
7276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
 17047              		.loc 1 7276 12
 17048 007a 7B69     		ldr	r3, [r7, #20]
 17049 007c 23F0F003 		bic	r3, r3, #240
 17050 0080 7B61     		str	r3, [r7, #20]
7277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
 17051              		.loc 1 7277 30
 17052 0082 3B68     		ldr	r3, [r7]
 17053 0084 1B01     		lsls	r3, r3, #4
 17054              		.loc 1 7277 37
 17055 0086 DBB2     		uxtb	r3, r3
 17056              		.loc 1 7277 12
 17057 0088 7A69     		ldr	r2, [r7, #20]
 17058 008a 1343     		orrs	r3, r3, r2
 17059 008c 7B61     		str	r3, [r7, #20]
7278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
7280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 17060              		.loc 1 7280 11
 17061 008e 3B69     		ldr	r3, [r7, #16]
 17062 0090 23F00A03 		bic	r3, r3, #10
 17063 0094 3B61     		str	r3, [r7, #16]
7281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
 17064              		.loc 1 7281 30
 17065 0096 BB68     		ldr	r3, [r7, #8]
 17066 0098 03F00A03 		and	r3, r3, #10
 17067              		.loc 1 7281 11
 17068 009c 3A69     		ldr	r2, [r7, #16]
 17069 009e 1343     		orrs	r3, r3, r2
 17070 00a0 3B61     		str	r3, [r7, #16]
7282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
7284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 17071              		.loc 1 7284 15
 17072 00a2 FB68     		ldr	r3, [r7, #12]
 17073 00a4 7A69     		ldr	r2, [r7, #20]
 17074 00a6 9A61     		str	r2, [r3, #24]
7285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 17075              		.loc 1 7285 14
 17076 00a8 FB68     		ldr	r3, [r7, #12]
 17077 00aa 3A69     		ldr	r2, [r7, #16]
 17078 00ac 1A62     		str	r2, [r3, #32]
7286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 17079              		.loc 1 7286 1
 17080 00ae 00BF     		nop
 17081 00b0 1C37     		adds	r7, r7, #28
 17082              	.LCFI596:
 17083              		.cfi_def_cfa_offset 4
 17084 00b2 BD46     		mov	sp, r7
 17085              	.LCFI597:
 17086              		.cfi_def_cfa_register 13
 17087              		@ sp needed
 17088 00b4 80BC     		pop	{r7}
 17089              	.LCFI598:
 17090              		.cfi_restore 7
 17091              		.cfi_def_cfa_offset 0
ARM GAS  /tmp//ccJMd58S.s 			page 426


 17092 00b6 7047     		bx	lr
 17093              	.L1103:
 17094              		.align	2
 17095              	.L1102:
 17096 00b8 002C0140 		.word	1073818624
 17097 00bc 00340140 		.word	1073820672
 17098 00c0 00040040 		.word	1073742848
 17099 00c4 00080040 		.word	1073743872
 17100 00c8 000C0040 		.word	1073744896
 17101              		.cfi_endproc
 17102              	.LFE175:
 17104              		.section	.text.TIM_TI1_ConfigInputStage,"ax",%progbits
 17105              		.align	1
 17106              		.syntax unified
 17107              		.thumb
 17108              		.thumb_func
 17110              	TIM_TI1_ConfigInputStage:
 17111              	.LFB176:
7287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI1.
7290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
7291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
7301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 17112              		.loc 1 7301 1
 17113              		.cfi_startproc
 17114              		@ args = 0, pretend = 0, frame = 24
 17115              		@ frame_needed = 1, uses_anonymous_args = 0
 17116              		@ link register save eliminated.
 17117 0000 80B4     		push	{r7}
 17118              	.LCFI599:
 17119              		.cfi_def_cfa_offset 4
 17120              		.cfi_offset 7, -4
 17121 0002 87B0     		sub	sp, sp, #28
 17122              	.LCFI600:
 17123              		.cfi_def_cfa_offset 32
 17124 0004 00AF     		add	r7, sp, #0
 17125              	.LCFI601:
 17126              		.cfi_def_cfa_register 7
 17127 0006 F860     		str	r0, [r7, #12]
 17128 0008 B960     		str	r1, [r7, #8]
 17129 000a 7A60     		str	r2, [r7, #4]
7302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
7303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
7304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
7306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 17130              		.loc 1 7306 11
ARM GAS  /tmp//ccJMd58S.s 			page 427


 17131 000c FB68     		ldr	r3, [r7, #12]
 17132 000e 1B6A     		ldr	r3, [r3, #32]
 17133 0010 7B61     		str	r3, [r7, #20]
7307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 17134              		.loc 1 7307 7
 17135 0012 FB68     		ldr	r3, [r7, #12]
 17136 0014 1B6A     		ldr	r3, [r3, #32]
 17137              		.loc 1 7307 14
 17138 0016 23F00102 		bic	r2, r3, #1
 17139 001a FB68     		ldr	r3, [r7, #12]
 17140 001c 1A62     		str	r2, [r3, #32]
7308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 17141              		.loc 1 7308 12
 17142 001e FB68     		ldr	r3, [r7, #12]
 17143 0020 9B69     		ldr	r3, [r3, #24]
 17144 0022 3B61     		str	r3, [r7, #16]
7309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the filter */
7311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
 17145              		.loc 1 7311 12
 17146 0024 3B69     		ldr	r3, [r7, #16]
 17147 0026 23F0F003 		bic	r3, r3, #240
 17148 002a 3B61     		str	r3, [r7, #16]
7312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 4U);
 17149              		.loc 1 7312 29
 17150 002c 7B68     		ldr	r3, [r7, #4]
 17151 002e 1B01     		lsls	r3, r3, #4
 17152              		.loc 1 7312 12
 17153 0030 3A69     		ldr	r2, [r7, #16]
 17154 0032 1343     		orrs	r3, r3, r2
 17155 0034 3B61     		str	r3, [r7, #16]
7313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
7315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 17156              		.loc 1 7315 11
 17157 0036 7B69     		ldr	r3, [r7, #20]
 17158 0038 23F00A03 		bic	r3, r3, #10
 17159 003c 7B61     		str	r3, [r7, #20]
7316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= TIM_ICPolarity;
 17160              		.loc 1 7316 11
 17161 003e 7A69     		ldr	r2, [r7, #20]
 17162 0040 BB68     		ldr	r3, [r7, #8]
 17163 0042 1343     		orrs	r3, r3, r2
 17164 0044 7B61     		str	r3, [r7, #20]
7317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
7319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 17165              		.loc 1 7319 15
 17166 0046 FB68     		ldr	r3, [r7, #12]
 17167 0048 3A69     		ldr	r2, [r7, #16]
 17168 004a 9A61     		str	r2, [r3, #24]
7320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 17169              		.loc 1 7320 14
 17170 004c FB68     		ldr	r3, [r7, #12]
 17171 004e 7A69     		ldr	r2, [r7, #20]
 17172 0050 1A62     		str	r2, [r3, #32]
7321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
ARM GAS  /tmp//ccJMd58S.s 			page 428


 17173              		.loc 1 7321 1
 17174 0052 00BF     		nop
 17175 0054 1C37     		adds	r7, r7, #28
 17176              	.LCFI602:
 17177              		.cfi_def_cfa_offset 4
 17178 0056 BD46     		mov	sp, r7
 17179              	.LCFI603:
 17180              		.cfi_def_cfa_register 13
 17181              		@ sp needed
 17182 0058 80BC     		pop	{r7}
 17183              	.LCFI604:
 17184              		.cfi_restore 7
 17185              		.cfi_def_cfa_offset 0
 17186 005a 7047     		bx	lr
 17187              		.cfi_endproc
 17188              	.LFE176:
 17190              		.section	.text.TIM_TI2_SetConfig,"ax",%progbits
 17191              		.align	1
 17192              		.syntax unified
 17193              		.thumb
 17194              		.thumb_func
 17196              	TIM_TI2_SetConfig:
 17197              	.LFB177:
7322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the TI2 as Input.
7325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
7332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 2 is selected to be connected to IC2.
7334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 2 is selected to be connected to IC1.
7335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 2 is selected to be connected to TRC.
7336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI1FP2
7340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR1 must be
7341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
7342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
7344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter)
7345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 17198              		.loc 1 7345 1
 17199              		.cfi_startproc
 17200              		@ args = 0, pretend = 0, frame = 24
 17201              		@ frame_needed = 1, uses_anonymous_args = 0
 17202              		@ link register save eliminated.
 17203 0000 80B4     		push	{r7}
 17204              	.LCFI605:
 17205              		.cfi_def_cfa_offset 4
 17206              		.cfi_offset 7, -4
 17207 0002 87B0     		sub	sp, sp, #28
ARM GAS  /tmp//ccJMd58S.s 			page 429


 17208              	.LCFI606:
 17209              		.cfi_def_cfa_offset 32
 17210 0004 00AF     		add	r7, sp, #0
 17211              	.LCFI607:
 17212              		.cfi_def_cfa_register 7
 17213 0006 F860     		str	r0, [r7, #12]
 17214 0008 B960     		str	r1, [r7, #8]
 17215 000a 7A60     		str	r2, [r7, #4]
 17216 000c 3B60     		str	r3, [r7]
7346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
7347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
7348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
7350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 17217              		.loc 1 7350 11
 17218 000e FB68     		ldr	r3, [r7, #12]
 17219 0010 1B6A     		ldr	r3, [r3, #32]
 17220 0012 7B61     		str	r3, [r7, #20]
7351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 17221              		.loc 1 7351 7
 17222 0014 FB68     		ldr	r3, [r7, #12]
 17223 0016 1B6A     		ldr	r3, [r3, #32]
 17224              		.loc 1 7351 14
 17225 0018 23F01002 		bic	r2, r3, #16
 17226 001c FB68     		ldr	r3, [r7, #12]
 17227 001e 1A62     		str	r2, [r3, #32]
7352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 17228              		.loc 1 7352 12
 17229 0020 FB68     		ldr	r3, [r7, #12]
 17230 0022 9B69     		ldr	r3, [r3, #24]
 17231 0024 3B61     		str	r3, [r7, #16]
7353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Input */
7355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_CC2S;
 17232              		.loc 1 7355 12
 17233 0026 3B69     		ldr	r3, [r7, #16]
 17234 0028 23F44073 		bic	r3, r3, #768
 17235 002c 3B61     		str	r3, [r7, #16]
7356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICSelection << 8U);
 17236              		.loc 1 7356 32
 17237 002e 7B68     		ldr	r3, [r7, #4]
 17238 0030 1B02     		lsls	r3, r3, #8
 17239              		.loc 1 7356 12
 17240 0032 3A69     		ldr	r2, [r7, #16]
 17241 0034 1343     		orrs	r3, r3, r2
 17242 0036 3B61     		str	r3, [r7, #16]
7357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the filter */
7359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
 17243              		.loc 1 7359 12
 17244 0038 3B69     		ldr	r3, [r7, #16]
 17245 003a 23F47043 		bic	r3, r3, #61440
 17246 003e 3B61     		str	r3, [r7, #16]
7360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 17247              		.loc 1 7360 30
 17248 0040 3B68     		ldr	r3, [r7]
 17249 0042 1B03     		lsls	r3, r3, #12
ARM GAS  /tmp//ccJMd58S.s 			page 430


 17250              		.loc 1 7360 38
 17251 0044 9BB2     		uxth	r3, r3
 17252              		.loc 1 7360 12
 17253 0046 3A69     		ldr	r2, [r7, #16]
 17254 0048 1343     		orrs	r3, r3, r2
 17255 004a 3B61     		str	r3, [r7, #16]
7361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
7363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 17256              		.loc 1 7363 11
 17257 004c 7B69     		ldr	r3, [r7, #20]
 17258 004e 23F0A003 		bic	r3, r3, #160
 17259 0052 7B61     		str	r3, [r7, #20]
7364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 17260              		.loc 1 7364 31
 17261 0054 BB68     		ldr	r3, [r7, #8]
 17262 0056 1B01     		lsls	r3, r3, #4
 17263              		.loc 1 7364 38
 17264 0058 03F0A003 		and	r3, r3, #160
 17265              		.loc 1 7364 11
 17266 005c 7A69     		ldr	r2, [r7, #20]
 17267 005e 1343     		orrs	r3, r3, r2
 17268 0060 7B61     		str	r3, [r7, #20]
7365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
7367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 17269              		.loc 1 7367 15
 17270 0062 FB68     		ldr	r3, [r7, #12]
 17271 0064 3A69     		ldr	r2, [r7, #16]
 17272 0066 9A61     		str	r2, [r3, #24]
7368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 17273              		.loc 1 7368 14
 17274 0068 FB68     		ldr	r3, [r7, #12]
 17275 006a 7A69     		ldr	r2, [r7, #20]
 17276 006c 1A62     		str	r2, [r3, #32]
7369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 17277              		.loc 1 7369 1
 17278 006e 00BF     		nop
 17279 0070 1C37     		adds	r7, r7, #28
 17280              	.LCFI608:
 17281              		.cfi_def_cfa_offset 4
 17282 0072 BD46     		mov	sp, r7
 17283              	.LCFI609:
 17284              		.cfi_def_cfa_register 13
 17285              		@ sp needed
 17286 0074 80BC     		pop	{r7}
 17287              	.LCFI610:
 17288              		.cfi_restore 7
 17289              		.cfi_def_cfa_offset 0
 17290 0076 7047     		bx	lr
 17291              		.cfi_endproc
 17292              	.LFE177:
 17294              		.section	.text.TIM_TI2_ConfigInputStage,"ax",%progbits
 17295              		.align	1
 17296              		.syntax unified
 17297              		.thumb
 17298              		.thumb_func
ARM GAS  /tmp//ccJMd58S.s 			page 431


 17300              	TIM_TI2_ConfigInputStage:
 17301              	.LFB178:
7370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI2.
7373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
7374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
7379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
7384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 17302              		.loc 1 7384 1
 17303              		.cfi_startproc
 17304              		@ args = 0, pretend = 0, frame = 24
 17305              		@ frame_needed = 1, uses_anonymous_args = 0
 17306              		@ link register save eliminated.
 17307 0000 80B4     		push	{r7}
 17308              	.LCFI611:
 17309              		.cfi_def_cfa_offset 4
 17310              		.cfi_offset 7, -4
 17311 0002 87B0     		sub	sp, sp, #28
 17312              	.LCFI612:
 17313              		.cfi_def_cfa_offset 32
 17314 0004 00AF     		add	r7, sp, #0
 17315              	.LCFI613:
 17316              		.cfi_def_cfa_register 7
 17317 0006 F860     		str	r0, [r7, #12]
 17318 0008 B960     		str	r1, [r7, #8]
 17319 000a 7A60     		str	r2, [r7, #4]
7385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr1;
7386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
7387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
7389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 17320              		.loc 1 7389 11
 17321 000c FB68     		ldr	r3, [r7, #12]
 17322 000e 1B6A     		ldr	r3, [r3, #32]
 17323 0010 7B61     		str	r3, [r7, #20]
7390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 17324              		.loc 1 7390 7
 17325 0012 FB68     		ldr	r3, [r7, #12]
 17326 0014 1B6A     		ldr	r3, [r3, #32]
 17327              		.loc 1 7390 14
 17328 0016 23F01002 		bic	r2, r3, #16
 17329 001a FB68     		ldr	r3, [r7, #12]
 17330 001c 1A62     		str	r2, [r3, #32]
7391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 17331              		.loc 1 7391 12
 17332 001e FB68     		ldr	r3, [r7, #12]
 17333 0020 9B69     		ldr	r3, [r3, #24]
 17334 0022 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp//ccJMd58S.s 			page 432


7392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the filter */
7394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
 17335              		.loc 1 7394 12
 17336 0024 3B69     		ldr	r3, [r7, #16]
 17337 0026 23F47043 		bic	r3, r3, #61440
 17338 002a 3B61     		str	r3, [r7, #16]
7395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 12U);
 17339              		.loc 1 7395 29
 17340 002c 7B68     		ldr	r3, [r7, #4]
 17341 002e 1B03     		lsls	r3, r3, #12
 17342              		.loc 1 7395 12
 17343 0030 3A69     		ldr	r2, [r7, #16]
 17344 0032 1343     		orrs	r3, r3, r2
 17345 0034 3B61     		str	r3, [r7, #16]
7396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
7398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 17346              		.loc 1 7398 11
 17347 0036 7B69     		ldr	r3, [r7, #20]
 17348 0038 23F0A003 		bic	r3, r3, #160
 17349 003c 7B61     		str	r3, [r7, #20]
7399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity << 4U);
 17350              		.loc 1 7399 30
 17351 003e BB68     		ldr	r3, [r7, #8]
 17352 0040 1B01     		lsls	r3, r3, #4
 17353              		.loc 1 7399 11
 17354 0042 7A69     		ldr	r2, [r7, #20]
 17355 0044 1343     		orrs	r3, r3, r2
 17356 0046 7B61     		str	r3, [r7, #20]
7400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
7402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 17357              		.loc 1 7402 15
 17358 0048 FB68     		ldr	r3, [r7, #12]
 17359 004a 3A69     		ldr	r2, [r7, #16]
 17360 004c 9A61     		str	r2, [r3, #24]
7403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 17361              		.loc 1 7403 14
 17362 004e FB68     		ldr	r3, [r7, #12]
 17363 0050 7A69     		ldr	r2, [r7, #20]
 17364 0052 1A62     		str	r2, [r3, #32]
7404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 17365              		.loc 1 7404 1
 17366 0054 00BF     		nop
 17367 0056 1C37     		adds	r7, r7, #28
 17368              	.LCFI614:
 17369              		.cfi_def_cfa_offset 4
 17370 0058 BD46     		mov	sp, r7
 17371              	.LCFI615:
 17372              		.cfi_def_cfa_register 13
 17373              		@ sp needed
 17374 005a 80BC     		pop	{r7}
 17375              	.LCFI616:
 17376              		.cfi_restore 7
 17377              		.cfi_def_cfa_offset 0
 17378 005c 7047     		bx	lr
ARM GAS  /tmp//ccJMd58S.s 			page 433


 17379              		.cfi_endproc
 17380              	.LFE178:
 17382              		.section	.text.TIM_TI3_SetConfig,"ax",%progbits
 17383              		.align	1
 17384              		.syntax unified
 17385              		.thumb
 17386              		.thumb_func
 17388              	TIM_TI3_SetConfig:
 17389              	.LFB179:
7405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the TI3 as Input.
7408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
7414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 3 is selected to be connected to IC3.
7416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 3 is selected to be connected to IC4.
7417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 3 is selected to be connected to TRC.
7418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
7420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI3FP4
7422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be
7423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
7424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
7426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter)
7427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 17390              		.loc 1 7427 1
 17391              		.cfi_startproc
 17392              		@ args = 0, pretend = 0, frame = 24
 17393              		@ frame_needed = 1, uses_anonymous_args = 0
 17394              		@ link register save eliminated.
 17395 0000 80B4     		push	{r7}
 17396              	.LCFI617:
 17397              		.cfi_def_cfa_offset 4
 17398              		.cfi_offset 7, -4
 17399 0002 87B0     		sub	sp, sp, #28
 17400              	.LCFI618:
 17401              		.cfi_def_cfa_offset 32
 17402 0004 00AF     		add	r7, sp, #0
 17403              	.LCFI619:
 17404              		.cfi_def_cfa_register 7
 17405 0006 F860     		str	r0, [r7, #12]
 17406 0008 B960     		str	r1, [r7, #8]
 17407 000a 7A60     		str	r2, [r7, #4]
 17408 000c 3B60     		str	r3, [r7]
7428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr2;
7429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
7430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
7432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 17409              		.loc 1 7432 11
ARM GAS  /tmp//ccJMd58S.s 			page 434


 17410 000e FB68     		ldr	r3, [r7, #12]
 17411 0010 1B6A     		ldr	r3, [r3, #32]
 17412 0012 7B61     		str	r3, [r7, #20]
7433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
 17413              		.loc 1 7433 7
 17414 0014 FB68     		ldr	r3, [r7, #12]
 17415 0016 1B6A     		ldr	r3, [r3, #32]
 17416              		.loc 1 7433 14
 17417 0018 23F48072 		bic	r2, r3, #256
 17418 001c FB68     		ldr	r3, [r7, #12]
 17419 001e 1A62     		str	r2, [r3, #32]
7434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 17420              		.loc 1 7434 12
 17421 0020 FB68     		ldr	r3, [r7, #12]
 17422 0022 DB69     		ldr	r3, [r3, #28]
 17423 0024 3B61     		str	r3, [r7, #16]
7435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Input */
7437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC3S;
 17424              		.loc 1 7437 12
 17425 0026 3B69     		ldr	r3, [r7, #16]
 17426 0028 23F00303 		bic	r3, r3, #3
 17427 002c 3B61     		str	r3, [r7, #16]
7438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= TIM_ICSelection;
 17428              		.loc 1 7438 12
 17429 002e 3A69     		ldr	r2, [r7, #16]
 17430 0030 7B68     		ldr	r3, [r7, #4]
 17431 0032 1343     		orrs	r3, r3, r2
 17432 0034 3B61     		str	r3, [r7, #16]
7439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the filter */
7441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC3F;
 17433              		.loc 1 7441 12
 17434 0036 3B69     		ldr	r3, [r7, #16]
 17435 0038 23F0F003 		bic	r3, r3, #240
 17436 003c 3B61     		str	r3, [r7, #16]
7442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 17437              		.loc 1 7442 30
 17438 003e 3B68     		ldr	r3, [r7]
 17439 0040 1B01     		lsls	r3, r3, #4
 17440              		.loc 1 7442 37
 17441 0042 DBB2     		uxtb	r3, r3
 17442              		.loc 1 7442 12
 17443 0044 3A69     		ldr	r2, [r7, #16]
 17444 0046 1343     		orrs	r3, r3, r2
 17445 0048 3B61     		str	r3, [r7, #16]
7443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC3E Bit */
7445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC3P);
 17446              		.loc 1 7445 11
 17447 004a 7B69     		ldr	r3, [r7, #20]
 17448 004c 23F40073 		bic	r3, r3, #512
 17449 0050 7B61     		str	r3, [r7, #20]
7446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 8U) & TIM_CCER_CC3P);
 17450              		.loc 1 7446 31
 17451 0052 BB68     		ldr	r3, [r7, #8]
 17452 0054 1B02     		lsls	r3, r3, #8
ARM GAS  /tmp//ccJMd58S.s 			page 435


 17453              		.loc 1 7446 38
 17454 0056 03F40073 		and	r3, r3, #512
 17455              		.loc 1 7446 11
 17456 005a 7A69     		ldr	r2, [r7, #20]
 17457 005c 1343     		orrs	r3, r3, r2
 17458 005e 7B61     		str	r3, [r7, #20]
7447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
7449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 17459              		.loc 1 7449 15
 17460 0060 FB68     		ldr	r3, [r7, #12]
 17461 0062 3A69     		ldr	r2, [r7, #16]
 17462 0064 DA61     		str	r2, [r3, #28]
7450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 17463              		.loc 1 7450 14
 17464 0066 FB68     		ldr	r3, [r7, #12]
 17465 0068 7A69     		ldr	r2, [r7, #20]
 17466 006a 1A62     		str	r2, [r3, #32]
7451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 17467              		.loc 1 7451 1
 17468 006c 00BF     		nop
 17469 006e 1C37     		adds	r7, r7, #28
 17470              	.LCFI620:
 17471              		.cfi_def_cfa_offset 4
 17472 0070 BD46     		mov	sp, r7
 17473              	.LCFI621:
 17474              		.cfi_def_cfa_register 13
 17475              		@ sp needed
 17476 0072 80BC     		pop	{r7}
 17477              	.LCFI622:
 17478              		.cfi_restore 7
 17479              		.cfi_def_cfa_offset 0
 17480 0074 7047     		bx	lr
 17481              		.cfi_endproc
 17482              	.LFE179:
 17484              		.section	.text.TIM_TI4_SetConfig,"ax",%progbits
 17485              		.align	1
 17486              		.syntax unified
 17487              		.thumb
 17488              		.thumb_func
 17490              	TIM_TI4_SetConfig:
 17491              	.LFB180:
7452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configure the TI4 as Input.
7455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICPolarity The Input Polarity.
7457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
7459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
7460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICSelection specifies the input to be used.
7461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 4 is selected to be connected to IC4.
7463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 4 is selected to be connected to IC3.
7464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 4 is selected to be connected to TRC.
7465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ICFilter Specifies the Input Capture Filter.
7466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
ARM GAS  /tmp//ccJMd58S.s 			page 436


7467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI4FP3
7468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be
7469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
7470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
7473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                               uint32_t TIM_ICFilter)
7474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 17492              		.loc 1 7474 1
 17493              		.cfi_startproc
 17494              		@ args = 0, pretend = 0, frame = 24
 17495              		@ frame_needed = 1, uses_anonymous_args = 0
 17496              		@ link register save eliminated.
 17497 0000 80B4     		push	{r7}
 17498              	.LCFI623:
 17499              		.cfi_def_cfa_offset 4
 17500              		.cfi_offset 7, -4
 17501 0002 87B0     		sub	sp, sp, #28
 17502              	.LCFI624:
 17503              		.cfi_def_cfa_offset 32
 17504 0004 00AF     		add	r7, sp, #0
 17505              	.LCFI625:
 17506              		.cfi_def_cfa_register 7
 17507 0006 F860     		str	r0, [r7, #12]
 17508 0008 B960     		str	r1, [r7, #8]
 17509 000a 7A60     		str	r2, [r7, #4]
 17510 000c 3B60     		str	r3, [r7]
7475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccmr2;
7476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpccer;
7477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
7479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 17511              		.loc 1 7479 11
 17512 000e FB68     		ldr	r3, [r7, #12]
 17513 0010 1B6A     		ldr	r3, [r3, #32]
 17514 0012 7B61     		str	r3, [r7, #20]
7480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
 17515              		.loc 1 7480 7
 17516 0014 FB68     		ldr	r3, [r7, #12]
 17517 0016 1B6A     		ldr	r3, [r3, #32]
 17518              		.loc 1 7480 14
 17519 0018 23F48052 		bic	r2, r3, #4096
 17520 001c FB68     		ldr	r3, [r7, #12]
 17521 001e 1A62     		str	r2, [r3, #32]
7481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 17522              		.loc 1 7481 12
 17523 0020 FB68     		ldr	r3, [r7, #12]
 17524 0022 DB69     		ldr	r3, [r3, #28]
 17525 0024 3B61     		str	r3, [r7, #16]
7482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Input */
7484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC4S;
 17526              		.loc 1 7484 12
 17527 0026 3B69     		ldr	r3, [r7, #16]
 17528 0028 23F44073 		bic	r3, r3, #768
 17529 002c 3B61     		str	r3, [r7, #16]
7485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= (TIM_ICSelection << 8U);
ARM GAS  /tmp//ccJMd58S.s 			page 437


 17530              		.loc 1 7485 32
 17531 002e 7B68     		ldr	r3, [r7, #4]
 17532 0030 1B02     		lsls	r3, r3, #8
 17533              		.loc 1 7485 12
 17534 0032 3A69     		ldr	r2, [r7, #16]
 17535 0034 1343     		orrs	r3, r3, r2
 17536 0036 3B61     		str	r3, [r7, #16]
7486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the filter */
7488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC4F;
 17537              		.loc 1 7488 12
 17538 0038 3B69     		ldr	r3, [r7, #16]
 17539 003a 23F47043 		bic	r3, r3, #61440
 17540 003e 3B61     		str	r3, [r7, #16]
7489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 17541              		.loc 1 7489 30
 17542 0040 3B68     		ldr	r3, [r7]
 17543 0042 1B03     		lsls	r3, r3, #12
 17544              		.loc 1 7489 38
 17545 0044 9BB2     		uxth	r3, r3
 17546              		.loc 1 7489 12
 17547 0046 3A69     		ldr	r2, [r7, #16]
 17548 0048 1343     		orrs	r3, r3, r2
 17549 004a 3B61     		str	r3, [r7, #16]
7490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Select the Polarity and set the CC4E Bit */
7492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC4P);
 17550              		.loc 1 7492 11
 17551 004c 7B69     		ldr	r3, [r7, #20]
 17552 004e 23F40053 		bic	r3, r3, #8192
 17553 0052 7B61     		str	r3, [r7, #20]
7493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 12U) & TIM_CCER_CC4P);
 17554              		.loc 1 7493 31
 17555 0054 BB68     		ldr	r3, [r7, #8]
 17556 0056 1B03     		lsls	r3, r3, #12
 17557              		.loc 1 7493 39
 17558 0058 03F40053 		and	r3, r3, #8192
 17559              		.loc 1 7493 11
 17560 005c 7A69     		ldr	r2, [r7, #20]
 17561 005e 1343     		orrs	r3, r3, r2
 17562 0060 7B61     		str	r3, [r7, #20]
7494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
7496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 17563              		.loc 1 7496 15
 17564 0062 FB68     		ldr	r3, [r7, #12]
 17565 0064 3A69     		ldr	r2, [r7, #16]
 17566 0066 DA61     		str	r2, [r3, #28]
7497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER = tmpccer ;
 17567              		.loc 1 7497 14
 17568 0068 FB68     		ldr	r3, [r7, #12]
 17569 006a 7A69     		ldr	r2, [r7, #20]
 17570 006c 1A62     		str	r2, [r3, #32]
7498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 17571              		.loc 1 7498 1
 17572 006e 00BF     		nop
 17573 0070 1C37     		adds	r7, r7, #28
ARM GAS  /tmp//ccJMd58S.s 			page 438


 17574              	.LCFI626:
 17575              		.cfi_def_cfa_offset 4
 17576 0072 BD46     		mov	sp, r7
 17577              	.LCFI627:
 17578              		.cfi_def_cfa_register 13
 17579              		@ sp needed
 17580 0074 80BC     		pop	{r7}
 17581              	.LCFI628:
 17582              		.cfi_restore 7
 17583              		.cfi_def_cfa_offset 0
 17584 0076 7047     		bx	lr
 17585              		.cfi_endproc
 17586              	.LFE180:
 17588              		.section	.text.TIM_ITRx_SetConfig,"ax",%progbits
 17589              		.align	1
 17590              		.syntax unified
 17591              		.thumb
 17592              		.thumb_func
 17594              	TIM_ITRx_SetConfig:
 17595              	.LFB181:
7499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Selects the Input Trigger source
7502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  InputTriggerSource The Input Trigger source.
7504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
7506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
7507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
7508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
7509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
7510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
7511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
7512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
7513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
7516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 17596              		.loc 1 7516 1
 17597              		.cfi_startproc
 17598              		@ args = 0, pretend = 0, frame = 16
 17599              		@ frame_needed = 1, uses_anonymous_args = 0
 17600              		@ link register save eliminated.
 17601 0000 80B4     		push	{r7}
 17602              	.LCFI629:
 17603              		.cfi_def_cfa_offset 4
 17604              		.cfi_offset 7, -4
 17605 0002 85B0     		sub	sp, sp, #20
 17606              	.LCFI630:
 17607              		.cfi_def_cfa_offset 24
 17608 0004 00AF     		add	r7, sp, #0
 17609              	.LCFI631:
 17610              		.cfi_def_cfa_register 7
 17611 0006 7860     		str	r0, [r7, #4]
 17612 0008 3960     		str	r1, [r7]
7517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
7518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
ARM GAS  /tmp//ccJMd58S.s 			page 439


7519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
7520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr = TIMx->SMCR;
 17613              		.loc 1 7520 11
 17614 000a 7B68     		ldr	r3, [r7, #4]
 17615 000c 9B68     		ldr	r3, [r3, #8]
 17616 000e FB60     		str	r3, [r7, #12]
7521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the TS Bits */
7522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
 17617              		.loc 1 7522 11
 17618 0010 FB68     		ldr	r3, [r7, #12]
 17619 0012 23F07003 		bic	r3, r3, #112
 17620 0016 FB60     		str	r3, [r7, #12]
7523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Input Trigger source and the slave mode*/
7524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 17621              		.loc 1 7524 11
 17622 0018 3A68     		ldr	r2, [r7]
 17623 001a FB68     		ldr	r3, [r7, #12]
 17624 001c 1343     		orrs	r3, r3, r2
 17625 001e 43F00703 		orr	r3, r3, #7
 17626 0022 FB60     		str	r3, [r7, #12]
7525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
7526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->SMCR = tmpsmcr;
 17627              		.loc 1 7526 14
 17628 0024 7B68     		ldr	r3, [r7, #4]
 17629 0026 FA68     		ldr	r2, [r7, #12]
 17630 0028 9A60     		str	r2, [r3, #8]
7527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 17631              		.loc 1 7527 1
 17632 002a 00BF     		nop
 17633 002c 1437     		adds	r7, r7, #20
 17634              	.LCFI632:
 17635              		.cfi_def_cfa_offset 4
 17636 002e BD46     		mov	sp, r7
 17637              	.LCFI633:
 17638              		.cfi_def_cfa_register 13
 17639              		@ sp needed
 17640 0030 80BC     		pop	{r7}
 17641              	.LCFI634:
 17642              		.cfi_restore 7
 17643              		.cfi_def_cfa_offset 0
 17644 0032 7047     		bx	lr
 17645              		.cfi_endproc
 17646              	.LFE181:
 17648              		.section	.text.TIM_ETR_SetConfig,"ax",%progbits
 17649              		.align	1
 17650              		.global	TIM_ETR_SetConfig
 17651              		.syntax unified
 17652              		.thumb
 17653              		.thumb_func
 17655              	TIM_ETR_SetConfig:
 17656              	.LFB182:
7528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
7530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ExtTRGPrescaler The external Trigger Prescaler.
7532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV1: ETRP Prescaler OFF.
ARM GAS  /tmp//ccJMd58S.s 			page 440


7534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV2: ETRP frequency divided by 2.
7535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV4: ETRP frequency divided by 4.
7536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV8: ETRP frequency divided by 8.
7537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIM_ExtTRGPolarity The external Trigger Polarity.
7538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPOLARITY_INVERTED: active low or falling edge active.
7540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_ETRPOLARITY_NONINVERTED: active high or rising edge active.
7541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  ExtTRGFilter External Trigger Filter.
7542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
7543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
7546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****                        uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
7547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 17657              		.loc 1 7547 1
 17658              		.cfi_startproc
 17659              		@ args = 0, pretend = 0, frame = 24
 17660              		@ frame_needed = 1, uses_anonymous_args = 0
 17661              		@ link register save eliminated.
 17662 0000 80B4     		push	{r7}
 17663              	.LCFI635:
 17664              		.cfi_def_cfa_offset 4
 17665              		.cfi_offset 7, -4
 17666 0002 87B0     		sub	sp, sp, #28
 17667              	.LCFI636:
 17668              		.cfi_def_cfa_offset 32
 17669 0004 00AF     		add	r7, sp, #0
 17670              	.LCFI637:
 17671              		.cfi_def_cfa_register 7
 17672 0006 F860     		str	r0, [r7, #12]
 17673 0008 B960     		str	r1, [r7, #8]
 17674 000a 7A60     		str	r2, [r7, #4]
 17675 000c 3B60     		str	r3, [r7]
7548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmpsmcr;
7549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr = TIMx->SMCR;
 17676              		.loc 1 7550 11
 17677 000e FB68     		ldr	r3, [r7, #12]
 17678 0010 9B68     		ldr	r3, [r3, #8]
 17679 0012 7B61     		str	r3, [r7, #20]
7551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the ETR Bits */
7553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 17680              		.loc 1 7553 11
 17681 0014 7B69     		ldr	r3, [r7, #20]
 17682 0016 23F47F43 		bic	r3, r3, #65280
 17683 001a 7B61     		str	r3, [r7, #20]
7554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
7556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 17684              		.loc 1 7556 83
 17685 001c 3B68     		ldr	r3, [r7]
 17686 001e 1A02     		lsls	r2, r3, #8
 17687              		.loc 1 7556 67
 17688 0020 7B68     		ldr	r3, [r7, #4]
 17689 0022 1A43     		orrs	r2, r2, r3
 17690              		.loc 1 7556 45
ARM GAS  /tmp//ccJMd58S.s 			page 441


 17691 0024 BB68     		ldr	r3, [r7, #8]
 17692 0026 1343     		orrs	r3, r3, r2
 17693              		.loc 1 7556 11
 17694 0028 7A69     		ldr	r2, [r7, #20]
 17695 002a 1343     		orrs	r3, r3, r2
 17696 002c 7B61     		str	r3, [r7, #20]
7557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Write to TIMx SMCR */
7559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->SMCR = tmpsmcr;
 17697              		.loc 1 7559 14
 17698 002e FB68     		ldr	r3, [r7, #12]
 17699 0030 7A69     		ldr	r2, [r7, #20]
 17700 0032 9A60     		str	r2, [r3, #8]
7560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 17701              		.loc 1 7560 1
 17702 0034 00BF     		nop
 17703 0036 1C37     		adds	r7, r7, #28
 17704              	.LCFI638:
 17705              		.cfi_def_cfa_offset 4
 17706 0038 BD46     		mov	sp, r7
 17707              	.LCFI639:
 17708              		.cfi_def_cfa_register 13
 17709              		@ sp needed
 17710 003a 80BC     		pop	{r7}
 17711              	.LCFI640:
 17712              		.cfi_restore 7
 17713              		.cfi_def_cfa_offset 0
 17714 003c 7047     		bx	lr
 17715              		.cfi_endproc
 17716              	.LFE182:
 17718              		.section	.text.TIM_CCxChannelCmd,"ax",%progbits
 17719              		.align	1
 17720              		.global	TIM_CCxChannelCmd
 17721              		.syntax unified
 17722              		.thumb
 17723              		.thumb_func
 17725              	TIM_CCxChannelCmd:
 17726              	.LFB183:
7561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** /**
7563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
7564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
7565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  Channel specifies the TIM Channel
7566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be one of the following values:
7567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
7568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
7569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
7570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
7571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @param  ChannelState specifies the TIM Channel CCxE bit new state.
7572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
7573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   * @retval None
7574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   */
7575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
7576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** {
 17727              		.loc 1 7576 1
 17728              		.cfi_startproc
 17729              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp//ccJMd58S.s 			page 442


 17730              		@ frame_needed = 1, uses_anonymous_args = 0
 17731              		@ link register save eliminated.
 17732 0000 80B4     		push	{r7}
 17733              	.LCFI641:
 17734              		.cfi_def_cfa_offset 4
 17735              		.cfi_offset 7, -4
 17736 0002 87B0     		sub	sp, sp, #28
 17737              	.LCFI642:
 17738              		.cfi_def_cfa_offset 32
 17739 0004 00AF     		add	r7, sp, #0
 17740              	.LCFI643:
 17741              		.cfi_def_cfa_register 7
 17742 0006 F860     		str	r0, [r7, #12]
 17743 0008 B960     		str	r1, [r7, #8]
 17744 000a 7A60     		str	r2, [r7, #4]
7577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   uint32_t tmp;
7578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Check the parameters */
7580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(TIMx));
7581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
7582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 17745              		.loc 1 7583 35
 17746 000c BB68     		ldr	r3, [r7, #8]
 17747 000e 03F01F03 		and	r3, r3, #31
 17748              		.loc 1 7583 7
 17749 0012 0122     		movs	r2, #1
 17750 0014 02FA03F3 		lsl	r3, r2, r3
 17751 0018 7B61     		str	r3, [r7, #20]
7584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Reset the CCxE Bit */
7586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER &= ~tmp;
 17752              		.loc 1 7586 7
 17753 001a FB68     		ldr	r3, [r7, #12]
 17754 001c 1A6A     		ldr	r2, [r3, #32]
 17755              		.loc 1 7586 17
 17756 001e 7B69     		ldr	r3, [r7, #20]
 17757 0020 DB43     		mvns	r3, r3
 17758              		.loc 1 7586 14
 17759 0022 1A40     		ands	r2, r2, r3
 17760 0024 FB68     		ldr	r3, [r7, #12]
 17761 0026 1A62     		str	r2, [r3, #32]
7587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** 
7588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   /* Set or reset the CCxE Bit */
7589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c ****   TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 17762              		.loc 1 7589 7
 17763 0028 FB68     		ldr	r3, [r7, #12]
 17764 002a 1A6A     		ldr	r2, [r3, #32]
 17765              		.loc 1 7589 53
 17766 002c BB68     		ldr	r3, [r7, #8]
 17767 002e 03F01F03 		and	r3, r3, #31
 17768              		.loc 1 7589 41
 17769 0032 7968     		ldr	r1, [r7, #4]
 17770 0034 01FA03F3 		lsl	r3, r1, r3
 17771              		.loc 1 7589 14
 17772 0038 1A43     		orrs	r2, r2, r3
 17773 003a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp//ccJMd58S.s 			page 443


 17774 003c 1A62     		str	r2, [r3, #32]
7590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c **** }
 17775              		.loc 1 7590 1
 17776 003e 00BF     		nop
 17777 0040 1C37     		adds	r7, r7, #28
 17778              	.LCFI644:
 17779              		.cfi_def_cfa_offset 4
 17780 0042 BD46     		mov	sp, r7
 17781              	.LCFI645:
 17782              		.cfi_def_cfa_register 13
 17783              		@ sp needed
 17784 0044 80BC     		pop	{r7}
 17785              	.LCFI646:
 17786              		.cfi_restore 7
 17787              		.cfi_def_cfa_offset 0
 17788 0046 7047     		bx	lr
 17789              		.cfi_endproc
 17790              	.LFE183:
 17792              		.text
 17793              	.Letext0:
 17794              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 17795              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 17796              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 17797              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 17798              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 17799              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 17800              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 17801              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
ARM GAS  /tmp//ccJMd58S.s 			page 444


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_tim.c
    /tmp//ccJMd58S.s:19     .text.HAL_TIM_Base_Init:00000000 $t
    /tmp//ccJMd58S.s:25     .text.HAL_TIM_Base_Init:00000000 HAL_TIM_Base_Init
    /tmp//ccJMd58S.s:247    .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
    /tmp//ccJMd58S.s:15856  .text.TIM_Base_SetConfig:00000000 TIM_Base_SetConfig
    /tmp//ccJMd58S.s:131    .text.HAL_TIM_Base_DeInit:00000000 $t
    /tmp//ccJMd58S.s:137    .text.HAL_TIM_Base_DeInit:00000000 HAL_TIM_Base_DeInit
    /tmp//ccJMd58S.s:289    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
    /tmp//ccJMd58S.s:241    .text.HAL_TIM_Base_MspInit:00000000 $t
    /tmp//ccJMd58S.s:283    .text.HAL_TIM_Base_MspDeInit:00000000 $t
    /tmp//ccJMd58S.s:325    .text.HAL_TIM_Base_Start:00000000 $t
    /tmp//ccJMd58S.s:331    .text.HAL_TIM_Base_Start:00000000 HAL_TIM_Base_Start
    /tmp//ccJMd58S.s:453    .text.HAL_TIM_Base_Start:0000009c $d
    /tmp//ccJMd58S.s:462    .text.HAL_TIM_Base_Stop:00000000 $t
    /tmp//ccJMd58S.s:468    .text.HAL_TIM_Base_Stop:00000000 HAL_TIM_Base_Stop
    /tmp//ccJMd58S.s:535    .text.HAL_TIM_Base_Start_IT:00000000 $t
    /tmp//ccJMd58S.s:541    .text.HAL_TIM_Base_Start_IT:00000000 HAL_TIM_Base_Start_IT
    /tmp//ccJMd58S.s:671    .text.HAL_TIM_Base_Start_IT:000000ac $d
    /tmp//ccJMd58S.s:680    .text.HAL_TIM_Base_Stop_IT:00000000 $t
    /tmp//ccJMd58S.s:686    .text.HAL_TIM_Base_Stop_IT:00000000 HAL_TIM_Base_Stop_IT
    /tmp//ccJMd58S.s:761    .text.HAL_TIM_Base_Start_DMA:00000000 $t
    /tmp//ccJMd58S.s:767    .text.HAL_TIM_Base_Start_DMA:00000000 HAL_TIM_Base_Start_DMA
    /tmp//ccJMd58S.s:961    .text.HAL_TIM_Base_Start_DMA:00000108 $d
    /tmp//ccJMd58S.s:15653  .text.TIM_DMAPeriodElapsedCplt:00000000 TIM_DMAPeriodElapsedCplt
    /tmp//ccJMd58S.s:15710  .text.TIM_DMAPeriodElapsedHalfCplt:00000000 TIM_DMAPeriodElapsedHalfCplt
    /tmp//ccJMd58S.s:15037  .text.TIM_DMAError:00000000 TIM_DMAError
    /tmp//ccJMd58S.s:973    .text.HAL_TIM_Base_Stop_DMA:00000000 $t
    /tmp//ccJMd58S.s:979    .text.HAL_TIM_Base_Stop_DMA:00000000 HAL_TIM_Base_Stop_DMA
    /tmp//ccJMd58S.s:1055   .text.HAL_TIM_OC_Init:00000000 $t
    /tmp//ccJMd58S.s:1061   .text.HAL_TIM_OC_Init:00000000 HAL_TIM_OC_Init
    /tmp//ccJMd58S.s:1283   .text.HAL_TIM_OC_MspInit:00000000 HAL_TIM_OC_MspInit
    /tmp//ccJMd58S.s:1167   .text.HAL_TIM_OC_DeInit:00000000 $t
    /tmp//ccJMd58S.s:1173   .text.HAL_TIM_OC_DeInit:00000000 HAL_TIM_OC_DeInit
    /tmp//ccJMd58S.s:1325   .text.HAL_TIM_OC_MspDeInit:00000000 HAL_TIM_OC_MspDeInit
    /tmp//ccJMd58S.s:1277   .text.HAL_TIM_OC_MspInit:00000000 $t
    /tmp//ccJMd58S.s:1319   .text.HAL_TIM_OC_MspDeInit:00000000 $t
    /tmp//ccJMd58S.s:1361   .text.HAL_TIM_OC_Start:00000000 $t
    /tmp//ccJMd58S.s:1367   .text.HAL_TIM_OC_Start:00000000 HAL_TIM_OC_Start
    /tmp//ccJMd58S.s:17725  .text.TIM_CCxChannelCmd:00000000 TIM_CCxChannelCmd
    /tmp//ccJMd58S.s:1612   .text.HAL_TIM_OC_Start:00000160 $d
    /tmp//ccJMd58S.s:1621   .text.HAL_TIM_OC_Stop:00000000 $t
    /tmp//ccJMd58S.s:1627   .text.HAL_TIM_OC_Stop:00000000 HAL_TIM_OC_Stop
    /tmp//ccJMd58S.s:1777   .text.HAL_TIM_OC_Stop:000000d8 $d
    /tmp//ccJMd58S.s:1783   .text.HAL_TIM_OC_Start_IT:00000000 $t
    /tmp//ccJMd58S.s:1789   .text.HAL_TIM_OC_Start_IT:00000000 HAL_TIM_OC_Start_IT
    /tmp//ccJMd58S.s:1920   .text.HAL_TIM_OC_Start_IT:000000bc $d
    /tmp//ccJMd58S.s:1933   .text.HAL_TIM_OC_Start_IT:000000f0 $t
    /tmp//ccJMd58S.s:2114   .text.HAL_TIM_OC_Start_IT:000001fc $d
    /tmp//ccJMd58S.s:2123   .text.HAL_TIM_OC_Stop_IT:00000000 $t
    /tmp//ccJMd58S.s:2129   .text.HAL_TIM_OC_Stop_IT:00000000 HAL_TIM_OC_Stop_IT
    /tmp//ccJMd58S.s:2159   .text.HAL_TIM_OC_Stop_IT:0000001c $d
    /tmp//ccJMd58S.s:2172   .text.HAL_TIM_OC_Stop_IT:00000050 $t
    /tmp//ccJMd58S.s:2359   .text.HAL_TIM_OC_Stop_IT:00000174 $d
    /tmp//ccJMd58S.s:2365   .text.HAL_TIM_OC_Start_DMA:00000000 $t
    /tmp//ccJMd58S.s:2371   .text.HAL_TIM_OC_Start_DMA:00000000 HAL_TIM_OC_Start_DMA
    /tmp//ccJMd58S.s:2586   .text.HAL_TIM_OC_Start_DMA:0000013c $d
ARM GAS  /tmp//ccJMd58S.s 			page 445


    /tmp//ccJMd58S.s:2599   .text.HAL_TIM_OC_Start_DMA:00000170 $t
    /tmp//ccJMd58S.s:2936   .text.HAL_TIM_OC_Start_DMA:00000354 $d
    /tmp//ccJMd58S.s:15158  .text.TIM_DMADelayPulseCplt:00000000 TIM_DMADelayPulseCplt
    /tmp//ccJMd58S.s:15298  .text.TIM_DMADelayPulseHalfCplt:00000000 TIM_DMADelayPulseHalfCplt
    /tmp//ccJMd58S.s:2948   .text.HAL_TIM_OC_Stop_DMA:00000000 $t
    /tmp//ccJMd58S.s:2954   .text.HAL_TIM_OC_Stop_DMA:00000000 HAL_TIM_OC_Stop_DMA
    /tmp//ccJMd58S.s:2984   .text.HAL_TIM_OC_Stop_DMA:0000001c $d
    /tmp//ccJMd58S.s:2997   .text.HAL_TIM_OC_Stop_DMA:00000050 $t
    /tmp//ccJMd58S.s:3204   .text.HAL_TIM_OC_Stop_DMA:0000019c $d
    /tmp//ccJMd58S.s:3210   .text.HAL_TIM_PWM_Init:00000000 $t
    /tmp//ccJMd58S.s:3216   .text.HAL_TIM_PWM_Init:00000000 HAL_TIM_PWM_Init
    /tmp//ccJMd58S.s:3438   .text.HAL_TIM_PWM_MspInit:00000000 HAL_TIM_PWM_MspInit
    /tmp//ccJMd58S.s:3322   .text.HAL_TIM_PWM_DeInit:00000000 $t
    /tmp//ccJMd58S.s:3328   .text.HAL_TIM_PWM_DeInit:00000000 HAL_TIM_PWM_DeInit
    /tmp//ccJMd58S.s:3480   .text.HAL_TIM_PWM_MspDeInit:00000000 HAL_TIM_PWM_MspDeInit
    /tmp//ccJMd58S.s:3432   .text.HAL_TIM_PWM_MspInit:00000000 $t
    /tmp//ccJMd58S.s:3474   .text.HAL_TIM_PWM_MspDeInit:00000000 $t
    /tmp//ccJMd58S.s:3516   .text.HAL_TIM_PWM_Start:00000000 $t
    /tmp//ccJMd58S.s:3522   .text.HAL_TIM_PWM_Start:00000000 HAL_TIM_PWM_Start
    /tmp//ccJMd58S.s:3767   .text.HAL_TIM_PWM_Start:00000160 $d
    /tmp//ccJMd58S.s:3776   .text.HAL_TIM_PWM_Stop:00000000 $t
    /tmp//ccJMd58S.s:3782   .text.HAL_TIM_PWM_Stop:00000000 HAL_TIM_PWM_Stop
    /tmp//ccJMd58S.s:3932   .text.HAL_TIM_PWM_Stop:000000d8 $d
    /tmp//ccJMd58S.s:3938   .text.HAL_TIM_PWM_Start_IT:00000000 $t
    /tmp//ccJMd58S.s:3944   .text.HAL_TIM_PWM_Start_IT:00000000 HAL_TIM_PWM_Start_IT
    /tmp//ccJMd58S.s:4075   .text.HAL_TIM_PWM_Start_IT:000000bc $d
    /tmp//ccJMd58S.s:4088   .text.HAL_TIM_PWM_Start_IT:000000f0 $t
    /tmp//ccJMd58S.s:4269   .text.HAL_TIM_PWM_Start_IT:000001fc $d
    /tmp//ccJMd58S.s:4278   .text.HAL_TIM_PWM_Stop_IT:00000000 $t
    /tmp//ccJMd58S.s:4284   .text.HAL_TIM_PWM_Stop_IT:00000000 HAL_TIM_PWM_Stop_IT
    /tmp//ccJMd58S.s:4314   .text.HAL_TIM_PWM_Stop_IT:0000001c $d
    /tmp//ccJMd58S.s:4327   .text.HAL_TIM_PWM_Stop_IT:00000050 $t
    /tmp//ccJMd58S.s:4514   .text.HAL_TIM_PWM_Stop_IT:00000174 $d
    /tmp//ccJMd58S.s:4520   .text.HAL_TIM_PWM_Start_DMA:00000000 $t
    /tmp//ccJMd58S.s:4526   .text.HAL_TIM_PWM_Start_DMA:00000000 HAL_TIM_PWM_Start_DMA
    /tmp//ccJMd58S.s:4741   .text.HAL_TIM_PWM_Start_DMA:0000013c $d
    /tmp//ccJMd58S.s:4754   .text.HAL_TIM_PWM_Start_DMA:00000170 $t
    /tmp//ccJMd58S.s:5091   .text.HAL_TIM_PWM_Start_DMA:00000354 $d
    /tmp//ccJMd58S.s:5103   .text.HAL_TIM_PWM_Stop_DMA:00000000 $t
    /tmp//ccJMd58S.s:5109   .text.HAL_TIM_PWM_Stop_DMA:00000000 HAL_TIM_PWM_Stop_DMA
    /tmp//ccJMd58S.s:5139   .text.HAL_TIM_PWM_Stop_DMA:0000001c $d
    /tmp//ccJMd58S.s:5152   .text.HAL_TIM_PWM_Stop_DMA:00000050 $t
    /tmp//ccJMd58S.s:5359   .text.HAL_TIM_PWM_Stop_DMA:0000019c $d
    /tmp//ccJMd58S.s:5365   .text.HAL_TIM_IC_Init:00000000 $t
    /tmp//ccJMd58S.s:5371   .text.HAL_TIM_IC_Init:00000000 HAL_TIM_IC_Init
    /tmp//ccJMd58S.s:5593   .text.HAL_TIM_IC_MspInit:00000000 HAL_TIM_IC_MspInit
    /tmp//ccJMd58S.s:5477   .text.HAL_TIM_IC_DeInit:00000000 $t
    /tmp//ccJMd58S.s:5483   .text.HAL_TIM_IC_DeInit:00000000 HAL_TIM_IC_DeInit
    /tmp//ccJMd58S.s:5635   .text.HAL_TIM_IC_MspDeInit:00000000 HAL_TIM_IC_MspDeInit
    /tmp//ccJMd58S.s:5587   .text.HAL_TIM_IC_MspInit:00000000 $t
    /tmp//ccJMd58S.s:5629   .text.HAL_TIM_IC_MspDeInit:00000000 $t
    /tmp//ccJMd58S.s:5671   .text.HAL_TIM_IC_Start:00000000 $t
    /tmp//ccJMd58S.s:5677   .text.HAL_TIM_IC_Start:00000000 HAL_TIM_IC_Start
    /tmp//ccJMd58S.s:5945   .text.HAL_TIM_IC_Start:00000188 $d
    /tmp//ccJMd58S.s:5954   .text.HAL_TIM_IC_Stop:00000000 $t
    /tmp//ccJMd58S.s:5960   .text.HAL_TIM_IC_Stop:00000000 HAL_TIM_IC_Stop
    /tmp//ccJMd58S.s:6097   .text.HAL_TIM_IC_Start_IT:00000000 $t
ARM GAS  /tmp//ccJMd58S.s 			page 446


    /tmp//ccJMd58S.s:6103   .text.HAL_TIM_IC_Start_IT:00000000 HAL_TIM_IC_Start_IT
    /tmp//ccJMd58S.s:6290   .text.HAL_TIM_IC_Start_IT:00000110 $d
    /tmp//ccJMd58S.s:6303   .text.HAL_TIM_IC_Start_IT:00000144 $t
    /tmp//ccJMd58S.s:6451   .text.HAL_TIM_IC_Start_IT:00000220 $d
    /tmp//ccJMd58S.s:6460   .text.HAL_TIM_IC_Stop_IT:00000000 $t
    /tmp//ccJMd58S.s:6466   .text.HAL_TIM_IC_Stop_IT:00000000 HAL_TIM_IC_Stop_IT
    /tmp//ccJMd58S.s:6496   .text.HAL_TIM_IC_Stop_IT:0000001c $d
    /tmp//ccJMd58S.s:6509   .text.HAL_TIM_IC_Stop_IT:00000050 $t
    /tmp//ccJMd58S.s:6683   .text.HAL_TIM_IC_Start_DMA:00000000 $t
    /tmp//ccJMd58S.s:6689   .text.HAL_TIM_IC_Start_DMA:00000000 HAL_TIM_IC_Start_DMA
    /tmp//ccJMd58S.s:6915   .text.HAL_TIM_IC_Start_DMA:00000144 $d
    /tmp//ccJMd58S.s:6928   .text.HAL_TIM_IC_Start_DMA:00000178 $t
    /tmp//ccJMd58S.s:7221   .text.HAL_TIM_IC_Start_DMA:00000318 $d
    /tmp//ccJMd58S.s:15398  .text.TIM_DMACaptureCplt:00000000 TIM_DMACaptureCplt
    /tmp//ccJMd58S.s:15554  .text.TIM_DMACaptureHalfCplt:00000000 TIM_DMACaptureHalfCplt
    /tmp//ccJMd58S.s:7233   .text.HAL_TIM_IC_Stop_DMA:00000000 $t
    /tmp//ccJMd58S.s:7239   .text.HAL_TIM_IC_Stop_DMA:00000000 HAL_TIM_IC_Stop_DMA
    /tmp//ccJMd58S.s:7276   .text.HAL_TIM_IC_Stop_DMA:00000028 $d
    /tmp//ccJMd58S.s:7289   .text.HAL_TIM_IC_Stop_DMA:0000005c $t
    /tmp//ccJMd58S.s:7476   .text.HAL_TIM_OnePulse_Init:00000000 $t
    /tmp//ccJMd58S.s:7482   .text.HAL_TIM_OnePulse_Init:00000000 HAL_TIM_OnePulse_Init
    /tmp//ccJMd58S.s:7708   .text.HAL_TIM_OnePulse_MspInit:00000000 HAL_TIM_OnePulse_MspInit
    /tmp//ccJMd58S.s:7602   .text.HAL_TIM_OnePulse_DeInit:00000000 $t
    /tmp//ccJMd58S.s:7608   .text.HAL_TIM_OnePulse_DeInit:00000000 HAL_TIM_OnePulse_DeInit
    /tmp//ccJMd58S.s:7750   .text.HAL_TIM_OnePulse_MspDeInit:00000000 HAL_TIM_OnePulse_MspDeInit
    /tmp//ccJMd58S.s:7702   .text.HAL_TIM_OnePulse_MspInit:00000000 $t
    /tmp//ccJMd58S.s:7744   .text.HAL_TIM_OnePulse_MspDeInit:00000000 $t
    /tmp//ccJMd58S.s:7786   .text.HAL_TIM_OnePulse_Start:00000000 $t
    /tmp//ccJMd58S.s:7792   .text.HAL_TIM_OnePulse_Start:00000000 HAL_TIM_OnePulse_Start
    /tmp//ccJMd58S.s:7927   .text.HAL_TIM_OnePulse_Start:000000bc $d
    /tmp//ccJMd58S.s:7933   .text.HAL_TIM_OnePulse_Stop:00000000 $t
    /tmp//ccJMd58S.s:7939   .text.HAL_TIM_OnePulse_Stop:00000000 HAL_TIM_OnePulse_Stop
    /tmp//ccJMd58S.s:8077   .text.HAL_TIM_OnePulse_Stop:000000d0 $d
    /tmp//ccJMd58S.s:8083   .text.HAL_TIM_OnePulse_Start_IT:00000000 $t
    /tmp//ccJMd58S.s:8089   .text.HAL_TIM_OnePulse_Start_IT:00000000 HAL_TIM_OnePulse_Start_IT
    /tmp//ccJMd58S.s:8240   .text.HAL_TIM_OnePulse_Start_IT:000000dc $d
    /tmp//ccJMd58S.s:8246   .text.HAL_TIM_OnePulse_Stop_IT:00000000 $t
    /tmp//ccJMd58S.s:8252   .text.HAL_TIM_OnePulse_Stop_IT:00000000 HAL_TIM_OnePulse_Stop_IT
    /tmp//ccJMd58S.s:8406   .text.HAL_TIM_OnePulse_Stop_IT:000000f0 $d
    /tmp//ccJMd58S.s:8412   .text.HAL_TIM_Encoder_Init:00000000 $t
    /tmp//ccJMd58S.s:8418   .text.HAL_TIM_Encoder_Init:00000000 HAL_TIM_Encoder_Init
    /tmp//ccJMd58S.s:8753   .text.HAL_TIM_Encoder_MspInit:00000000 HAL_TIM_Encoder_MspInit
    /tmp//ccJMd58S.s:8647   .text.HAL_TIM_Encoder_DeInit:00000000 $t
    /tmp//ccJMd58S.s:8653   .text.HAL_TIM_Encoder_DeInit:00000000 HAL_TIM_Encoder_DeInit
    /tmp//ccJMd58S.s:8795   .text.HAL_TIM_Encoder_MspDeInit:00000000 HAL_TIM_Encoder_MspDeInit
    /tmp//ccJMd58S.s:8747   .text.HAL_TIM_Encoder_MspInit:00000000 $t
    /tmp//ccJMd58S.s:8789   .text.HAL_TIM_Encoder_MspDeInit:00000000 $t
    /tmp//ccJMd58S.s:8831   .text.HAL_TIM_Encoder_Start:00000000 $t
    /tmp//ccJMd58S.s:8837   .text.HAL_TIM_Encoder_Start:00000000 HAL_TIM_Encoder_Start
    /tmp//ccJMd58S.s:9035   .text.HAL_TIM_Encoder_Stop:00000000 $t
    /tmp//ccJMd58S.s:9041   .text.HAL_TIM_Encoder_Stop:00000000 HAL_TIM_Encoder_Stop
    /tmp//ccJMd58S.s:9248   .text.HAL_TIM_Encoder_Start_IT:00000000 $t
    /tmp//ccJMd58S.s:9254   .text.HAL_TIM_Encoder_Start_IT:00000000 HAL_TIM_Encoder_Start_IT
    /tmp//ccJMd58S.s:9484   .text.HAL_TIM_Encoder_Stop_IT:00000000 $t
    /tmp//ccJMd58S.s:9490   .text.HAL_TIM_Encoder_Stop_IT:00000000 HAL_TIM_Encoder_Stop_IT
    /tmp//ccJMd58S.s:9724   .text.HAL_TIM_Encoder_Start_DMA:00000000 $t
    /tmp//ccJMd58S.s:9730   .text.HAL_TIM_Encoder_Start_DMA:00000000 HAL_TIM_Encoder_Start_DMA
ARM GAS  /tmp//ccJMd58S.s 			page 447


    /tmp//ccJMd58S.s:10224  .text.HAL_TIM_Encoder_Start_DMA:000002cc $d
    /tmp//ccJMd58S.s:10231  .text.HAL_TIM_Encoder_Stop_DMA:00000000 $t
    /tmp//ccJMd58S.s:10237  .text.HAL_TIM_Encoder_Stop_DMA:00000000 HAL_TIM_Encoder_Stop_DMA
    /tmp//ccJMd58S.s:10491  .text.HAL_TIM_IRQHandler:00000000 $t
    /tmp//ccJMd58S.s:10497  .text.HAL_TIM_IRQHandler:00000000 HAL_TIM_IRQHandler
    /tmp//ccJMd58S.s:14294  .text.HAL_TIM_IC_CaptureCallback:00000000 HAL_TIM_IC_CaptureCallback
    /tmp//ccJMd58S.s:14252  .text.HAL_TIM_OC_DelayElapsedCallback:00000000 HAL_TIM_OC_DelayElapsedCallback
    /tmp//ccJMd58S.s:14378  .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 HAL_TIM_PWM_PulseFinishedCallback
    /tmp//ccJMd58S.s:14168  .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
    /tmp//ccJMd58S.s:14462  .text.HAL_TIM_TriggerCallback:00000000 HAL_TIM_TriggerCallback
    /tmp//ccJMd58S.s:10817  .text.HAL_TIM_OC_ConfigChannel:00000000 $t
    /tmp//ccJMd58S.s:10823  .text.HAL_TIM_OC_ConfigChannel:00000000 HAL_TIM_OC_ConfigChannel
    /tmp//ccJMd58S.s:10868  .text.HAL_TIM_OC_ConfigChannel:00000034 $d
    /tmp//ccJMd58S.s:10881  .text.HAL_TIM_OC_ConfigChannel:00000068 $t
    /tmp//ccJMd58S.s:16053  .text.TIM_OC1_SetConfig:00000000 TIM_OC1_SetConfig
    /tmp//ccJMd58S.s:16225  .text.TIM_OC2_SetConfig:00000000 TIM_OC2_SetConfig
    /tmp//ccJMd58S.s:16406  .text.TIM_OC3_SetConfig:00000000 TIM_OC3_SetConfig
    /tmp//ccJMd58S.s:16585  .text.TIM_OC4_SetConfig:00000000 TIM_OC4_SetConfig
    /tmp//ccJMd58S.s:10946  .text.HAL_TIM_IC_ConfigChannel:00000000 $t
    /tmp//ccJMd58S.s:10952  .text.HAL_TIM_IC_ConfigChannel:00000000 HAL_TIM_IC_ConfigChannel
    /tmp//ccJMd58S.s:16954  .text.TIM_TI1_SetConfig:00000000 TIM_TI1_SetConfig
    /tmp//ccJMd58S.s:17196  .text.TIM_TI2_SetConfig:00000000 TIM_TI2_SetConfig
    /tmp//ccJMd58S.s:17388  .text.TIM_TI3_SetConfig:00000000 TIM_TI3_SetConfig
    /tmp//ccJMd58S.s:17490  .text.TIM_TI4_SetConfig:00000000 TIM_TI4_SetConfig
    /tmp//ccJMd58S.s:11198  .text.HAL_TIM_PWM_ConfigChannel:00000000 $t
    /tmp//ccJMd58S.s:11204  .text.HAL_TIM_PWM_ConfigChannel:00000000 HAL_TIM_PWM_ConfigChannel
    /tmp//ccJMd58S.s:11249  .text.HAL_TIM_PWM_ConfigChannel:00000034 $d
    /tmp//ccJMd58S.s:11262  .text.HAL_TIM_PWM_ConfigChannel:00000068 $t
    /tmp//ccJMd58S.s:11475  .text.HAL_TIM_OnePulse_ConfigChannel:00000000 $t
    /tmp//ccJMd58S.s:11481  .text.HAL_TIM_OnePulse_ConfigChannel:00000000 HAL_TIM_OnePulse_ConfigChannel
    /tmp//ccJMd58S.s:11777  .text.HAL_TIM_DMABurst_WriteStart:00000000 $t
    /tmp//ccJMd58S.s:11783  .text.HAL_TIM_DMABurst_WriteStart:00000000 HAL_TIM_DMABurst_WriteStart
    /tmp//ccJMd58S.s:11841  .text.HAL_TIM_DMABurst_MultiWriteStart:00000000 HAL_TIM_DMABurst_MultiWriteStart
    /tmp//ccJMd58S.s:11835  .text.HAL_TIM_DMABurst_MultiWriteStart:00000000 $t
    /tmp//ccJMd58S.s:12284  .text.HAL_TIM_DMABurst_MultiWriteStart:00000284 $d
    /tmp//ccJMd58S.s:15754  .text.TIM_DMATriggerCplt:00000000 TIM_DMATriggerCplt
    /tmp//ccJMd58S.s:15811  .text.TIM_DMATriggerHalfCplt:00000000 TIM_DMATriggerHalfCplt
    /tmp//ccJMd58S.s:12297  .text.HAL_TIM_DMABurst_WriteStop:00000000 $t
    /tmp//ccJMd58S.s:12303  .text.HAL_TIM_DMABurst_WriteStop:00000000 HAL_TIM_DMABurst_WriteStop
    /tmp//ccJMd58S.s:12461  .text.HAL_TIM_DMABurst_ReadStart:00000000 $t
    /tmp//ccJMd58S.s:12467  .text.HAL_TIM_DMABurst_ReadStart:00000000 HAL_TIM_DMABurst_ReadStart
    /tmp//ccJMd58S.s:12525  .text.HAL_TIM_DMABurst_MultiReadStart:00000000 HAL_TIM_DMABurst_MultiReadStart
    /tmp//ccJMd58S.s:12519  .text.HAL_TIM_DMABurst_MultiReadStart:00000000 $t
    /tmp//ccJMd58S.s:12968  .text.HAL_TIM_DMABurst_MultiReadStart:00000284 $d
    /tmp//ccJMd58S.s:12981  .text.HAL_TIM_DMABurst_ReadStop:00000000 $t
    /tmp//ccJMd58S.s:12987  .text.HAL_TIM_DMABurst_ReadStop:00000000 HAL_TIM_DMABurst_ReadStop
    /tmp//ccJMd58S.s:13145  .text.HAL_TIM_GenerateEvent:00000000 $t
    /tmp//ccJMd58S.s:13151  .text.HAL_TIM_GenerateEvent:00000000 HAL_TIM_GenerateEvent
    /tmp//ccJMd58S.s:13223  .text.HAL_TIM_ConfigOCrefClear:00000000 $t
    /tmp//ccJMd58S.s:13229  .text.HAL_TIM_ConfigOCrefClear:00000000 HAL_TIM_ConfigOCrefClear
    /tmp//ccJMd58S.s:17655  .text.TIM_ETR_SetConfig:00000000 TIM_ETR_SetConfig
    /tmp//ccJMd58S.s:13344  .text.HAL_TIM_ConfigOCrefClear:00000098 $d
    /tmp//ccJMd58S.s:13357  .text.HAL_TIM_ConfigOCrefClear:000000cc $t
    /tmp//ccJMd58S.s:13499  .text.HAL_TIM_ConfigClockSource:00000000 $t
    /tmp//ccJMd58S.s:13505  .text.HAL_TIM_ConfigClockSource:00000000 HAL_TIM_ConfigClockSource
    /tmp//ccJMd58S.s:17110  .text.TIM_TI1_ConfigInputStage:00000000 TIM_TI1_ConfigInputStage
    /tmp//ccJMd58S.s:17594  .text.TIM_ITRx_SetConfig:00000000 TIM_ITRx_SetConfig
ARM GAS  /tmp//ccJMd58S.s 			page 448


    /tmp//ccJMd58S.s:17300  .text.TIM_TI2_ConfigInputStage:00000000 TIM_TI2_ConfigInputStage
    /tmp//ccJMd58S.s:13778  .text.HAL_TIM_ConfigTI1Input:00000000 $t
    /tmp//ccJMd58S.s:13784  .text.HAL_TIM_ConfigTI1Input:00000000 HAL_TIM_ConfigTI1Input
    /tmp//ccJMd58S.s:13844  .text.HAL_TIM_SlaveConfigSynchro:00000000 $t
    /tmp//ccJMd58S.s:13850  .text.HAL_TIM_SlaveConfigSynchro:00000000 HAL_TIM_SlaveConfigSynchro
    /tmp//ccJMd58S.s:16724  .text.TIM_SlaveTimer_SetConfig:00000000 TIM_SlaveTimer_SetConfig
    /tmp//ccJMd58S.s:13948  .text.HAL_TIM_SlaveConfigSynchro_IT:00000000 $t
    /tmp//ccJMd58S.s:13954  .text.HAL_TIM_SlaveConfigSynchro_IT:00000000 HAL_TIM_SlaveConfigSynchro_IT
    /tmp//ccJMd58S.s:14052  .text.HAL_TIM_ReadCapturedValue:00000000 $t
    /tmp//ccJMd58S.s:14058  .text.HAL_TIM_ReadCapturedValue:00000000 HAL_TIM_ReadCapturedValue
    /tmp//ccJMd58S.s:14088  .text.HAL_TIM_ReadCapturedValue:0000001c $d
    /tmp//ccJMd58S.s:14101  .text.HAL_TIM_ReadCapturedValue:00000050 $t
    /tmp//ccJMd58S.s:14162  .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
    /tmp//ccJMd58S.s:14204  .text.HAL_TIM_PeriodElapsedHalfCpltCallback:00000000 $t
    /tmp//ccJMd58S.s:14210  .text.HAL_TIM_PeriodElapsedHalfCpltCallback:00000000 HAL_TIM_PeriodElapsedHalfCpltCallback
    /tmp//ccJMd58S.s:14246  .text.HAL_TIM_OC_DelayElapsedCallback:00000000 $t
    /tmp//ccJMd58S.s:14288  .text.HAL_TIM_IC_CaptureCallback:00000000 $t
    /tmp//ccJMd58S.s:14330  .text.HAL_TIM_IC_CaptureHalfCpltCallback:00000000 $t
    /tmp//ccJMd58S.s:14336  .text.HAL_TIM_IC_CaptureHalfCpltCallback:00000000 HAL_TIM_IC_CaptureHalfCpltCallback
    /tmp//ccJMd58S.s:14372  .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 $t
    /tmp//ccJMd58S.s:14414  .text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback:00000000 $t
    /tmp//ccJMd58S.s:14420  .text.HAL_TIM_PWM_PulseFinishedHalfCpltCallback:00000000 HAL_TIM_PWM_PulseFinishedHalfCpltCallback
    /tmp//ccJMd58S.s:14456  .text.HAL_TIM_TriggerCallback:00000000 $t
    /tmp//ccJMd58S.s:14498  .text.HAL_TIM_TriggerHalfCpltCallback:00000000 $t
    /tmp//ccJMd58S.s:14504  .text.HAL_TIM_TriggerHalfCpltCallback:00000000 HAL_TIM_TriggerHalfCpltCallback
    /tmp//ccJMd58S.s:14540  .text.HAL_TIM_ErrorCallback:00000000 $t
    /tmp//ccJMd58S.s:14546  .text.HAL_TIM_ErrorCallback:00000000 HAL_TIM_ErrorCallback
    /tmp//ccJMd58S.s:14582  .text.HAL_TIM_Base_GetState:00000000 $t
    /tmp//ccJMd58S.s:14588  .text.HAL_TIM_Base_GetState:00000000 HAL_TIM_Base_GetState
    /tmp//ccJMd58S.s:14628  .text.HAL_TIM_OC_GetState:00000000 $t
    /tmp//ccJMd58S.s:14634  .text.HAL_TIM_OC_GetState:00000000 HAL_TIM_OC_GetState
    /tmp//ccJMd58S.s:14674  .text.HAL_TIM_PWM_GetState:00000000 $t
    /tmp//ccJMd58S.s:14680  .text.HAL_TIM_PWM_GetState:00000000 HAL_TIM_PWM_GetState
    /tmp//ccJMd58S.s:14720  .text.HAL_TIM_IC_GetState:00000000 $t
    /tmp//ccJMd58S.s:14726  .text.HAL_TIM_IC_GetState:00000000 HAL_TIM_IC_GetState
    /tmp//ccJMd58S.s:14766  .text.HAL_TIM_OnePulse_GetState:00000000 $t
    /tmp//ccJMd58S.s:14772  .text.HAL_TIM_OnePulse_GetState:00000000 HAL_TIM_OnePulse_GetState
    /tmp//ccJMd58S.s:14812  .text.HAL_TIM_Encoder_GetState:00000000 $t
    /tmp//ccJMd58S.s:14818  .text.HAL_TIM_Encoder_GetState:00000000 HAL_TIM_Encoder_GetState
    /tmp//ccJMd58S.s:14858  .text.HAL_TIM_GetActiveChannel:00000000 $t
    /tmp//ccJMd58S.s:14864  .text.HAL_TIM_GetActiveChannel:00000000 HAL_TIM_GetActiveChannel
    /tmp//ccJMd58S.s:14903  .text.HAL_TIM_GetChannelState:00000000 $t
    /tmp//ccJMd58S.s:14909  .text.HAL_TIM_GetChannelState:00000000 HAL_TIM_GetChannelState
    /tmp//ccJMd58S.s:14985  .text.HAL_TIM_DMABurstState:00000000 $t
    /tmp//ccJMd58S.s:14991  .text.HAL_TIM_DMABurstState:00000000 HAL_TIM_DMABurstState
    /tmp//ccJMd58S.s:15031  .text.TIM_DMAError:00000000 $t
    /tmp//ccJMd58S.s:15153  .text.TIM_DMADelayPulseCplt:00000000 $t
    /tmp//ccJMd58S.s:15292  .text.TIM_DMADelayPulseHalfCplt:00000000 $t
    /tmp//ccJMd58S.s:15392  .text.TIM_DMACaptureCplt:00000000 $t
    /tmp//ccJMd58S.s:15548  .text.TIM_DMACaptureHalfCplt:00000000 $t
    /tmp//ccJMd58S.s:15648  .text.TIM_DMAPeriodElapsedCplt:00000000 $t
    /tmp//ccJMd58S.s:15705  .text.TIM_DMAPeriodElapsedHalfCplt:00000000 $t
    /tmp//ccJMd58S.s:15749  .text.TIM_DMATriggerCplt:00000000 $t
    /tmp//ccJMd58S.s:15806  .text.TIM_DMATriggerHalfCplt:00000000 $t
    /tmp//ccJMd58S.s:15850  .text.TIM_Base_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:16039  .text.TIM_Base_SetConfig:000000f8 $d
    /tmp//ccJMd58S.s:16048  .text.TIM_OC1_SetConfig:00000000 $t
ARM GAS  /tmp//ccJMd58S.s 			page 449


    /tmp//ccJMd58S.s:16213  .text.TIM_OC1_SetConfig:000000d8 $d
    /tmp//ccJMd58S.s:16219  .text.TIM_OC2_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:16395  .text.TIM_OC2_SetConfig:000000e0 $d
    /tmp//ccJMd58S.s:16401  .text.TIM_OC3_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:16574  .text.TIM_OC3_SetConfig:000000e0 $d
    /tmp//ccJMd58S.s:16580  .text.TIM_OC4_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:16713  .text.TIM_OC4_SetConfig:000000a0 $d
    /tmp//ccJMd58S.s:16719  .text.TIM_SlaveTimer_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:16948  .text.TIM_TI1_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:17096  .text.TIM_TI1_SetConfig:000000b8 $d
    /tmp//ccJMd58S.s:17105  .text.TIM_TI1_ConfigInputStage:00000000 $t
    /tmp//ccJMd58S.s:17191  .text.TIM_TI2_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:17295  .text.TIM_TI2_ConfigInputStage:00000000 $t
    /tmp//ccJMd58S.s:17383  .text.TIM_TI3_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:17485  .text.TIM_TI4_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:17589  .text.TIM_ITRx_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:17649  .text.TIM_ETR_SetConfig:00000000 $t
    /tmp//ccJMd58S.s:17719  .text.TIM_CCxChannelCmd:00000000 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
HAL_TIMEx_BreakCallback
HAL_TIMEx_CommutCallback
TIMEx_DMACommutationCplt
TIMEx_DMACommutationHalfCplt
