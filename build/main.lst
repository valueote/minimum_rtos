ARM GAS  /tmp//ccE6eyms.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.led_right,"ax",%progbits
  19              		.align	1
  20              		.global	led_right
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	led_right:
  26              	.LFB65:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp//ccE6eyms.s 			page 2


  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** UART_HandleTypeDef huart1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** #include "core_cm3.h"
  55:Core/Src/main.c **** #include "mem.h"
  56:Core/Src/main.c **** #include "task.h"
  57:Core/Src/main.c **** #include <stdint.h>
  58:Core/Src/main.c **** #include <stdlib.h>
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** void led_right() {
  27              		.loc 1 64 18 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  37              	.L2:
  65:Core/Src/main.c ****   while(1){
  38              		.loc 1 65 3 view .LVU1
  66:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
  39              		.loc 1 66 5 view .LVU2
  40 0002 0022     		movs	r2, #0
  41 0004 2021     		movs	r1, #32
  42 0006 0748     		ldr	r0, .L4
  43 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
  44              	.LVL0:
  67:Core/Src/main.c ****     HAL_Delay(500);
  45              		.loc 1 67 5 view .LVU3
  46 000c 4FF4FA70 		mov	r0, #500
  47 0010 FFF7FEFF 		bl	HAL_Delay
  48              	.LVL1:
ARM GAS  /tmp//ccE6eyms.s 			page 3


  68:Core/Src/main.c ****     task_switch();
  49              		.loc 1 68 5 discriminator 1 view .LVU4
  50 0014 4FF0E023 		mov	r3, #-536813568
  51 0018 4FF08052 		mov	r2, #268435456
  52 001c C3F8042D 		str	r2, [r3, #3332]
  65:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
  53              		.loc 1 65 8 view .LVU5
  54 0020 EFE7     		b	.L2
  55              	.L5:
  56 0022 00BF     		.align	2
  57              	.L4:
  58 0024 000C0140 		.word	1073810432
  59              		.cfi_endproc
  60              	.LFE65:
  62              		.section	.text.led_close,"ax",%progbits
  63              		.align	1
  64              		.global	led_close
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	led_close:
  70              	.LFB66:
  69:Core/Src/main.c ****   }
  70:Core/Src/main.c **** }
  71:Core/Src/main.c **** void led_close() {
  71              		.loc 1 71 18 view -0
  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 08B5     		push	{r3, lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 3, -8
  80              		.cfi_offset 14, -4
  81              	.L7:
  72:Core/Src/main.c ****   while(1){
  82              		.loc 1 72 3 view .LVU7
  73:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
  83              		.loc 1 73 5 view .LVU8
  84 0002 0122     		movs	r2, #1
  85 0004 2021     		movs	r1, #32
  86 0006 0748     		ldr	r0, .L9
  87 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL2:
  74:Core/Src/main.c ****     HAL_Delay(500);
  89              		.loc 1 74 5 view .LVU9
  90 000c 4FF4FA70 		mov	r0, #500
  91 0010 FFF7FEFF 		bl	HAL_Delay
  92              	.LVL3:
  75:Core/Src/main.c ****     task_switch();
  93              		.loc 1 75 5 discriminator 1 view .LVU10
  94 0014 4FF0E023 		mov	r3, #-536813568
  95 0018 4FF08052 		mov	r2, #268435456
  96 001c C3F8042D 		str	r2, [r3, #3332]
  72:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
  97              		.loc 1 72 8 view .LVU11
ARM GAS  /tmp//ccE6eyms.s 			page 4


  98 0020 EFE7     		b	.L7
  99              	.L10:
 100 0022 00BF     		.align	2
 101              	.L9:
 102 0024 000C0140 		.word	1073810432
 103              		.cfi_endproc
 104              	.LFE66:
 106              		.section	.text.MX_GPIO_Init,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	MX_GPIO_Init:
 113              	.LFB70:
  76:Core/Src/main.c ****   }
  77:Core/Src/main.c **** }
  78:Core/Src/main.c **** /* USER CODE END 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /**
  81:Core/Src/main.c ****   * @brief  The application entry point.
  82:Core/Src/main.c ****   * @retval int
  83:Core/Src/main.c ****   */
  84:Core/Src/main.c **** int main(void)
  85:Core/Src/main.c **** {
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END 1 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  94:Core/Src/main.c ****   HAL_Init();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END Init */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Configure the system clock */
 101:Core/Src/main.c ****   SystemClock_Config();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END SysInit */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Initialize all configured peripherals */
 108:Core/Src/main.c ****   MX_GPIO_Init();
 109:Core/Src/main.c ****   MX_USART1_UART_Init();
 110:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 111:Core/Src/main.c ****   scheduler_init();
 112:Core/Src/main.c ****   task_handler_t led_right_handler = NULL;
 113:Core/Src/main.c ****   task_handler_t led_close_handler = NULL;
 114:Core/Src/main.c ****   task_create(led_right, NULL, 32, 1, &led_right_handler);
 115:Core/Src/main.c ****   task_create(led_close, NULL, 32, 2, &led_close_handler);
 116:Core/Src/main.c ****   scheduler_start();
 117:Core/Src/main.c ****   /* USER CODE END 2 */
 118:Core/Src/main.c **** 
ARM GAS  /tmp//ccE6eyms.s 			page 5


 119:Core/Src/main.c ****   /* Infinite loop */
 120:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 121:Core/Src/main.c ****   while (1) {
 122:Core/Src/main.c ****     /* USER CODE END WHILE */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   /* USER CODE END 3 */
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief System Clock Configuration
 131:Core/Src/main.c ****   * @retval None
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** void SystemClock_Config(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 139:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 156:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****   * @brief USART1 Initialization Function
 170:Core/Src/main.c ****   * @param None
 171:Core/Src/main.c ****   * @retval None
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 174:Core/Src/main.c **** {
 175:Core/Src/main.c **** 
ARM GAS  /tmp//ccE6eyms.s 			page 6


 176:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 183:Core/Src/main.c ****   huart1.Instance = USART1;
 184:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 185:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 186:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 187:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 188:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 189:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 190:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 191:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /**
 202:Core/Src/main.c ****   * @brief GPIO Initialization Function
 203:Core/Src/main.c ****   * @param None
 204:Core/Src/main.c ****   * @retval None
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** static void MX_GPIO_Init(void)
 207:Core/Src/main.c **** {
 114              		.loc 1 207 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 24
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 70B5     		push	{r4, r5, r6, lr}
 119              	.LCFI2:
 120              		.cfi_def_cfa_offset 16
 121              		.cfi_offset 4, -16
 122              		.cfi_offset 5, -12
 123              		.cfi_offset 6, -8
 124              		.cfi_offset 14, -4
 125 0002 86B0     		sub	sp, sp, #24
 126              	.LCFI3:
 127              		.cfi_def_cfa_offset 40
 208:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 128              		.loc 1 208 3 view .LVU13
 129              		.loc 1 208 20 is_stmt 0 view .LVU14
 130 0004 02AD     		add	r5, sp, #8
 131 0006 0024     		movs	r4, #0
 132 0008 0294     		str	r4, [sp, #8]
 133 000a 0394     		str	r4, [sp, #12]
 134 000c 0494     		str	r4, [sp, #16]
 135 000e 0594     		str	r4, [sp, #20]
 209:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 210:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
ARM GAS  /tmp//ccE6eyms.s 			page 7


 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 213:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 136              		.loc 1 213 3 is_stmt 1 view .LVU15
 137              	.LBB4:
 138              		.loc 1 213 3 view .LVU16
 139              		.loc 1 213 3 view .LVU17
 140 0010 124B     		ldr	r3, .L13
 141 0012 9A69     		ldr	r2, [r3, #24]
 142 0014 42F00402 		orr	r2, r2, #4
 143 0018 9A61     		str	r2, [r3, #24]
 144              		.loc 1 213 3 view .LVU18
 145 001a 9A69     		ldr	r2, [r3, #24]
 146 001c 02F00402 		and	r2, r2, #4
 147 0020 0092     		str	r2, [sp]
 148              		.loc 1 213 3 view .LVU19
 149 0022 009A     		ldr	r2, [sp]
 150              	.LBE4:
 151              		.loc 1 213 3 view .LVU20
 214:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 152              		.loc 1 214 3 view .LVU21
 153              	.LBB5:
 154              		.loc 1 214 3 view .LVU22
 155              		.loc 1 214 3 view .LVU23
 156 0024 9A69     		ldr	r2, [r3, #24]
 157 0026 42F00802 		orr	r2, r2, #8
 158 002a 9A61     		str	r2, [r3, #24]
 159              		.loc 1 214 3 view .LVU24
 160 002c 9B69     		ldr	r3, [r3, #24]
 161 002e 03F00803 		and	r3, r3, #8
 162 0032 0193     		str	r3, [sp, #4]
 163              		.loc 1 214 3 view .LVU25
 164 0034 019B     		ldr	r3, [sp, #4]
 165              	.LBE5:
 166              		.loc 1 214 3 view .LVU26
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 217:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 167              		.loc 1 217 3 view .LVU27
 168 0036 0A4E     		ldr	r6, .L13+4
 169 0038 0122     		movs	r2, #1
 170 003a 2021     		movs	r1, #32
 171 003c 3046     		mov	r0, r6
 172 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 173              	.LVL4:
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /*Configure GPIO pin : PB5 */
 220:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 174              		.loc 1 220 3 view .LVU28
 175              		.loc 1 220 23 is_stmt 0 view .LVU29
 176 0042 2023     		movs	r3, #32
 177 0044 0293     		str	r3, [sp, #8]
 221:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 178              		.loc 1 221 3 is_stmt 1 view .LVU30
 179              		.loc 1 221 24 is_stmt 0 view .LVU31
 180 0046 0123     		movs	r3, #1
 181 0048 0393     		str	r3, [sp, #12]
ARM GAS  /tmp//ccE6eyms.s 			page 8


 222:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 182              		.loc 1 222 3 is_stmt 1 view .LVU32
 183              		.loc 1 222 24 is_stmt 0 view .LVU33
 184 004a 0494     		str	r4, [sp, #16]
 223:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 185              		.loc 1 223 3 is_stmt 1 view .LVU34
 186              		.loc 1 223 25 is_stmt 0 view .LVU35
 187 004c 0223     		movs	r3, #2
 188 004e 0593     		str	r3, [sp, #20]
 224:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 189              		.loc 1 224 3 is_stmt 1 view .LVU36
 190 0050 2946     		mov	r1, r5
 191 0052 3046     		mov	r0, r6
 192 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL5:
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 227:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 228:Core/Src/main.c **** }
 194              		.loc 1 228 1 is_stmt 0 view .LVU37
 195 0058 06B0     		add	sp, sp, #24
 196              	.LCFI4:
 197              		.cfi_def_cfa_offset 16
 198              		@ sp needed
 199 005a 70BD     		pop	{r4, r5, r6, pc}
 200              	.L14:
 201              		.align	2
 202              	.L13:
 203 005c 00100240 		.word	1073876992
 204 0060 000C0140 		.word	1073810432
 205              		.cfi_endproc
 206              	.LFE70:
 208              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 209              		.align	1
 210              		.global	HAL_TIM_PeriodElapsedCallback
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	HAL_TIM_PeriodElapsedCallback:
 216              	.LVL6:
 217              	.LFB71:
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /* USER CODE END 4 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /**
 235:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 236:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 237:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 238:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 239:Core/Src/main.c ****   * @param  htim : TIM handle
 240:Core/Src/main.c ****   * @retval None
 241:Core/Src/main.c ****   */
 242:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 243:Core/Src/main.c **** {
 218              		.loc 1 243 1 is_stmt 1 view -0
ARM GAS  /tmp//ccE6eyms.s 			page 9


 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		.loc 1 243 1 is_stmt 0 view .LVU39
 223 0000 08B5     		push	{r3, lr}
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
 244:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 247:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 228              		.loc 1 247 3 is_stmt 1 view .LVU40
 229              		.loc 1 247 11 is_stmt 0 view .LVU41
 230 0002 0268     		ldr	r2, [r0]
 231              		.loc 1 247 6 view .LVU42
 232 0004 034B     		ldr	r3, .L19
 233 0006 9A42     		cmp	r2, r3
 234 0008 00D0     		beq	.L18
 235              	.LVL7:
 236              	.L15:
 248:Core/Src/main.c ****     HAL_IncTick();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 253:Core/Src/main.c **** }
 237              		.loc 1 253 1 view .LVU43
 238 000a 08BD     		pop	{r3, pc}
 239              	.LVL8:
 240              	.L18:
 248:Core/Src/main.c ****     HAL_IncTick();
 241              		.loc 1 248 5 is_stmt 1 view .LVU44
 242 000c FFF7FEFF 		bl	HAL_IncTick
 243              	.LVL9:
 244              		.loc 1 253 1 is_stmt 0 view .LVU45
 245 0010 FBE7     		b	.L15
 246              	.L20:
 247 0012 00BF     		.align	2
 248              	.L19:
 249 0014 002C0140 		.word	1073818624
 250              		.cfi_endproc
 251              	.LFE71:
 253              		.section	.text.Error_Handler,"ax",%progbits
 254              		.align	1
 255              		.global	Error_Handler
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	Error_Handler:
 261              	.LFB72:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** /**
 256:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 257:Core/Src/main.c ****   * @retval None
 258:Core/Src/main.c ****   */
ARM GAS  /tmp//ccE6eyms.s 			page 10


 259:Core/Src/main.c **** void Error_Handler(void)
 260:Core/Src/main.c **** {
 262              		.loc 1 260 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ Volatile: function does not return.
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 261:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 262:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 263:Core/Src/main.c ****   __disable_irq();
 268              		.loc 1 263 3 view .LVU47
 269              	.LBB6:
 270              	.LBI6:
 271              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp//ccE6eyms.s 			page 11


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp//ccE6eyms.s 			page 12


 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 272              		.loc 2 140 27 view .LVU48
 273              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 274              		.loc 2 142 3 view .LVU49
 275              		.syntax unified
 276              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 277 0000 72B6     		cpsid i
 278              	@ 0 "" 2
 279              		.thumb
 280              		.syntax unified
 281              	.L22:
 282              	.LBE7:
 283              	.LBE6:
 264:Core/Src/main.c ****   while (1) {
 284              		.loc 1 264 3 view .LVU50
ARM GAS  /tmp//ccE6eyms.s 			page 13


 265:Core/Src/main.c ****   }
 285              		.loc 1 265 3 view .LVU51
 264:Core/Src/main.c ****   while (1) {
 286              		.loc 1 264 9 view .LVU52
 287 0002 FEE7     		b	.L22
 288              		.cfi_endproc
 289              	.LFE72:
 291              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	MX_USART1_UART_Init:
 298              	.LFB69:
 174:Core/Src/main.c **** 
 299              		.loc 1 174 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 08B5     		push	{r3, lr}
 304              	.LCFI6:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 3, -8
 307              		.cfi_offset 14, -4
 183:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 308              		.loc 1 183 3 view .LVU54
 183:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 309              		.loc 1 183 19 is_stmt 0 view .LVU55
 310 0002 0A48     		ldr	r0, .L27
 311 0004 0A4B     		ldr	r3, .L27+4
 312 0006 0360     		str	r3, [r0]
 184:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 313              		.loc 1 184 3 is_stmt 1 view .LVU56
 184:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 314              		.loc 1 184 24 is_stmt 0 view .LVU57
 315 0008 4FF4E133 		mov	r3, #115200
 316 000c 4360     		str	r3, [r0, #4]
 185:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 317              		.loc 1 185 3 is_stmt 1 view .LVU58
 185:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 318              		.loc 1 185 26 is_stmt 0 view .LVU59
 319 000e 0023     		movs	r3, #0
 320 0010 8360     		str	r3, [r0, #8]
 186:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 321              		.loc 1 186 3 is_stmt 1 view .LVU60
 186:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 322              		.loc 1 186 24 is_stmt 0 view .LVU61
 323 0012 C360     		str	r3, [r0, #12]
 187:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 324              		.loc 1 187 3 is_stmt 1 view .LVU62
 187:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 325              		.loc 1 187 22 is_stmt 0 view .LVU63
 326 0014 0361     		str	r3, [r0, #16]
 188:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 327              		.loc 1 188 3 is_stmt 1 view .LVU64
 188:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 328              		.loc 1 188 20 is_stmt 0 view .LVU65
ARM GAS  /tmp//ccE6eyms.s 			page 14


 329 0016 0C22     		movs	r2, #12
 330 0018 4261     		str	r2, [r0, #20]
 189:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 331              		.loc 1 189 3 is_stmt 1 view .LVU66
 189:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 332              		.loc 1 189 25 is_stmt 0 view .LVU67
 333 001a 8361     		str	r3, [r0, #24]
 190:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 334              		.loc 1 190 3 is_stmt 1 view .LVU68
 190:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 335              		.loc 1 190 28 is_stmt 0 view .LVU69
 336 001c C361     		str	r3, [r0, #28]
 191:Core/Src/main.c ****   {
 337              		.loc 1 191 3 is_stmt 1 view .LVU70
 191:Core/Src/main.c ****   {
 338              		.loc 1 191 7 is_stmt 0 view .LVU71
 339 001e FFF7FEFF 		bl	HAL_UART_Init
 340              	.LVL10:
 191:Core/Src/main.c ****   {
 341              		.loc 1 191 6 discriminator 1 view .LVU72
 342 0022 00B9     		cbnz	r0, .L26
 199:Core/Src/main.c **** 
 343              		.loc 1 199 1 view .LVU73
 344 0024 08BD     		pop	{r3, pc}
 345              	.L26:
 193:Core/Src/main.c ****   }
 346              		.loc 1 193 5 is_stmt 1 view .LVU74
 347 0026 FFF7FEFF 		bl	Error_Handler
 348              	.LVL11:
 349              	.L28:
 350 002a 00BF     		.align	2
 351              	.L27:
 352 002c 00000000 		.word	huart1
 353 0030 00380140 		.word	1073821696
 354              		.cfi_endproc
 355              	.LFE69:
 357              		.section	.text.SystemClock_Config,"ax",%progbits
 358              		.align	1
 359              		.global	SystemClock_Config
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 364              	SystemClock_Config:
 365              	.LFB68:
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 366              		.loc 1 134 1 view -0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 64
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370 0000 10B5     		push	{r4, lr}
 371              	.LCFI7:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 4, -8
 374              		.cfi_offset 14, -4
 375 0002 90B0     		sub	sp, sp, #64
 376              	.LCFI8:
 377              		.cfi_def_cfa_offset 72
ARM GAS  /tmp//ccE6eyms.s 			page 15


 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 378              		.loc 1 135 3 view .LVU76
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 379              		.loc 1 135 22 is_stmt 0 view .LVU77
 380 0004 06AC     		add	r4, sp, #24
 381 0006 2822     		movs	r2, #40
 382 0008 0021     		movs	r1, #0
 383 000a 2046     		mov	r0, r4
 384 000c FFF7FEFF 		bl	memset
 385              	.LVL12:
 136:Core/Src/main.c **** 
 386              		.loc 1 136 3 is_stmt 1 view .LVU78
 136:Core/Src/main.c **** 
 387              		.loc 1 136 22 is_stmt 0 view .LVU79
 388 0010 0023     		movs	r3, #0
 389 0012 0193     		str	r3, [sp, #4]
 390 0014 0293     		str	r3, [sp, #8]
 391 0016 0393     		str	r3, [sp, #12]
 392 0018 0493     		str	r3, [sp, #16]
 393 001a 0593     		str	r3, [sp, #20]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 394              		.loc 1 141 3 is_stmt 1 view .LVU80
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 395              		.loc 1 141 36 is_stmt 0 view .LVU81
 396 001c 0122     		movs	r2, #1
 397 001e 0692     		str	r2, [sp, #24]
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 398              		.loc 1 142 3 is_stmt 1 view .LVU82
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 399              		.loc 1 142 30 is_stmt 0 view .LVU83
 400 0020 4FF48033 		mov	r3, #65536
 401 0024 0793     		str	r3, [sp, #28]
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 402              		.loc 1 143 3 is_stmt 1 view .LVU84
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 403              		.loc 1 144 3 view .LVU85
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 404              		.loc 1 144 30 is_stmt 0 view .LVU86
 405 0026 0A92     		str	r2, [sp, #40]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 406              		.loc 1 145 3 is_stmt 1 view .LVU87
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 407              		.loc 1 145 34 is_stmt 0 view .LVU88
 408 0028 0222     		movs	r2, #2
 409 002a 0D92     		str	r2, [sp, #52]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 410              		.loc 1 146 3 is_stmt 1 view .LVU89
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 411              		.loc 1 146 35 is_stmt 0 view .LVU90
 412 002c 0E93     		str	r3, [sp, #56]
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 413              		.loc 1 147 3 is_stmt 1 view .LVU91
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 414              		.loc 1 147 32 is_stmt 0 view .LVU92
 415 002e 4FF4E013 		mov	r3, #1835008
 416 0032 0F93     		str	r3, [sp, #60]
 148:Core/Src/main.c ****   {
ARM GAS  /tmp//ccE6eyms.s 			page 16


 417              		.loc 1 148 3 is_stmt 1 view .LVU93
 148:Core/Src/main.c ****   {
 418              		.loc 1 148 7 is_stmt 0 view .LVU94
 419 0034 2046     		mov	r0, r4
 420 0036 FFF7FEFF 		bl	HAL_RCC_OscConfig
 421              	.LVL13:
 148:Core/Src/main.c ****   {
 422              		.loc 1 148 6 discriminator 1 view .LVU95
 423 003a 78B9     		cbnz	r0, .L33
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 424              		.loc 1 155 3 is_stmt 1 view .LVU96
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 425              		.loc 1 155 31 is_stmt 0 view .LVU97
 426 003c 0F23     		movs	r3, #15
 427 003e 0193     		str	r3, [sp, #4]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 428              		.loc 1 157 3 is_stmt 1 view .LVU98
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 429              		.loc 1 157 34 is_stmt 0 view .LVU99
 430 0040 0221     		movs	r1, #2
 431 0042 0291     		str	r1, [sp, #8]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 432              		.loc 1 158 3 is_stmt 1 view .LVU100
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 433              		.loc 1 158 35 is_stmt 0 view .LVU101
 434 0044 0023     		movs	r3, #0
 435 0046 0393     		str	r3, [sp, #12]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 436              		.loc 1 159 3 is_stmt 1 view .LVU102
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 437              		.loc 1 159 36 is_stmt 0 view .LVU103
 438 0048 4FF48062 		mov	r2, #1024
 439 004c 0492     		str	r2, [sp, #16]
 160:Core/Src/main.c **** 
 440              		.loc 1 160 3 is_stmt 1 view .LVU104
 160:Core/Src/main.c **** 
 441              		.loc 1 160 36 is_stmt 0 view .LVU105
 442 004e 0593     		str	r3, [sp, #20]
 162:Core/Src/main.c ****   {
 443              		.loc 1 162 3 is_stmt 1 view .LVU106
 162:Core/Src/main.c ****   {
 444              		.loc 1 162 7 is_stmt 0 view .LVU107
 445 0050 01A8     		add	r0, sp, #4
 446 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 447              	.LVL14:
 162:Core/Src/main.c ****   {
 448              		.loc 1 162 6 discriminator 1 view .LVU108
 449 0056 18B9     		cbnz	r0, .L34
 166:Core/Src/main.c **** 
 450              		.loc 1 166 1 view .LVU109
 451 0058 10B0     		add	sp, sp, #64
 452              	.LCFI9:
 453              		.cfi_remember_state
 454              		.cfi_def_cfa_offset 8
 455              		@ sp needed
 456 005a 10BD     		pop	{r4, pc}
 457              	.L33:
ARM GAS  /tmp//ccE6eyms.s 			page 17


 458              	.LCFI10:
 459              		.cfi_restore_state
 150:Core/Src/main.c ****   }
 460              		.loc 1 150 5 is_stmt 1 view .LVU110
 461 005c FFF7FEFF 		bl	Error_Handler
 462              	.LVL15:
 463              	.L34:
 164:Core/Src/main.c ****   }
 464              		.loc 1 164 5 view .LVU111
 465 0060 FFF7FEFF 		bl	Error_Handler
 466              	.LVL16:
 467              		.cfi_endproc
 468              	.LFE68:
 470              		.section	.text.main,"ax",%progbits
 471              		.align	1
 472              		.global	main
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 477              	main:
 478              	.LFB67:
  85:Core/Src/main.c **** 
 479              		.loc 1 85 1 view -0
 480              		.cfi_startproc
 481              		@ Volatile: function does not return.
 482              		@ args = 0, pretend = 0, frame = 8
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484 0000 00B5     		push	{lr}
 485              	.LCFI11:
 486              		.cfi_def_cfa_offset 4
 487              		.cfi_offset 14, -4
 488 0002 85B0     		sub	sp, sp, #20
 489              	.LCFI12:
 490              		.cfi_def_cfa_offset 24
  94:Core/Src/main.c **** 
 491              		.loc 1 94 3 view .LVU113
 492 0004 FFF7FEFF 		bl	HAL_Init
 493              	.LVL17:
 101:Core/Src/main.c **** 
 494              		.loc 1 101 3 view .LVU114
 495 0008 FFF7FEFF 		bl	SystemClock_Config
 496              	.LVL18:
 108:Core/Src/main.c ****   MX_USART1_UART_Init();
 497              		.loc 1 108 3 view .LVU115
 498 000c FFF7FEFF 		bl	MX_GPIO_Init
 499              	.LVL19:
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 500              		.loc 1 109 3 view .LVU116
 501 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 502              	.LVL20:
 111:Core/Src/main.c ****   task_handler_t led_right_handler = NULL;
 503              		.loc 1 111 3 view .LVU117
 504 0014 FFF7FEFF 		bl	scheduler_init
 505              	.LVL21:
 112:Core/Src/main.c ****   task_handler_t led_close_handler = NULL;
 506              		.loc 1 112 3 view .LVU118
 112:Core/Src/main.c ****   task_handler_t led_close_handler = NULL;
ARM GAS  /tmp//ccE6eyms.s 			page 18


 507              		.loc 1 112 18 is_stmt 0 view .LVU119
 508 0018 0024     		movs	r4, #0
 509 001a 0394     		str	r4, [sp, #12]
 113:Core/Src/main.c ****   task_create(led_right, NULL, 32, 1, &led_right_handler);
 510              		.loc 1 113 3 is_stmt 1 view .LVU120
 113:Core/Src/main.c ****   task_create(led_right, NULL, 32, 1, &led_right_handler);
 511              		.loc 1 113 18 is_stmt 0 view .LVU121
 512 001c 0294     		str	r4, [sp, #8]
 114:Core/Src/main.c ****   task_create(led_close, NULL, 32, 2, &led_close_handler);
 513              		.loc 1 114 3 is_stmt 1 view .LVU122
 514 001e 03AB     		add	r3, sp, #12
 515 0020 0093     		str	r3, [sp]
 516 0022 0123     		movs	r3, #1
 517 0024 2022     		movs	r2, #32
 518 0026 2146     		mov	r1, r4
 519 0028 0648     		ldr	r0, .L38
 520 002a FFF7FEFF 		bl	task_create
 521              	.LVL22:
 115:Core/Src/main.c ****   scheduler_start();
 522              		.loc 1 115 3 view .LVU123
 523 002e 02AB     		add	r3, sp, #8
 524 0030 0093     		str	r3, [sp]
 525 0032 0223     		movs	r3, #2
 526 0034 2022     		movs	r2, #32
 527 0036 2146     		mov	r1, r4
 528 0038 0348     		ldr	r0, .L38+4
 529 003a FFF7FEFF 		bl	task_create
 530              	.LVL23:
 116:Core/Src/main.c ****   /* USER CODE END 2 */
 531              		.loc 1 116 3 view .LVU124
 532 003e FFF7FEFF 		bl	scheduler_start
 533              	.LVL24:
 534              	.L36:
 121:Core/Src/main.c ****     /* USER CODE END WHILE */
 535              		.loc 1 121 3 view .LVU125
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 536              		.loc 1 125 3 view .LVU126
 121:Core/Src/main.c ****     /* USER CODE END WHILE */
 537              		.loc 1 121 9 view .LVU127
 538 0042 FEE7     		b	.L36
 539              	.L39:
 540              		.align	2
 541              	.L38:
 542 0044 00000000 		.word	led_right
 543 0048 00000000 		.word	led_close
 544              		.cfi_endproc
 545              	.LFE67:
 547              		.global	huart1
 548              		.section	.bss.huart1,"aw",%nobits
 549              		.align	2
 552              	huart1:
 553 0000 00000000 		.space	72
 553      00000000 
 553      00000000 
 553      00000000 
 553      00000000 
 554              		.text
ARM GAS  /tmp//ccE6eyms.s 			page 19


 555              	.Letext0:
 556              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 557              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 558              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 559              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 560              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 561              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 562              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 563              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 564              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 565              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 566              		.file 13 "Core/Inc/task.h"
 567              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 568              		.file 15 "<built-in>"
ARM GAS  /tmp//ccE6eyms.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    /tmp//ccE6eyms.s:19     .text.led_right:00000000 $t
    /tmp//ccE6eyms.s:25     .text.led_right:00000000 led_right
    /tmp//ccE6eyms.s:58     .text.led_right:00000024 $d
    /tmp//ccE6eyms.s:63     .text.led_close:00000000 $t
    /tmp//ccE6eyms.s:69     .text.led_close:00000000 led_close
    /tmp//ccE6eyms.s:102    .text.led_close:00000024 $d
    /tmp//ccE6eyms.s:107    .text.MX_GPIO_Init:00000000 $t
    /tmp//ccE6eyms.s:112    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
    /tmp//ccE6eyms.s:203    .text.MX_GPIO_Init:0000005c $d
    /tmp//ccE6eyms.s:209    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
    /tmp//ccE6eyms.s:215    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
    /tmp//ccE6eyms.s:249    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
    /tmp//ccE6eyms.s:254    .text.Error_Handler:00000000 $t
    /tmp//ccE6eyms.s:260    .text.Error_Handler:00000000 Error_Handler
    /tmp//ccE6eyms.s:292    .text.MX_USART1_UART_Init:00000000 $t
    /tmp//ccE6eyms.s:297    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
    /tmp//ccE6eyms.s:352    .text.MX_USART1_UART_Init:0000002c $d
    /tmp//ccE6eyms.s:552    .bss.huart1:00000000 huart1
    /tmp//ccE6eyms.s:358    .text.SystemClock_Config:00000000 $t
    /tmp//ccE6eyms.s:364    .text.SystemClock_Config:00000000 SystemClock_Config
    /tmp//ccE6eyms.s:471    .text.main:00000000 $t
    /tmp//ccE6eyms.s:477    .text.main:00000000 main
    /tmp//ccE6eyms.s:542    .text.main:00000044 $d
    /tmp//ccE6eyms.s:549    .bss.huart1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_Delay
HAL_GPIO_Init
HAL_IncTick
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
scheduler_init
task_create
scheduler_start
