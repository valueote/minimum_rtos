ARM GAS  /tmp//ccH7uINQ.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB67:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp//ccH7uINQ.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** #include "core_cm3.h"
  53:Core/Src/main.c **** #include<stdint.h>
  54:Core/Src/main.c **** #include<stdlib.h>
  55:Core/Src/main.c **** #include "mem.h"
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****   * @brief  The application entry point.
  65:Core/Src/main.c ****   * @retval int
  66:Core/Src/main.c ****   */
  67:Core/Src/main.c **** int main(void)
  68:Core/Src/main.c **** {
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp//ccH7uINQ.s 			page 3


  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   int* arr = halloc(sizeof(int) * 5);
  98:Core/Src/main.c ****   for(int i = 0; i < 5; i++){
  99:Core/Src/main.c ****     arr[i] = i;
 100:Core/Src/main.c ****   }
 101:Core/Src/main.c ****   while (1)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c ****   /* USER CODE END 3 */
 107:Core/Src/main.c **** }
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /**
 110:Core/Src/main.c ****   * @brief System Clock Configuration
 111:Core/Src/main.c ****   * @retval None
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c **** void SystemClock_Config(void)
 114:Core/Src/main.c **** {
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 119:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     Error_Handler();
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c **** }
 147:Core/Src/main.c **** 
ARM GAS  /tmp//ccH7uINQ.s 			page 4


 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief GPIO Initialization Function
 150:Core/Src/main.c ****   * @param None
 151:Core/Src/main.c ****   * @retval None
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c **** static void MX_GPIO_Init(void)
 154:Core/Src/main.c **** {
  26              		.loc 1 154 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
 155:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 155 3 view .LVU1
  41              		.loc 1 155 20 is_stmt 0 view .LVU2
  42 0004 02AD     		add	r5, sp, #8
  43 0006 0024     		movs	r4, #0
  44 0008 0294     		str	r4, [sp, #8]
  45 000a 0394     		str	r4, [sp, #12]
  46 000c 0494     		str	r4, [sp, #16]
  47 000e 0594     		str	r4, [sp, #20]
 156:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 157:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 160:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  48              		.loc 1 160 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 160 3 view .LVU4
  51              		.loc 1 160 3 view .LVU5
  52 0010 124B     		ldr	r3, .L3
  53 0012 9A69     		ldr	r2, [r3, #24]
  54 0014 42F00402 		orr	r2, r2, #4
  55 0018 9A61     		str	r2, [r3, #24]
  56              		.loc 1 160 3 view .LVU6
  57 001a 9A69     		ldr	r2, [r3, #24]
  58 001c 02F00402 		and	r2, r2, #4
  59 0020 0092     		str	r2, [sp]
  60              		.loc 1 160 3 view .LVU7
  61 0022 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 160 3 view .LVU8
 161:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  64              		.loc 1 161 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 161 3 view .LVU10
  67              		.loc 1 161 3 view .LVU11
  68 0024 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp//ccH7uINQ.s 			page 5


  69 0026 42F00802 		orr	r2, r2, #8
  70 002a 9A61     		str	r2, [r3, #24]
  71              		.loc 1 161 3 view .LVU12
  72 002c 9B69     		ldr	r3, [r3, #24]
  73 002e 03F00803 		and	r3, r3, #8
  74 0032 0193     		str	r3, [sp, #4]
  75              		.loc 1 161 3 view .LVU13
  76 0034 019B     		ldr	r3, [sp, #4]
  77              	.LBE5:
  78              		.loc 1 161 3 view .LVU14
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 164:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
  79              		.loc 1 164 3 view .LVU15
  80 0036 0A4E     		ldr	r6, .L3+4
  81 0038 0122     		movs	r2, #1
  82 003a 2021     		movs	r1, #32
  83 003c 3046     		mov	r0, r6
  84 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  85              	.LVL0:
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /*Configure GPIO pin : PB5 */
 167:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
  86              		.loc 1 167 3 view .LVU16
  87              		.loc 1 167 23 is_stmt 0 view .LVU17
  88 0042 2023     		movs	r3, #32
  89 0044 0293     		str	r3, [sp, #8]
 168:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  90              		.loc 1 168 3 is_stmt 1 view .LVU18
  91              		.loc 1 168 24 is_stmt 0 view .LVU19
  92 0046 0123     		movs	r3, #1
  93 0048 0393     		str	r3, [sp, #12]
 169:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  94              		.loc 1 169 3 is_stmt 1 view .LVU20
  95              		.loc 1 169 24 is_stmt 0 view .LVU21
  96 004a 0494     		str	r4, [sp, #16]
 170:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  97              		.loc 1 170 3 is_stmt 1 view .LVU22
  98              		.loc 1 170 25 is_stmt 0 view .LVU23
  99 004c 0223     		movs	r3, #2
 100 004e 0593     		str	r3, [sp, #20]
 171:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 101              		.loc 1 171 3 is_stmt 1 view .LVU24
 102 0050 2946     		mov	r1, r5
 103 0052 3046     		mov	r0, r6
 104 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 105              	.LVL1:
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 174:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 175:Core/Src/main.c **** }
 106              		.loc 1 175 1 is_stmt 0 view .LVU25
 107 0058 06B0     		add	sp, sp, #24
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 16
 110              		@ sp needed
 111 005a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp//ccH7uINQ.s 			page 6


 112              	.L4:
 113              		.align	2
 114              	.L3:
 115 005c 00100240 		.word	1073876992
 116 0060 000C0140 		.word	1073810432
 117              		.cfi_endproc
 118              	.LFE67:
 120              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 121              		.align	1
 122              		.global	HAL_TIM_PeriodElapsedCallback
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 127              	HAL_TIM_PeriodElapsedCallback:
 128              	.LVL2:
 129              	.LFB68:
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /* USER CODE END 4 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 183:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 184:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 185:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 186:Core/Src/main.c ****   * @param  htim : TIM handle
 187:Core/Src/main.c ****   * @retval None
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 190:Core/Src/main.c **** {
 130              		.loc 1 190 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		.loc 1 190 1 is_stmt 0 view .LVU27
 135 0000 08B5     		push	{r3, lr}
 136              	.LCFI3:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 3, -8
 139              		.cfi_offset 14, -4
 191:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 194:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 140              		.loc 1 194 3 is_stmt 1 view .LVU28
 141              		.loc 1 194 11 is_stmt 0 view .LVU29
 142 0002 0268     		ldr	r2, [r0]
 143              		.loc 1 194 6 view .LVU30
 144 0004 034B     		ldr	r3, .L9
 145 0006 9A42     		cmp	r2, r3
 146 0008 00D0     		beq	.L8
 147              	.LVL3:
 148              	.L5:
 195:Core/Src/main.c ****     HAL_IncTick();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
ARM GAS  /tmp//ccH7uINQ.s 			page 7


 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 200:Core/Src/main.c **** }
 149              		.loc 1 200 1 view .LVU31
 150 000a 08BD     		pop	{r3, pc}
 151              	.LVL4:
 152              	.L8:
 195:Core/Src/main.c ****     HAL_IncTick();
 153              		.loc 1 195 5 is_stmt 1 view .LVU32
 154 000c FFF7FEFF 		bl	HAL_IncTick
 155              	.LVL5:
 156              		.loc 1 200 1 is_stmt 0 view .LVU33
 157 0010 FBE7     		b	.L5
 158              	.L10:
 159 0012 00BF     		.align	2
 160              	.L9:
 161 0014 002C0140 		.word	1073818624
 162              		.cfi_endproc
 163              	.LFE68:
 165              		.section	.text.Error_Handler,"ax",%progbits
 166              		.align	1
 167              		.global	Error_Handler
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	Error_Handler:
 173              	.LFB69:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
 203:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 204:Core/Src/main.c ****   * @retval None
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** void Error_Handler(void)
 207:Core/Src/main.c **** {
 174              		.loc 1 207 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ Volatile: function does not return.
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 208:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 209:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 210:Core/Src/main.c ****   __disable_irq();
 180              		.loc 1 210 3 view .LVU35
 181              	.LBB6:
 182              	.LBI6:
 183              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  /tmp//ccH7uINQ.s 			page 8


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  /tmp//ccH7uINQ.s 			page 9


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp//ccH7uINQ.s 			page 10


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 184              		.loc 2 140 27 view .LVU36
 185              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 186              		.loc 2 142 3 view .LVU37
 187              		.syntax unified
 188              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 189 0000 72B6     		cpsid i
 190              	@ 0 "" 2
 191              		.thumb
 192              		.syntax unified
 193              	.L12:
 194              	.LBE7:
 195              	.LBE6:
 211:Core/Src/main.c ****   while (1)
 196              		.loc 1 211 3 view .LVU38
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****   }
 197              		.loc 1 213 3 view .LVU39
 211:Core/Src/main.c ****   while (1)
 198              		.loc 1 211 9 view .LVU40
 199 0002 FEE7     		b	.L12
 200              		.cfi_endproc
 201              	.LFE69:
 203              		.section	.text.SystemClock_Config,"ax",%progbits
 204              		.align	1
 205              		.global	SystemClock_Config
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 210              	SystemClock_Config:
 211              	.LFB66:
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 212              		.loc 1 114 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 64
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 10B5     		push	{r4, lr}
 217              	.LCFI4:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 4, -8
ARM GAS  /tmp//ccH7uINQ.s 			page 11


 220              		.cfi_offset 14, -4
 221 0002 90B0     		sub	sp, sp, #64
 222              	.LCFI5:
 223              		.cfi_def_cfa_offset 72
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 224              		.loc 1 115 3 view .LVU42
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 225              		.loc 1 115 22 is_stmt 0 view .LVU43
 226 0004 06AC     		add	r4, sp, #24
 227 0006 2822     		movs	r2, #40
 228 0008 0021     		movs	r1, #0
 229 000a 2046     		mov	r0, r4
 230 000c FFF7FEFF 		bl	memset
 231              	.LVL6:
 116:Core/Src/main.c **** 
 232              		.loc 1 116 3 is_stmt 1 view .LVU44
 116:Core/Src/main.c **** 
 233              		.loc 1 116 22 is_stmt 0 view .LVU45
 234 0010 0023     		movs	r3, #0
 235 0012 0193     		str	r3, [sp, #4]
 236 0014 0293     		str	r3, [sp, #8]
 237 0016 0393     		str	r3, [sp, #12]
 238 0018 0493     		str	r3, [sp, #16]
 239 001a 0593     		str	r3, [sp, #20]
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 240              		.loc 1 121 3 is_stmt 1 view .LVU46
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 241              		.loc 1 121 36 is_stmt 0 view .LVU47
 242 001c 0122     		movs	r2, #1
 243 001e 0692     		str	r2, [sp, #24]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 244              		.loc 1 122 3 is_stmt 1 view .LVU48
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 245              		.loc 1 122 30 is_stmt 0 view .LVU49
 246 0020 4FF48033 		mov	r3, #65536
 247 0024 0793     		str	r3, [sp, #28]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 248              		.loc 1 123 3 is_stmt 1 view .LVU50
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 249              		.loc 1 124 3 view .LVU51
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 250              		.loc 1 124 30 is_stmt 0 view .LVU52
 251 0026 0A92     		str	r2, [sp, #40]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 252              		.loc 1 125 3 is_stmt 1 view .LVU53
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 253              		.loc 1 125 34 is_stmt 0 view .LVU54
 254 0028 0222     		movs	r2, #2
 255 002a 0D92     		str	r2, [sp, #52]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 256              		.loc 1 126 3 is_stmt 1 view .LVU55
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 257              		.loc 1 126 35 is_stmt 0 view .LVU56
 258 002c 0E93     		str	r3, [sp, #56]
 127:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 259              		.loc 1 127 3 is_stmt 1 view .LVU57
 127:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp//ccH7uINQ.s 			page 12


 260              		.loc 1 127 32 is_stmt 0 view .LVU58
 261 002e 4FF4E013 		mov	r3, #1835008
 262 0032 0F93     		str	r3, [sp, #60]
 128:Core/Src/main.c ****   {
 263              		.loc 1 128 3 is_stmt 1 view .LVU59
 128:Core/Src/main.c ****   {
 264              		.loc 1 128 7 is_stmt 0 view .LVU60
 265 0034 2046     		mov	r0, r4
 266 0036 FFF7FEFF 		bl	HAL_RCC_OscConfig
 267              	.LVL7:
 128:Core/Src/main.c ****   {
 268              		.loc 1 128 6 discriminator 1 view .LVU61
 269 003a 78B9     		cbnz	r0, .L17
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 270              		.loc 1 135 3 is_stmt 1 view .LVU62
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 271              		.loc 1 135 31 is_stmt 0 view .LVU63
 272 003c 0F23     		movs	r3, #15
 273 003e 0193     		str	r3, [sp, #4]
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 274              		.loc 1 137 3 is_stmt 1 view .LVU64
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 275              		.loc 1 137 34 is_stmt 0 view .LVU65
 276 0040 0221     		movs	r1, #2
 277 0042 0291     		str	r1, [sp, #8]
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 278              		.loc 1 138 3 is_stmt 1 view .LVU66
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 279              		.loc 1 138 35 is_stmt 0 view .LVU67
 280 0044 0023     		movs	r3, #0
 281 0046 0393     		str	r3, [sp, #12]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 282              		.loc 1 139 3 is_stmt 1 view .LVU68
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 283              		.loc 1 139 36 is_stmt 0 view .LVU69
 284 0048 4FF48062 		mov	r2, #1024
 285 004c 0492     		str	r2, [sp, #16]
 140:Core/Src/main.c **** 
 286              		.loc 1 140 3 is_stmt 1 view .LVU70
 140:Core/Src/main.c **** 
 287              		.loc 1 140 36 is_stmt 0 view .LVU71
 288 004e 0593     		str	r3, [sp, #20]
 142:Core/Src/main.c ****   {
 289              		.loc 1 142 3 is_stmt 1 view .LVU72
 142:Core/Src/main.c ****   {
 290              		.loc 1 142 7 is_stmt 0 view .LVU73
 291 0050 01A8     		add	r0, sp, #4
 292 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 293              	.LVL8:
 142:Core/Src/main.c ****   {
 294              		.loc 1 142 6 discriminator 1 view .LVU74
 295 0056 18B9     		cbnz	r0, .L18
 146:Core/Src/main.c **** 
 296              		.loc 1 146 1 view .LVU75
 297 0058 10B0     		add	sp, sp, #64
 298              	.LCFI6:
 299              		.cfi_remember_state
ARM GAS  /tmp//ccH7uINQ.s 			page 13


 300              		.cfi_def_cfa_offset 8
 301              		@ sp needed
 302 005a 10BD     		pop	{r4, pc}
 303              	.L17:
 304              	.LCFI7:
 305              		.cfi_restore_state
 130:Core/Src/main.c ****   }
 306              		.loc 1 130 5 is_stmt 1 view .LVU76
 307 005c FFF7FEFF 		bl	Error_Handler
 308              	.LVL9:
 309              	.L18:
 144:Core/Src/main.c ****   }
 310              		.loc 1 144 5 view .LVU77
 311 0060 FFF7FEFF 		bl	Error_Handler
 312              	.LVL10:
 313              		.cfi_endproc
 314              	.LFE66:
 316              		.section	.text.main,"ax",%progbits
 317              		.align	1
 318              		.global	main
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	main:
 324              	.LFB65:
  68:Core/Src/main.c **** 
 325              		.loc 1 68 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI8:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 334              		.loc 1 77 3 view .LVU79
 335 0002 FFF7FEFF 		bl	HAL_Init
 336              	.LVL11:
  84:Core/Src/main.c **** 
 337              		.loc 1 84 3 view .LVU80
 338 0006 FFF7FEFF 		bl	SystemClock_Config
 339              	.LVL12:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 340              		.loc 1 91 3 view .LVU81
 341 000a FFF7FEFF 		bl	MX_GPIO_Init
 342              	.LVL13:
  97:Core/Src/main.c ****   for(int i = 0; i < 5; i++){
 343              		.loc 1 97 3 view .LVU82
  97:Core/Src/main.c ****   for(int i = 0; i < 5; i++){
 344              		.loc 1 97 14 is_stmt 0 view .LVU83
 345 000e 1420     		movs	r0, #20
 346 0010 FFF7FEFF 		bl	halloc
 347              	.LVL14:
  98:Core/Src/main.c ****     arr[i] = i;
 348              		.loc 1 98 3 is_stmt 1 view .LVU84
 349              	.LBB8:
ARM GAS  /tmp//ccH7uINQ.s 			page 14


  98:Core/Src/main.c ****     arr[i] = i;
 350              		.loc 1 98 7 view .LVU85
  98:Core/Src/main.c ****     arr[i] = i;
 351              		.loc 1 98 11 is_stmt 0 view .LVU86
 352 0014 0023     		movs	r3, #0
  98:Core/Src/main.c ****     arr[i] = i;
 353              		.loc 1 98 3 view .LVU87
 354 0016 02E0     		b	.L20
 355              	.LVL15:
 356              	.L21:
  99:Core/Src/main.c ****   }
 357              		.loc 1 99 5 is_stmt 1 view .LVU88
  99:Core/Src/main.c ****   }
 358              		.loc 1 99 12 is_stmt 0 view .LVU89
 359 0018 40F82330 		str	r3, [r0, r3, lsl #2]
  98:Core/Src/main.c ****     arr[i] = i;
 360              		.loc 1 98 26 is_stmt 1 discriminator 3 view .LVU90
 361 001c 0133     		adds	r3, r3, #1
 362              	.LVL16:
 363              	.L20:
  98:Core/Src/main.c ****     arr[i] = i;
 364              		.loc 1 98 20 discriminator 1 view .LVU91
 365 001e 042B     		cmp	r3, #4
 366 0020 FADD     		ble	.L21
 367              	.L22:
 368              	.LBE8:
 101:Core/Src/main.c ****   {
 369              		.loc 1 101 3 view .LVU92
 105:Core/Src/main.c ****   /* USER CODE END 3 */
 370              		.loc 1 105 3 view .LVU93
 101:Core/Src/main.c ****   {
 371              		.loc 1 101 9 view .LVU94
 372 0022 FEE7     		b	.L22
 373              		.cfi_endproc
 374              	.LFE65:
 376              		.global	node_struct_size
 377              		.section	.rodata.node_struct_size,"a"
 378              		.align	2
 381              	node_struct_size:
 382 0000 08000000 		.word	8
 383              		.text
 384              	.Letext0:
 385              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 386              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 387              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 388              		.file 6 "/usr/lib/gcc/arm-none-eabi/14.2.0/include/stddef.h"
 389              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 390              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 391              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 392              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 393              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 394              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 395              		.file 13 "Core/Inc/mem.h"
 396              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 397              		.file 15 "<built-in>"
ARM GAS  /tmp//ccH7uINQ.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    /tmp//ccH7uINQ.s:19     .text.MX_GPIO_Init:00000000 $t
    /tmp//ccH7uINQ.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
    /tmp//ccH7uINQ.s:115    .text.MX_GPIO_Init:0000005c $d
    /tmp//ccH7uINQ.s:121    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
    /tmp//ccH7uINQ.s:127    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
    /tmp//ccH7uINQ.s:161    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
    /tmp//ccH7uINQ.s:166    .text.Error_Handler:00000000 $t
    /tmp//ccH7uINQ.s:172    .text.Error_Handler:00000000 Error_Handler
    /tmp//ccH7uINQ.s:204    .text.SystemClock_Config:00000000 $t
    /tmp//ccH7uINQ.s:210    .text.SystemClock_Config:00000000 SystemClock_Config
    /tmp//ccH7uINQ.s:317    .text.main:00000000 $t
    /tmp//ccH7uINQ.s:323    .text.main:00000000 main
    /tmp//ccH7uINQ.s:381    .rodata.node_struct_size:00000000 node_struct_size
    /tmp//ccH7uINQ.s:378    .rodata.node_struct_size:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
halloc
