ARM GAS  /tmp//ccr3RPcy.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32f1xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f1xx_it.c ****   *
  16:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f1xx_it.c ****   */
  18:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f1xx_it.c **** 
  20:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f1xx_it.c **** #include "main.h"
  22:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f1xx_it.c **** 
  27:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f1xx_it.c **** 
  30:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f1xx_it.c **** 
  32:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp//ccr3RPcy.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f1xx_it.c **** 
  35:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f1xx_it.c **** 
  37:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f1xx_it.c **** 
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f1xx_it.c **** 
  42:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f1xx_it.c **** 
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f1xx_it.c **** 
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f1xx_it.c **** 
  55:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim1;
  59:Core/Src/stm32f1xx_it.c **** 
  60:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f1xx_it.c **** 
  62:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f1xx_it.c **** 
  64:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f1xx_it.c **** /**
  68:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32f1xx_it.c ****   */
  70:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 71 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  39              	.L2:
  72:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f1xx_it.c **** 
  74:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32f1xx_it.c ****    while (1)
ARM GAS  /tmp//ccr3RPcy.s 			page 3


  40              		.loc 1 76 10
  41 0004 00BF     		nop
  42 0006 FDE7     		b	.L2
  43              		.cfi_endproc
  44              	.LFE65:
  46              		.section	.text.HardFault_Handler,"ax",%progbits
  47              		.align	1
  48              		.global	HardFault_Handler
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	HardFault_Handler:
  54              	.LFB66:
  77:Core/Src/stm32f1xx_it.c ****   {
  78:Core/Src/stm32f1xx_it.c ****   }
  79:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f1xx_it.c **** }
  81:Core/Src/stm32f1xx_it.c **** 
  82:Core/Src/stm32f1xx_it.c **** /**
  83:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Core/Src/stm32f1xx_it.c ****   */
  85:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  86:Core/Src/stm32f1xx_it.c **** {
  55              		.loc 1 86 1
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60 0000 80B4     		push	{r7}
  61              	.LCFI2:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 7, -4
  64 0002 00AF     		add	r7, sp, #0
  65              	.LCFI3:
  66              		.cfi_def_cfa_register 7
  67              	.L4:
  87:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Core/Src/stm32f1xx_it.c **** 
  89:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Core/Src/stm32f1xx_it.c ****   while (1)
  68              		.loc 1 90 9
  69 0004 00BF     		nop
  70 0006 FDE7     		b	.L4
  71              		.cfi_endproc
  72              	.LFE66:
  74              		.section	.text.MemManage_Handler,"ax",%progbits
  75              		.align	1
  76              		.global	MemManage_Handler
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	MemManage_Handler:
  82              	.LFB67:
  91:Core/Src/stm32f1xx_it.c ****   {
  92:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f1xx_it.c ****   }
ARM GAS  /tmp//ccr3RPcy.s 			page 4


  95:Core/Src/stm32f1xx_it.c **** }
  96:Core/Src/stm32f1xx_it.c **** 
  97:Core/Src/stm32f1xx_it.c **** /**
  98:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  99:Core/Src/stm32f1xx_it.c ****   */
 100:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 101:Core/Src/stm32f1xx_it.c **** {
  83              		.loc 1 101 1
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88 0000 80B4     		push	{r7}
  89              	.LCFI4:
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 7, -4
  92 0002 00AF     		add	r7, sp, #0
  93              	.LCFI5:
  94              		.cfi_def_cfa_register 7
  95              	.L6:
 102:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f1xx_it.c **** 
 104:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Core/Src/stm32f1xx_it.c ****   while (1)
  96              		.loc 1 105 9
  97 0004 00BF     		nop
  98 0006 FDE7     		b	.L6
  99              		.cfi_endproc
 100              	.LFE67:
 102              		.section	.text.BusFault_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	BusFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	BusFault_Handler:
 110              	.LFB68:
 106:Core/Src/stm32f1xx_it.c ****   {
 107:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f1xx_it.c ****   }
 110:Core/Src/stm32f1xx_it.c **** }
 111:Core/Src/stm32f1xx_it.c **** 
 112:Core/Src/stm32f1xx_it.c **** /**
 113:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 114:Core/Src/stm32f1xx_it.c ****   */
 115:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 116:Core/Src/stm32f1xx_it.c **** {
 111              		.loc 1 116 1
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116 0000 80B4     		push	{r7}
 117              	.LCFI6:
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 7, -4
ARM GAS  /tmp//ccr3RPcy.s 			page 5


 120 0002 00AF     		add	r7, sp, #0
 121              	.LCFI7:
 122              		.cfi_def_cfa_register 7
 123              	.L8:
 117:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Core/Src/stm32f1xx_it.c **** 
 119:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Core/Src/stm32f1xx_it.c ****   while (1)
 124              		.loc 1 120 9
 125 0004 00BF     		nop
 126 0006 FDE7     		b	.L8
 127              		.cfi_endproc
 128              	.LFE68:
 130              		.section	.text.UsageFault_Handler,"ax",%progbits
 131              		.align	1
 132              		.global	UsageFault_Handler
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 137              	UsageFault_Handler:
 138              	.LFB69:
 121:Core/Src/stm32f1xx_it.c ****   {
 122:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f1xx_it.c ****   }
 125:Core/Src/stm32f1xx_it.c **** }
 126:Core/Src/stm32f1xx_it.c **** 
 127:Core/Src/stm32f1xx_it.c **** /**
 128:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Core/Src/stm32f1xx_it.c ****   */
 130:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 131:Core/Src/stm32f1xx_it.c **** {
 139              		.loc 1 131 1
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 0000 80B4     		push	{r7}
 145              	.LCFI8:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 7, -4
 148 0002 00AF     		add	r7, sp, #0
 149              	.LCFI9:
 150              		.cfi_def_cfa_register 7
 151              	.L10:
 132:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c **** 
 134:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Core/Src/stm32f1xx_it.c ****   while (1)
 152              		.loc 1 135 9
 153 0004 00BF     		nop
 154 0006 FDE7     		b	.L10
 155              		.cfi_endproc
 156              	.LFE69:
 158              		.section	.text.DebugMon_Handler,"ax",%progbits
 159              		.align	1
 160              		.global	DebugMon_Handler
ARM GAS  /tmp//ccr3RPcy.s 			page 6


 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	DebugMon_Handler:
 166              	.LFB70:
 136:Core/Src/stm32f1xx_it.c ****   {
 137:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f1xx_it.c ****   }
 140:Core/Src/stm32f1xx_it.c **** }
 141:Core/Src/stm32f1xx_it.c **** 
 142:Core/Src/stm32f1xx_it.c **** /**
 143:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Core/Src/stm32f1xx_it.c ****   */
 145:Core/Src/stm32f1xx_it.c **** /**
 146:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 147:Core/Src/stm32f1xx_it.c ****   */
 148:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 149:Core/Src/stm32f1xx_it.c **** {
 167              		.loc 1 149 1
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 80B4     		push	{r7}
 173              	.LCFI10:
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 7, -4
 176 0002 00AF     		add	r7, sp, #0
 177              	.LCFI11:
 178              		.cfi_def_cfa_register 7
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f1xx_it.c **** 
 152:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f1xx_it.c **** 
 155:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f1xx_it.c **** }
 179              		.loc 1 156 1
 180 0004 00BF     		nop
 181 0006 BD46     		mov	sp, r7
 182              	.LCFI12:
 183              		.cfi_def_cfa_register 13
 184              		@ sp needed
 185 0008 80BC     		pop	{r7}
 186              	.LCFI13:
 187              		.cfi_restore 7
 188              		.cfi_def_cfa_offset 0
 189 000a 7047     		bx	lr
 190              		.cfi_endproc
 191              	.LFE70:
 193              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 194              		.align	1
 195              		.global	TIM1_UP_IRQHandler
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
ARM GAS  /tmp//ccr3RPcy.s 			page 7


 200              	TIM1_UP_IRQHandler:
 201              	.LFB71:
 157:Core/Src/stm32f1xx_it.c **** 
 158:Core/Src/stm32f1xx_it.c **** /**
 159:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 160:Core/Src/stm32f1xx_it.c ****   */
 161:Core/Src/stm32f1xx_it.c **** /**
 162:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 163:Core/Src/stm32f1xx_it.c ****   */
 164:Core/Src/stm32f1xx_it.c **** 
 165:Core/Src/stm32f1xx_it.c **** 
 166:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 167:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 168:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 169:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 170:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 171:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 172:Core/Src/stm32f1xx_it.c **** 
 173:Core/Src/stm32f1xx_it.c **** /**
 174:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM1 update interrupt.
 175:Core/Src/stm32f1xx_it.c ****   */
 176:Core/Src/stm32f1xx_it.c **** void TIM1_UP_IRQHandler(void)
 177:Core/Src/stm32f1xx_it.c **** {
 202              		.loc 1 177 1
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 80B5     		push	{r7, lr}
 207              	.LCFI14:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 00AF     		add	r7, sp, #0
 212              	.LCFI15:
 213              		.cfi_def_cfa_register 7
 178:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 0 */
 179:Core/Src/stm32f1xx_it.c **** 
 180:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 0 */
 181:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 214              		.loc 1 181 3
 215 0004 0248     		ldr	r0, .L13
 216 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 182:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM1_UP_IRQn 1 */
 183:Core/Src/stm32f1xx_it.c **** 
 184:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM1_UP_IRQn 1 */
 185:Core/Src/stm32f1xx_it.c **** }
 217              		.loc 1 185 1
 218 000a 00BF     		nop
 219 000c 80BD     		pop	{r7, pc}
 220              	.L14:
 221 000e 00BF     		.align	2
 222              	.L13:
 223 0010 00000000 		.word	htim1
 224              		.cfi_endproc
 225              	.LFE71:
 227              		.text
 228              	.Letext0:
ARM GAS  /tmp//ccr3RPcy.s 			page 8


 229              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 230              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 231              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 232              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 233              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 234              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
ARM GAS  /tmp//ccr3RPcy.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
    /tmp//ccr3RPcy.s:19     .text.NMI_Handler:00000000 $t
    /tmp//ccr3RPcy.s:25     .text.NMI_Handler:00000000 NMI_Handler
    /tmp//ccr3RPcy.s:47     .text.HardFault_Handler:00000000 $t
    /tmp//ccr3RPcy.s:53     .text.HardFault_Handler:00000000 HardFault_Handler
    /tmp//ccr3RPcy.s:75     .text.MemManage_Handler:00000000 $t
    /tmp//ccr3RPcy.s:81     .text.MemManage_Handler:00000000 MemManage_Handler
    /tmp//ccr3RPcy.s:103    .text.BusFault_Handler:00000000 $t
    /tmp//ccr3RPcy.s:109    .text.BusFault_Handler:00000000 BusFault_Handler
    /tmp//ccr3RPcy.s:131    .text.UsageFault_Handler:00000000 $t
    /tmp//ccr3RPcy.s:137    .text.UsageFault_Handler:00000000 UsageFault_Handler
    /tmp//ccr3RPcy.s:159    .text.DebugMon_Handler:00000000 $t
    /tmp//ccr3RPcy.s:165    .text.DebugMon_Handler:00000000 DebugMon_Handler
    /tmp//ccr3RPcy.s:194    .text.TIM1_UP_IRQHandler:00000000 $t
    /tmp//ccr3RPcy.s:200    .text.TIM1_UP_IRQHandler:00000000 TIM1_UP_IRQHandler
    /tmp//ccr3RPcy.s:223    .text.TIM1_UP_IRQHandler:00000010 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim1
