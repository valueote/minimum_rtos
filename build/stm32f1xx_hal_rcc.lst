ARM GAS  /tmp//ccNU2ilX.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c"
  18              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_RCC_DeInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_RCC_DeInit:
  26              	.LFB65:
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @file    stm32f1xx_hal_rcc.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled,
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS)
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /tmp//ccNU2ilX.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * Copyright (c) 2016 STMicroelectronics.
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * All rights reserved.
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * the root directory of this software component.
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #include "stm32f1xx_hal.h"
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @addtogroup STM32F1xx_HAL_Driver
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC RCC
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** * @brief RCC HAL module driver
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  * @{
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  */
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
ARM GAS  /tmp//ccNU2ilX.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay);
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and APB2).
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the PLL as System clock source.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source.
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 24 MHz (STM32F100xx) or 4 to 16 MHz (STM32F101x/STM32F102
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz for STM
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz)
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M3 NMI
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output SYSCLK, HSI,
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE or PLL clock (divided by 2) on PA8 pin + PLL2CLK, PLL3CLK/2, PLL3CLK and XTI for STM3
ARM GAS  /tmp//ccNU2ilX.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE and PLL.
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) RTC: RTC clock can be derived either from the LSI, LSE or HSE clock
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               divided by 128.
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) USB OTG FS and RTC: USB OTG FS require a frequency equal to 48 MHz
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               to work correctly. This clock is derived of the main PLL through PLL Multiplier.
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) I2S interface on STM32F105x/STM32F107x can be derived from PLL3CLK
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For STM32F10xxx, the maximum frequency of the SYSCLK and HCLK/PCLK2 is 72 MHz, PCLK1 36 M
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           For STM32F100xx, the maximum frequency of the SYSCLK and HCLK/PCLK1/PCLK2 is 24 MHz.
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSE, PLL, PLL2 and PLL3 are OFF
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - All interrupts disabled
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - All flags are cleared
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - Peripheral clocks
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL_StatusTypeDef
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
  27              		.loc 1 201 1
  28              		.cfi_startproc
ARM GAS  /tmp//ccNU2ilX.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart;
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  42              		.loc 1 205 15
  43 0006 FFF7FEFF 		bl	HAL_GetTick
  44 000a 7860     		str	r0, [r7, #4]
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set HSION bit */
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  45              		.loc 1 208 3
  46 000c 454B     		ldr	r3, .L12
  47 000e 1B68     		ldr	r3, [r3]
  48 0010 444A     		ldr	r2, .L12
  49 0012 43F00103 		orr	r3, r3, #1
  50 0016 1360     		str	r3, [r2]
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till HSI is ready */
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  51              		.loc 1 211 9
  52 0018 08E0     		b	.L2
  53              	.L4:
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  54              		.loc 1 213 10
  55 001a FFF7FEFF 		bl	HAL_GetTick
  56 001e 0246     		mov	r2, r0
  57              		.loc 1 213 24 discriminator 1
  58 0020 7B68     		ldr	r3, [r7, #4]
  59 0022 D31A     		subs	r3, r2, r3
  60              		.loc 1 213 8 discriminator 1
  61 0024 022B     		cmp	r3, #2
  62 0026 01D9     		bls	.L2
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
  63              		.loc 1 215 14
  64 0028 0323     		movs	r3, #3
  65 002a 77E0     		b	.L3
  66              	.L2:
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
  67              		.loc 1 211 10
  68 002c 3D4B     		ldr	r3, .L12
  69 002e 1B68     		ldr	r3, [r3]
  70 0030 03F00203 		and	r3, r3, #2
ARM GAS  /tmp//ccNU2ilX.s 			page 6


 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
  71              		.loc 1 211 43
  72 0034 002B     		cmp	r3, #0
  73 0036 F0D0     		beq	.L4
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set HSITRIM bits to the reset value */
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, (0x10U << RCC_CR_HSITRIM_Pos));
  74              		.loc 1 220 3
  75 0038 3A4B     		ldr	r3, .L12
  76 003a 1B68     		ldr	r3, [r3]
  77 003c 23F0F803 		bic	r3, r3, #248
  78 0040 384A     		ldr	r2, .L12
  79 0042 43F08003 		orr	r3, r3, #128
  80 0046 1360     		str	r3, [r2]
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  81              		.loc 1 223 15
  82 0048 FFF7FEFF 		bl	HAL_GetTick
  83 004c 7860     		str	r0, [r7, #4]
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR register */
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  84              		.loc 1 226 3
  85 004e 354B     		ldr	r3, .L12
  86 0050 0022     		movs	r2, #0
  87 0052 5A60     		str	r2, [r3, #4]
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
  88              		.loc 1 229 9
  89 0054 0AE0     		b	.L5
  90              	.L6:
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  91              		.loc 1 231 10
  92 0056 FFF7FEFF 		bl	HAL_GetTick
  93 005a 0246     		mov	r2, r0
  94              		.loc 1 231 24 discriminator 1
  95 005c 7B68     		ldr	r3, [r7, #4]
  96 005e D31A     		subs	r3, r2, r3
  97              		.loc 1 231 8 discriminator 1
  98 0060 41F28832 		movw	r2, #5000
  99 0064 9342     		cmp	r3, r2
 100 0066 01D9     		bls	.L5
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 101              		.loc 1 233 14
 102 0068 0323     		movs	r3, #3
 103 006a 57E0     		b	.L3
 104              	.L5:
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 105              		.loc 1 229 10
 106 006c 2D4B     		ldr	r3, .L12
 107 006e 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp//ccNU2ilX.s 			page 7


 108 0070 03F00C03 		and	r3, r3, #12
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 109              		.loc 1 229 44
 110 0074 002B     		cmp	r3, #0
 111 0076 EED1     		bne	.L6
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 112              		.loc 1 238 19
 113 0078 2B4B     		ldr	r3, .L12+4
 114 007a 2C4A     		ldr	r2, .L12+8
 115 007c 1A60     		str	r2, [r3]
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
 116              		.loc 1 241 7
 117 007e 2C4B     		ldr	r3, .L12+12
 118 0080 1B68     		ldr	r3, [r3]
 119 0082 1846     		mov	r0, r3
 120 0084 FFF7FEFF 		bl	HAL_InitTick
 121 0088 0346     		mov	r3, r0
 122              		.loc 1 241 6 discriminator 1
 123 008a 002B     		cmp	r3, #0
 124 008c 01D0     		beq	.L7
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 125              		.loc 1 243 12
 126 008e 0123     		movs	r3, #1
 127 0090 44E0     		b	.L3
 128              	.L7:
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 129              		.loc 1 247 15
 130 0092 FFF7FEFF 		bl	HAL_GetTick
 131 0096 7860     		str	r0, [r7, #4]
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Second step is to clear PLLON bit */
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
 132              		.loc 1 250 3
 133 0098 224B     		ldr	r3, .L12
 134 009a 1B68     		ldr	r3, [r3]
 135 009c 214A     		ldr	r2, .L12
 136 009e 23F08073 		bic	r3, r3, #16777216
 137 00a2 1360     		str	r3, [r2]
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 138              		.loc 1 253 9
 139 00a4 08E0     		b	.L8
 140              	.L9:
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 141              		.loc 1 255 10
ARM GAS  /tmp//ccNU2ilX.s 			page 8


 142 00a6 FFF7FEFF 		bl	HAL_GetTick
 143 00aa 0246     		mov	r2, r0
 144              		.loc 1 255 24 discriminator 1
 145 00ac 7B68     		ldr	r3, [r7, #4]
 146 00ae D31A     		subs	r3, r2, r3
 147              		.loc 1 255 8 discriminator 1
 148 00b0 022B     		cmp	r3, #2
 149 00b2 01D9     		bls	.L8
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 150              		.loc 1 257 14
 151 00b4 0323     		movs	r3, #3
 152 00b6 31E0     		b	.L3
 153              	.L8:
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 154              		.loc 1 253 10
 155 00b8 1A4B     		ldr	r3, .L12
 156 00ba 1B68     		ldr	r3, [r3]
 157 00bc 03F00073 		and	r3, r3, #33554432
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 158              		.loc 1 253 43
 159 00c0 002B     		cmp	r3, #0
 160 00c2 F0D1     		bne	.L9
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Ensure to reset PLLSRC and PLLMUL bits */
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 161              		.loc 1 262 3
 162 00c4 174B     		ldr	r3, .L12
 163 00c6 0022     		movs	r2, #0
 164 00c8 5A60     		str	r2, [r3, #4]
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 165              		.loc 1 265 15
 166 00ca FFF7FEFF 		bl	HAL_GetTick
 167 00ce 7860     		str	r0, [r7, #4]
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEON & CSSON bits */
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_CSSON);
 168              		.loc 1 268 3
 169 00d0 144B     		ldr	r3, .L12
 170 00d2 1B68     		ldr	r3, [r3]
 171 00d4 134A     		ldr	r2, .L12
 172 00d6 23F41023 		bic	r3, r3, #589824
 173 00da 1360     		str	r3, [r2]
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
 174              		.loc 1 271 9
 175 00dc 08E0     		b	.L10
 176              	.L11:
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 177              		.loc 1 273 10
 178 00de FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp//ccNU2ilX.s 			page 9


 179 00e2 0246     		mov	r2, r0
 180              		.loc 1 273 24 discriminator 1
 181 00e4 7B68     		ldr	r3, [r7, #4]
 182 00e6 D31A     		subs	r3, r2, r3
 183              		.loc 1 273 8 discriminator 1
 184 00e8 642B     		cmp	r3, #100
 185 00ea 01D9     		bls	.L10
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 186              		.loc 1 275 14
 187 00ec 0323     		movs	r3, #3
 188 00ee 15E0     		b	.L3
 189              	.L10:
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 190              		.loc 1 271 10
 191 00f0 0C4B     		ldr	r3, .L12
 192 00f2 1B68     		ldr	r3, [r3]
 193 00f4 03F40033 		and	r3, r3, #131072
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 194              		.loc 1 271 43
 195 00f8 002B     		cmp	r3, #0
 196 00fa F0D1     		bne	.L11
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 197              		.loc 1 280 3
 198 00fc 094B     		ldr	r3, .L12
 199 00fe 1B68     		ldr	r3, [r3]
 200 0100 084A     		ldr	r2, .L12
 201 0102 23F48023 		bic	r3, r3, #262144
 202 0106 1360     		str	r3, [r2]
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_PLL2_SUPPORT)
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Clear PLL2ON bit */
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL2ON);
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till PLL2 is disabled */
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL2RDY) != RESET)
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_PLL2_SUPPORT */
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_PLLI2S_SUPPORT)
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Clear PLL3ON bit */
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL3ON);
ARM GAS  /tmp//ccNU2ilX.s 			page 10


 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till PLL3 is disabled */
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL3RDY) != RESET)
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_PLLI2S_SUPPORT */
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR2 register */
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1 */
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset all CSR flags */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 203              		.loc 1 322 3
 204 0108 064B     		ldr	r3, .L12
 205 010a 5B6A     		ldr	r3, [r3, #36]
 206 010c 054A     		ldr	r2, .L12
 207 010e 43F08073 		orr	r3, r3, #16777216
 208 0112 5362     		str	r3, [r2, #36]
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Disable all interrupts */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 209              		.loc 1 325 3
 210 0114 034B     		ldr	r3, .L12
 211 0116 0022     		movs	r2, #0
 212 0118 9A60     		str	r2, [r3, #8]
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 213              		.loc 1 327 10
 214 011a 0023     		movs	r3, #0
 215              	.L3:
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 216              		.loc 1 328 1
 217 011c 1846     		mov	r0, r3
 218 011e 0837     		adds	r7, r7, #8
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221 0120 BD46     		mov	sp, r7
 222              	.LCFI4:
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 0122 80BD     		pop	{r7, pc}
 226              	.L13:
 227              		.align	2
 228              	.L12:
 229 0124 00100240 		.word	1073876992
 230 0128 00000000 		.word	SystemCoreClock
 231 012c 00127A00 		.word	8000000
 232 0130 00000000 		.word	uwTickPrio
 233              		.cfi_endproc
 234              	.LFE65:
 236              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
ARM GAS  /tmp//ccNU2ilX.s 			page 11


 237              		.align	1
 238              		.global	HAL_RCC_OscConfig
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 243              	HAL_RCC_OscConfig:
 244              	.LFB66:
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when USB OTG FS clock is enabled (specific to devices with USB 
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 245              		.loc 1 346 1
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 24
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              	.LCFI5:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 7, -8
 253              		.cfi_offset 14, -4
 254 0002 86B0     		sub	sp, sp, #24
 255              	.LCFI6:
 256              		.cfi_def_cfa_offset 32
 257 0004 00AF     		add	r7, sp, #0
 258              	.LCFI7:
 259              		.cfi_def_cfa_register 7
 260 0006 7860     		str	r0, [r7, #4]
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart;
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t pll_config;
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check Null pointer */
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (RCC_OscInitStruct == NULL)
 261              		.loc 1 351 6
 262 0008 7B68     		ldr	r3, [r7, #4]
 263 000a 002B     		cmp	r3, #0
 264 000c 01D1     		bne	.L15
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 265              		.loc 1 353 12
 266 000e 0123     		movs	r3, #1
 267 0010 72E2     		b	.L16
 268              	.L15:
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
ARM GAS  /tmp//ccNU2ilX.s 			page 12


 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 269              		.loc 1 360 26
 270 0012 7B68     		ldr	r3, [r7, #4]
 271 0014 1B68     		ldr	r3, [r3]
 272              		.loc 1 360 44
 273 0016 03F00103 		and	r3, r3, #1
 274              		.loc 1 360 6
 275 001a 002B     		cmp	r3, #0
 276 001c 00F08780 		beq	.L17
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 277              		.loc 1 366 10
 278 0020 924B     		ldr	r3, .L73
 279 0022 5B68     		ldr	r3, [r3, #4]
 280 0024 03F00C03 		and	r3, r3, #12
 281              		.loc 1 366 8
 282 0028 042B     		cmp	r3, #4
 283 002a 0CD0     		beq	.L18
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL
 284              		.loc 1 367 14
 285 002c 8F4B     		ldr	r3, .L73
 286 002e 5B68     		ldr	r3, [r3, #4]
 287 0030 03F00C03 		and	r3, r3, #12
 288              		.loc 1 367 9
 289 0034 082B     		cmp	r3, #8
 290 0036 12D1     		bne	.L19
 291              		.loc 1 367 83 discriminator 1
 292 0038 8C4B     		ldr	r3, .L73
 293 003a 5B68     		ldr	r3, [r3, #4]
 294 003c 03F48033 		and	r3, r3, #65536
 295              		.loc 1 367 79 discriminator 1
 296 0040 B3F5803F 		cmp	r3, #65536
 297 0044 0BD1     		bne	.L19
 298              	.L18:
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE
 299              		.loc 1 369 12
 300 0046 894B     		ldr	r3, .L73
 301 0048 1B68     		ldr	r3, [r3]
 302 004a 03F40033 		and	r3, r3, #131072
 303              		.loc 1 369 10
 304 004e 002B     		cmp	r3, #0
 305 0050 6CD0     		beq	.L72
 306              		.loc 1 369 79 discriminator 1
 307 0052 7B68     		ldr	r3, [r7, #4]
 308 0054 5B68     		ldr	r3, [r3, #4]
 309              		.loc 1 369 58 discriminator 1
 310 0056 002B     		cmp	r3, #0
ARM GAS  /tmp//ccNU2ilX.s 			page 13


 311 0058 68D1     		bne	.L72
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 312              		.loc 1 371 16
 313 005a 0123     		movs	r3, #1
 314 005c 4CE2     		b	.L16
 315              	.L19:
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 316              		.loc 1 377 7
 317 005e 7B68     		ldr	r3, [r7, #4]
 318 0060 5B68     		ldr	r3, [r3, #4]
 319 0062 B3F5803F 		cmp	r3, #65536
 320 0066 06D1     		bne	.L21
 321              		.loc 1 377 7 is_stmt 0 discriminator 1
 322 0068 804B     		ldr	r3, .L73
 323 006a 1B68     		ldr	r3, [r3]
 324 006c 7F4A     		ldr	r2, .L73
 325 006e 43F48033 		orr	r3, r3, #65536
 326 0072 1360     		str	r3, [r2]
 327 0074 2EE0     		b	.L22
 328              	.L21:
 329              		.loc 1 377 7 discriminator 2
 330 0076 7B68     		ldr	r3, [r7, #4]
 331 0078 5B68     		ldr	r3, [r3, #4]
 332 007a 002B     		cmp	r3, #0
 333 007c 0CD1     		bne	.L23
 334              		.loc 1 377 7 discriminator 3
 335 007e 7B4B     		ldr	r3, .L73
 336 0080 1B68     		ldr	r3, [r3]
 337 0082 7A4A     		ldr	r2, .L73
 338 0084 23F48033 		bic	r3, r3, #65536
 339 0088 1360     		str	r3, [r2]
 340 008a 784B     		ldr	r3, .L73
 341 008c 1B68     		ldr	r3, [r3]
 342 008e 774A     		ldr	r2, .L73
 343 0090 23F48023 		bic	r3, r3, #262144
 344 0094 1360     		str	r3, [r2]
 345 0096 1DE0     		b	.L22
 346              	.L23:
 347              		.loc 1 377 7 discriminator 4
 348 0098 7B68     		ldr	r3, [r7, #4]
 349 009a 5B68     		ldr	r3, [r3, #4]
 350 009c B3F5A02F 		cmp	r3, #327680
 351 00a0 0CD1     		bne	.L24
 352              		.loc 1 377 7 discriminator 5
 353 00a2 724B     		ldr	r3, .L73
 354 00a4 1B68     		ldr	r3, [r3]
 355 00a6 714A     		ldr	r2, .L73
 356 00a8 43F48023 		orr	r3, r3, #262144
 357 00ac 1360     		str	r3, [r2]
 358 00ae 6F4B     		ldr	r3, .L73
 359 00b0 1B68     		ldr	r3, [r3]
ARM GAS  /tmp//ccNU2ilX.s 			page 14


 360 00b2 6E4A     		ldr	r2, .L73
 361 00b4 43F48033 		orr	r3, r3, #65536
 362 00b8 1360     		str	r3, [r2]
 363 00ba 0BE0     		b	.L22
 364              	.L24:
 365              		.loc 1 377 7 discriminator 6
 366 00bc 6B4B     		ldr	r3, .L73
 367 00be 1B68     		ldr	r3, [r3]
 368 00c0 6A4A     		ldr	r2, .L73
 369 00c2 23F48033 		bic	r3, r3, #65536
 370 00c6 1360     		str	r3, [r2]
 371 00c8 684B     		ldr	r3, .L73
 372 00ca 1B68     		ldr	r3, [r3]
 373 00cc 674A     		ldr	r2, .L73
 374 00ce 23F48023 		bic	r3, r3, #262144
 375 00d2 1360     		str	r3, [r2]
 376              	.L22:
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSE State */
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 377              		.loc 1 381 28 is_stmt 1
 378 00d4 7B68     		ldr	r3, [r7, #4]
 379 00d6 5B68     		ldr	r3, [r3, #4]
 380              		.loc 1 381 10
 381 00d8 002B     		cmp	r3, #0
 382 00da 13D0     		beq	.L25
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 383              		.loc 1 384 21
 384 00dc FFF7FEFF 		bl	HAL_GetTick
 385 00e0 3861     		str	r0, [r7, #16]
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is ready */
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 386              		.loc 1 387 15
 387 00e2 08E0     		b	.L26
 388              	.L27:
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 389              		.loc 1 389 16
 390 00e4 FFF7FEFF 		bl	HAL_GetTick
 391 00e8 0246     		mov	r2, r0
 392              		.loc 1 389 30 discriminator 1
 393 00ea 3B69     		ldr	r3, [r7, #16]
 394 00ec D31A     		subs	r3, r2, r3
 395              		.loc 1 389 14 discriminator 1
 396 00ee 642B     		cmp	r3, #100
 397 00f0 01D9     		bls	.L26
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 398              		.loc 1 391 20
 399 00f2 0323     		movs	r3, #3
 400 00f4 00E2     		b	.L16
 401              	.L26:
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
ARM GAS  /tmp//ccNU2ilX.s 			page 15


 402              		.loc 1 387 16
 403 00f6 5D4B     		ldr	r3, .L73
 404 00f8 1B68     		ldr	r3, [r3]
 405 00fa 03F40033 		and	r3, r3, #131072
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 406              		.loc 1 387 52
 407 00fe 002B     		cmp	r3, #0
 408 0100 F0D0     		beq	.L27
 409 0102 14E0     		b	.L17
 410              	.L25:
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 411              		.loc 1 398 21
 412 0104 FFF7FEFF 		bl	HAL_GetTick
 413 0108 3861     		str	r0, [r7, #16]
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 414              		.loc 1 401 15
 415 010a 08E0     		b	.L28
 416              	.L29:
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 417              		.loc 1 403 16
 418 010c FFF7FEFF 		bl	HAL_GetTick
 419 0110 0246     		mov	r2, r0
 420              		.loc 1 403 30 discriminator 1
 421 0112 3B69     		ldr	r3, [r7, #16]
 422 0114 D31A     		subs	r3, r2, r3
 423              		.loc 1 403 14 discriminator 1
 424 0116 642B     		cmp	r3, #100
 425 0118 01D9     		bls	.L28
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 426              		.loc 1 405 20
 427 011a 0323     		movs	r3, #3
 428 011c ECE1     		b	.L16
 429              	.L28:
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 430              		.loc 1 401 16
 431 011e 534B     		ldr	r3, .L73
 432 0120 1B68     		ldr	r3, [r3]
 433 0122 03F40033 		and	r3, r3, #131072
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 434              		.loc 1 401 52
 435 0126 002B     		cmp	r3, #0
 436 0128 F0D1     		bne	.L29
 437 012a 00E0     		b	.L17
 438              	.L72:
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 439              		.loc 1 369 10
 440 012c 00BF     		nop
ARM GAS  /tmp//ccNU2ilX.s 			page 16


 441              	.L17:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 442              		.loc 1 412 26
 443 012e 7B68     		ldr	r3, [r7, #4]
 444 0130 1B68     		ldr	r3, [r3]
 445              		.loc 1 412 44
 446 0132 03F00203 		and	r3, r3, #2
 447              		.loc 1 412 6
 448 0136 002B     		cmp	r3, #0
 449 0138 63D0     		beq	.L30
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 450              		.loc 1 419 10
 451 013a 4C4B     		ldr	r3, .L73
 452 013c 5B68     		ldr	r3, [r3, #4]
 453 013e 03F00C03 		and	r3, r3, #12
 454              		.loc 1 419 8
 455 0142 002B     		cmp	r3, #0
 456 0144 0BD0     		beq	.L31
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL
 457              		.loc 1 420 14
 458 0146 494B     		ldr	r3, .L73
 459 0148 5B68     		ldr	r3, [r3, #4]
 460 014a 03F00C03 		and	r3, r3, #12
 461              		.loc 1 420 9
 462 014e 082B     		cmp	r3, #8
 463 0150 1CD1     		bne	.L32
 464              		.loc 1 420 83 discriminator 1
 465 0152 464B     		ldr	r3, .L73
 466 0154 5B68     		ldr	r3, [r3, #4]
 467 0156 03F48033 		and	r3, r3, #65536
 468              		.loc 1 420 79 discriminator 1
 469 015a 002B     		cmp	r3, #0
 470 015c 16D1     		bne	.L32
 471              	.L31:
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI
 472              		.loc 1 423 12
 473 015e 434B     		ldr	r3, .L73
 474 0160 1B68     		ldr	r3, [r3]
 475 0162 03F00203 		and	r3, r3, #2
 476              		.loc 1 423 10
 477 0166 002B     		cmp	r3, #0
 478 0168 05D0     		beq	.L33
 479              		.loc 1 423 79 discriminator 1
ARM GAS  /tmp//ccNU2ilX.s 			page 17


 480 016a 7B68     		ldr	r3, [r7, #4]
 481 016c 1B69     		ldr	r3, [r3, #16]
 482              		.loc 1 423 58 discriminator 1
 483 016e 012B     		cmp	r3, #1
 484 0170 01D0     		beq	.L33
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 485              		.loc 1 425 16
 486 0172 0123     		movs	r3, #1
 487 0174 C0E1     		b	.L16
 488              	.L33:
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 489              		.loc 1 431 9
 490 0176 3D4B     		ldr	r3, .L73
 491 0178 1B68     		ldr	r3, [r3]
 492 017a 23F0F802 		bic	r2, r3, #248
 493 017e 7B68     		ldr	r3, [r7, #4]
 494 0180 5B69     		ldr	r3, [r3, #20]
 495 0182 DB00     		lsls	r3, r3, #3
 496 0184 3949     		ldr	r1, .L73
 497 0186 1343     		orrs	r3, r3, r2
 498 0188 0B60     		str	r3, [r1]
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 499              		.loc 1 423 10
 500 018a 3AE0     		b	.L30
 501              	.L32:
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI State */
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 502              		.loc 1 437 28
 503 018c 7B68     		ldr	r3, [r7, #4]
 504 018e 1B69     		ldr	r3, [r3, #16]
 505              		.loc 1 437 10
 506 0190 002B     		cmp	r3, #0
 507 0192 20D0     		beq	.L34
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 508              		.loc 1 440 9
 509 0194 364B     		ldr	r3, .L73+4
 510 0196 0122     		movs	r2, #1
 511 0198 1A60     		str	r2, [r3]
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 512              		.loc 1 443 21
 513 019a FFF7FEFF 		bl	HAL_GetTick
 514 019e 3861     		str	r0, [r7, #16]
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /tmp//ccNU2ilX.s 			page 18


 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is ready */
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 515              		.loc 1 446 15
 516 01a0 08E0     		b	.L35
 517              	.L36:
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 518              		.loc 1 448 16
 519 01a2 FFF7FEFF 		bl	HAL_GetTick
 520 01a6 0246     		mov	r2, r0
 521              		.loc 1 448 30 discriminator 1
 522 01a8 3B69     		ldr	r3, [r7, #16]
 523 01aa D31A     		subs	r3, r2, r3
 524              		.loc 1 448 14 discriminator 1
 525 01ac 022B     		cmp	r3, #2
 526 01ae 01D9     		bls	.L35
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 527              		.loc 1 450 20
 528 01b0 0323     		movs	r3, #3
 529 01b2 A1E1     		b	.L16
 530              	.L35:
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 531              		.loc 1 446 16
 532 01b4 2D4B     		ldr	r3, .L73
 533 01b6 1B68     		ldr	r3, [r3]
 534 01b8 03F00203 		and	r3, r3, #2
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 535              		.loc 1 446 52
 536 01bc 002B     		cmp	r3, #0
 537 01be F0D0     		beq	.L36
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 538              		.loc 1 455 9
 539 01c0 2A4B     		ldr	r3, .L73
 540 01c2 1B68     		ldr	r3, [r3]
 541 01c4 23F0F802 		bic	r2, r3, #248
 542 01c8 7B68     		ldr	r3, [r7, #4]
 543 01ca 5B69     		ldr	r3, [r3, #20]
 544 01cc DB00     		lsls	r3, r3, #3
 545 01ce 2749     		ldr	r1, .L73
 546 01d0 1343     		orrs	r3, r3, r2
 547 01d2 0B60     		str	r3, [r1]
 548 01d4 15E0     		b	.L30
 549              	.L34:
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 550              		.loc 1 460 9
 551 01d6 264B     		ldr	r3, .L73+4
 552 01d8 0022     		movs	r2, #0
 553 01da 1A60     		str	r2, [r3]
ARM GAS  /tmp//ccNU2ilX.s 			page 19


 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 554              		.loc 1 463 21
 555 01dc FFF7FEFF 		bl	HAL_GetTick
 556 01e0 3861     		str	r0, [r7, #16]
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 557              		.loc 1 466 15
 558 01e2 08E0     		b	.L37
 559              	.L38:
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 560              		.loc 1 468 16
 561 01e4 FFF7FEFF 		bl	HAL_GetTick
 562 01e8 0246     		mov	r2, r0
 563              		.loc 1 468 30 discriminator 1
 564 01ea 3B69     		ldr	r3, [r7, #16]
 565 01ec D31A     		subs	r3, r2, r3
 566              		.loc 1 468 14 discriminator 1
 567 01ee 022B     		cmp	r3, #2
 568 01f0 01D9     		bls	.L37
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 569              		.loc 1 470 20
 570 01f2 0323     		movs	r3, #3
 571 01f4 80E1     		b	.L16
 572              	.L37:
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 573              		.loc 1 466 16
 574 01f6 1D4B     		ldr	r3, .L73
 575 01f8 1B68     		ldr	r3, [r3]
 576 01fa 03F00203 		and	r3, r3, #2
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 577              		.loc 1 466 52
 578 01fe 002B     		cmp	r3, #0
 579 0200 F0D1     		bne	.L38
 580              	.L30:
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 581              		.loc 1 477 26
 582 0202 7B68     		ldr	r3, [r7, #4]
 583 0204 1B68     		ldr	r3, [r3]
 584              		.loc 1 477 44
 585 0206 03F00803 		and	r3, r3, #8
 586              		.loc 1 477 6
 587 020a 002B     		cmp	r3, #0
 588 020c 3AD0     		beq	.L39
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
ARM GAS  /tmp//ccNU2ilX.s 			page 20


 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSI State */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 589              		.loc 1 483 26
 590 020e 7B68     		ldr	r3, [r7, #4]
 591 0210 9B69     		ldr	r3, [r3, #24]
 592              		.loc 1 483 8
 593 0212 002B     		cmp	r3, #0
 594 0214 19D0     		beq	.L40
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 595              		.loc 1 486 7
 596 0216 174B     		ldr	r3, .L73+8
 597 0218 0122     		movs	r2, #1
 598 021a 1A60     		str	r2, [r3]
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 599              		.loc 1 489 19
 600 021c FFF7FEFF 		bl	HAL_GetTick
 601 0220 3861     		str	r0, [r7, #16]
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is ready */
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 602              		.loc 1 492 13
 603 0222 08E0     		b	.L41
 604              	.L42:
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 605              		.loc 1 494 14
 606 0224 FFF7FEFF 		bl	HAL_GetTick
 607 0228 0246     		mov	r2, r0
 608              		.loc 1 494 28 discriminator 1
 609 022a 3B69     		ldr	r3, [r7, #16]
 610 022c D31A     		subs	r3, r2, r3
 611              		.loc 1 494 12 discriminator 1
 612 022e 022B     		cmp	r3, #2
 613 0230 01D9     		bls	.L41
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 614              		.loc 1 496 18
 615 0232 0323     		movs	r3, #3
 616 0234 60E1     		b	.L16
 617              	.L41:
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 618              		.loc 1 492 14
 619 0236 0D4B     		ldr	r3, .L73
 620 0238 5B6A     		ldr	r3, [r3, #36]
 621 023a 03F00203 		and	r3, r3, #2
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 622              		.loc 1 492 50
 623 023e 002B     		cmp	r3, #0
 624 0240 F0D0     		beq	.L42
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
ARM GAS  /tmp//ccNU2ilX.s 			page 21


 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           should be added.*/
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       RCC_Delay(1);
 625              		.loc 1 501 7
 626 0242 0120     		movs	r0, #1
 627 0244 FFF7FEFF 		bl	RCC_Delay
 628 0248 1CE0     		b	.L39
 629              	.L40:
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 630              		.loc 1 506 7
 631 024a 0A4B     		ldr	r3, .L73+8
 632 024c 0022     		movs	r2, #0
 633 024e 1A60     		str	r2, [r3]
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 634              		.loc 1 509 19
 635 0250 FFF7FEFF 		bl	HAL_GetTick
 636 0254 3861     		str	r0, [r7, #16]
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 637              		.loc 1 512 13
 638 0256 0FE0     		b	.L43
 639              	.L44:
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 640              		.loc 1 514 14
 641 0258 FFF7FEFF 		bl	HAL_GetTick
 642 025c 0246     		mov	r2, r0
 643              		.loc 1 514 28 discriminator 1
 644 025e 3B69     		ldr	r3, [r7, #16]
 645 0260 D31A     		subs	r3, r2, r3
 646              		.loc 1 514 12 discriminator 1
 647 0262 022B     		cmp	r3, #2
 648 0264 08D9     		bls	.L43
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 649              		.loc 1 516 18
 650 0266 0323     		movs	r3, #3
 651 0268 46E1     		b	.L16
 652              	.L74:
 653 026a 00BF     		.align	2
 654              	.L73:
 655 026c 00100240 		.word	1073876992
 656 0270 00004242 		.word	1111621632
 657 0274 80044242 		.word	1111622784
 658              	.L43:
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 659              		.loc 1 512 14
 660 0278 924B     		ldr	r3, .L75
 661 027a 5B6A     		ldr	r3, [r3, #36]
 662 027c 03F00203 		and	r3, r3, #2
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
ARM GAS  /tmp//ccNU2ilX.s 			page 22


 663              		.loc 1 512 50
 664 0280 002B     		cmp	r3, #0
 665 0282 E9D1     		bne	.L44
 666              	.L39:
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 667              		.loc 1 522 26
 668 0284 7B68     		ldr	r3, [r7, #4]
 669 0286 1B68     		ldr	r3, [r3]
 670              		.loc 1 522 44
 671 0288 03F00403 		and	r3, r3, #4
 672              		.loc 1 522 6
 673 028c 002B     		cmp	r3, #0
 674 028e 00F0A680 		beq	.L45
 675              	.LBB2:
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 676              		.loc 1 524 22
 677 0292 0023     		movs	r3, #0
 678 0294 FB75     		strb	r3, [r7, #23]
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 679              		.loc 1 531 9
 680 0296 8B4B     		ldr	r3, .L75
 681 0298 DB69     		ldr	r3, [r3, #28]
 682 029a 03F08053 		and	r3, r3, #268435456
 683              		.loc 1 531 8
 684 029e 002B     		cmp	r3, #0
 685 02a0 0DD1     		bne	.L46
 686              	.LBB3:
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 687              		.loc 1 533 7
 688 02a2 884B     		ldr	r3, .L75
 689 02a4 DB69     		ldr	r3, [r3, #28]
 690 02a6 874A     		ldr	r2, .L75
 691 02a8 43F08053 		orr	r3, r3, #268435456
 692 02ac D361     		str	r3, [r2, #28]
 693 02ae 854B     		ldr	r3, .L75
 694 02b0 DB69     		ldr	r3, [r3, #28]
 695 02b2 03F08053 		and	r3, r3, #268435456
 696 02b6 BB60     		str	r3, [r7, #8]
 697 02b8 BB68     		ldr	r3, [r7, #8]
 698              	.LBE3:
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pwrclkchanged = SET;
 699              		.loc 1 534 21
 700 02ba 0123     		movs	r3, #1
 701 02bc FB75     		strb	r3, [r7, #23]
ARM GAS  /tmp//ccNU2ilX.s 			page 23


 702              	.L46:
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 703              		.loc 1 537 9
 704 02be 824B     		ldr	r3, .L75+4
 705 02c0 1B68     		ldr	r3, [r3]
 706 02c2 03F48073 		and	r3, r3, #256
 707              		.loc 1 537 8
 708 02c6 002B     		cmp	r3, #0
 709 02c8 18D1     		bne	.L47
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 710              		.loc 1 540 7
 711 02ca 7F4B     		ldr	r3, .L75+4
 712 02cc 1B68     		ldr	r3, [r3]
 713 02ce 7E4A     		ldr	r2, .L75+4
 714 02d0 43F48073 		orr	r3, r3, #256
 715 02d4 1360     		str	r3, [r2]
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 716              		.loc 1 543 19
 717 02d6 FFF7FEFF 		bl	HAL_GetTick
 718 02da 3861     		str	r0, [r7, #16]
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 719              		.loc 1 545 13
 720 02dc 08E0     		b	.L48
 721              	.L49:
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 722              		.loc 1 547 14
 723 02de FFF7FEFF 		bl	HAL_GetTick
 724 02e2 0246     		mov	r2, r0
 725              		.loc 1 547 28 discriminator 1
 726 02e4 3B69     		ldr	r3, [r7, #16]
 727 02e6 D31A     		subs	r3, r2, r3
 728              		.loc 1 547 12 discriminator 1
 729 02e8 642B     		cmp	r3, #100
 730 02ea 01D9     		bls	.L48
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 731              		.loc 1 549 18
 732 02ec 0323     		movs	r3, #3
 733 02ee 03E1     		b	.L16
 734              	.L48:
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 735              		.loc 1 545 14
 736 02f0 754B     		ldr	r3, .L75+4
 737 02f2 1B68     		ldr	r3, [r3]
 738 02f4 03F48073 		and	r3, r3, #256
 739 02f8 002B     		cmp	r3, #0
 740 02fa F0D0     		beq	.L49
 741              	.L47:
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
ARM GAS  /tmp//ccNU2ilX.s 			page 24


 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 742              		.loc 1 555 5
 743 02fc 7B68     		ldr	r3, [r7, #4]
 744 02fe DB68     		ldr	r3, [r3, #12]
 745 0300 012B     		cmp	r3, #1
 746 0302 06D1     		bne	.L50
 747              		.loc 1 555 5 is_stmt 0 discriminator 1
 748 0304 6F4B     		ldr	r3, .L75
 749 0306 1B6A     		ldr	r3, [r3, #32]
 750 0308 6E4A     		ldr	r2, .L75
 751 030a 43F00103 		orr	r3, r3, #1
 752 030e 1362     		str	r3, [r2, #32]
 753 0310 2DE0     		b	.L51
 754              	.L50:
 755              		.loc 1 555 5 discriminator 2
 756 0312 7B68     		ldr	r3, [r7, #4]
 757 0314 DB68     		ldr	r3, [r3, #12]
 758 0316 002B     		cmp	r3, #0
 759 0318 0CD1     		bne	.L52
 760              		.loc 1 555 5 discriminator 3
 761 031a 6A4B     		ldr	r3, .L75
 762 031c 1B6A     		ldr	r3, [r3, #32]
 763 031e 694A     		ldr	r2, .L75
 764 0320 23F00103 		bic	r3, r3, #1
 765 0324 1362     		str	r3, [r2, #32]
 766 0326 674B     		ldr	r3, .L75
 767 0328 1B6A     		ldr	r3, [r3, #32]
 768 032a 664A     		ldr	r2, .L75
 769 032c 23F00403 		bic	r3, r3, #4
 770 0330 1362     		str	r3, [r2, #32]
 771 0332 1CE0     		b	.L51
 772              	.L52:
 773              		.loc 1 555 5 discriminator 4
 774 0334 7B68     		ldr	r3, [r7, #4]
 775 0336 DB68     		ldr	r3, [r3, #12]
 776 0338 052B     		cmp	r3, #5
 777 033a 0CD1     		bne	.L53
 778              		.loc 1 555 5 discriminator 5
 779 033c 614B     		ldr	r3, .L75
 780 033e 1B6A     		ldr	r3, [r3, #32]
 781 0340 604A     		ldr	r2, .L75
 782 0342 43F00403 		orr	r3, r3, #4
 783 0346 1362     		str	r3, [r2, #32]
 784 0348 5E4B     		ldr	r3, .L75
 785 034a 1B6A     		ldr	r3, [r3, #32]
 786 034c 5D4A     		ldr	r2, .L75
 787 034e 43F00103 		orr	r3, r3, #1
 788 0352 1362     		str	r3, [r2, #32]
 789 0354 0BE0     		b	.L51
 790              	.L53:
 791              		.loc 1 555 5 discriminator 6
 792 0356 5B4B     		ldr	r3, .L75
 793 0358 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /tmp//ccNU2ilX.s 			page 25


 794 035a 5A4A     		ldr	r2, .L75
 795 035c 23F00103 		bic	r3, r3, #1
 796 0360 1362     		str	r3, [r2, #32]
 797 0362 584B     		ldr	r3, .L75
 798 0364 1B6A     		ldr	r3, [r3, #32]
 799 0366 574A     		ldr	r2, .L75
 800 0368 23F00403 		bic	r3, r3, #4
 801 036c 1362     		str	r3, [r2, #32]
 802              	.L51:
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 803              		.loc 1 557 26 is_stmt 1
 804 036e 7B68     		ldr	r3, [r7, #4]
 805 0370 DB68     		ldr	r3, [r3, #12]
 806              		.loc 1 557 8
 807 0372 002B     		cmp	r3, #0
 808 0374 15D0     		beq	.L54
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 809              		.loc 1 560 19
 810 0376 FFF7FEFF 		bl	HAL_GetTick
 811 037a 3861     		str	r0, [r7, #16]
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is ready */
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 812              		.loc 1 563 13
 813 037c 0AE0     		b	.L55
 814              	.L56:
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 815              		.loc 1 565 14
 816 037e FFF7FEFF 		bl	HAL_GetTick
 817 0382 0246     		mov	r2, r0
 818              		.loc 1 565 28 discriminator 1
 819 0384 3B69     		ldr	r3, [r7, #16]
 820 0386 D31A     		subs	r3, r2, r3
 821              		.loc 1 565 12 discriminator 1
 822 0388 41F28832 		movw	r2, #5000
 823 038c 9342     		cmp	r3, r2
 824 038e 01D9     		bls	.L55
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 825              		.loc 1 567 18
 826 0390 0323     		movs	r3, #3
 827 0392 B1E0     		b	.L16
 828              	.L55:
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 829              		.loc 1 563 14
 830 0394 4B4B     		ldr	r3, .L75
 831 0396 1B6A     		ldr	r3, [r3, #32]
 832 0398 03F00203 		and	r3, r3, #2
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 833              		.loc 1 563 50
 834 039c 002B     		cmp	r3, #0
 835 039e EED0     		beq	.L56
 836 03a0 14E0     		b	.L57
ARM GAS  /tmp//ccNU2ilX.s 			page 26


 837              	.L54:
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 838              		.loc 1 574 19
 839 03a2 FFF7FEFF 		bl	HAL_GetTick
 840 03a6 3861     		str	r0, [r7, #16]
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 841              		.loc 1 577 13
 842 03a8 0AE0     		b	.L58
 843              	.L59:
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 844              		.loc 1 579 14
 845 03aa FFF7FEFF 		bl	HAL_GetTick
 846 03ae 0246     		mov	r2, r0
 847              		.loc 1 579 28 discriminator 1
 848 03b0 3B69     		ldr	r3, [r7, #16]
 849 03b2 D31A     		subs	r3, r2, r3
 850              		.loc 1 579 12 discriminator 1
 851 03b4 41F28832 		movw	r2, #5000
 852 03b8 9342     		cmp	r3, r2
 853 03ba 01D9     		bls	.L58
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 854              		.loc 1 581 18
 855 03bc 0323     		movs	r3, #3
 856 03be 9BE0     		b	.L16
 857              	.L58:
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 858              		.loc 1 577 14
 859 03c0 404B     		ldr	r3, .L75
 860 03c2 1B6A     		ldr	r3, [r3, #32]
 861 03c4 03F00203 		and	r3, r3, #2
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 862              		.loc 1 577 50
 863 03c8 002B     		cmp	r3, #0
 864 03ca EED1     		bne	.L59
 865              	.L57:
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (pwrclkchanged == SET)
 866              		.loc 1 587 8
 867 03cc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 868 03ce 012B     		cmp	r3, #1
 869 03d0 05D1     		bne	.L45
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
ARM GAS  /tmp//ccNU2ilX.s 			page 27


 870              		.loc 1 589 7
 871 03d2 3C4B     		ldr	r3, .L75
 872 03d4 DB69     		ldr	r3, [r3, #28]
 873 03d6 3B4A     		ldr	r2, .L75
 874 03d8 23F08053 		bic	r3, r3, #268435456
 875 03dc D361     		str	r3, [r2, #28]
 876              	.L45:
 877              	.LBE2:
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL2 Configuration -----------------------*/
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL2(RCC_OscInitStruct->PLL2.PLL2State));
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL2.PLL2State) != RCC_PLL2_NONE)
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* This bit can not be cleared if the PLL2 clock is used indirectly as system
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       clock (i.e. it is used as PLL clock entry that is used as system clock). */
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE) && \
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && \
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         ((READ_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC)) == RCC_CFGR2_PREDIV1SRC_PLL2))
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL2.PLL2State) == RCC_PLL2_ON)
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL2_MUL(RCC_OscInitStruct->PLL2.PLL2MUL));
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_HSE_PREDIV2(RCC_OscInitStruct->PLL2.HSEPrediv2Value));
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Prediv2 can be written only when the PLLI2S is disabled. */
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Return an error only if new value is different from the programmed value */
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3ON) && \
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             (__HAL_RCC_HSE_GET_PREDIV2() != RCC_OscInitStruct->PLL2.HSEPrediv2Value))
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != RESET)
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv2 factor --------------------------------*/
ARM GAS  /tmp//ccNU2ilX.s 			page 28


 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_OscInitStruct->PLL2.HSEPrediv2Value);
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL2 multiplication factors. */
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_CONFIG(RCC_OscInitStruct->PLL2.PLL2MUL);
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL2. */
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_ENABLE();
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is ready */
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  == RESET)
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Set PREDIV1 source to HSE */
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         CLEAR_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  != RESET)
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 878              		.loc 1 686 30
 879 03de 7B68     		ldr	r3, [r7, #4]
 880 03e0 DB69     		ldr	r3, [r3, #28]
 881              		.loc 1 686 6
 882 03e2 002B     		cmp	r3, #0
 883 03e4 00F08780 		beq	.L60
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
ARM GAS  /tmp//ccNU2ilX.s 			page 29


 884              		.loc 1 689 9
 885 03e8 364B     		ldr	r3, .L75
 886 03ea 5B68     		ldr	r3, [r3, #4]
 887 03ec 03F00C03 		and	r3, r3, #12
 888              		.loc 1 689 8
 889 03f0 082B     		cmp	r3, #8
 890 03f2 61D0     		beq	.L61
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 891              		.loc 1 691 34
 892 03f4 7B68     		ldr	r3, [r7, #4]
 893 03f6 DB69     		ldr	r3, [r3, #28]
 894              		.loc 1 691 10
 895 03f8 022B     		cmp	r3, #2
 896 03fa 46D1     		bne	.L62
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 897              		.loc 1 698 9
 898 03fc 334B     		ldr	r3, .L75+8
 899 03fe 0022     		movs	r2, #0
 900 0400 1A60     		str	r2, [r3]
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 901              		.loc 1 701 21
 902 0402 FFF7FEFF 		bl	HAL_GetTick
 903 0406 3861     		str	r0, [r7, #16]
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 904              		.loc 1 704 15
 905 0408 08E0     		b	.L63
 906              	.L64:
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 907              		.loc 1 706 16
 908 040a FFF7FEFF 		bl	HAL_GetTick
 909 040e 0246     		mov	r2, r0
 910              		.loc 1 706 30 discriminator 1
 911 0410 3B69     		ldr	r3, [r7, #16]
 912 0412 D31A     		subs	r3, r2, r3
 913              		.loc 1 706 14 discriminator 1
 914 0414 022B     		cmp	r3, #2
 915 0416 01D9     		bls	.L63
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 916              		.loc 1 708 20
 917 0418 0323     		movs	r3, #3
 918 041a 6DE0     		b	.L16
 919              	.L63:
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 920              		.loc 1 704 16
ARM GAS  /tmp//ccNU2ilX.s 			page 30


 921 041c 294B     		ldr	r3, .L75
 922 041e 1B68     		ldr	r3, [r3]
 923 0420 03F00073 		and	r3, r3, #33554432
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 924              		.loc 1 704 53
 925 0424 002B     		cmp	r3, #0
 926 0426 F0D1     		bne	.L64
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv factor --------------------------------*/
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* It can be written only when the PLL is disabled. Not used in PLL source is different tha
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 927              		.loc 1 714 35
 928 0428 7B68     		ldr	r3, [r7, #4]
 929 042a 1B6A     		ldr	r3, [r3, #32]
 930              		.loc 1 714 12
 931 042c B3F5803F 		cmp	r3, #65536
 932 0430 08D1     		bne	.L65
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Check the parameter */
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_HSE_PREDIV(RCC_OscInitStruct->HSEPredivValue));
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_PREDIV1_SOURCE(RCC_OscInitStruct->Prediv1Source));
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 source */
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 Value */
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 933              		.loc 1 726 11
 934 0432 244B     		ldr	r3, .L75
 935 0434 5B68     		ldr	r3, [r3, #4]
 936 0436 23F40032 		bic	r2, r3, #131072
 937 043a 7B68     		ldr	r3, [r7, #4]
 938 043c 9B68     		ldr	r3, [r3, #8]
 939 043e 2149     		ldr	r1, .L75
 940 0440 1343     		orrs	r3, r3, r2
 941 0442 4B60     		str	r3, [r1, #4]
 942              	.L65:
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL clock source and multiplication factors. */
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 943              		.loc 1 730 9
 944 0444 1F4B     		ldr	r3, .L75
 945 0446 5B68     		ldr	r3, [r3, #4]
 946 0448 23F47412 		bic	r2, r3, #3997696
 947 044c 7B68     		ldr	r3, [r7, #4]
 948 044e 196A     		ldr	r1, [r3, #32]
 949 0450 7B68     		ldr	r3, [r7, #4]
 950 0452 5B6A     		ldr	r3, [r3, #36]
 951 0454 0B43     		orrs	r3, r3, r1
 952 0456 1B49     		ldr	r1, .L75
 953 0458 1343     		orrs	r3, r3, r2
 954 045a 4B60     		str	r3, [r1, #4]
ARM GAS  /tmp//ccNU2ilX.s 			page 31


 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL. */
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 955              		.loc 1 733 9
 956 045c 1B4B     		ldr	r3, .L75+8
 957 045e 0122     		movs	r2, #1
 958 0460 1A60     		str	r2, [r3]
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 959              		.loc 1 736 21
 960 0462 FFF7FEFF 		bl	HAL_GetTick
 961 0466 3861     		str	r0, [r7, #16]
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is ready */
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 962              		.loc 1 739 15
 963 0468 08E0     		b	.L66
 964              	.L67:
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 965              		.loc 1 741 16
 966 046a FFF7FEFF 		bl	HAL_GetTick
 967 046e 0246     		mov	r2, r0
 968              		.loc 1 741 30 discriminator 1
 969 0470 3B69     		ldr	r3, [r7, #16]
 970 0472 D31A     		subs	r3, r2, r3
 971              		.loc 1 741 14 discriminator 1
 972 0474 022B     		cmp	r3, #2
 973 0476 01D9     		bls	.L66
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 974              		.loc 1 743 20
 975 0478 0323     		movs	r3, #3
 976 047a 3DE0     		b	.L16
 977              	.L66:
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 978              		.loc 1 739 16
 979 047c 114B     		ldr	r3, .L75
 980 047e 1B68     		ldr	r3, [r3]
 981 0480 03F00073 		and	r3, r3, #33554432
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 982              		.loc 1 739 53
 983 0484 002B     		cmp	r3, #0
 984 0486 F0D0     		beq	.L67
 985 0488 35E0     		b	.L60
 986              	.L62:
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 987              		.loc 1 750 9
 988 048a 104B     		ldr	r3, .L75+8
 989 048c 0022     		movs	r2, #0
ARM GAS  /tmp//ccNU2ilX.s 			page 32


 990 048e 1A60     		str	r2, [r3]
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 991              		.loc 1 753 21
 992 0490 FFF7FEFF 		bl	HAL_GetTick
 993 0494 3861     		str	r0, [r7, #16]
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 994              		.loc 1 756 15
 995 0496 08E0     		b	.L68
 996              	.L69:
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 997              		.loc 1 758 16
 998 0498 FFF7FEFF 		bl	HAL_GetTick
 999 049c 0246     		mov	r2, r0
 1000              		.loc 1 758 30 discriminator 1
 1001 049e 3B69     		ldr	r3, [r7, #16]
 1002 04a0 D31A     		subs	r3, r2, r3
 1003              		.loc 1 758 14 discriminator 1
 1004 04a2 022B     		cmp	r3, #2
 1005 04a4 01D9     		bls	.L68
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1006              		.loc 1 760 20
 1007 04a6 0323     		movs	r3, #3
 1008 04a8 26E0     		b	.L16
 1009              	.L68:
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1010              		.loc 1 756 16
 1011 04aa 064B     		ldr	r3, .L75
 1012 04ac 1B68     		ldr	r3, [r3]
 1013 04ae 03F00073 		and	r3, r3, #33554432
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1014              		.loc 1 756 53
 1015 04b2 002B     		cmp	r3, #0
 1016 04b4 F0D1     		bne	.L69
 1017 04b6 1EE0     		b	.L60
 1018              	.L61:
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1019              		.loc 1 768 34
 1020 04b8 7B68     		ldr	r3, [r7, #4]
 1021 04ba DB69     		ldr	r3, [r3, #28]
 1022              		.loc 1 768 10
 1023 04bc 012B     		cmp	r3, #1
 1024 04be 07D1     		bne	.L70
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
ARM GAS  /tmp//ccNU2ilX.s 			page 33


 1025              		.loc 1 770 16
 1026 04c0 0123     		movs	r3, #1
 1027 04c2 19E0     		b	.L16
 1028              	.L76:
 1029              		.align	2
 1030              	.L75:
 1031 04c4 00100240 		.word	1073876992
 1032 04c8 00700040 		.word	1073770496
 1033 04cc 60004242 		.word	1111621728
 1034              	.L70:
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pll_config = RCC->CFGR;
 1035              		.loc 1 775 25
 1036 04d0 0B4B     		ldr	r3, .L77
 1037              		.loc 1 775 20
 1038 04d2 5B68     		ldr	r3, [r3, #4]
 1039 04d4 FB60     		str	r3, [r7, #12]
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1040              		.loc 1 776 14
 1041 04d6 FB68     		ldr	r3, [r7, #12]
 1042 04d8 03F48032 		and	r2, r3, #65536
 1043              		.loc 1 776 77
 1044 04dc 7B68     		ldr	r3, [r7, #4]
 1045 04de 1B6A     		ldr	r3, [r3, #32]
 1046              		.loc 1 776 12
 1047 04e0 9A42     		cmp	r2, r3
 1048 04e2 06D1     		bne	.L71
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 1049              		.loc 1 777 14
 1050 04e4 FB68     		ldr	r3, [r7, #12]
 1051 04e6 03F47012 		and	r2, r3, #3932160
 1052              		.loc 1 777 78
 1053 04ea 7B68     		ldr	r3, [r7, #4]
 1054 04ec 5B6A     		ldr	r3, [r3, #36]
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1055              		.loc 1 776 89 discriminator 1
 1056 04ee 9A42     		cmp	r2, r3
 1057 04f0 01D0     		beq	.L60
 1058              	.L71:
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 1059              		.loc 1 779 18
 1060 04f2 0123     		movs	r3, #1
 1061 04f4 00E0     		b	.L16
 1062              	.L60:
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 1063              		.loc 1 785 10
 1064 04f6 0023     		movs	r3, #0
 1065              	.L16:
ARM GAS  /tmp//ccNU2ilX.s 			page 34


 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1066              		.loc 1 786 1
 1067 04f8 1846     		mov	r0, r3
 1068 04fa 1837     		adds	r7, r7, #24
 1069              	.LCFI8:
 1070              		.cfi_def_cfa_offset 8
 1071 04fc BD46     		mov	sp, r7
 1072              	.LCFI9:
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 04fe 80BD     		pop	{r7, pc}
 1076              	.L78:
 1077              		.align	2
 1078              	.L77:
 1079 0500 00100240 		.word	1073876992
 1080              		.cfi_endproc
 1081              	.LFE66:
 1083              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1084              		.align	1
 1085              		.global	HAL_RCC_ClockConfig
 1086              		.syntax unified
 1087              		.thumb
 1088              		.thumb_func
 1090              	HAL_RCC_ClockConfig:
 1091              	.LFB67:
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  FLatency FLASH Latency
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked).
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         currently used as system clock source.
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1092              		.loc 1 812 1
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 16
 1095              		@ frame_needed = 1, uses_anonymous_args = 0
 1096 0000 80B5     		push	{r7, lr}
 1097              	.LCFI10:
ARM GAS  /tmp//ccNU2ilX.s 			page 35


 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 7, -8
 1100              		.cfi_offset 14, -4
 1101 0002 84B0     		sub	sp, sp, #16
 1102              	.LCFI11:
 1103              		.cfi_def_cfa_offset 24
 1104 0004 00AF     		add	r7, sp, #0
 1105              	.LCFI12:
 1106              		.cfi_def_cfa_register 7
 1107 0006 7860     		str	r0, [r7, #4]
 1108 0008 3960     		str	r1, [r7]
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart;
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check Null pointer */
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (RCC_ClkInitStruct == NULL)
 1109              		.loc 1 816 6
 1110 000a 7B68     		ldr	r3, [r7, #4]
 1111 000c 002B     		cmp	r3, #0
 1112 000e 01D1     		bne	.L80
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 1113              		.loc 1 818 12
 1114 0010 0123     		movs	r3, #1
 1115 0012 D0E0     		b	.L81
 1116              	.L80:
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     (HCLK) of the device. */
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (FLatency > __HAL_FLASH_GET_LATENCY())
 1117              		.loc 1 831 18
 1118 0014 6A4B     		ldr	r3, .L95
 1119 0016 1B68     		ldr	r3, [r3]
 1120 0018 03F00703 		and	r3, r3, #7
 1121              		.loc 1 831 6
 1122 001c 3A68     		ldr	r2, [r7]
 1123 001e 9A42     		cmp	r2, r3
 1124 0020 10D9     		bls	.L82
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1125              		.loc 1 834 5
 1126 0022 674B     		ldr	r3, .L95
 1127 0024 1B68     		ldr	r3, [r3]
 1128 0026 23F00702 		bic	r2, r3, #7
 1129 002a 6549     		ldr	r1, .L95
 1130 002c 3B68     		ldr	r3, [r7]
 1131 002e 1343     		orrs	r3, r3, r2
 1132 0030 0B60     		str	r3, [r1]
ARM GAS  /tmp//ccNU2ilX.s 			page 36


 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 1133              		.loc 1 838 9
 1134 0032 634B     		ldr	r3, .L95
 1135 0034 1B68     		ldr	r3, [r3]
 1136 0036 03F00703 		and	r3, r3, #7
 1137              		.loc 1 838 8
 1138 003a 3A68     		ldr	r2, [r7]
 1139 003c 9A42     		cmp	r2, r3
 1140 003e 01D0     		beq	.L82
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 1141              		.loc 1 840 12
 1142 0040 0123     		movs	r3, #1
 1143 0042 B8E0     		b	.L81
 1144              	.L82:
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*-------------------------- HCLK Configuration --------------------------*/
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1145              		.loc 1 846 24
 1146 0044 7B68     		ldr	r3, [r7, #4]
 1147 0046 1B68     		ldr	r3, [r3]
 1148              		.loc 1 846 37
 1149 0048 03F00203 		and	r3, r3, #2
 1150              		.loc 1 846 4
 1151 004c 002B     		cmp	r3, #0
 1152 004e 20D0     		beq	.L83
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     a non-spec phase whatever we decrease or increase HCLK. */
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1153              		.loc 1 850 28
 1154 0050 7B68     		ldr	r3, [r7, #4]
 1155 0052 1B68     		ldr	r3, [r3]
 1156              		.loc 1 850 41
 1157 0054 03F00403 		and	r3, r3, #4
 1158              		.loc 1 850 8
 1159 0058 002B     		cmp	r3, #0
 1160 005a 05D0     		beq	.L84
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 1161              		.loc 1 852 7
 1162 005c 594B     		ldr	r3, .L95+4
 1163 005e 5B68     		ldr	r3, [r3, #4]
 1164 0060 584A     		ldr	r2, .L95+4
 1165 0062 43F4E063 		orr	r3, r3, #1792
 1166 0066 5360     		str	r3, [r2, #4]
 1167              	.L84:
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1168              		.loc 1 855 28
ARM GAS  /tmp//ccNU2ilX.s 			page 37


 1169 0068 7B68     		ldr	r3, [r7, #4]
 1170 006a 1B68     		ldr	r3, [r3]
 1171              		.loc 1 855 41
 1172 006c 03F00803 		and	r3, r3, #8
 1173              		.loc 1 855 8
 1174 0070 002B     		cmp	r3, #0
 1175 0072 05D0     		beq	.L85
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 1176              		.loc 1 857 7
 1177 0074 534B     		ldr	r3, .L95+4
 1178 0076 5B68     		ldr	r3, [r3, #4]
 1179 0078 524A     		ldr	r2, .L95+4
 1180 007a 43F46053 		orr	r3, r3, #14336
 1181 007e 5360     		str	r3, [r2, #4]
 1182              	.L85:
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1183              		.loc 1 862 5
 1184 0080 504B     		ldr	r3, .L95+4
 1185 0082 5B68     		ldr	r3, [r3, #4]
 1186 0084 23F0F002 		bic	r2, r3, #240
 1187 0088 7B68     		ldr	r3, [r7, #4]
 1188 008a 9B68     		ldr	r3, [r3, #8]
 1189 008c 4D49     		ldr	r1, .L95+4
 1190 008e 1343     		orrs	r3, r3, r2
 1191 0090 4B60     		str	r3, [r1, #4]
 1192              	.L83:
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1193              		.loc 1 866 26
 1194 0092 7B68     		ldr	r3, [r7, #4]
 1195 0094 1B68     		ldr	r3, [r3]
 1196              		.loc 1 866 39
 1197 0096 03F00103 		and	r3, r3, #1
 1198              		.loc 1 866 6
 1199 009a 002B     		cmp	r3, #0
 1200 009c 40D0     		beq	.L86
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1201              		.loc 1 871 26
 1202 009e 7B68     		ldr	r3, [r7, #4]
 1203 00a0 5B68     		ldr	r3, [r3, #4]
 1204              		.loc 1 871 8
 1205 00a2 012B     		cmp	r3, #1
 1206 00a4 07D1     		bne	.L87
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSE ready flag */
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
ARM GAS  /tmp//ccNU2ilX.s 			page 38


 1207              		.loc 1 874 11
 1208 00a6 474B     		ldr	r3, .L95+4
 1209 00a8 1B68     		ldr	r3, [r3]
 1210 00aa 03F40033 		and	r3, r3, #131072
 1211              		.loc 1 874 10
 1212 00ae 002B     		cmp	r3, #0
 1213 00b0 15D1     		bne	.L88
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 1214              		.loc 1 876 16
 1215 00b2 0123     		movs	r3, #1
 1216 00b4 7FE0     		b	.L81
 1217              	.L87:
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1218              		.loc 1 880 31
 1219 00b6 7B68     		ldr	r3, [r7, #4]
 1220 00b8 5B68     		ldr	r3, [r3, #4]
 1221              		.loc 1 880 13
 1222 00ba 022B     		cmp	r3, #2
 1223 00bc 07D1     		bne	.L89
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the PLL ready flag */
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1224              		.loc 1 883 11
 1225 00be 414B     		ldr	r3, .L95+4
 1226 00c0 1B68     		ldr	r3, [r3]
 1227 00c2 03F00073 		and	r3, r3, #33554432
 1228              		.loc 1 883 10
 1229 00c6 002B     		cmp	r3, #0
 1230 00c8 09D1     		bne	.L88
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 1231              		.loc 1 885 16
 1232 00ca 0123     		movs	r3, #1
 1233 00cc 73E0     		b	.L81
 1234              	.L89:
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI ready flag */
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1235              		.loc 1 892 11
 1236 00ce 3D4B     		ldr	r3, .L95+4
 1237 00d0 1B68     		ldr	r3, [r3]
 1238 00d2 03F00203 		and	r3, r3, #2
 1239              		.loc 1 892 10
 1240 00d6 002B     		cmp	r3, #0
 1241 00d8 01D1     		bne	.L88
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 1242              		.loc 1 894 16
 1243 00da 0123     		movs	r3, #1
ARM GAS  /tmp//ccNU2ilX.s 			page 39


 1244 00dc 6BE0     		b	.L81
 1245              	.L88:
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1246              		.loc 1 897 5
 1247 00de 394B     		ldr	r3, .L95+4
 1248 00e0 5B68     		ldr	r3, [r3, #4]
 1249 00e2 23F00302 		bic	r2, r3, #3
 1250 00e6 7B68     		ldr	r3, [r7, #4]
 1251 00e8 5B68     		ldr	r3, [r3, #4]
 1252 00ea 3649     		ldr	r1, .L95+4
 1253 00ec 1343     		orrs	r3, r3, r2
 1254 00ee 4B60     		str	r3, [r1, #4]
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Get Start Tick */
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1255              		.loc 1 900 17
 1256 00f0 FFF7FEFF 		bl	HAL_GetTick
 1257 00f4 F860     		str	r0, [r7, #12]
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1258              		.loc 1 902 11
 1259 00f6 0AE0     		b	.L90
 1260              	.L91:
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1261              		.loc 1 904 12
 1262 00f8 FFF7FEFF 		bl	HAL_GetTick
 1263 00fc 0246     		mov	r2, r0
 1264              		.loc 1 904 26 discriminator 1
 1265 00fe FB68     		ldr	r3, [r7, #12]
 1266 0100 D31A     		subs	r3, r2, r3
 1267              		.loc 1 904 10 discriminator 1
 1268 0102 41F28832 		movw	r2, #5000
 1269 0106 9342     		cmp	r3, r2
 1270 0108 01D9     		bls	.L90
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1271              		.loc 1 906 16
 1272 010a 0323     		movs	r3, #3
 1273 010c 53E0     		b	.L81
 1274              	.L90:
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1275              		.loc 1 902 12
 1276 010e 2D4B     		ldr	r3, .L95+4
 1277 0110 5B68     		ldr	r3, [r3, #4]
 1278 0112 03F00C02 		and	r2, r3, #12
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1279              		.loc 1 902 63
 1280 0116 7B68     		ldr	r3, [r7, #4]
 1281 0118 5B68     		ldr	r3, [r3, #4]
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1282              		.loc 1 902 78
 1283 011a 9B00     		lsls	r3, r3, #2
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1284              		.loc 1 902 42
ARM GAS  /tmp//ccNU2ilX.s 			page 40


 1285 011c 9A42     		cmp	r2, r3
 1286 011e EBD1     		bne	.L91
 1287              	.L86:
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (FLatency < __HAL_FLASH_GET_LATENCY())
 1288              		.loc 1 913 18
 1289 0120 274B     		ldr	r3, .L95
 1290 0122 1B68     		ldr	r3, [r3]
 1291 0124 03F00703 		and	r3, r3, #7
 1292              		.loc 1 913 6
 1293 0128 3A68     		ldr	r2, [r7]
 1294 012a 9A42     		cmp	r2, r3
 1295 012c 10D2     		bcs	.L92
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1296              		.loc 1 916 5
 1297 012e 244B     		ldr	r3, .L95
 1298 0130 1B68     		ldr	r3, [r3]
 1299 0132 23F00702 		bic	r2, r3, #7
 1300 0136 2249     		ldr	r1, .L95
 1301 0138 3B68     		ldr	r3, [r7]
 1302 013a 1343     		orrs	r3, r3, r2
 1303 013c 0B60     		str	r3, [r1]
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 1304              		.loc 1 920 9
 1305 013e 204B     		ldr	r3, .L95
 1306 0140 1B68     		ldr	r3, [r3]
 1307 0142 03F00703 		and	r3, r3, #7
 1308              		.loc 1 920 8
 1309 0146 3A68     		ldr	r2, [r7]
 1310 0148 9A42     		cmp	r2, r3
 1311 014a 01D0     		beq	.L92
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 1312              		.loc 1 922 12
 1313 014c 0123     		movs	r3, #1
 1314 014e 32E0     		b	.L81
 1315              	.L92:
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*-------------------------- PCLK1 Configuration ---------------------------*/
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1316              		.loc 1 928 24
 1317 0150 7B68     		ldr	r3, [r7, #4]
 1318 0152 1B68     		ldr	r3, [r3]
 1319              		.loc 1 928 37
ARM GAS  /tmp//ccNU2ilX.s 			page 41


 1320 0154 03F00403 		and	r3, r3, #4
 1321              		.loc 1 928 4
 1322 0158 002B     		cmp	r3, #0
 1323 015a 08D0     		beq	.L93
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1324              		.loc 1 931 5
 1325 015c 194B     		ldr	r3, .L95+4
 1326 015e 5B68     		ldr	r3, [r3, #4]
 1327 0160 23F4E062 		bic	r2, r3, #1792
 1328 0164 7B68     		ldr	r3, [r7, #4]
 1329 0166 DB68     		ldr	r3, [r3, #12]
 1330 0168 1649     		ldr	r1, .L95+4
 1331 016a 1343     		orrs	r3, r3, r2
 1332 016c 4B60     		str	r3, [r1, #4]
 1333              	.L93:
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1334              		.loc 1 935 26
 1335 016e 7B68     		ldr	r3, [r7, #4]
 1336 0170 1B68     		ldr	r3, [r3]
 1337              		.loc 1 935 39
 1338 0172 03F00803 		and	r3, r3, #8
 1339              		.loc 1 935 6
 1340 0176 002B     		cmp	r3, #0
 1341 0178 09D0     		beq	.L94
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 1342              		.loc 1 938 5
 1343 017a 124B     		ldr	r3, .L95+4
 1344 017c 5B68     		ldr	r3, [r3, #4]
 1345 017e 23F46052 		bic	r2, r3, #14336
 1346 0182 7B68     		ldr	r3, [r7, #4]
 1347 0184 1B69     		ldr	r3, [r3, #16]
 1348 0186 DB00     		lsls	r3, r3, #3
 1349 0188 0E49     		ldr	r1, .L95+4
 1350 018a 1343     		orrs	r3, r3, r2
 1351 018c 4B60     		str	r3, [r1, #4]
 1352              	.L94:
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_C
 1353              		.loc 1 942 21
 1354 018e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1355 0192 0246     		mov	r2, r0
 1356              		.loc 1 942 68 discriminator 1
 1357 0194 0B4B     		ldr	r3, .L95+4
 1358 0196 5B68     		ldr	r3, [r3, #4]
 1359              		.loc 1 942 92 discriminator 1
 1360 0198 1B09     		lsrs	r3, r3, #4
 1361 019a 03F00F03 		and	r3, r3, #15
 1362              		.loc 1 942 63 discriminator 1
ARM GAS  /tmp//ccNU2ilX.s 			page 42


 1363 019e 0A49     		ldr	r1, .L95+8
 1364 01a0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1365              		.loc 1 942 47 discriminator 1
 1366 01a2 22FA03F3 		lsr	r3, r2, r3
 1367              		.loc 1 942 19 discriminator 1
 1368 01a6 094A     		ldr	r2, .L95+12
 1369 01a8 1360     		str	r3, [r2]
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_InitTick(uwTickPrio);
 1370              		.loc 1 945 3
 1371 01aa 094B     		ldr	r3, .L95+16
 1372 01ac 1B68     		ldr	r3, [r3]
 1373 01ae 1846     		mov	r0, r3
 1374 01b0 FFF7FEFF 		bl	HAL_InitTick
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 1375              		.loc 1 947 10
 1376 01b4 0023     		movs	r3, #0
 1377              	.L81:
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1378              		.loc 1 948 1
 1379 01b6 1846     		mov	r0, r3
 1380 01b8 1037     		adds	r7, r7, #16
 1381              	.LCFI13:
 1382              		.cfi_def_cfa_offset 8
 1383 01ba BD46     		mov	sp, r7
 1384              	.LCFI14:
 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 01bc 80BD     		pop	{r7, pc}
 1388              	.L96:
 1389 01be 00BF     		.align	2
 1390              	.L95:
 1391 01c0 00200240 		.word	1073881088
 1392 01c4 00100240 		.word	1073876992
 1393 01c8 00000000 		.word	AHBPrescTable
 1394 01cc 00000000 		.word	SystemCoreClock
 1395 01d0 00000000 		.word	uwTickPrio
 1396              		.cfi_endproc
 1397              	.LFE67:
 1399              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1400              		.align	1
 1401              		.global	HAL_RCC_MCOConfig
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1406              	HAL_RCC_MCOConfig:
 1407              	.LFB68:
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
ARM GAS  /tmp//ccNU2ilX.s 			page 43


 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     frequencies.
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F105xC
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE      XT1 external 3-25 MHz oscillator clock selecte
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F107xC
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE XT1  external 3-25 MHz oscillator clock selected as
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1408              		.loc 1 1001 1
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 40
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412 0000 80B5     		push	{r7, lr}
 1413              	.LCFI15:
 1414              		.cfi_def_cfa_offset 8
 1415              		.cfi_offset 7, -8
 1416              		.cfi_offset 14, -4
 1417 0002 8AB0     		sub	sp, sp, #40
 1418              	.LCFI16:
 1419              		.cfi_def_cfa_offset 48
ARM GAS  /tmp//ccNU2ilX.s 			page 44


 1420 0004 00AF     		add	r7, sp, #0
 1421              	.LCFI17:
 1422              		.cfi_def_cfa_register 7
 1423 0006 F860     		str	r0, [r7, #12]
 1424 0008 B960     		str	r1, [r7, #8]
 1425 000a 7A60     		str	r2, [r7, #4]
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0U};
 1426              		.loc 1 1002 20
 1427 000c 07F11803 		add	r3, r7, #24
 1428 0010 0022     		movs	r2, #0
 1429 0012 1A60     		str	r2, [r3]
 1430 0014 5A60     		str	r2, [r3, #4]
 1431 0016 9A60     		str	r2, [r3, #8]
 1432 0018 DA60     		str	r2, [r3, #12]
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning */
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCODiv);
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1433              		.loc 1 1014 18
 1434 001a 0223     		movs	r3, #2
 1435 001c FB61     		str	r3, [r7, #28]
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1436              		.loc 1 1015 18
 1437 001e 0323     		movs	r3, #3
 1438 0020 7B62     		str	r3, [r7, #36]
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1439              		.loc 1 1016 18
 1440 0022 0023     		movs	r3, #0
 1441 0024 3B62     		str	r3, [r7, #32]
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1442              		.loc 1 1017 18
 1443 0026 4FF48073 		mov	r3, #256
 1444 002a BB61     		str	r3, [r7, #24]
 1445              	.LBB4:
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1446              		.loc 1 1020 3
 1447 002c 0E4B     		ldr	r3, .L98
 1448 002e 9B69     		ldr	r3, [r3, #24]
 1449 0030 0D4A     		ldr	r2, .L98
 1450 0032 43F00403 		orr	r3, r3, #4
 1451 0036 9361     		str	r3, [r2, #24]
 1452 0038 0B4B     		ldr	r3, .L98
 1453 003a 9B69     		ldr	r3, [r3, #24]
 1454 003c 03F00403 		and	r3, r3, #4
 1455 0040 7B61     		str	r3, [r7, #20]
 1456 0042 7B69     		ldr	r3, [r7, #20]
 1457              	.LBE4:
ARM GAS  /tmp//ccNU2ilX.s 			page 45


1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1458              		.loc 1 1022 3
 1459 0044 07F11803 		add	r3, r7, #24
 1460 0048 1946     		mov	r1, r3
 1461 004a 0848     		ldr	r0, .L98+4
 1462 004c FFF7FEFF 		bl	HAL_GPIO_Init
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO clock source */
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1463              		.loc 1 1025 3
 1464 0050 054B     		ldr	r3, .L98
 1465 0052 5B68     		ldr	r3, [r3, #4]
 1466 0054 23F0E062 		bic	r2, r3, #117440512
 1467 0058 0349     		ldr	r1, .L98
 1468 005a BB68     		ldr	r3, [r7, #8]
 1469 005c 1343     		orrs	r3, r3, r2
 1470 005e 4B60     		str	r3, [r1, #4]
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1471              		.loc 1 1026 1
 1472 0060 00BF     		nop
 1473 0062 2837     		adds	r7, r7, #40
 1474              	.LCFI18:
 1475              		.cfi_def_cfa_offset 8
 1476 0064 BD46     		mov	sp, r7
 1477              	.LCFI19:
 1478              		.cfi_def_cfa_register 13
 1479              		@ sp needed
 1480 0066 80BD     		pop	{r7, pc}
 1481              	.L99:
 1482              		.align	2
 1483              	.L98:
 1484 0068 00100240 		.word	1073876992
 1485 006c 00080140 		.word	1073809408
 1486              		.cfi_endproc
 1487              	.LFE68:
 1489              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1490              		.align	1
 1491              		.global	HAL_RCC_EnableCSS
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1496              	HAL_RCC_EnableCSS:
 1497              	.LFB69:
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1498              		.loc 1 1038 1
ARM GAS  /tmp//ccNU2ilX.s 			page 46


 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 1, uses_anonymous_args = 0
 1502              		@ link register save eliminated.
 1503 0000 80B4     		push	{r7}
 1504              	.LCFI20:
 1505              		.cfi_def_cfa_offset 4
 1506              		.cfi_offset 7, -4
 1507 0002 00AF     		add	r7, sp, #0
 1508              	.LCFI21:
 1509              		.cfi_def_cfa_register 7
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1510              		.loc 1 1039 3
 1511 0004 034B     		ldr	r3, .L101
 1512              		.loc 1 1039 38
 1513 0006 0122     		movs	r2, #1
 1514 0008 1A60     		str	r2, [r3]
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1515              		.loc 1 1040 1
 1516 000a 00BF     		nop
 1517 000c BD46     		mov	sp, r7
 1518              	.LCFI22:
 1519              		.cfi_def_cfa_register 13
 1520              		@ sp needed
 1521 000e 80BC     		pop	{r7}
 1522              	.LCFI23:
 1523              		.cfi_restore 7
 1524              		.cfi_def_cfa_offset 0
 1525 0010 7047     		bx	lr
 1526              	.L102:
 1527 0012 00BF     		.align	2
 1528              	.L101:
 1529 0014 4C004242 		.word	1111621708
 1530              		.cfi_endproc
 1531              	.LFE69:
 1533              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1534              		.align	1
 1535              		.global	HAL_RCC_DisableCSS
 1536              		.syntax unified
 1537              		.thumb
 1538              		.thumb_func
 1540              	HAL_RCC_DisableCSS:
 1541              	.LFB70:
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1542              		.loc 1 1047 1
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 1, uses_anonymous_args = 0
 1546              		@ link register save eliminated.
 1547 0000 80B4     		push	{r7}
 1548              	.LCFI24:
ARM GAS  /tmp//ccNU2ilX.s 			page 47


 1549              		.cfi_def_cfa_offset 4
 1550              		.cfi_offset 7, -4
 1551 0002 00AF     		add	r7, sp, #0
 1552              	.LCFI25:
 1553              		.cfi_def_cfa_register 7
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1554              		.loc 1 1048 3
 1555 0004 034B     		ldr	r3, .L104
 1556              		.loc 1 1048 38
 1557 0006 0022     		movs	r2, #0
 1558 0008 1A60     		str	r2, [r3]
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1559              		.loc 1 1049 1
 1560 000a 00BF     		nop
 1561 000c BD46     		mov	sp, r7
 1562              	.LCFI26:
 1563              		.cfi_def_cfa_register 13
 1564              		@ sp needed
 1565 000e 80BC     		pop	{r7}
 1566              	.LCFI27:
 1567              		.cfi_restore 7
 1568              		.cfi_def_cfa_offset 0
 1569 0010 7047     		bx	lr
 1570              	.L105:
 1571 0012 00BF     		.align	2
 1572              	.L104:
 1573 0014 4C004242 		.word	1111621708
 1574              		.cfi_endproc
 1575              	.LFE70:
 1577              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1578              		.align	1
 1579              		.global	HAL_RCC_GetSysClockFreq
 1580              		.syntax unified
 1581              		.thumb
 1582              		.thumb_func
 1584              	HAL_RCC_GetSysClockFreq:
 1585              	.LFB71:
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         constant and the selected clock source:
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               in voltage and temperature.
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                have wrong result.
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
ARM GAS  /tmp//ccNU2ilX.s 			page 48


1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         value for HSE crystal.
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval SYSCLK frequency
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1586              		.loc 1 1081 1
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 24
 1589              		@ frame_needed = 1, uses_anonymous_args = 0
 1590              		@ link register save eliminated.
 1591 0000 80B4     		push	{r7}
 1592              	.LCFI28:
 1593              		.cfi_def_cfa_offset 4
 1594              		.cfi_offset 7, -4
 1595 0002 87B0     		sub	sp, sp, #28
 1596              	.LCFI29:
 1597              		.cfi_def_cfa_offset 32
 1598 0004 00AF     		add	r7, sp, #0
 1599              	.LCFI30:
 1600              		.cfi_def_cfa_register 7
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   static const uint8_t aPLLMULFactorTable[14U] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   static const uint8_t aPredivFactorTable[16U] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   static const uint8_t aPLLMULFactorTable[16U] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   static const uint8_t aPredivFactorTable[16U] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   static const uint8_t aPredivFactorTable[2U] = {1, 2};
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 1601              		.loc 1 1094 12
 1602 0006 0023     		movs	r3, #0
 1603 0008 FB60     		str	r3, [r7, #12]
 1604              		.loc 1 1094 25
 1605 000a 0023     		movs	r3, #0
 1606 000c BB60     		str	r3, [r7, #8]
 1607              		.loc 1 1094 38
 1608 000e 0023     		movs	r3, #0
 1609 0010 7B61     		str	r3, [r7, #20]
 1610              		.loc 1 1094 51
 1611 0012 0023     		movs	r3, #0
 1612 0014 7B60     		str	r3, [r7, #4]
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1613              		.loc 1 1095 12
 1614 0016 0023     		movs	r3, #0
 1615 0018 3B61     		str	r3, [r7, #16]
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
ARM GAS  /tmp//ccNU2ilX.s 			page 49


1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t prediv2 = 0U, pll2mul = 0U;
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1616              		.loc 1 1100 15
 1617 001a 1E4B     		ldr	r3, .L115
 1618              		.loc 1 1100 10
 1619 001c 5B68     		ldr	r3, [r3, #4]
 1620 001e FB60     		str	r3, [r7, #12]
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1621              		.loc 1 1103 18
 1622 0020 FB68     		ldr	r3, [r7, #12]
 1623 0022 03F00C03 		and	r3, r3, #12
 1624              		.loc 1 1103 3
 1625 0026 042B     		cmp	r3, #4
 1626 0028 02D0     		beq	.L107
 1627 002a 082B     		cmp	r3, #8
 1628 002c 03D0     		beq	.L108
 1629 002e 27E0     		b	.L114
 1630              	.L107:
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1631              		.loc 1 1107 20
 1632 0030 194B     		ldr	r3, .L115+4
 1633 0032 3B61     		str	r3, [r7, #16]
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 1634              		.loc 1 1108 7
 1635 0034 27E0     		b	.L110
 1636              	.L108:
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 1637              		.loc 1 1112 73
 1638 0036 FB68     		ldr	r3, [r7, #12]
 1639 0038 9B0C     		lsrs	r3, r3, #18
 1640 003a 03F00F03 		and	r3, r3, #15
 1641              		.loc 1 1112 34
 1642 003e 174A     		ldr	r2, .L115+8
 1643 0040 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1644              		.loc 1 1112 14
 1645 0042 7B60     		str	r3, [r7, #4]
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 1646              		.loc 1 1113 19
 1647 0044 FB68     		ldr	r3, [r7, #12]
 1648 0046 03F48033 		and	r3, r3, #65536
 1649              		.loc 1 1113 10
 1650 004a 002B     		cmp	r3, #0
 1651 004c 10D0     		beq	.L111
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
ARM GAS  /tmp//ccNU2ilX.s 			page 50


1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_
 1652              		.loc 1 1118 51
 1653 004e 114B     		ldr	r3, .L115
 1654 0050 5B68     		ldr	r3, [r3, #4]
 1655              		.loc 1 1118 79
 1656 0052 5B0C     		lsrs	r3, r3, #17
 1657 0054 03F00103 		and	r3, r3, #1
 1658              		.loc 1 1118 36
 1659 0058 114A     		ldr	r2, .L115+12
 1660 005a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1661              		.loc 1 1118 16
 1662 005c BB60     		str	r3, [r7, #8]
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC))
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLL2 selected as Prediv1 source */
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLLCLK = PLL2CLK / PREDIV1 * PLLMUL with PLL2CLK = HSE/PREDIV2 * PLL2MUL */
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prediv2 = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> RCC_CFGR2_PREDIV2_Pos) + 1;
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pll2mul = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> RCC_CFGR2_PLL2MUL_Pos) + 2;
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)(((uint64_t)HSE_VALUE * (uint64_t)pll2mul * (uint64_t)pllmul) / ((uint
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         else
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((HSE_VALUE * pllmul) / prediv);
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* If PLLMUL was set to 13 means that it was to cover the case PLLMUL 6.5 (avoid using floa
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* In this case need to divide pllclk by 2 */
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (pllmul == aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5) >> RCC_CFGR_PLLMULL_Pos])
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = pllclk / 2;
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 1663              		.loc 1 1144 41
 1664 005e 7B68     		ldr	r3, [r7, #4]
 1665 0060 0D4A     		ldr	r2, .L115+4
 1666 0062 03FB02F2 		mul	r2, r3, r2
 1667              		.loc 1 1144 16
 1668 0066 BB68     		ldr	r3, [r7, #8]
 1669 0068 B2FBF3F3 		udiv	r3, r2, r3
 1670 006c 7B61     		str	r3, [r7, #20]
 1671 006e 04E0     		b	.L112
 1672              	.L111:
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 1673              		.loc 1 1150 16
 1674 0070 7B68     		ldr	r3, [r7, #4]
 1675 0072 0C4A     		ldr	r2, .L115+16
ARM GAS  /tmp//ccNU2ilX.s 			page 51


 1676 0074 02FB03F3 		mul	r3, r2, r3
 1677 0078 7B61     		str	r3, [r7, #20]
 1678              	.L112:
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = pllclk;
 1679              		.loc 1 1152 20
 1680 007a 7B69     		ldr	r3, [r7, #20]
 1681 007c 3B61     		str	r3, [r7, #16]
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 1682              		.loc 1 1153 7
 1683 007e 02E0     		b	.L110
 1684              	.L114:
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     default: /* HSI used as system clock */
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1685              		.loc 1 1158 20
 1686 0080 054B     		ldr	r3, .L115+4
 1687 0082 3B61     		str	r3, [r7, #16]
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 1688              		.loc 1 1159 7
 1689 0084 00BF     		nop
 1690              	.L110:
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return sysclockfreq;
 1691              		.loc 1 1162 10
 1692 0086 3B69     		ldr	r3, [r7, #16]
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1693              		.loc 1 1163 1
 1694 0088 1846     		mov	r0, r3
 1695 008a 1C37     		adds	r7, r7, #28
 1696              	.LCFI31:
 1697              		.cfi_def_cfa_offset 4
 1698 008c BD46     		mov	sp, r7
 1699              	.LCFI32:
 1700              		.cfi_def_cfa_register 13
 1701              		@ sp needed
 1702 008e 80BC     		pop	{r7}
 1703              	.LCFI33:
 1704              		.cfi_restore 7
 1705              		.cfi_def_cfa_offset 0
 1706 0090 7047     		bx	lr
 1707              	.L116:
 1708 0092 00BF     		.align	2
 1709              	.L115:
 1710 0094 00100240 		.word	1073876992
 1711 0098 00127A00 		.word	8000000
 1712 009c 00000000 		.word	aPLLMULFactorTable.1
 1713 00a0 00000000 		.word	aPredivFactorTable.0
 1714 00a4 00093D00 		.word	4000000
 1715              		.cfi_endproc
 1716              	.LFE71:
 1718              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1719              		.align	1
 1720              		.global	HAL_RCC_GetHCLKFreq
ARM GAS  /tmp//ccNU2ilX.s 			page 52


 1721              		.syntax unified
 1722              		.thumb
 1723              		.thumb_func
 1725              	HAL_RCC_GetHCLKFreq:
 1726              	.LFB72:
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated within this function
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HCLK frequency
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1727              		.loc 1 1175 1
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 0
 1730              		@ frame_needed = 1, uses_anonymous_args = 0
 1731              		@ link register save eliminated.
 1732 0000 80B4     		push	{r7}
 1733              	.LCFI34:
 1734              		.cfi_def_cfa_offset 4
 1735              		.cfi_offset 7, -4
 1736 0002 00AF     		add	r7, sp, #0
 1737              	.LCFI35:
 1738              		.cfi_def_cfa_register 7
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
 1739              		.loc 1 1176 10
 1740 0004 024B     		ldr	r3, .L119
 1741 0006 1B68     		ldr	r3, [r3]
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1742              		.loc 1 1177 1
 1743 0008 1846     		mov	r0, r3
 1744 000a BD46     		mov	sp, r7
 1745              	.LCFI36:
 1746              		.cfi_def_cfa_register 13
 1747              		@ sp needed
 1748 000c 80BC     		pop	{r7}
 1749              	.LCFI37:
 1750              		.cfi_restore 7
 1751              		.cfi_def_cfa_offset 0
 1752 000e 7047     		bx	lr
 1753              	.L120:
 1754              		.align	2
 1755              	.L119:
 1756 0010 00000000 		.word	SystemCoreClock
 1757              		.cfi_endproc
 1758              	.LFE72:
 1760              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1761              		.align	1
 1762              		.global	HAL_RCC_GetPCLK1Freq
 1763              		.syntax unified
 1764              		.thumb
 1765              		.thumb_func
ARM GAS  /tmp//ccNU2ilX.s 			page 53


 1767              	HAL_RCC_GetPCLK1Freq:
 1768              	.LFB73:
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK1 frequency
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1769              		.loc 1 1186 1
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 0
 1772              		@ frame_needed = 1, uses_anonymous_args = 0
 1773 0000 80B5     		push	{r7, lr}
 1774              	.LCFI38:
 1775              		.cfi_def_cfa_offset 8
 1776              		.cfi_offset 7, -8
 1777              		.cfi_offset 14, -4
 1778 0002 00AF     		add	r7, sp, #0
 1779              	.LCFI39:
 1780              		.cfi_def_cfa_register 7
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos
 1781              		.loc 1 1188 11
 1782 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1783 0008 0246     		mov	r2, r0
 1784              		.loc 1 1188 54 discriminator 1
 1785 000a 054B     		ldr	r3, .L123
 1786 000c 5B68     		ldr	r3, [r3, #4]
 1787              		.loc 1 1188 79 discriminator 1
 1788 000e 1B0A     		lsrs	r3, r3, #8
 1789 0010 03F00703 		and	r3, r3, #7
 1790              		.loc 1 1188 49 discriminator 1
 1791 0014 0349     		ldr	r1, .L123+4
 1792 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1793              		.loc 1 1188 33 discriminator 1
 1794 0018 22FA03F3 		lsr	r3, r2, r3
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1795              		.loc 1 1189 1
 1796 001c 1846     		mov	r0, r3
 1797 001e 80BD     		pop	{r7, pc}
 1798              	.L124:
 1799              		.align	2
 1800              	.L123:
 1801 0020 00100240 		.word	1073876992
 1802 0024 00000000 		.word	APBPrescTable
 1803              		.cfi_endproc
 1804              	.LFE73:
 1806              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1807              		.align	1
 1808              		.global	HAL_RCC_GetPCLK2Freq
 1809              		.syntax unified
 1810              		.thumb
 1811              		.thumb_func
 1813              	HAL_RCC_GetPCLK2Freq:
ARM GAS  /tmp//ccNU2ilX.s 			page 54


 1814              	.LFB74:
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK2 frequency
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1815              		.loc 1 1198 1
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 0
 1818              		@ frame_needed = 1, uses_anonymous_args = 0
 1819 0000 80B5     		push	{r7, lr}
 1820              	.LCFI40:
 1821              		.cfi_def_cfa_offset 8
 1822              		.cfi_offset 7, -8
 1823              		.cfi_offset 14, -4
 1824 0002 00AF     		add	r7, sp, #0
 1825              	.LCFI41:
 1826              		.cfi_def_cfa_register 7
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos
 1827              		.loc 1 1200 11
 1828 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1829 0008 0246     		mov	r2, r0
 1830              		.loc 1 1200 54 discriminator 1
 1831 000a 054B     		ldr	r3, .L127
 1832 000c 5B68     		ldr	r3, [r3, #4]
 1833              		.loc 1 1200 79 discriminator 1
 1834 000e DB0A     		lsrs	r3, r3, #11
 1835 0010 03F00703 		and	r3, r3, #7
 1836              		.loc 1 1200 49 discriminator 1
 1837 0014 0349     		ldr	r1, .L127+4
 1838 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1839              		.loc 1 1200 33 discriminator 1
 1840 0018 22FA03F3 		lsr	r3, r2, r3
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1841              		.loc 1 1201 1
 1842 001c 1846     		mov	r0, r3
 1843 001e 80BD     		pop	{r7, pc}
 1844              	.L128:
 1845              		.align	2
 1846              	.L127:
 1847 0020 00100240 		.word	1073876992
 1848 0024 00000000 		.word	APBPrescTable
 1849              		.cfi_endproc
 1850              	.LFE74:
 1852              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1853              		.align	1
 1854              		.global	HAL_RCC_GetOscConfig
 1855              		.syntax unified
 1856              		.thumb
 1857              		.thumb_func
 1859              	HAL_RCC_GetOscConfig:
 1860              	.LFB75:
ARM GAS  /tmp//ccNU2ilX.s 			page 55


1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * will be configured.
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1861              		.loc 1 1211 1
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 8
 1864              		@ frame_needed = 1, uses_anonymous_args = 0
 1865              		@ link register save eliminated.
 1866 0000 80B4     		push	{r7}
 1867              	.LCFI42:
 1868              		.cfi_def_cfa_offset 4
 1869              		.cfi_offset 7, -4
 1870 0002 83B0     		sub	sp, sp, #12
 1871              	.LCFI43:
 1872              		.cfi_def_cfa_offset 16
 1873 0004 00AF     		add	r7, sp, #0
 1874              	.LCFI44:
 1875              		.cfi_def_cfa_register 7
 1876 0006 7860     		str	r0, [r7, #4]
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 1877              		.loc 1 1216 37
 1878 0008 7B68     		ldr	r3, [r7, #4]
 1879 000a 0F22     		movs	r2, #15
 1880 000c 1A60     		str	r2, [r3]
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                                       | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Prediv1 source --------------------------------------------------*/
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->Prediv1Source = READ_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1881              		.loc 1 1225 11
 1882 000e 3C4B     		ldr	r3, .L142
 1883 0010 1B68     		ldr	r3, [r3]
 1884              		.loc 1 1225 16
 1885 0012 03F48023 		and	r3, r3, #262144
 1886              		.loc 1 1225 6
 1887 0016 B3F5802F 		cmp	r3, #262144
 1888 001a 04D1     		bne	.L130
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1889              		.loc 1 1227 33
 1890 001c 7B68     		ldr	r3, [r7, #4]
 1891 001e 4FF4A022 		mov	r2, #327680
ARM GAS  /tmp//ccNU2ilX.s 			page 56


 1892 0022 5A60     		str	r2, [r3, #4]
 1893 0024 0EE0     		b	.L131
 1894              	.L130:
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if ((RCC->CR & RCC_CR_HSEON) == RCC_CR_HSEON)
 1895              		.loc 1 1229 16
 1896 0026 364B     		ldr	r3, .L142
 1897 0028 1B68     		ldr	r3, [r3]
 1898              		.loc 1 1229 21
 1899 002a 03F48033 		and	r3, r3, #65536
 1900              		.loc 1 1229 11
 1901 002e B3F5803F 		cmp	r3, #65536
 1902 0032 04D1     		bne	.L132
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1903              		.loc 1 1231 33
 1904 0034 7B68     		ldr	r3, [r7, #4]
 1905 0036 4FF48032 		mov	r2, #65536
 1906 003a 5A60     		str	r2, [r3, #4]
 1907 003c 02E0     		b	.L131
 1908              	.L132:
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1909              		.loc 1 1235 33
 1910 003e 7B68     		ldr	r3, [r7, #4]
 1911 0040 0022     		movs	r2, #0
 1912 0042 5A60     		str	r2, [r3, #4]
 1913              	.L131:
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 1914              		.loc 1 1237 39
 1915 0044 2E4B     		ldr	r3, .L142
 1916 0046 5B68     		ldr	r3, [r3, #4]
 1917 0048 03F40032 		and	r2, r3, #131072
 1918              		.loc 1 1237 37
 1919 004c 7B68     		ldr	r3, [r7, #4]
 1920 004e 9A60     		str	r2, [r3, #8]
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSION) == RCC_CR_HSION)
 1921              		.loc 1 1240 11
 1922 0050 2B4B     		ldr	r3, .L142
 1923 0052 1B68     		ldr	r3, [r3]
 1924              		.loc 1 1240 16
 1925 0054 03F00103 		and	r3, r3, #1
 1926              		.loc 1 1240 6
 1927 0058 012B     		cmp	r3, #1
 1928 005a 03D1     		bne	.L133
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1929              		.loc 1 1242 33
 1930 005c 7B68     		ldr	r3, [r7, #4]
 1931 005e 0122     		movs	r2, #1
 1932 0060 1A61     		str	r2, [r3, #16]
 1933 0062 02E0     		b	.L134
ARM GAS  /tmp//ccNU2ilX.s 			page 57


 1934              	.L133:
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1935              		.loc 1 1246 33
 1936 0064 7B68     		ldr	r3, [r7, #4]
 1937 0066 0022     		movs	r2, #0
 1938 0068 1A61     		str	r2, [r3, #16]
 1939              	.L134:
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_
 1940              		.loc 1 1249 59
 1941 006a 254B     		ldr	r3, .L142
 1942 006c 1B68     		ldr	r3, [r3]
 1943              		.loc 1 1249 44
 1944 006e DB08     		lsrs	r3, r3, #3
 1945 0070 03F01F02 		and	r2, r3, #31
 1946              		.loc 1 1249 42
 1947 0074 7B68     		ldr	r3, [r7, #4]
 1948 0076 5A61     		str	r2, [r3, #20]
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->BDCR & RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1949              		.loc 1 1252 11
 1950 0078 214B     		ldr	r3, .L142
 1951 007a 1B6A     		ldr	r3, [r3, #32]
 1952              		.loc 1 1252 18
 1953 007c 03F00403 		and	r3, r3, #4
 1954              		.loc 1 1252 6
 1955 0080 042B     		cmp	r3, #4
 1956 0082 03D1     		bne	.L135
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1957              		.loc 1 1254 33
 1958 0084 7B68     		ldr	r3, [r7, #4]
 1959 0086 0522     		movs	r2, #5
 1960 0088 DA60     		str	r2, [r3, #12]
 1961 008a 0CE0     		b	.L136
 1962              	.L135:
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if ((RCC->BDCR & RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1963              		.loc 1 1256 16
 1964 008c 1C4B     		ldr	r3, .L142
 1965 008e 1B6A     		ldr	r3, [r3, #32]
 1966              		.loc 1 1256 23
 1967 0090 03F00103 		and	r3, r3, #1
 1968              		.loc 1 1256 11
 1969 0094 012B     		cmp	r3, #1
 1970 0096 03D1     		bne	.L137
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1971              		.loc 1 1258 33
 1972 0098 7B68     		ldr	r3, [r7, #4]
 1973 009a 0122     		movs	r2, #1
 1974 009c DA60     		str	r2, [r3, #12]
ARM GAS  /tmp//ccNU2ilX.s 			page 58


 1975 009e 02E0     		b	.L136
 1976              	.L137:
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1977              		.loc 1 1262 33
 1978 00a0 7B68     		ldr	r3, [r7, #4]
 1979 00a2 0022     		movs	r2, #0
 1980 00a4 DA60     		str	r2, [r3, #12]
 1981              	.L136:
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CSR & RCC_CSR_LSION) == RCC_CSR_LSION)
 1982              		.loc 1 1266 11
 1983 00a6 164B     		ldr	r3, .L142
 1984 00a8 5B6A     		ldr	r3, [r3, #36]
 1985              		.loc 1 1266 17
 1986 00aa 03F00103 		and	r3, r3, #1
 1987              		.loc 1 1266 6
 1988 00ae 012B     		cmp	r3, #1
 1989 00b0 03D1     		bne	.L138
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1990              		.loc 1 1268 33
 1991 00b2 7B68     		ldr	r3, [r7, #4]
 1992 00b4 0122     		movs	r2, #1
 1993 00b6 9A61     		str	r2, [r3, #24]
 1994 00b8 02E0     		b	.L139
 1995              	.L138:
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1996              		.loc 1 1272 33
 1997 00ba 7B68     		ldr	r3, [r7, #4]
 1998 00bc 0022     		movs	r2, #0
 1999 00be 9A61     		str	r2, [r3, #24]
 2000              	.L139:
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_PLLON) == RCC_CR_PLLON)
 2001              		.loc 1 1277 11
 2002 00c0 0F4B     		ldr	r3, .L142
 2003 00c2 1B68     		ldr	r3, [r3]
 2004              		.loc 1 1277 16
 2005 00c4 03F08073 		and	r3, r3, #16777216
 2006              		.loc 1 1277 6
 2007 00c8 B3F1807F 		cmp	r3, #16777216
 2008 00cc 03D1     		bne	.L140
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2009              		.loc 1 1279 37
 2010 00ce 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp//ccNU2ilX.s 			page 59


 2011 00d0 0222     		movs	r2, #2
 2012 00d2 DA61     		str	r2, [r3, #28]
 2013 00d4 02E0     		b	.L141
 2014              	.L140:
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2015              		.loc 1 1283 37
 2016 00d6 7B68     		ldr	r3, [r7, #4]
 2017 00d8 0122     		movs	r2, #1
 2018 00da DA61     		str	r2, [r3, #28]
 2019              	.L141:
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2020              		.loc 1 1285 52
 2021 00dc 084B     		ldr	r3, .L142
 2022 00de 5B68     		ldr	r3, [r3, #4]
 2023              		.loc 1 1285 38
 2024 00e0 03F48032 		and	r2, r3, #65536
 2025              		.loc 1 1285 36
 2026 00e4 7B68     		ldr	r3, [r7, #4]
 2027 00e6 1A62     		str	r2, [r3, #32]
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
 2028              		.loc 1 1286 49
 2029 00e8 054B     		ldr	r3, .L142
 2030 00ea 5B68     		ldr	r3, [r3, #4]
 2031              		.loc 1 1286 35
 2032 00ec 03F47012 		and	r2, r3, #3932160
 2033              		.loc 1 1286 33
 2034 00f0 7B68     		ldr	r3, [r7, #4]
 2035 00f2 5A62     		str	r2, [r3, #36]
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL2 configuration -----------------------------------------------*/
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_PLL2ON) == RCC_CR_PLL2ON)
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_ON;
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_OFF;
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.HSEPrediv2Value = __HAL_RCC_HSE_GET_PREDIV2();
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.PLL2MUL = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PLL2MUL);
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2036              		.loc 1 1300 1
 2037 00f4 00BF     		nop
 2038 00f6 0C37     		adds	r7, r7, #12
 2039              	.LCFI45:
 2040              		.cfi_def_cfa_offset 4
 2041 00f8 BD46     		mov	sp, r7
 2042              	.LCFI46:
 2043              		.cfi_def_cfa_register 13
 2044              		@ sp needed
 2045 00fa 80BC     		pop	{r7}
 2046              	.LCFI47:
ARM GAS  /tmp//ccNU2ilX.s 			page 60


 2047              		.cfi_restore 7
 2048              		.cfi_def_cfa_offset 0
 2049 00fc 7047     		bx	lr
 2050              	.L143:
 2051 00fe 00BF     		.align	2
 2052              	.L142:
 2053 0100 00100240 		.word	1073876992
 2054              		.cfi_endproc
 2055              	.LFE75:
 2057              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2058              		.align	1
 2059              		.global	HAL_RCC_GetClockConfig
 2060              		.syntax unified
 2061              		.thumb
 2062              		.thumb_func
 2064              	HAL_RCC_GetClockConfig:
 2065              	.LFB76:
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * contains the current clock configuration.
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2066              		.loc 1 1311 1
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 8
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070              		@ link register save eliminated.
 2071 0000 80B4     		push	{r7}
 2072              	.LCFI48:
 2073              		.cfi_def_cfa_offset 4
 2074              		.cfi_offset 7, -4
 2075 0002 83B0     		sub	sp, sp, #12
 2076              	.LCFI49:
 2077              		.cfi_def_cfa_offset 16
 2078 0004 00AF     		add	r7, sp, #0
 2079              	.LCFI50:
 2080              		.cfi_def_cfa_register 7
 2081 0006 7860     		str	r0, [r7, #4]
 2082 0008 3960     		str	r1, [r7]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2083              		.loc 1 1317 32
 2084 000a 7B68     		ldr	r3, [r7, #4]
 2085 000c 0F22     		movs	r2, #15
 2086 000e 1A60     		str	r2, [r3]
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
ARM GAS  /tmp//ccNU2ilX.s 			page 61


1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2087              		.loc 1 1320 51
 2088 0010 114B     		ldr	r3, .L145
 2089 0012 5B68     		ldr	r3, [r3, #4]
 2090              		.loc 1 1320 37
 2091 0014 03F00302 		and	r2, r3, #3
 2092              		.loc 1 1320 35
 2093 0018 7B68     		ldr	r3, [r7, #4]
 2094 001a 5A60     		str	r2, [r3, #4]
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2095              		.loc 1 1323 52
 2096 001c 0E4B     		ldr	r3, .L145
 2097 001e 5B68     		ldr	r3, [r3, #4]
 2098              		.loc 1 1323 38
 2099 0020 03F0F002 		and	r2, r3, #240
 2100              		.loc 1 1323 36
 2101 0024 7B68     		ldr	r3, [r7, #4]
 2102 0026 9A60     		str	r2, [r3, #8]
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2103              		.loc 1 1326 53
 2104 0028 0B4B     		ldr	r3, .L145
 2105 002a 5B68     		ldr	r3, [r3, #4]
 2106              		.loc 1 1326 39
 2107 002c 03F4E062 		and	r2, r3, #1792
 2108              		.loc 1 1326 37
 2109 0030 7B68     		ldr	r3, [r7, #4]
 2110 0032 DA60     		str	r2, [r3, #12]
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 2111              		.loc 1 1329 54
 2112 0034 084B     		ldr	r3, .L145
 2113 0036 5B68     		ldr	r3, [r3, #4]
 2114              		.loc 1 1329 39
 2115 0038 DB08     		lsrs	r3, r3, #3
 2116 003a 03F4E062 		and	r2, r3, #1792
 2117              		.loc 1 1329 37
 2118 003e 7B68     		ldr	r3, [r7, #4]
 2119 0040 1A61     		str	r2, [r3, #16]
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(FLASH_ACR_LATENCY)
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2120              		.loc 1 1333 32
 2121 0042 064B     		ldr	r3, .L145+4
 2122 0044 1B68     		ldr	r3, [r3]
 2123              		.loc 1 1333 16
 2124 0046 03F00702 		and	r2, r3, #7
 2125              		.loc 1 1333 14
 2126 004a 3B68     		ldr	r3, [r7]
 2127 004c 1A60     		str	r2, [r3]
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* For VALUE lines devices, only LATENCY_0 can be set*/
ARM GAS  /tmp//ccNU2ilX.s 			page 62


1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)FLASH_LATENCY_0;
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2128              		.loc 1 1338 1
 2129 004e 00BF     		nop
 2130 0050 0C37     		adds	r7, r7, #12
 2131              	.LCFI51:
 2132              		.cfi_def_cfa_offset 4
 2133 0052 BD46     		mov	sp, r7
 2134              	.LCFI52:
 2135              		.cfi_def_cfa_register 13
 2136              		@ sp needed
 2137 0054 80BC     		pop	{r7}
 2138              	.LCFI53:
 2139              		.cfi_restore 7
 2140              		.cfi_def_cfa_offset 0
 2141 0056 7047     		bx	lr
 2142              	.L146:
 2143              		.align	2
 2144              	.L145:
 2145 0058 00100240 		.word	1073876992
 2146 005c 00200240 		.word	1073881088
 2147              		.cfi_endproc
 2148              	.LFE76:
 2150              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2151              		.align	1
 2152              		.global	HAL_RCC_NMI_IRQHandler
 2153              		.syntax unified
 2154              		.thumb
 2155              		.thumb_func
 2157              	HAL_RCC_NMI_IRQHandler:
 2158              	.LFB77:
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2159              		.loc 1 1346 1
 2160              		.cfi_startproc
 2161              		@ args = 0, pretend = 0, frame = 0
 2162              		@ frame_needed = 1, uses_anonymous_args = 0
 2163 0000 80B5     		push	{r7, lr}
 2164              	.LCFI54:
 2165              		.cfi_def_cfa_offset 8
 2166              		.cfi_offset 7, -8
 2167              		.cfi_offset 14, -4
 2168 0002 00AF     		add	r7, sp, #0
 2169              	.LCFI55:
 2170              		.cfi_def_cfa_register 7
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (__HAL_RCC_GET_IT(RCC_IT_CSS))
 2171              		.loc 1 1348 7
 2172 0004 064B     		ldr	r3, .L150
 2173 0006 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp//ccNU2ilX.s 			page 63


 2174 0008 03F08003 		and	r3, r3, #128
 2175              		.loc 1 1348 6
 2176 000c 802B     		cmp	r3, #128
 2177 000e 04D1     		bne	.L149
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2178              		.loc 1 1351 5
 2179 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2180              		.loc 1 1354 5
 2181 0014 034B     		ldr	r3, .L150+4
 2182 0016 8022     		movs	r2, #128
 2183 0018 1A70     		strb	r2, [r3]
 2184              	.L149:
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2185              		.loc 1 1356 1
 2186 001a 00BF     		nop
 2187 001c 80BD     		pop	{r7, pc}
 2188              	.L151:
 2189 001e 00BF     		.align	2
 2190              	.L150:
 2191 0020 00100240 		.word	1073876992
 2192 0024 0A100240 		.word	1073877002
 2193              		.cfi_endproc
 2194              	.LFE77:
 2196              		.section	.text.RCC_Delay,"ax",%progbits
 2197              		.align	1
 2198              		.syntax unified
 2199              		.thumb
 2200              		.thumb_func
 2202              	RCC_Delay:
 2203              	.LFB78:
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  mdelay: specifies the delay time length, in milliseconds.
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay)
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2204              		.loc 1 1364 1
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 16
 2207              		@ frame_needed = 1, uses_anonymous_args = 0
 2208              		@ link register save eliminated.
 2209 0000 80B4     		push	{r7}
 2210              	.LCFI56:
 2211              		.cfi_def_cfa_offset 4
 2212              		.cfi_offset 7, -4
 2213 0002 85B0     		sub	sp, sp, #20
 2214              	.LCFI57:
 2215              		.cfi_def_cfa_offset 24
 2216 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp//ccNU2ilX.s 			page 64


 2217              	.LCFI58:
 2218              		.cfi_def_cfa_register 7
 2219 0006 7860     		str	r0, [r7, #4]
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 2220              		.loc 1 1365 56
 2221 0008 0A4B     		ldr	r3, .L154
 2222 000a 1B68     		ldr	r3, [r3]
 2223 000c 0A4A     		ldr	r2, .L154+4
 2224 000e A2FB0323 		umull	r2, r3, r2, r3
 2225 0012 5B0A     		lsrs	r3, r3, #9
 2226              		.loc 1 1365 32
 2227 0014 7A68     		ldr	r2, [r7, #4]
 2228 0016 02FB03F3 		mul	r3, r2, r3
 2229              		.loc 1 1365 17
 2230 001a FB60     		str	r3, [r7, #12]
 2231              	.L153:
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   do
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __NOP();
 2232              		.loc 1 1368 5
 2233              		.syntax unified
 2234              	@ 1368 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c" 1
 2235 001c 00BF     		nop
 2236              	@ 0 "" 2
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (Delay --);
 2237              		.loc 1 1370 16 discriminator 1
 2238              		.thumb
 2239              		.syntax unified
 2240 001e FB68     		ldr	r3, [r7, #12]
 2241 0020 5A1E     		subs	r2, r3, #1
 2242 0022 FA60     		str	r2, [r7, #12]
 2243              		.loc 1 1370 10 discriminator 1
 2244 0024 002B     		cmp	r3, #0
 2245 0026 F9D1     		bne	.L153
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2246              		.loc 1 1371 1
 2247 0028 00BF     		nop
 2248 002a 00BF     		nop
 2249 002c 1437     		adds	r7, r7, #20
 2250              	.LCFI59:
 2251              		.cfi_def_cfa_offset 4
 2252 002e BD46     		mov	sp, r7
 2253              	.LCFI60:
 2254              		.cfi_def_cfa_register 13
 2255              		@ sp needed
 2256 0030 80BC     		pop	{r7}
 2257              	.LCFI61:
 2258              		.cfi_restore 7
 2259              		.cfi_def_cfa_offset 0
 2260 0032 7047     		bx	lr
 2261              	.L155:
 2262              		.align	2
 2263              	.L154:
 2264 0034 00000000 		.word	SystemCoreClock
 2265 0038 D34D6210 		.word	274877907
 2266              		.cfi_endproc
ARM GAS  /tmp//ccNU2ilX.s 			page 65


 2267              	.LFE78:
 2269              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2270              		.align	1
 2271              		.weak	HAL_RCC_CSSCallback
 2272              		.syntax unified
 2273              		.thumb
 2274              		.thumb_func
 2276              	HAL_RCC_CSSCallback:
 2277              	.LFB79:
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval none
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2278              		.loc 1 1378 1
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 0
 2281              		@ frame_needed = 1, uses_anonymous_args = 0
 2282              		@ link register save eliminated.
 2283 0000 80B4     		push	{r7}
 2284              	.LCFI62:
 2285              		.cfi_def_cfa_offset 4
 2286              		.cfi_offset 7, -4
 2287 0002 00AF     		add	r7, sp, #0
 2288              	.LCFI63:
 2289              		.cfi_def_cfa_register 7
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     */
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2290              		.loc 1 1382 1
 2291 0004 00BF     		nop
 2292 0006 BD46     		mov	sp, r7
 2293              	.LCFI64:
 2294              		.cfi_def_cfa_register 13
 2295              		@ sp needed
 2296 0008 80BC     		pop	{r7}
 2297              	.LCFI65:
 2298              		.cfi_restore 7
 2299              		.cfi_def_cfa_offset 0
 2300 000a 7047     		bx	lr
 2301              		.cfi_endproc
 2302              	.LFE79:
 2304              		.section	.rodata.aPLLMULFactorTable.1,"a"
 2305              		.align	2
 2308              	aPLLMULFactorTable.1:
 2309 0000 02030405 		.ascii	"\002\003\004\005\006\007\010\011\012\013\014\015\016"
 2309      06070809 
 2309      0A0B0C0D 
 2309      0E
 2310 000d 0F1010   		.ascii	"\017\020\020"
 2311              		.section	.rodata.aPredivFactorTable.0,"a"
 2312              		.align	2
 2315              	aPredivFactorTable.0:
 2316 0000 0102     		.ascii	"\001\002"
ARM GAS  /tmp//ccNU2ilX.s 			page 66


 2317              		.text
 2318              	.Letext0:
 2319              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2320              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2321              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2322              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 2323              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2324              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2325              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2326              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2327              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2328              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp//ccNU2ilX.s 			page 67


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_rcc.c
    /tmp//ccNU2ilX.s:19     .text.HAL_RCC_DeInit:00000000 $t
    /tmp//ccNU2ilX.s:25     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
    /tmp//ccNU2ilX.s:229    .text.HAL_RCC_DeInit:00000124 $d
    /tmp//ccNU2ilX.s:237    .text.HAL_RCC_OscConfig:00000000 $t
    /tmp//ccNU2ilX.s:243    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
    /tmp//ccNU2ilX.s:2202   .text.RCC_Delay:00000000 RCC_Delay
    /tmp//ccNU2ilX.s:655    .text.HAL_RCC_OscConfig:0000026c $d
    /tmp//ccNU2ilX.s:660    .text.HAL_RCC_OscConfig:00000278 $t
    /tmp//ccNU2ilX.s:1031   .text.HAL_RCC_OscConfig:000004c4 $d
    /tmp//ccNU2ilX.s:1036   .text.HAL_RCC_OscConfig:000004d0 $t
    /tmp//ccNU2ilX.s:1079   .text.HAL_RCC_OscConfig:00000500 $d
    /tmp//ccNU2ilX.s:1084   .text.HAL_RCC_ClockConfig:00000000 $t
    /tmp//ccNU2ilX.s:1090   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
    /tmp//ccNU2ilX.s:1584   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
    /tmp//ccNU2ilX.s:1391   .text.HAL_RCC_ClockConfig:000001c0 $d
    /tmp//ccNU2ilX.s:1400   .text.HAL_RCC_MCOConfig:00000000 $t
    /tmp//ccNU2ilX.s:1406   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
    /tmp//ccNU2ilX.s:1484   .text.HAL_RCC_MCOConfig:00000068 $d
    /tmp//ccNU2ilX.s:1490   .text.HAL_RCC_EnableCSS:00000000 $t
    /tmp//ccNU2ilX.s:1496   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
    /tmp//ccNU2ilX.s:1529   .text.HAL_RCC_EnableCSS:00000014 $d
    /tmp//ccNU2ilX.s:1534   .text.HAL_RCC_DisableCSS:00000000 $t
    /tmp//ccNU2ilX.s:1540   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
    /tmp//ccNU2ilX.s:1573   .text.HAL_RCC_DisableCSS:00000014 $d
    /tmp//ccNU2ilX.s:1578   .text.HAL_RCC_GetSysClockFreq:00000000 $t
    /tmp//ccNU2ilX.s:1710   .text.HAL_RCC_GetSysClockFreq:00000094 $d
    /tmp//ccNU2ilX.s:2308   .rodata.aPLLMULFactorTable.1:00000000 aPLLMULFactorTable.1
    /tmp//ccNU2ilX.s:2315   .rodata.aPredivFactorTable.0:00000000 aPredivFactorTable.0
    /tmp//ccNU2ilX.s:1719   .text.HAL_RCC_GetHCLKFreq:00000000 $t
    /tmp//ccNU2ilX.s:1725   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
    /tmp//ccNU2ilX.s:1756   .text.HAL_RCC_GetHCLKFreq:00000010 $d
    /tmp//ccNU2ilX.s:1761   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
    /tmp//ccNU2ilX.s:1767   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
    /tmp//ccNU2ilX.s:1801   .text.HAL_RCC_GetPCLK1Freq:00000020 $d
    /tmp//ccNU2ilX.s:1807   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
    /tmp//ccNU2ilX.s:1813   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
    /tmp//ccNU2ilX.s:1847   .text.HAL_RCC_GetPCLK2Freq:00000020 $d
    /tmp//ccNU2ilX.s:1853   .text.HAL_RCC_GetOscConfig:00000000 $t
    /tmp//ccNU2ilX.s:1859   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
    /tmp//ccNU2ilX.s:2053   .text.HAL_RCC_GetOscConfig:00000100 $d
    /tmp//ccNU2ilX.s:2058   .text.HAL_RCC_GetClockConfig:00000000 $t
    /tmp//ccNU2ilX.s:2064   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
    /tmp//ccNU2ilX.s:2145   .text.HAL_RCC_GetClockConfig:00000058 $d
    /tmp//ccNU2ilX.s:2151   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
    /tmp//ccNU2ilX.s:2157   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
    /tmp//ccNU2ilX.s:2276   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
    /tmp//ccNU2ilX.s:2191   .text.HAL_RCC_NMI_IRQHandler:00000020 $d
    /tmp//ccNU2ilX.s:2197   .text.RCC_Delay:00000000 $t
    /tmp//ccNU2ilX.s:2264   .text.RCC_Delay:00000034 $d
    /tmp//ccNU2ilX.s:2270   .text.HAL_RCC_CSSCallback:00000000 $t
    /tmp//ccNU2ilX.s:2305   .rodata.aPLLMULFactorTable.1:00000000 $d
    /tmp//ccNU2ilX.s:2312   .rodata.aPredivFactorTable.0:00000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
ARM GAS  /tmp//ccNU2ilX.s 			page 68


HAL_InitTick
SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
APBPrescTable
